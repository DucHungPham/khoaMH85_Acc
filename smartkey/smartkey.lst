

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sat Apr 18 09:52:50 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text871,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	text872,local,class=CODE,delta=2
    13                           	psect	text873,local,class=CODE,delta=2
    14                           	psect	text874,local,class=CODE,delta=2
    15                           	psect	text875,local,class=CODE,delta=2
    16                           	psect	text876,local,class=CODE,delta=2
    17                           	psect	text877,local,class=CODE,delta=2
    18                           	psect	text878,local,class=CODE,delta=2
    19                           	psect	text879,local,class=CODE,delta=2
    20                           	psect	text880,local,class=CODE,delta=2
    21                           	psect	text881,local,class=CODE,delta=2
    22                           	psect	text882,local,class=CODE,delta=2
    23                           	psect	text883,local,class=CODE,delta=2
    24                           	psect	text884,local,class=CODE,delta=2
    25                           	psect	text885,local,class=CODE,delta=2
    26                           	psect	text886,local,class=CODE,delta=2
    27                           	psect	text887,local,class=CODE,delta=2
    28                           	psect	text888,local,class=CODE,delta=2
    29                           	psect	text889,local,class=CODE,delta=2
    30                           	psect	text890,local,class=CODE,delta=2
    31                           	psect	text891,local,class=CODE,delta=2
    32                           	psect	text892,local,class=CODE,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text893,local,class=CODE,delta=2
    35                           	psect	text894,local,class=CODE,delta=2
    36                           	psect	text895,local,class=CODE,delta=2
    37                           	psect	pa_nodes,global,class=CODE,delta=2
    38                           	dabs	1,0x11E,1
    39                           	dabs	1,0x11F,1
    40                           	dabs	1,0x119,1
    41                           	dabs	1,0x11A,1
    42                           	dabs	1,0x11B,1
    43                           	dabs	1,0x10F,1
    44                           	dabs	1,0x10E,1
    45                           	dabs	1,0x116,1
    46                           	dabs	1,0x19D,1
    47                           	dabs	1,0x19E,1
    48                           	dabs	1,0x118,1
    49                           	dabs	1,0x115,1
    50                           	dabs	1,0x11E,1
    51                           	dabs	1,0x11E,1
    52                           	dabs	1,0x11F,1
    53                           	dabs	1,0x11F,1
    54                           	dabs	1,0x11E,1
    55                           	dabs	1,0x11E,1
    56                           	dabs	1,0x11E,1
    57                           	dabs	1,0x11E,1
    58                           	dabs	1,0x11E,1
    59                           	dabs	1,0x11E,1
    60                           	dabs	1,0x11F,1
    61                           	dabs	1,0x11F,1
    62                           	dabs	1,0x119,1
    63                           	dabs	1,0x119,1
    64                           	dabs	1,0x119,1
    65                           	dabs	1,0x119,1
    66                           	dabs	1,0x119,1
    67                           	dabs	1,0x119,1
    68                           	dabs	1,0x119,1
    69                           	dabs	1,0x19E,1
    70                           	dabs	1,0x118,1
    71                           	dabs	1,0x11A,1
    72                           	dabs	1,0x11A,1
    73                           	dabs	1,0x11A,1
    74                           	dabs	1,0x11A,1
    75                           	dabs	1,0x11A,1
    76                           	dabs	1,0x11A,1
    77                           	dabs	1,0x11A,1
    78                           	dabs	1,0x19E,1
    79                           	dabs	1,0x11B,1
    80                           	dabs	1,0x118,1
    81                           	dabs	1,0x18C,1
    82                           	dabs	1,0x116,1
    83                           	dabs	1,0x116,1
    84                           	dabs	1,0x116,1
    85                           	dabs	1,0x116,1
    86                           	dabs	1,0x11B,1
    87                           	dabs	1,0x11B,1
    88                           	dabs	1,0x19E,1
    89                           	dabs	1,0x19E,1
    90                           	dabs	1,0x19E,1
    91                           	dabs	1,0x19E,1
    92                           	dabs	1,0x19D,1
    93                           	dabs	1,0x19D,1
    94                           	dabs	1,0x19D,1
    95                           	dabs	1,0x19D,1
    96                           	dabs	1,0x19D,1
    97                           	dabs	1,0x11B,1
    98                           	dabs	1,0x118,1
    99                           	dabs	1,0x118,1
   100                           	dabs	1,0x118,1
   101                           	dabs	1,0x118,1
   102                           	dabs	1,0x118,1
   103                           	dabs	1,0x118,1
   104                           	dabs	1,0x115,1
   105                           	dabs	1,0x115,1
   106                           	dabs	1,0x115,1
   107                           	dabs	1,0x115,1
   108                           	dabs	1,0x18C,1
   109                           	dabs	1,0x7E,2
   110  000A                     
   111                           	psect	text871
   112  0000                     __ptext871:	
   113  011E                     _ANSEL	set	286	;_ANSEL
   114  011F                     _ANSELH	set	287	;_ANSELH
   115  0119                     _CM1CON0	set	281	;_CM1CON0
   116  011A                     _CM2CON0	set	282	;_CM2CON0
   117  011B                     _CM2CON1	set	283	;_CM2CON1
   118  010F                     _EEADRH	set	271	;_EEADRH
   119  010E                     _EEDATH	set	270	;_EEDATH
   120  0116                     _IOCB	set	278	;_IOCB
   121  019D                     _PSTRCON	set	413	;_PSTRCON
   122  019E                     _SRCON	set	414	;_SRCON
   123  0118                     _VRCON	set	280	;_VRCON
   124  0115                     _WPUB	set	277	;_WPUB
   125  08F0                     _ANS0	set	2288	;_ANS0
   126  08F1                     _ANS1	set	2289	;_ANS1
   127  08FA                     _ANS10	set	2298	;_ANS10
   128  08FB                     _ANS11	set	2299	;_ANS11
   129  08F2                     _ANS2	set	2290	;_ANS2
   130  08F3                     _ANS3	set	2291	;_ANS3
   131  08F4                     _ANS4	set	2292	;_ANS4
   132  08F5                     _ANS5	set	2293	;_ANS5
   133  08F6                     _ANS6	set	2294	;_ANS6
   134  08F7                     _ANS7	set	2295	;_ANS7
   135  08F8                     _ANS8	set	2296	;_ANS8
   136  08F9                     _ANS9	set	2297	;_ANS9
   137  08C8                     _C1CH0	set	2248	;_C1CH0
   138  08C9                     _C1CH1	set	2249	;_C1CH1
   139  08CD                     _C1OE	set	2253	;_C1OE
   140  08CF                     _C1ON	set	2255	;_C1ON
   141  08CE                     _C1OUT	set	2254	;_C1OUT
   142  08CC                     _C1POL	set	2252	;_C1POL
   143  08CA                     _C1R	set	2250	;_C1R
   144  0CF5                     _C1SEN	set	3317	;_C1SEN
   145  08C7                     _C1VREN	set	2247	;_C1VREN
   146  08D0                     _C2CH0	set	2256	;_C2CH0
   147  08D1                     _C2CH1	set	2257	;_C2CH1
   148  08D5                     _C2OE	set	2261	;_C2OE
   149  08D7                     _C2ON	set	2263	;_C2ON
   150  08D6                     _C2OUT	set	2262	;_C2OUT
   151  08D4                     _C2POL	set	2260	;_C2POL
   152  08D2                     _C2R	set	2258	;_C2R
   153  0CF4                     _C2REN	set	3316	;_C2REN
   154  08D8                     _C2SYNC	set	2264	;_C2SYNC
   155  08C6                     _C2VREN	set	2246	;_C2VREN
   156  0C67                     _EEPGD	set	3175	;_EEPGD
   157  08B4                     _IOCB4	set	2228	;_IOCB4
   158  08B5                     _IOCB5	set	2229	;_IOCB5
   159  08B6                     _IOCB6	set	2230	;_IOCB6
   160  08B7                     _IOCB7	set	2231	;_IOCB7
   161  08DF                     _MC1OUT	set	2271	;_MC1OUT
   162  08DE                     _MC2OUT	set	2270	;_MC2OUT
   163  0CF2                     _PULSR	set	3314	;_PULSR
   164  0CF3                     _PULSS	set	3315	;_PULSS
   165  0CF6                     _SR0	set	3318	;_SR0
   166  0CF7                     _SR1	set	3319	;_SR1
   167  0CE8                     _STRA	set	3304	;_STRA
   168  0CE9                     _STRB	set	3305	;_STRB
   169  0CEA                     _STRC	set	3306	;_STRC
   170  0CEB                     _STRD	set	3307	;_STRD
   171  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   172  08D9                     _T1GSS	set	2265	;_T1GSS
   173  08C4                     _VP6EN	set	2244	;_VP6EN
   174  08C0                     _VR0	set	2240	;_VR0
   175  08C1                     _VR1	set	2241	;_VR1
   176  08C2                     _VR2	set	2242	;_VR2
   177  08C3                     _VR3	set	2243	;_VR3
   178  08C5                     _VRR	set	2245	;_VRR
   179  08AC                     _WPUB4	set	2220	;_WPUB4
   180  08AD                     _WPUB5	set	2221	;_WPUB5
   181  08AE                     _WPUB6	set	2222	;_WPUB6
   182  08AF                     _WPUB7	set	2223	;_WPUB7
   183  0C62                     _WREN	set	3170	;_WREN
   184  000B                     _INTCON	set	11
   185  001B                     _MSCON	set	27
   186  000C                     _PIR1	set	12
   187  0005                     _PORTA	set	5
   188  0007                     _PORTC	set	7
   189  001F                     _T0CON0	set	31
   190  0012                     _T2CON0	set	18
   191  0001                     _TMR0	set	1
   192  0013                     _TMR2H	set	19
   193  0011                     _TMR2L	set	17
   194  0067                     _EEIF	set	103
   195  005F                     _GIE	set	95
   196  005C                     _INTE	set	92
   197  0059                     _INTF	set	89
   198  005B                     _PAIE	set	91
   199  0058                     _PAIF	set	88
   200  005E                     _PEIE	set	94
   201  002A                     _RA2	set	42
   202  002B                     _RA3	set	43
   203  002D                     _RA5	set	45
   204  002E                     _RA6	set	46
   205  002F                     _RA7	set	47
   206  0038                     _RC0	set	56
   207  0039                     _RC1	set	57
   208  005D                     _T0IE	set	93
   209  005A                     _T0IF	set	90
   210  00FB                     _T0ON	set	251
   211  0061                     _TMR2IF	set	97
   212  0092                     _TMR2ON	set	146
   213  009B                     _EEADR	set	155
   214  009C                     _EECON1	set	156
   215  009A                     _EEDAT	set	154
   216  0081                     _OPTION	set	129
   217  008F                     _OSCCON	set	143
   218  008C                     _PIE1	set	140
   219  0092                     _PR2H	set	146
   220  0091                     _PR2L	set	145
   221  0097                     _PSINKA	set	151
   222  009F                     _PSINKC	set	159
   223  0088                     _PSRCA	set	136
   224  0094                     _PSRCC	set	148
   225  0085                     _TRISA	set	133
   226  0087                     _TRISC	set	135
   227  0095                     _WPUA	set	149
   228  0093                     _WPUC	set	147
   229  047A                     _HTS	set	1146
   230  040E                     _INTEDG	set	1038
   231  04B5                     _IOCA5	set	1205
   232  04E0                     _RD	set	1248
   233  0461                     _TMR2IE	set	1121
   234  04E8                     _WR	set	1256
   235                           
   236                           	psect	cinit
   237  06F4                     start_initialization:	
   238                           
   239                           ; Clear objects allocated to COMMON
   240  06F4  01F0               	clrf	__pbssCOMMON& (0+127)
   241  06F5  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   242  06F6  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   243  06F7  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   244  06F8  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   245                           
   246                           ; Clear objects allocated to BANK0
   247  06F9  01C3               	clrf	__pbssBANK0& (0+127)
   248  06FA  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   249  06FB  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   250  06FC  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   251  06FD  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   252  06FE  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   253  06FF                     end_of_initialization:	
   254                           ;End of C runtime variable initialization code
   255                           
   256  06FF  0183               	clrf	3
   257  0700  280B               	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMMON
   260  0070                     __pbssCOMMON:	
   261  0070                     _timeTick:	
   262  0070                     	ds	2
   263  0072                     _RegStatus:	
   264  0072                     	ds	1
   265  0073                     _cntCyc:	
   266  0073                     	ds	1
   267  0074                     _mtState:	
   268  0074                     	ds	1
   269                           
   270                           	psect	bssBANK0
   271  0043                     __pbssBANK0:	
   272  0043                     _cntTmp:	
   273  0043                     	ds	2
   274  0045                     _timeOut:	
   275  0045                     	ds	2
   276  0047                     _cntOff:	
   277  0047                     	ds	1
   278  0048                     _mtOldState:	
   279  0048                     	ds	1
   280                           
   281                           	psect	cstackCOMMON
   282  0075                     __pcstackCOMMON:	
   283  0075                     ?_sys_init:	
   284  0075                     ?_gpio_init:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0075                     ?_timer_init:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0075                     ?_int_init:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0075                     ?_swI2C_Init:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0075                     ?_ISR:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0075                     ?_beepOff:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0075                     ?_beepOn:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0075                     ?_main:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0075                     ?_swI2C_Start:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0075                     ?_swI2C_Stop:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0075                     ??i1_READ_EEPROM:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0075                     ?i1_WRITE_EEPROM:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0075                     ?_READ_EEPROM:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0075                     ?_swI2C_WriteByte:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0075                     ?_swI2C_ReadByte:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0075                     ?i1_READ_EEPROM:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0075                     i1READ_EEPROM@EEAddr:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0075                     i1WRITE_EEPROM@EEData:	
   336                           ; 1 bytes @ 0x0
   337                           
   338                           
   339                           ; 1 bytes @ 0x0
   340  0075                     	ds	1
   341  0076                     ??i1_WRITE_EEPROM:	
   342  0076                     i1READ_EEPROM@ReEepromData:	
   343                           ; 0 bytes @ 0x1
   344                           
   345  0076                     i1WRITE_EEPROM@EEAddr:	
   346                           ; 1 bytes @ 0x1
   347                           
   348                           
   349                           ; 1 bytes @ 0x1
   350  0076                     	ds	1
   351  0077                     ??_ISR:	
   352                           
   353                           ; 0 bytes @ 0x2
   354  0077                     	ds	2
   355  0079                     ISR@tmp:	
   356                           
   357                           ; 1 bytes @ 0x4
   358  0079                     	ds	1
   359                           
   360                           	psect	cstackBANK0
   361  0020                     __pcstackBANK0:	
   362  0020                     ??_READ_EEPROM:	
   363  0020                     ?_WRITE_EEPROM:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0020                     ??_sys_init:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0020                     ??_gpio_init:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0020                     ??_timer_init:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0020                     ??_int_init:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0020                     ??_swI2C_Init:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0020                     ?_delay_x10ms:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_beepOff:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ??_beepOn:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ?_setState:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_swI2C_Start:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ??_swI2C_Stop:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_swI2C_WriteByte:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ??_swI2C_ReadByte:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ?_compe:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ?___awdiv:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0020                     READ_EEPROM@EEAddr:	
   412                           ; 2 bytes @ 0x0
   413                           
   414  0020                     WRITE_EEPROM@EEData:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0020                     compe@b:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0020                     delay_x10ms@t:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0020                     setState@_tOut:	
   424                           ; 2 bytes @ 0x0
   425                           
   426  0020                     ___awdiv@divisor:	
   427                           ; 2 bytes @ 0x0
   428                           
   429                           
   430                           ; 2 bytes @ 0x0
   431  0020                     	ds	1
   432  0021                     ??_WRITE_EEPROM:	
   433  0021                     READ_EEPROM@ReEepromData:	
   434                           ; 0 bytes @ 0x1
   435                           
   436  0021                     WRITE_EEPROM@EEAddr:	
   437                           ; 1 bytes @ 0x1
   438                           
   439  0021                     compe@dt:	
   440                           ; 1 bytes @ 0x1
   441                           
   442  0021                     swI2C_WriteByte@dat:	
   443                           ; 1 bytes @ 0x1
   444                           
   445  0021                     swI2C_ReadByte@Ack:	
   446                           ; 1 bytes @ 0x1
   447                           
   448                           
   449                           ; 1 bytes @ 0x1
   450  0021                     	ds	1
   451  0022                     ??_delay_x10ms:	
   452  0022                     ??_setState:	
   453                           ; 0 bytes @ 0x2
   454                           
   455  0022                     ??_compe:	
   456                           ; 0 bytes @ 0x2
   457                           
   458  0022                     setState@stt:	
   459                           ; 0 bytes @ 0x2
   460                           
   461  0022                     swI2C_WriteByte@i:	
   462                           ; 1 bytes @ 0x2
   463                           
   464  0022                     swI2C_ReadByte@dat:	
   465                           ; 1 bytes @ 0x2
   466                           
   467  0022                     delay_x10ms@set:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0022                     ___awdiv@dividend:	
   471                           ; 2 bytes @ 0x2
   472                           
   473                           
   474                           ; 2 bytes @ 0x2
   475  0022                     	ds	1
   476  0023                     ?_AccWrite:	
   477  0023                     swI2C_ReadByte@i:	
   478                           ; 1 bytes @ 0x3
   479                           
   480  0023                     AccWrite@dat:	
   481                           ; 1 bytes @ 0x3
   482                           
   483                           
   484                           ; 2 bytes @ 0x3
   485  0023                     	ds	1
   486  0024                     ?_beep:	
   487  0024                     ??___awdiv:	
   488                           ; 0 bytes @ 0x4
   489                           
   490  0024                     ?_AccRead:	
   491                           ; 0 bytes @ 0x4
   492                           
   493  0024                     beep@rep:	
   494                           ; 1 bytes @ 0x4
   495                           
   496  0024                     ___awdiv@counter:	
   497                           ; 1 bytes @ 0x4
   498                           
   499  0024                     AccRead@dat:	
   500                           ; 1 bytes @ 0x4
   501                           
   502                           
   503                           ; 2 bytes @ 0x4
   504  0024                     	ds	1
   505  0025                     ??_beep:	
   506  0025                     beep@delay:	
   507                           ; 0 bytes @ 0x5
   508                           
   509  0025                     AccWrite@len:	
   510                           ; 1 bytes @ 0x5
   511                           
   512  0025                     ___awdiv@sign:	
   513                           ; 1 bytes @ 0x5
   514                           
   515                           
   516                           ; 1 bytes @ 0x5
   517  0025                     	ds	1
   518  0026                     ??_AccWrite:	
   519  0026                     AccRead@len:	
   520                           ; 0 bytes @ 0x6
   521                           
   522  0026                     ___awdiv@quotient:	
   523                           ; 1 bytes @ 0x6
   524                           
   525                           
   526                           ; 2 bytes @ 0x6
   527  0026                     	ds	1
   528  0027                     ??_AccRead:	
   529  0027                     compe@a:	
   530                           ; 0 bytes @ 0x7
   531                           
   532                           
   533                           ; 1 bytes @ 0x7
   534  0027                     	ds	1
   535  0028                     AccWrite@rAdd:	
   536                           
   537                           ; 1 bytes @ 0x8
   538  0028                     	ds	1
   539  0029                     AccWrite@i:	
   540                           
   541                           ; 1 bytes @ 0x9
   542  0029                     	ds	1
   543  002A                     AccRead@rAdd:	
   544                           
   545                           ; 1 bytes @ 0xA
   546  002A                     	ds	1
   547  002B                     AccRead@i:	
   548                           
   549                           ; 1 bytes @ 0xB
   550  002B                     	ds	1
   551  002C                     ??_main:	
   552                           
   553                           ; 0 bytes @ 0xC
   554  002C                     	ds	3
   555  002F                     main@isWait:	
   556                           
   557                           ; 2 bytes @ 0xF
   558  002F                     	ds	2
   559  0031                     main@isFall:	
   560                           
   561                           ; 1 bytes @ 0x11
   562  0031                     	ds	1
   563  0032                     main@lostDetect:	
   564                           
   565                           ; 1 bytes @ 0x12
   566  0032                     	ds	1
   567  0033                     main@acYOld:	
   568                           
   569                           ; 1 bytes @ 0x13
   570  0033                     	ds	1
   571  0034                     main@acXOld:	
   572                           
   573                           ; 1 bytes @ 0x14
   574  0034                     	ds	1
   575  0035                     main@acYsum:	
   576                           
   577                           ; 2 bytes @ 0x15
   578  0035                     	ds	2
   579  0037                     main@acXsum:	
   580                           
   581                           ; 2 bytes @ 0x17
   582  0037                     	ds	2
   583  0039                     main@buf:	
   584                           
   585                           ; 6 bytes @ 0x19
   586  0039                     	ds	6
   587  003F                     main@isSw:	
   588                           
   589                           ; 1 bytes @ 0x1F
   590  003F                     	ds	1
   591  0040                     main@tmp16:	
   592                           
   593                           ; 2 bytes @ 0x20
   594  0040                     	ds	2
   595  0042                     main@tmp8:	
   596                           
   597                           ; 1 bytes @ 0x22
   598  0042                     	ds	1
   599                           
   600                           	psect	maintext
   601  000B                     __pmaintext:	
   602 ;;Data sizes: Strings 0, constant 0, data 0, bss 11, persistent 0 stack 0
   603 ;;Auto spaces:   Size  Autos    Used
   604 ;; COMMON          14      5      10
   605 ;; BANK0           80     35      41
   606 ;; BANK1           32      0       0
   607 ;;
   608 ;; Pointer list with targets:
   609 ;; ?___awdiv	int  size(1) Largest target is 0
   610 ;;
   611 ;; AccRead@dat	PTR unsigned char  size(2) Largest target is 256
   612 ;;		 -> RAM(DATA[256]), main@buf(BANK0[6]), 
   613 ;;
   614 ;; AccWrite@dat	PTR unsigned char  size(2) Largest target is 256
   615 ;;		 -> RAM(DATA[256]), 
   616 ;;
   617 ;;
   618 ;; Critical Paths under _main in COMMON
   619 ;;
   620 ;;   None.
   621 ;;
   622 ;; Critical Paths under _ISR in COMMON
   623 ;;
   624 ;;   _ISR->i1_READ_EEPROM
   625 ;;   _ISR->i1_WRITE_EEPROM
   626 ;;
   627 ;; Critical Paths under _main in BANK0
   628 ;;
   629 ;;   _main->_AccRead
   630 ;;   _AccRead->_swI2C_ReadByte
   631 ;;   _AccWrite->_swI2C_WriteByte
   632 ;;   _beep->_delay_x10ms
   633 ;;
   634 ;; Critical Paths under _ISR in BANK0
   635 ;;
   636 ;;   None.
   637 ;;
   638 ;; Critical Paths under _main in BANK1
   639 ;;
   640 ;;   None.
   641 ;;
   642 ;; Critical Paths under _ISR in BANK1
   643 ;;
   644 ;;   None.
   645 ;;
   646 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   647 ;;
   648 ;;
   649 ;;Call Graph Tables:
   650 ;;
   651 ;; ---------------------------------------------------------------------------------
   652 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   653 ;; ---------------------------------------------------------------------------------
   654 ;; (0) _main                                                23    23      0    4105
   655 ;;                                             12 BANK0     23    23      0
   656 ;;                           _sys_init
   657 ;;                          _gpio_init
   658 ;;                         _timer_init
   659 ;;                           _int_init
   660 ;;                         _swI2C_Init
   661 ;;                           _setState
   662 ;;                       _WRITE_EEPROM
   663 ;;                           _AccWrite
   664 ;;                               _beep
   665 ;;                        _READ_EEPROM
   666 ;;                             _beepOn
   667 ;;                            _AccRead
   668 ;;                            ___awdiv
   669 ;;                            _beepOff
   670 ;;                        _delay_x10ms
   671 ;;                              _compe
   672 ;; ---------------------------------------------------------------------------------
   673 ;; (1) _AccRead                                              8     5      3     532
   674 ;;                                              4 BANK0      8     5      3
   675 ;;                        _swI2C_Start
   676 ;;                    _swI2C_WriteByte
   677 ;;                     _swI2C_ReadByte
   678 ;;                         _swI2C_Stop
   679 ;; ---------------------------------------------------------------------------------
   680 ;; (1) _AccWrite                                             7     4      3     300
   681 ;;                                              3 BANK0      7     4      3
   682 ;;                        _swI2C_Start
   683 ;;                    _swI2C_WriteByte
   684 ;;                         _swI2C_Stop
   685 ;; ---------------------------------------------------------------------------------
   686 ;; (2) _swI2C_ReadByte                                       4     4      0     170
   687 ;;                                              0 BANK0      4     4      0
   688 ;; ---------------------------------------------------------------------------------
   689 ;; (2) _swI2C_WriteByte                                      3     3      0     139
   690 ;;                                              0 BANK0      3     3      0
   691 ;; ---------------------------------------------------------------------------------
   692 ;; (2) _swI2C_Stop                                           1     1      0       0
   693 ;;                                              0 BANK0      1     1      0
   694 ;; ---------------------------------------------------------------------------------
   695 ;; (2) _swI2C_Start                                          1     1      0       0
   696 ;;                                              0 BANK0      1     1      0
   697 ;; ---------------------------------------------------------------------------------
   698 ;; (1) _swI2C_Init                                           1     1      0       0
   699 ;;                                              0 BANK0      1     1      0
   700 ;; ---------------------------------------------------------------------------------
   701 ;; (1) _sys_init                                             0     0      0       0
   702 ;; ---------------------------------------------------------------------------------
   703 ;; (1) _beep                                                 2     1      1     130
   704 ;;                                              4 BANK0      2     1      1
   705 ;;                        _delay_x10ms
   706 ;; ---------------------------------------------------------------------------------
   707 ;; (1) ___awdiv                                              8     4      4     445
   708 ;;                                              0 BANK0      8     4      4
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (1) _int_init                                             1     1      0       0
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (1) _timer_init                                           0     0      0       0
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (1) _gpio_init                                            0     0      0       0
   715 ;; ---------------------------------------------------------------------------------
   716 ;; (1) _compe                                                8     6      2     372
   717 ;;                                              0 BANK0      8     6      2
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (1) _setState                                             3     1      2      62
   720 ;;                                              0 BANK0      3     1      2
   721 ;; ---------------------------------------------------------------------------------
   722 ;; (1) _beepOn                                               0     0      0       0
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (1) _beepOff                                              0     0      0       0
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (1) _delay_x10ms                                          4     2      2      68
   727 ;;                                              0 BANK0      4     2      2
   728 ;; ---------------------------------------------------------------------------------
   729 ;; (1) _WRITE_EEPROM                                         2     1      1      62
   730 ;;                                              0 BANK0      2     1      1
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (1) _READ_EEPROM                                          2     2      0      65
   733 ;;                                              0 BANK0      2     2      0
   734 ;; ---------------------------------------------------------------------------------
   735 ;; Estimated maximum stack depth 2
   736 ;; ---------------------------------------------------------------------------------
   737 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   738 ;; ---------------------------------------------------------------------------------
   739 ;; (3) _ISR                                                  3     3      0     319
   740 ;;                                              2 COMMON     3     3      0
   741 ;;                      i1_READ_EEPROM
   742 ;;                     i1_WRITE_EEPROM
   743 ;; ---------------------------------------------------------------------------------
   744 ;; (4) i1_WRITE_EEPROM                                       2     1      1     146
   745 ;;                                              0 COMMON     2     1      1
   746 ;; ---------------------------------------------------------------------------------
   747 ;; (4) i1_READ_EEPROM                                        2     2      0     148
   748 ;;                                              0 COMMON     2     2      0
   749 ;; ---------------------------------------------------------------------------------
   750 ;; Estimated maximum stack depth 4
   751 ;; ---------------------------------------------------------------------------------
   752 ;; Call Graph Graphs:
   753 ;; _main (ROOT)
   754 ;;   _sys_init
   755 ;;   _gpio_init
   756 ;;   _timer_init
   757 ;;   _int_init
   758 ;;   _swI2C_Init
   759 ;;   _setState
   760 ;;   _WRITE_EEPROM
   761 ;;   _AccWrite
   762 ;;     _swI2C_Start
   763 ;;     _swI2C_WriteByte
   764 ;;     _swI2C_Stop
   765 ;;   _beep
   766 ;;     _delay_x10ms
   767 ;;   _READ_EEPROM
   768 ;;   _beepOn
   769 ;;   _AccRead
   770 ;;     _swI2C_Start
   771 ;;     _swI2C_WriteByte
   772 ;;     _swI2C_ReadByte
   773 ;;     _swI2C_Stop
   774 ;;   ___awdiv
   775 ;;   _beepOff
   776 ;;   _delay_x10ms
   777 ;;   _compe
   778 ;;
   779 ;; _ISR (ROOT)
   780 ;;   i1_READ_EEPROM
   781 ;;   i1_WRITE_EEPROM
   782 ;;
   783 ;; Address spaces:
   784 ;;Name               Size   Autos  Total    Cost      Usage
   785 ;;BITCOMMON            E      0       0       0        0.0%
   786 ;;EEDATA             100      0       0       0        0.0%
   787 ;;NULL                 0      0       0       0        0.0%
   788 ;;CODE                 0      0       0       0        0.0%
   789 ;;COMMON               E      5       A       1       71.4%
   790 ;;BITSFR0              0      0       0       1        0.0%
   791 ;;SFR0                 0      0       0       1        0.0%
   792 ;;BITSFR1              0      0       0       2        0.0%
   793 ;;SFR1                 0      0       0       2        0.0%
   794 ;;STACK                0      0       6       2        0.0%
   795 ;;BITBANK0            50      0       0       3        0.0%
   796 ;;BANK0               50     23      29       4       51.3%
   797 ;;BANK1               20      0       0       5        0.0%
   798 ;;ABS                  0      0      33       6        0.0%
   799 ;;BITBANK1            20      0       0       7        0.0%
   800 ;;DATA                 0      0      39       8        0.0%
   801                           
   802                           
   803 ;; *************** function _main *****************
   804 ;; Defined at:
   805 ;;		line 206 in file "smartkey.C"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  buf             6   25[BANK0 ] char [6]
   810 ;;  tmp16           2   32[BANK0 ] unsigned int 
   811 ;;  acXsum          2   23[BANK0 ] int 
   812 ;;  acYsum          2   21[BANK0 ] int 
   813 ;;  isWait          2   15[BANK0 ] unsigned int 
   814 ;;  tmp8            1   34[BANK0 ] unsigned char 
   815 ;;  isSw            1   31[BANK0 ] unsigned char 
   816 ;;  acXOld          1   20[BANK0 ] char 
   817 ;;  acYOld          1   19[BANK0 ] char 
   818 ;;  lostDetect      1   18[BANK0 ] unsigned char 
   819 ;;  isFall          1   17[BANK0 ] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;		None               void
   822 ;; Registers used:
   823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 17F/0
   826 ;;		On exit  : 20/20
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1
   829 ;;      Params:         0       0       0
   830 ;;      Locals:         0      20       0
   831 ;;      Temps:          0       3       0
   832 ;;      Totals:         0      23       0
   833 ;;Total ram usage:       23 bytes
   834 ;; Hardware stack levels required when called:    4
   835 ;; This function calls:
   836 ;;		_sys_init
   837 ;;		_gpio_init
   838 ;;		_timer_init
   839 ;;		_int_init
   840 ;;		_swI2C_Init
   841 ;;		_setState
   842 ;;		_WRITE_EEPROM
   843 ;;		_AccWrite
   844 ;;		_beep
   845 ;;		_READ_EEPROM
   846 ;;		_beepOn
   847 ;;		_AccRead
   848 ;;		___awdiv
   849 ;;		_beepOff
   850 ;;		_delay_x10ms
   851 ;;		_compe
   852 ;; This function is called by:
   853 ;;		Startup code after reset
   854 ;; This function uses a non-reentrant model
   855 ;;
   856  000B                     _main:	
   857                           
   858                           ;smartkey.C: 208: unsigned char tmp8, isSw = 0, isFall = 0, lostDetect = 0;
   859                           
   860                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   861  000B  01BF               	clrf	main@isSw
   862  000C  01B1               	clrf	main@isFall
   863  000D  01B2               	clrf	main@lostDetect
   864                           
   865                           ;smartkey.C: 209: unsigned int isWait = 0;
   866  000E  01AF               	clrf	main@isWait
   867  000F  01B0               	clrf	main@isWait+1
   868  0010  01B7               	clrf	main@acXsum
   869  0011  01B8               	clrf	main@acXsum+1
   870                           
   871                           ;smartkey.C: 211: unsigned int tmp16 = 0;
   872  0012  01C0               	clrf	main@tmp16
   873  0013  01C1               	clrf	main@tmp16+1
   874                           
   875                           ;smartkey.C: 212: signed char acYOld, acXOld;
   876                           ;smartkey.C: 213: signed char buf[6];
   877                           ;smartkey.C: 215: RegStatus.byte =0;
   878  0014  01F2               	clrf	_RegStatus
   879                           
   880                           ;smartkey.C: 216: RegStatus.bits.b6 = 1;
   881  0015  1772               	bsf	_RegStatus,6
   882  0016  0064               	clrwdt	;#
   883                           
   884                           ;smartkey.C: 220: sys_init();
   885  0017  2727               	fcall	_sys_init
   886                           
   887                           ;smartkey.C: 221: gpio_init();
   888  0018  26A8               	fcall	_gpio_init
   889                           
   890                           ;smartkey.C: 222: timer_init();
   891  0019  26E4               	fcall	_timer_init
   892                           
   893                           ;smartkey.C: 223: int_init();
   894  001A  2644               	fcall	_int_init
   895                           
   896                           ;smartkey.C: 226: _delay((unsigned long)((100)*(4000000/4000.0)));
   897  001B  3082               	movlw	130
   898  001C  00AD               	movwf	??_main+1
   899  001D  30DD               	movlw	221
   900  001E  00AC               	movwf	??_main
   901  001F                     u3687:	
   902  001F  0BAC               	decfsz	??_main,f
   903  0020  281F               	goto	u3687
   904  0021  0BAD               	decfsz	??_main+1,f
   905  0022  281F               	goto	u3687
   906  0023  2824               	nop2
   907                           
   908                           ;smartkey.C: 228: PAIE = 1;
   909  0024  158B               	bsf	11,3
   910                           
   911                           ;smartkey.C: 230: swI2C_Init();
   912  0025  2625               	fcall	_swI2C_Init
   913  0026  3000               	movlw	0
   914                           
   915                           ;smartkey.C: 232: setState(0, 0);
   916  0027  1283               	bcf	3,5	;RP0=0, select bank0
   917  0028  01A0               	clrf	?_setState
   918  0029  01A1               	clrf	?_setState+1
   919  002A  271B               	fcall	_setState
   920                           
   921                           ;smartkey.C: 234: WRITE_EEPROM(0xFF, 0xAA);
   922  002B  30AA               	movlw	170
   923  002C  00A0               	movwf	?_WRITE_EEPROM
   924  002D  30FF               	movlw	255
   925  002E  265F               	fcall	_WRITE_EEPROM
   926                           
   927                           ;smartkey.C: 235: WRITE_EEPROM(0xFF, 0xAA);
   928  002F  30AA               	movlw	170
   929  0030  1283               	bcf	3,5	;RP0=0, select bank0
   930  0031  00A0               	movwf	?_WRITE_EEPROM
   931  0032  30FF               	movlw	255
   932  0033  265F               	fcall	_WRITE_EEPROM
   933                           
   934                           ;smartkey.C: 237: _delay((unsigned long)((100)*(4000000/4000.0)));
   935  0034  3082               	movlw	130
   936  0035  1283               	bcf	3,5	;RP0=0, select bank0
   937  0036  00AD               	movwf	??_main+1
   938  0037  30DD               	movlw	221
   939  0038  00AC               	movwf	??_main
   940  0039                     u3697:	
   941  0039  0BAC               	decfsz	??_main,f
   942  003A  2839               	goto	u3697
   943  003B  0BAD               	decfsz	??_main+1,f
   944  003C  2839               	goto	u3697
   945  003D  283E               	nop2
   946                           
   947                           ;smartkey.C: 239: buf[0] = 0x08;
   948  003E  3008               	movlw	8
   949  003F  1283               	bcf	3,5	;RP0=0, select bank0
   950  0040  00B9               	movwf	main@buf
   951                           
   952                           ;smartkey.C: 240: buf[1] = 0x4d;
   953  0041  304D               	movlw	77
   954  0042  00BA               	movwf	main@buf+1
   955                           
   956                           ;smartkey.C: 241: if ((AccWrite(0x10, (unsigned char)buf, 2) == 0)) {
   957  0043  3039               	movlw	main@buf& (0+255)
   958  0044  00AC               	movwf	??_main
   959  0045  01AD               	clrf	??_main+1
   960  0046  00A3               	movwf	?_AccWrite
   961  0047  082D               	movf	??_main+1,w
   962  0048  00A4               	movwf	?_AccWrite+1
   963  0049  3002               	movlw	2
   964  004A  00A5               	movwf	?_AccWrite+2
   965  004B  3010               	movlw	16
   966  004C  25FD               	fcall	_AccWrite
   967  004D  3800               	iorlw	0
   968  004E  1903               	btfsc	3,2
   969  004F  2855               	goto	l895
   970                           
   971                           ;smartkey.C: 244: else {
   972                           ;smartkey.C: 246: beep(10, 2);
   973  0050  3002               	movlw	2
   974  0051  1283               	bcf	3,5	;RP0=0, select bank0
   975  0052  00A4               	movwf	?_beep
   976  0053  300A               	movlw	10
   977  0054  2692               	fcall	_beep
   978  0055                     l895:	
   979                           
   980                           ;smartkey.C: 247: }
   981                           ;smartkey.C: 250: acXsum = (signed char)READ_EEPROM(0x10);
   982  0055  3010               	movlw	16
   983  0056  270E               	fcall	_READ_EEPROM
   984  0057  00B7               	movwf	main@acXsum
   985  0058  01B8               	clrf	main@acXsum+1
   986  0059  1BB7               	btfsc	main@acXsum,7
   987  005A  03B8               	decf	main@acXsum+1,f
   988                           
   989                           ;smartkey.C: 251: acYsum = (signed char)READ_EEPROM(0x11);
   990  005B  3011               	movlw	17
   991  005C  270E               	fcall	_READ_EEPROM
   992  005D  00B5               	movwf	main@acYsum
   993  005E  01B6               	clrf	main@acYsum+1
   994  005F  1BB5               	btfsc	main@acYsum,7
   995  0060  03B6               	decf	main@acYsum+1,f
   996                           
   997                           ;smartkey.C: 253: tmp8 = READ_EEPROM(0x41);
   998  0061  3041               	movlw	65
   999  0062  270E               	fcall	_READ_EEPROM
  1000  0063  00C2               	movwf	main@tmp8
  1001                           
  1002                           ;smartkey.C: 254: if (tmp8 > 3) {WRITE_EEPROM(0x41, 0); _delay((unsigned long)((2)*(4000
      +                          000/4000.0)));}
  1003  0064  3004               	movlw	4
  1004  0065  0242               	subwf	main@tmp8,w
  1005  0066  1C03               	skipc
  1006  0067  2875               	goto	l6811
  1007  0068  3041               	movlw	65
  1008  0069  01A0               	clrf	?_WRITE_EEPROM
  1009  006A  265F               	fcall	_WRITE_EEPROM
  1010  006B  3003               	movlw	3
  1011  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1012  006D  00AD               	movwf	??_main+1
  1013  006E  3097               	movlw	151
  1014  006F  00AC               	movwf	??_main
  1015  0070                     u3707:	
  1016  0070  0BAC               	decfsz	??_main,f
  1017  0071  2870               	goto	u3707
  1018  0072  0BAD               	decfsz	??_main+1,f
  1019  0073  2870               	goto	u3707
  1020  0074  2875               	nop2
  1021  0075                     l6811:	
  1022                           
  1023                           ;smartkey.C: 258: tmp8 = READ_EEPROM(0x08);
  1024  0075  3008               	movlw	8
  1025  0076  270E               	fcall	_READ_EEPROM
  1026  0077  00C2               	movwf	main@tmp8
  1027                           
  1028                           ;smartkey.C: 259: if (tmp8 == 0xff) {WRITE_EEPROM(0x08, 0); _delay((unsigned long)((2)*(
      +                          4000000/4000.0)));}
  1029  0078  3AFF               	xorlw	255
  1030  0079  1D03               	skipz
  1031  007A  2888               	goto	l6819
  1032  007B  3008               	movlw	8
  1033  007C  01A0               	clrf	?_WRITE_EEPROM
  1034  007D  265F               	fcall	_WRITE_EEPROM
  1035  007E  3003               	movlw	3
  1036  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1037  0080  00AD               	movwf	??_main+1
  1038  0081  3097               	movlw	151
  1039  0082  00AC               	movwf	??_main
  1040  0083                     u3717:	
  1041  0083  0BAC               	decfsz	??_main,f
  1042  0084  2883               	goto	u3717
  1043  0085  0BAD               	decfsz	??_main+1,f
  1044  0086  2883               	goto	u3717
  1045  0087  2888               	nop2
  1046  0088                     l6819:	
  1047                           
  1048                           ;smartkey.C: 260: if (tmp8 == 0xcc) {
  1049  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1050  0089  0842               	movf	main@tmp8,w
  1051  008A  3ACC               	xorlw	204
  1052  008B  1D03               	skipz
  1053  008C  28A3               	goto	l6833
  1054  008D  3008               	movlw	8
  1055                           
  1056                           ;smartkey.C: 261: RegStatus.bits.b0 = 0;
  1057  008E  1072               	bcf	_RegStatus,0
  1058                           
  1059                           ;smartkey.C: 262: setState(3, 1800);
  1060  008F  00A0               	movwf	?_setState
  1061  0090  3007               	movlw	7
  1062  0091  00A1               	movwf	?_setState+1
  1063  0092  3003               	movlw	3
  1064  0093  271B               	fcall	_setState
  1065                           
  1066                           ;smartkey.C: 263: mtOldState = 1;
  1067  0094  01C8               	clrf	_mtOldState
  1068  0095  0AC8               	incf	_mtOldState,f
  1069                           
  1070                           ;smartkey.C: 264: cntTmp = timeTick + 50;
  1071  0096  0871               	movf	_timeTick+1,w
  1072  0097  00C4               	movwf	_cntTmp+1
  1073  0098  0870               	movf	_timeTick,w
  1074  0099  00C3               	movwf	_cntTmp
  1075  009A  3032               	movlw	50
  1076  009B  07C3               	addwf	_cntTmp,f
  1077  009C  1803               	skipnc
  1078  009D  0AC4               	incf	_cntTmp+1,f
  1079                           
  1080                           ;smartkey.C: 265: PR2L = 12;
  1081  009E  300C               	movlw	12
  1082  009F  1683               	bsf	3,5	;RP0=1, select bank1
  1083  00A0  0091               	movwf	17	;volatile
  1084                           
  1085                           ;smartkey.C: 266: beepOn();
  1086  00A1  2742               	fcall	_beepOn
  1087                           
  1088                           ;smartkey.C: 267: } else {
  1089  00A2  28AA               	goto	l6837
  1090  00A3                     l6833:	
  1091                           
  1092                           ;smartkey.C: 268: setState(2, 400);
  1093  00A3  3090               	movlw	144
  1094  00A4  00A0               	movwf	?_setState
  1095  00A5  3001               	movlw	1
  1096  00A6  00A1               	movwf	?_setState+1
  1097  00A7  3002               	movlw	2
  1098  00A8  271B               	fcall	_setState
  1099                           
  1100                           ;smartkey.C: 269: mtOldState = 0;
  1101  00A9  01C8               	clrf	_mtOldState
  1102  00AA                     l6837:	
  1103                           
  1104                           ;smartkey.C: 270: }
  1105                           ;smartkey.C: 272: tmp8 = READ_EEPROM(0x3F);
  1106  00AA  303F               	movlw	63
  1107  00AB  270E               	fcall	_READ_EEPROM
  1108  00AC  00C2               	movwf	main@tmp8
  1109                           
  1110                           ;smartkey.C: 273: if (tmp8 == 5) {
  1111  00AD  3A05               	xorlw	5
  1112  00AE  1D03               	skipz
  1113  00AF  28E7               	goto	l6859
  1114  00B0  303F               	movlw	63
  1115                           
  1116                           ;smartkey.C: 274: tmp8 = 0;
  1117  00B1  01C2               	clrf	main@tmp8
  1118  00B2                     L4:	
  1119                           
  1120                           ;smartkey.C: 275: WRITE_EEPROM(0x3F, 0);
  1121  00B2  01A0               	clrf	?_WRITE_EEPROM
  1122  00B3  265F               	fcall	_WRITE_EEPROM
  1123  00B4                     l6857:	
  1124                           ;smartkey.C: 276: while ( RA2) {
  1125                           
  1126  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1127  00B5  1D05               	btfss	5,2
  1128  00B6  28E5               	goto	l907
  1129                           
  1130                           ;smartkey.C: 277: _delay((unsigned long)((1500)*(4000000/4000.0)));
  1131  00B7  3008               	movlw	8
  1132  00B8  00AE               	movwf	??_main+2
  1133  00B9  309D               	movlw	157
  1134  00BA  00AD               	movwf	??_main+1
  1135  00BB  300B               	movlw	11
  1136  00BC  00AC               	movwf	??_main
  1137  00BD                     u3727:	
  1138  00BD  0BAC               	decfsz	??_main,f
  1139  00BE  28BD               	goto	u3727
  1140  00BF  0BAD               	decfsz	??_main+1,f
  1141  00C0  28BD               	goto	u3727
  1142  00C1  0BAE               	decfsz	??_main+2,f
  1143  00C2  28BD               	goto	u3727
  1144  00C3  28C4               	nop2
  1145  00C4  3015               	movlw	21
  1146                           
  1147                           ;smartkey.C: 278: tmp8++;
  1148  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1149  00C6  0AC2               	incf	main@tmp8,f
  1150                           
  1151                           ;smartkey.C: 279: if (tmp8 > 20) {
  1152  00C7  0242               	subwf	main@tmp8,w
  1153  00C8  1C03               	skipc
  1154  00C9  28D9               	goto	l903
  1155                           
  1156                           ;smartkey.C: 280: _delay((unsigned long)((10000)*(4000000/4000.0)));
  1157  00CA  3033               	movlw	51
  1158  00CB  00AE               	movwf	??_main+2
  1159  00CC  30BC               	movlw	188
  1160  00CD  00AD               	movwf	??_main+1
  1161  00CE  3010               	movlw	16
  1162  00CF  00AC               	movwf	??_main
  1163  00D0                     u3737:	
  1164  00D0  0BAC               	decfsz	??_main,f
  1165  00D1  28D0               	goto	u3737
  1166  00D2  0BAD               	decfsz	??_main+1,f
  1167  00D3  28D0               	goto	u3737
  1168  00D4  0BAE               	decfsz	??_main+2,f
  1169  00D5  28D0               	goto	u3737
  1170  00D6  3040               	movlw	64
  1171                           
  1172                           ;smartkey.C: 281: WRITE_EEPROM(0x40, 0);
  1173  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1174  00D8  28B2               	goto	L4
  1175  00D9                     l903:	
  1176                           ;smartkey.C: 282: }
  1177                           
  1178                           
  1179                           ;smartkey.C: 283: else if ( RA2) {
  1180  00D9  1D05               	btfss	5,2
  1181  00DA  28B4               	goto	l6857
  1182                           
  1183                           ;smartkey.C: 284: WRITE_EEPROM(0x40, tmp8);
  1184  00DB  0842               	movf	main@tmp8,w
  1185  00DC  00A0               	movwf	?_WRITE_EEPROM
  1186  00DD  3040               	movlw	64
  1187  00DE  265F               	fcall	_WRITE_EEPROM
  1188  00DF  300A               	movlw	10
  1189                           
  1190                           ;smartkey.C: 285: beep(10, 1);
  1191  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1192  00E1  01A4               	clrf	?_beep
  1193  00E2  0AA4               	incf	?_beep,f
  1194  00E3  2692               	fcall	_beep
  1195  00E4  28B4               	goto	l6857
  1196  00E5                     l907:	
  1197  00E5  1D05               	btfss	5,2
  1198  00E6  28E5               	goto	l907
  1199  00E7                     l6859:	
  1200                           
  1201                           ;smartkey.C: 289: }
  1202                           ;smartkey.C: 292: tmp8 = READ_EEPROM(0x40);
  1203  00E7  3040               	movlw	64
  1204  00E8  270E               	fcall	_READ_EEPROM
  1205  00E9  00C2               	movwf	main@tmp8
  1206                           
  1207                           ;smartkey.C: 293: switch (tmp8) {
  1208  00EA  299F               	goto	l6905
  1209  00EB                     l6861:	
  1210  00EB  3003               	movlw	3
  1211                           
  1212                           ;smartkey.C: 296: tmp8 = 0; beep(10, 3);
  1213  00EC  01C2               	clrf	main@tmp8
  1214  00ED  00A4               	movwf	?_beep
  1215  00EE  300A               	movlw	10
  1216  00EF  2692               	fcall	_beep
  1217                           
  1218                           ;smartkey.C: 297: while ((tmp8 < 11)) {
  1219  00F0  291E               	goto	l912
  1220  00F1                     l6867:	
  1221                           
  1222                           ;smartkey.C: 299: acXsum += buf[1];
  1223  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1224  00F2  083A               	movf	main@buf+1,w
  1225  00F3  00AC               	movwf	??_main
  1226  00F4  01AD               	clrf	??_main+1
  1227  00F5  1BAC               	btfsc	??_main,7
  1228  00F6  03AD               	decf	??_main+1,f
  1229  00F7  07B7               	addwf	main@acXsum,f
  1230  00F8  1803               	skipnc
  1231  00F9  0AB8               	incf	main@acXsum+1,f
  1232  00FA  082D               	movf	??_main+1,w
  1233  00FB  07B8               	addwf	main@acXsum+1,f
  1234                           
  1235                           ;smartkey.C: 300: acYsum += buf[3];
  1236  00FC  083C               	movf	main@buf+3,w
  1237  00FD  00AC               	movwf	??_main
  1238  00FE  01AD               	clrf	??_main+1
  1239  00FF  1BAC               	btfsc	??_main,7
  1240  0100  03AD               	decf	??_main+1,f
  1241  0101  07B5               	addwf	main@acYsum,f
  1242  0102  1803               	skipnc
  1243  0103  0AB6               	incf	main@acYsum+1,f
  1244  0104  082D               	movf	??_main+1,w
  1245  0105  07B6               	addwf	main@acYsum+1,f
  1246                           
  1247                           ;smartkey.C: 301: tmp16 = (signed int)tmp16 + buf[5];
  1248  0106  083E               	movf	main@buf+5,w
  1249  0107  00AC               	movwf	??_main
  1250  0108  01AD               	clrf	??_main+1
  1251  0109  1BAC               	btfsc	??_main,7
  1252  010A  03AD               	decf	??_main+1,f
  1253  010B  07C0               	addwf	main@tmp16,f
  1254  010C  1803               	skipnc
  1255  010D  0AC1               	incf	main@tmp16+1,f
  1256  010E  082D               	movf	??_main+1,w
  1257  010F  07C1               	addwf	main@tmp16+1,f
  1258  0110  3003               	movlw	3
  1259                           
  1260                           ;smartkey.C: 302: tmp8++;
  1261  0111  0AC2               	incf	main@tmp8,f
  1262                           
  1263                           ;smartkey.C: 305: _delay((unsigned long)((500)*(4000000/4000.0)));
  1264                           
  1265                           ;smartkey.C: 303: } else
  1266  0112  00AE               	movwf	??_main+2
  1267  0113  308A               	movlw	138
  1268  0114  00AD               	movwf	??_main+1
  1269  0115  3056               	movlw	86
  1270  0116  00AC               	movwf	??_main
  1271  0117                     u3747:	
  1272  0117  0BAC               	decfsz	??_main,f
  1273  0118  2917               	goto	u3747
  1274  0119  0BAD               	decfsz	??_main+1,f
  1275  011A  2917               	goto	u3747
  1276  011B  0BAE               	decfsz	??_main+2,f
  1277  011C  2917               	goto	u3747
  1278  011D  291E               	nop2
  1279  011E                     l912:	
  1280  011E  300B               	movlw	11
  1281  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1282  0120  0242               	subwf	main@tmp8,w
  1283  0121  1803               	btfsc	3,0
  1284  0122  2930               	goto	l6873
  1285                           
  1286                           ;smartkey.C: 298: if (AccRead(0x02, (unsigned char)buf, 6) == 0) {
  1287  0123  3039               	movlw	main@buf& (0+255)
  1288  0124  00AC               	movwf	??_main
  1289  0125  01AD               	clrf	??_main+1
  1290  0126  00A4               	movwf	?_AccRead
  1291  0127  082D               	movf	??_main+1,w
  1292  0128  00A5               	movwf	?_AccRead+1
  1293  0129  3006               	movlw	6
  1294  012A  00A6               	movwf	?_AccRead+2
  1295  012B  3002               	movlw	2
  1296  012C  25C2               	fcall	_AccRead
  1297  012D  3800               	iorlw	0
  1298  012E  1903               	btfsc	3,2
  1299  012F  28F1               	goto	l6867
  1300  0130                     l6873:	
  1301                           
  1302                           ;smartkey.C: 306: }
  1303                           ;smartkey.C: 308: if (tmp8 == 11) {
  1304  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1305  0131  0842               	movf	main@tmp8,w
  1306  0132  3A0B               	xorlw	11
  1307  0133  1D03               	skipz
  1308  0134  2976               	goto	l6885
  1309                           
  1310                           ;smartkey.C: 309: acXsum = acXsum / 10;
  1311  0135  300A               	movlw	10
  1312  0136  00A0               	movwf	?___awdiv
  1313  0137  01A1               	clrf	?___awdiv+1
  1314  0138  0838               	movf	main@acXsum+1,w
  1315  0139  00A3               	movwf	?___awdiv+3
  1316  013A  0837               	movf	main@acXsum,w
  1317  013B  00A2               	movwf	?___awdiv+2
  1318  013C  24BC               	fcall	___awdiv
  1319  013D  0821               	movf	?___awdiv+1,w
  1320  013E  00B8               	movwf	main@acXsum+1
  1321  013F  0820               	movf	?___awdiv,w
  1322  0140  00B7               	movwf	main@acXsum
  1323                           
  1324                           ;smartkey.C: 310: acYsum = acYsum / 10;
  1325  0141  300A               	movlw	10
  1326  0142  00A0               	movwf	?___awdiv
  1327  0143  01A1               	clrf	?___awdiv+1
  1328  0144  0836               	movf	main@acYsum+1,w
  1329  0145  00A3               	movwf	?___awdiv+3
  1330  0146  0835               	movf	main@acYsum,w
  1331  0147  00A2               	movwf	?___awdiv+2
  1332  0148  24BC               	fcall	___awdiv
  1333  0149  0821               	movf	?___awdiv+1,w
  1334  014A  00B6               	movwf	main@acYsum+1
  1335  014B  0820               	movf	?___awdiv,w
  1336  014C  00B5               	movwf	main@acYsum
  1337                           
  1338                           ;smartkey.C: 311: tmp16 = (signed int)tmp16 / 10;
  1339  014D  300A               	movlw	10
  1340  014E  00A0               	movwf	?___awdiv
  1341  014F  01A1               	clrf	?___awdiv+1
  1342  0150  0841               	movf	main@tmp16+1,w
  1343  0151  00A3               	movwf	?___awdiv+3
  1344  0152  0840               	movf	main@tmp16,w
  1345  0153  00A2               	movwf	?___awdiv+2
  1346  0154  24BC               	fcall	___awdiv
  1347  0155  0821               	movf	?___awdiv+1,w
  1348  0156  00C1               	movwf	main@tmp16+1
  1349  0157  0820               	movf	?___awdiv,w
  1350  0158  00C0               	movwf	main@tmp16
  1351                           
  1352                           ;smartkey.C: 313: if (((signed char)tmp16 > (-31)) && ((signed char)tmp16 < 31)) {
  1353  0159  3A80               	xorlw	128
  1354  015A  3E9E               	addlw	158
  1355  015B  1C03               	skipc
  1356  015C  2967               	goto	l6883
  1357  015D  0840               	movf	main@tmp16,w
  1358  015E  3A80               	xorlw	128
  1359  015F  3E61               	addlw	-159
  1360  0160  1803               	skipnc
  1361  0161  2967               	goto	l6883
  1362                           
  1363                           ;smartkey.C: 314: beep(10, 4);
  1364  0162  3004               	movlw	4
  1365  0163  00A4               	movwf	?_beep
  1366  0164  300A               	movlw	10
  1367  0165  2692               	fcall	_beep
  1368                           
  1369                           ;smartkey.C: 315: } else {
  1370  0166  29AA               	goto	l6907
  1371  0167                     l6883:	
  1372                           
  1373                           ;smartkey.C: 317: WRITE_EEPROM(0x10, (unsigned char)acXsum);
  1374  0167  0837               	movf	main@acXsum,w
  1375  0168  00A0               	movwf	?_WRITE_EEPROM
  1376  0169  3010               	movlw	16
  1377  016A  265F               	fcall	_WRITE_EEPROM
  1378                           
  1379                           ;smartkey.C: 318: WRITE_EEPROM(0x11, (unsigned char)acYsum);
  1380  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1381  016C  0835               	movf	main@acYsum,w
  1382  016D  00A0               	movwf	?_WRITE_EEPROM
  1383  016E  3011               	movlw	17
  1384  016F  265F               	fcall	_WRITE_EEPROM
  1385                           
  1386                           ;smartkey.C: 319: beep(10, 3);
  1387  0170  3003               	movlw	3
  1388  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0172  00A4               	movwf	?_beep
  1390  0173  300A               	movlw	10
  1391  0174  2692               	fcall	_beep
  1392  0175  29AA               	goto	l6907
  1393  0176                     l6885:	
  1394                           
  1395                           ;smartkey.C: 322: beep(10, 2);
  1396  0176  3002               	movlw	2
  1397  0177  00A4               	movwf	?_beep
  1398  0178  300A               	movlw	10
  1399  0179  2692               	fcall	_beep
  1400  017A  29AA               	goto	l6907
  1401  017B                     l6887:	
  1402                           
  1403                           ;smartkey.C: 329: tmp8 = READ_EEPROM(0x41);
  1404  017B  3041               	movlw	65
  1405  017C  270E               	fcall	_READ_EEPROM
  1406  017D  00C2               	movwf	main@tmp8
  1407                           
  1408                           ;smartkey.C: 330: if (tmp8 & 2) {
  1409  017E  1CC2               	btfss	main@tmp8,1
  1410  017F  2982               	goto	l923
  1411                           
  1412                           ;smartkey.C: 331: tmp8 &= ~2;
  1413  0180  10C2               	bcf	main@tmp8,1
  1414                           
  1415                           ;smartkey.C: 332: }
  1416  0181  2983               	goto	l6893
  1417  0182                     l923:	
  1418                           
  1419                           ;smartkey.C: 333: else {
  1420                           ;smartkey.C: 334: tmp8 |= 2;
  1421  0182  14C2               	bsf	main@tmp8,1
  1422  0183                     l6893:	
  1423                           
  1424                           ;smartkey.C: 335: }
  1425                           ;smartkey.C: 336: WRITE_EEPROM(0x41, tmp8);
  1426  0183  0842               	movf	main@tmp8,w
  1427  0184  00A0               	movwf	?_WRITE_EEPROM
  1428  0185  3041               	movlw	65
  1429  0186  265F               	fcall	_WRITE_EEPROM
  1430  0187  3032               	movlw	50
  1431                           
  1432                           ;smartkey.C: 337: beep(50, 1);
  1433  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0189  01A4               	clrf	?_beep
  1435  018A  0AA4               	incf	?_beep,f
  1436  018B  2692               	fcall	_beep
  1437                           
  1438                           ;smartkey.C: 338: break;
  1439  018C  29AA               	goto	l6907
  1440  018D                     l6895:	
  1441                           
  1442                           ;smartkey.C: 342: tmp8 = READ_EEPROM(0x41);
  1443  018D  3041               	movlw	65
  1444  018E  270E               	fcall	_READ_EEPROM
  1445  018F  00C2               	movwf	main@tmp8
  1446                           
  1447                           ;smartkey.C: 343: if (tmp8 & 1) {
  1448  0190  1C42               	btfss	main@tmp8,0
  1449  0191  2994               	goto	l926
  1450                           
  1451                           ;smartkey.C: 344: tmp8 &= ~1;
  1452  0192  1042               	bcf	main@tmp8,0
  1453                           
  1454                           ;smartkey.C: 345: }
  1455  0193  2995               	goto	l6901
  1456  0194                     l926:	
  1457                           
  1458                           ;smartkey.C: 346: else {
  1459                           ;smartkey.C: 347: tmp8 |= 1;
  1460  0194  1442               	bsf	main@tmp8,0
  1461  0195                     l6901:	
  1462                           
  1463                           ;smartkey.C: 348: }
  1464                           ;smartkey.C: 349: WRITE_EEPROM(0x41, tmp8);
  1465  0195  0842               	movf	main@tmp8,w
  1466  0196  00A0               	movwf	?_WRITE_EEPROM
  1467  0197  3041               	movlw	65
  1468  0198  265F               	fcall	_WRITE_EEPROM
  1469                           
  1470                           ;smartkey.C: 350: beep(10, 2);
  1471  0199  3002               	movlw	2
  1472  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1473  019B  00A4               	movwf	?_beep
  1474  019C  300A               	movlw	10
  1475  019D  2692               	fcall	_beep
  1476                           
  1477                           ;smartkey.C: 351: break;
  1478  019E  29AA               	goto	l6907
  1479  019F                     l6905:	
  1480  019F  0842               	movf	main@tmp8,w
  1481                           
  1482                           ; Switch size 1, requested type "space"
  1483                           ; Number of cases is 3, Range of values is 3 to 20
  1484                           ; switch strategies available:
  1485                           ; Name         Instructions Cycles
  1486                           ; simple_byte           10     6 (average)
  1487                           ; direct_byte           27     9 (fixed)
  1488                           ; jumptable            263     9 (fixed)
  1489                           ;	Chosen strategy is simple_byte
  1490  01A0  3A03               	xorlw	3	; case 3
  1491  01A1  1903               	skipnz
  1492  01A2  28EB               	goto	l6861
  1493  01A3  3A09               	xorlw	9	; case 10
  1494  01A4  1903               	skipnz
  1495  01A5  298D               	goto	l6895
  1496  01A6  3A1E               	xorlw	30	; case 20
  1497  01A7  1903               	skipnz
  1498  01A8  297B               	goto	l6887
  1499  01A9  29AA               	goto	l6907
  1500  01AA                     l6907:	
  1501                           
  1502                           ;smartkey.C: 355: tmp8 = READ_EEPROM(0x41);
  1503  01AA  3041               	movlw	65
  1504  01AB  270E               	fcall	_READ_EEPROM
  1505  01AC  00C2               	movwf	main@tmp8
  1506                           
  1507                           ;smartkey.C: 356: if (tmp8 >0 && tmp8<4 ) {
  1508  01AD  0842               	movf	main@tmp8,w
  1509  01AE  1903               	btfsc	3,2
  1510  01AF  29CE               	goto	l6927
  1511  01B0  3004               	movlw	4
  1512  01B1  0242               	subwf	main@tmp8,w
  1513  01B2  1803               	skipnc
  1514  01B3  29CE               	goto	l6927
  1515  01B4  30AC               	movlw	172
  1516                           
  1517                           ;smartkey.C: 357: RegStatus.bits.b0 = 1;
  1518  01B5  1472               	bsf	_RegStatus,0
  1519                           
  1520                           ;smartkey.C: 358: setState(1, 3500);
  1521  01B6  00A0               	movwf	?_setState
  1522  01B7  300D               	movlw	13
  1523  01B8  00A1               	movwf	?_setState+1
  1524  01B9  3001               	movlw	1
  1525  01BA  271B               	fcall	_setState
  1526                           
  1527                           ;smartkey.C: 359: RegStatus.bits.b4 = 1;
  1528  01BB  1672               	bsf	_RegStatus,4
  1529                           
  1530                           ;smartkey.C: 361: if (tmp8 & 2) {
  1531  01BC  1CC2               	btfss	main@tmp8,1
  1532  01BD  29C0               	goto	l929
  1533                           
  1534                           ;smartkey.C: 362: RegStatus.bits.b6 = 0;
  1535  01BE  1372               	bcf	_RegStatus,6
  1536                           
  1537                           ;smartkey.C: 363: }
  1538  01BF  29CE               	goto	l6927
  1539  01C0                     l929:	
  1540                           
  1541                           ;smartkey.C: 364: else if (tmp8 & 1) {
  1542  01C0  1C42               	btfss	main@tmp8,0
  1543  01C1  29CE               	goto	l6927
  1544                           
  1545                           ;smartkey.C: 365: tmp16 = timeTick + 40;
  1546  01C2  0871               	movf	_timeTick+1,w
  1547  01C3  00C1               	movwf	main@tmp16+1
  1548  01C4  0870               	movf	_timeTick,w
  1549  01C5  00C0               	movwf	main@tmp16
  1550  01C6  3028               	movlw	40
  1551  01C7  07C0               	addwf	main@tmp16,f
  1552  01C8  1803               	skipnc
  1553  01C9  0AC1               	incf	main@tmp16+1,f
  1554  01CA  300A               	movlw	10
  1555                           
  1556                           ;smartkey.C: 366: beep(10, 1);
  1557  01CB  01A4               	clrf	?_beep
  1558  01CC  0AA4               	incf	?_beep,f
  1559  01CD  2692               	fcall	_beep
  1560  01CE                     l6927:	
  1561                           
  1562                           ;smartkey.C: 367: }
  1563                           ;smartkey.C: 368: }
  1564                           ;smartkey.C: 370: timeTick = 0;
  1565  01CE  01F0               	clrf	_timeTick
  1566  01CF  01F1               	clrf	_timeTick+1
  1567  01D0                     l6929:	
  1568                           
  1569                           ;smartkey.C: 376: if ( RegStatus.bits.b4 == 0) {
  1570  01D0  1E72               	btfss	_RegStatus,4
  1571                           
  1572                           ;smartkey.C: 377: if (RegStatus.bits.b3 == 0) {
  1573  01D1  19F2               	btfsc	_RegStatus,3
  1574  01D2  2AA8               	goto	l7043
  1575                           
  1576                           ;smartkey.C: 378: if (RegStatus.bits.b1) {
  1577  01D3  1CF2               	btfss	_RegStatus,1
  1578  01D4  2AA8               	goto	l7043
  1579                           
  1580                           ;smartkey.C: 380: PAIE = 0;
  1581  01D5  118B               	bcf	11,3
  1582                           
  1583                           ;smartkey.C: 382: RegStatus.bits.b1 = 0;
  1584  01D6  10F2               	bcf	_RegStatus,1
  1585                           
  1586                           ;smartkey.C: 386: if (RegStatus.bits.b2) {
  1587  01D7  1972               	btfsc	_RegStatus,2
  1588  01D8  2A54               	goto	l7003
  1589  01D9  2A9F               	goto	l7041
  1590  01DA                     l6939:	
  1591                           
  1592                           ;smartkey.C: 390: lostDetect = 0;
  1593  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1594  01DB  01B2               	clrf	main@lostDetect
  1595  01DC                     L1:	
  1596  01DC  3028               	movlw	40
  1597                           
  1598                           ;smartkey.C: 391: timeTick = 0;
  1599  01DD  01F0               	clrf	_timeTick
  1600  01DE  01F1               	clrf	_timeTick+1
  1601                           
  1602                           ;smartkey.C: 392: tmp16 = 40;
  1603  01DF  00C0               	movwf	main@tmp16
  1604  01E0  01C1               	clrf	main@tmp16+1
  1605                           
  1606                           ;smartkey.C: 393: break;
  1607  01E1  2AA7               	goto	l958
  1608  01E2                     l6943:	
  1609                           
  1610                           ;smartkey.C: 396: if (timeTick > 30) {
  1611  01E2  3000               	movlw	0
  1612  01E3  0271               	subwf	_timeTick+1,w
  1613  01E4  301F               	movlw	31
  1614  01E5  1903               	skipnz
  1615  01E6  0270               	subwf	_timeTick,w
  1616  01E7  1C03               	skipc
  1617  01E8  2AA7               	goto	l958
  1618  01E9  3008               	movlw	8
  1619                           
  1620                           ;smartkey.C: 397: timeTick = 0;
  1621  01EA  01F0               	clrf	_timeTick
  1622  01EB  01F1               	clrf	_timeTick+1
  1623                           
  1624                           ;smartkey.C: 399: if (READ_EEPROM(0x08) == 0xcc) WRITE_EEPROM(0x08, 0);
  1625  01EC  270E               	fcall	_READ_EEPROM
  1626  01ED  3ACC               	xorlw	204
  1627  01EE  1D03               	skipz
  1628  01EF  29F3               	goto	l6951
  1629  01F0  3008               	movlw	8
  1630  01F1  01A0               	clrf	?_WRITE_EEPROM
  1631  01F2  265F               	fcall	_WRITE_EEPROM
  1632  01F3                     l6951:	
  1633                           
  1634                           ;smartkey.C: 401: if ((mtOldState == 3)) {
  1635  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1636  01F4  0848               	movf	_mtOldState,w
  1637  01F5  3A03               	xorlw	3
  1638  01F6  1D03               	skipz
  1639  01F7  2A03               	goto	l6963
  1640                           
  1641                           ;smartkey.C: 402: beepOn(); TMR2ON = 0; beep(10, 1);
  1642  01F8  2742               	fcall	_beepOn
  1643  01F9  300A               	movlw	10
  1644  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1645  01FB  1112               	bcf	18,2
  1646  01FC  01A4               	clrf	?_beep
  1647  01FD  0AA4               	incf	?_beep,f
  1648  01FE  2692               	fcall	_beep
  1649  01FF                     L3:	
  1650                           
  1651                           ;smartkey.C: 403: if (RegStatus.bits.b7)RegStatus.bits.b7 = 0;
  1652  01FF  1FF2               	btfss	_RegStatus,7
  1653  0200  2AA7               	goto	l958
  1654  0201  13F2               	bcf	_RegStatus,7
  1655  0202  2AA7               	goto	l958
  1656  0203                     l6963:	
  1657                           
  1658                           ;smartkey.C: 405: else if ((mtOldState == 0) || (mtOldState == 4)) {
  1659  0203  0848               	movf	_mtOldState,w
  1660  0204  1903               	btfsc	3,2
  1661  0205  2A0A               	goto	l948
  1662  0206  0848               	movf	_mtOldState,w
  1663  0207  3A04               	xorlw	4
  1664  0208  1D03               	skipz
  1665  0209  2A27               	goto	l6977
  1666  020A                     l948:	
  1667  020A  30AC               	movlw	172
  1668                           
  1669                           ;smartkey.C: 406: RegStatus.bits.b0 = 1;
  1670  020B  1472               	bsf	_RegStatus,0
  1671                           
  1672                           ;smartkey.C: 407: setState(1, 3500);
  1673  020C  00A0               	movwf	?_setState
  1674  020D  300D               	movlw	13
  1675  020E  00A1               	movwf	?_setState+1
  1676  020F  3001               	movlw	1
  1677  0210  271B               	fcall	_setState
  1678                           
  1679                           ;smartkey.C: 408: if (READ_EEPROM(0x40))WRITE_EEPROM(0x40, 0);
  1680  0211  3040               	movlw	64
  1681  0212  270E               	fcall	_READ_EEPROM
  1682  0213  3A00               	xorlw	0
  1683  0214  1903               	skipnz
  1684  0215  2A19               	goto	l6973
  1685  0216  3040               	movlw	64
  1686  0217  01A0               	clrf	?_WRITE_EEPROM
  1687  0218  265F               	fcall	_WRITE_EEPROM
  1688  0219                     l6973:	
  1689                           
  1690                           ;smartkey.C: 409: tmp16 = timeTick + 40;
  1691  0219  0871               	movf	_timeTick+1,w
  1692  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1693  021B  00C1               	movwf	main@tmp16+1
  1694  021C  0870               	movf	_timeTick,w
  1695  021D  00C0               	movwf	main@tmp16
  1696  021E  3028               	movlw	40
  1697  021F  07C0               	addwf	main@tmp16,f
  1698  0220  1803               	skipnc
  1699  0221  0AC1               	incf	main@tmp16+1,f
  1700  0222  300A               	movlw	10
  1701                           
  1702                           ;smartkey.C: 410: beep(10, 1);
  1703  0223  01A4               	clrf	?_beep
  1704  0224  0AA4               	incf	?_beep,f
  1705  0225  2692               	fcall	_beep
  1706                           
  1707                           ;smartkey.C: 411: }
  1708  0226  2AA7               	goto	l958
  1709  0227                     l6977:	
  1710                           
  1711                           ;smartkey.C: 412: else if ((mtOldState == 1)) {
  1712  0227  0B48               	decfsz	_mtOldState,w
  1713  0228  2AA7               	goto	l958
  1714                           
  1715                           ;smartkey.C: 414: if (RegStatus.bits.b7)RegStatus.bits.b7 = 0;
  1716  0229  29FF               	goto	L3
  1717  022A                     l6983:	
  1718                           ;smartkey.C: 415: }
  1719                           ;smartkey.C: 416: }
  1720                           ;smartkey.C: 417: break;
  1721                           
  1722                           
  1723                           ;smartkey.C: 420: if (timeTick > 200) {
  1724  022A  3000               	movlw	0
  1725  022B  0271               	subwf	_timeTick+1,w
  1726  022C  30C9               	movlw	201
  1727  022D  1903               	skipnz
  1728  022E  0270               	subwf	_timeTick,w
  1729  022F  1C03               	skipc
  1730  0230  2AA7               	goto	l958
  1731                           
  1732                           ;smartkey.C: 422: beepOff();
  1733  0231  2737               	fcall	_beepOff
  1734                           
  1735                           ;smartkey.C: 423: if (READ_EEPROM(0x08) == 0xcc) WRITE_EEPROM(0x08, 0);
  1736  0232  3008               	movlw	8
  1737  0233  270E               	fcall	_READ_EEPROM
  1738  0234  3ACC               	xorlw	204
  1739  0235  1D03               	skipz
  1740  0236  2A3A               	goto	l6991
  1741  0237  3008               	movlw	8
  1742  0238  01A0               	clrf	?_WRITE_EEPROM
  1743  0239  265F               	fcall	_WRITE_EEPROM
  1744  023A                     l6991:	
  1745  023A  30AC               	movlw	172
  1746                           
  1747                           ;smartkey.C: 424: RegStatus.bits.b0 = 1;
  1748  023B  1472               	bsf	_RegStatus,0
  1749                           
  1750                           ;smartkey.C: 425: setState(1, 3500);
  1751  023C  1283               	bcf	3,5	;RP0=0, select bank0
  1752  023D  00A0               	movwf	?_setState
  1753  023E  300D               	movlw	13
  1754  023F  00A1               	movwf	?_setState+1
  1755  0240  3001               	movlw	1
  1756  0241  271B               	fcall	_setState
  1757                           
  1758                           ;smartkey.C: 427: tmp16 = timeTick + 40;
  1759  0242  0871               	movf	_timeTick+1,w
  1760  0243  00C1               	movwf	main@tmp16+1
  1761  0244  0870               	movf	_timeTick,w
  1762  0245  00C0               	movwf	main@tmp16
  1763  0246  3028               	movlw	40
  1764  0247  07C0               	addwf	main@tmp16,f
  1765  0248  1803               	skipnc
  1766  0249  0AC1               	incf	main@tmp16+1,f
  1767  024A  2AA7               	goto	l958
  1768  024B                     l6997:	
  1769                           
  1770                           ;smartkey.C: 433: beepOff();
  1771  024B  2737               	fcall	_beepOff
  1772                           
  1773                           ;smartkey.C: 434: setState(2, 300);
  1774  024C  302C               	movlw	44
  1775  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1776  024E  00A0               	movwf	?_setState
  1777  024F  3001               	movlw	1
  1778  0250  00A1               	movwf	?_setState+1
  1779  0251  3002               	movlw	2
  1780  0252  271B               	fcall	_setState
  1781                           
  1782                           ;smartkey.C: 435: break;
  1783  0253  2AA7               	goto	l958
  1784  0254                     l7003:	
  1785  0254  0874               	movf	_mtState,w
  1786                           
  1787                           ; Switch size 1, requested type "space"
  1788                           ; Number of cases is 5, Range of values is 0 to 4
  1789                           ; switch strategies available:
  1790                           ; Name         Instructions Cycles
  1791                           ; direct_byte           11     6 (fixed)
  1792                           ; simple_byte           16     9 (average)
  1793                           ; jumptable            260     6 (fixed)
  1794                           ; rangetable             9     6 (fixed)
  1795                           ; spacedrange           16     9 (fixed)
  1796                           ; locatedrange           5     3 (fixed)
  1797                           ;	Chosen strategy is direct_byte
  1798  0255  0084               	movwf	4
  1799  0256  3005               	movlw	5
  1800  0257  0204               	subwf	4,w
  1801  0258  1803               	skipnc
  1802  0259  2AA7               	goto	l958
  1803  025A  3007               	movlw	high S7293
  1804  025B  008A               	movwf	10
  1805  025C  303D               	movlw	low S7293
  1806  025D  0704               	addwf	4,w
  1807  025E  0082               	movwf	2
  1808  025F                     l7005:	
  1809                           
  1810                           ;smartkey.C: 450: if ((lostDetect == 1) && (timeTick < 1500) && (timeTick > 700))
  1811  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0260  0B32               	decfsz	main@lostDetect,w
  1813  0261  2A8D               	goto	l961
  1814  0262  3005               	movlw	5
  1815  0263  0271               	subwf	_timeTick+1,w
  1816  0264  30DC               	movlw	220
  1817  0265  1903               	skipnz
  1818  0266  0270               	subwf	_timeTick,w
  1819  0267  1803               	skipnc
  1820  0268  2A8D               	goto	l961
  1821  0269  3002               	movlw	2
  1822  026A  0271               	subwf	_timeTick+1,w
  1823  026B  30BD               	movlw	189
  1824  026C  1903               	skipnz
  1825  026D  0270               	subwf	_timeTick,w
  1826  026E  1C03               	skipc
  1827  026F  2A8D               	goto	l961
  1828                           
  1829                           ;smartkey.C: 451: {
  1830                           ;smartkey.C: 452: if (READ_EEPROM(0x08) == 0x00) WRITE_EEPROM(0x08, 0xcc);
  1831  0270  3008               	movlw	8
  1832  0271  270E               	fcall	_READ_EEPROM
  1833  0272  3800               	iorlw	0
  1834  0273  1D03               	skipz
  1835  0274  2A79               	goto	l962
  1836  0275  30CC               	movlw	204
  1837  0276  00A0               	movwf	?_WRITE_EEPROM
  1838  0277  3008               	movlw	8
  1839  0278  265F               	fcall	_WRITE_EEPROM
  1840  0279                     l962:	
  1841                           
  1842                           ;smartkey.C: 454: setState(3, 1800);
  1843  0279  3008               	movlw	8
  1844  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1845  027B  00A0               	movwf	?_setState
  1846  027C  3007               	movlw	7
  1847  027D  00A1               	movwf	?_setState+1
  1848  027E  3003               	movlw	3
  1849  027F  271B               	fcall	_setState
  1850                           
  1851                           ;smartkey.C: 455: cntTmp = timeTick + 40;
  1852  0280  0871               	movf	_timeTick+1,w
  1853  0281  00C4               	movwf	_cntTmp+1
  1854  0282  0870               	movf	_timeTick,w
  1855  0283  00C3               	movwf	_cntTmp
  1856  0284  3028               	movlw	40
  1857  0285  07C3               	addwf	_cntTmp,f
  1858  0286  1803               	skipnc
  1859  0287  0AC4               	incf	_cntTmp+1,f
  1860                           
  1861                           ;smartkey.C: 456: PR2L = 20;
  1862  0288  3014               	movlw	20
  1863  0289  1683               	bsf	3,5	;RP0=1, select bank1
  1864  028A  0091               	movwf	17	;volatile
  1865                           
  1866                           ;smartkey.C: 457: beepOn();
  1867  028B  2742               	fcall	_beepOn
  1868  028C  29DA               	goto	l6939
  1869  028D                     l961:	
  1870                           ;smartkey.C: 459: }
  1871                           
  1872                           ;smartkey.C: 458: lostDetect = 0;
  1873                           
  1874                           
  1875                           ;smartkey.C: 460: else {
  1876                           ;smartkey.C: 461: lostDetect = 1;
  1877  028D  01B2               	clrf	main@lostDetect
  1878  028E  0AB2               	incf	main@lostDetect,f
  1879  028F  29DC               	goto	L1
  1880  0290                     l7027:	
  1881                           ;smartkey.C: 464: }
  1882                           ;smartkey.C: 465: timeTick = 0;
  1883                           
  1884                           
  1885                           ;smartkey.C: 470: timeTick = 0;
  1886  0290  01F0               	clrf	_timeTick
  1887  0291  01F1               	clrf	_timeTick+1
  1888                           
  1889                           ;smartkey.C: 471: beepOn(); TMR2ON = 0;
  1890  0292  2742               	fcall	_beepOn
  1891  0293  3002               	movlw	2
  1892  0294  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0295  1112               	bcf	18,2
  1894                           
  1895                           ;smartkey.C: 472: beep(10, 2);
  1896  0296  00A4               	movwf	?_beep
  1897  0297  300A               	movlw	10
  1898  0298  2692               	fcall	_beep
  1899                           
  1900                           ;smartkey.C: 473: if (mtOldState == 3) {RegStatus.bits.b7 = 1;}
  1901  0299  0848               	movf	_mtOldState,w
  1902  029A  3A03               	xorlw	3
  1903  029B  1D03               	skipz
  1904  029C  2AA7               	goto	l958
  1905  029D  17F2               	bsf	_RegStatus,7
  1906  029E  2AA7               	goto	l958
  1907  029F                     l7041:	
  1908  029F  0874               	movf	_mtState,w
  1909                           
  1910                           ; Switch size 1, requested type "space"
  1911                           ; Number of cases is 2, Range of values is 1 to 2
  1912                           ; switch strategies available:
  1913                           ; Name         Instructions Cycles
  1914                           ; simple_byte            7     4 (average)
  1915                           ; direct_byte           11     9 (fixed)
  1916                           ; jumptable            263     9 (fixed)
  1917                           ;	Chosen strategy is simple_byte
  1918  02A0  3A01               	xorlw	1	; case 1
  1919  02A1  1903               	skipnz
  1920  02A2  2A5F               	goto	l7005
  1921  02A3  3A03               	xorlw	3	; case 2
  1922  02A4  1903               	skipnz
  1923  02A5  2A90               	goto	l7027
  1924  02A6  2AA7               	goto	l958
  1925  02A7                     l958:	
  1926                           
  1927                           ;smartkey.C: 476: }
  1928                           ;smartkey.C: 477: PAIE = 1;
  1929  02A7  158B               	bsf	11,3
  1930  02A8                     l7043:	
  1931                           
  1932                           ;smartkey.C: 478: }
  1933                           ;smartkey.C: 479: }
  1934                           ;smartkey.C: 480: }
  1935                           ;smartkey.C: 483: if ((timeOut != 0) && ( timeTick > timeOut)) {
  1936  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1937  02A9  0846               	movf	_timeOut+1,w
  1938  02AA  0445               	iorwf	_timeOut,w
  1939  02AB  1903               	skipnz
  1940  02AC  2B2E               	goto	l967
  1941  02AD  0871               	movf	_timeTick+1,w
  1942  02AE  0246               	subwf	_timeOut+1,w
  1943  02AF  1D03               	skipz
  1944  02B0  2AB3               	goto	u3375
  1945  02B1  0870               	movf	_timeTick,w
  1946  02B2  0245               	subwf	_timeOut,w
  1947  02B3                     u3375:	
  1948  02B3  1C03               	btfss	3,0
  1949  02B4  2B20               	goto	l7117
  1950  02B5  2B2E               	goto	l967
  1951  02B6                     l7049:	
  1952                           
  1953                           ;smartkey.C: 489: beepOff();
  1954  02B6  2737               	fcall	_beepOff
  1955  02B7  302C               	movlw	44
  1956                           
  1957                           ;smartkey.C: 490: RegStatus.bits.b0 = 0;
  1958  02B8  1072               	bcf	_RegStatus,0
  1959                           
  1960                           ;smartkey.C: 491: setState(2, 300);
  1961  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1962  02BA  00A0               	movwf	?_setState
  1963  02BB  3001               	movlw	1
  1964  02BC  00A1               	movwf	?_setState+1
  1965  02BD  3002               	movlw	2
  1966  02BE  271B               	fcall	_setState
  1967                           
  1968                           ;smartkey.C: 492: break;
  1969  02BF  2B2E               	goto	l967
  1970  02C0                     l7055:	
  1971                           
  1972                           ;smartkey.C: 494: beepOff();
  1973  02C0  2737               	fcall	_beepOff
  1974                           
  1975                           ;smartkey.C: 495: delay_x10ms(20);
  1976  02C1  3014               	movlw	20
  1977  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1978  02C3  00A0               	movwf	?_delay_x10ms
  1979  02C4  01A1               	clrf	?_delay_x10ms+1
  1980  02C5  26D1               	fcall	_delay_x10ms
  1981                           
  1982                           ;smartkey.C: 496: beepOn(); TMR2ON = 0; RegStatus.bits.b7 = 0;
  1983  02C6  2742               	fcall	_beepOn
  1984  02C7  301E               	movlw	30
  1985  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1986  02C9  1112               	bcf	18,2
  1987  02CA  13F2               	bcf	_RegStatus,7
  1988                           
  1989                           ;smartkey.C: 497: beep(30, 1);
  1990  02CB  01A4               	clrf	?_beep
  1991  02CC  0AA4               	incf	?_beep,f
  1992  02CD  2692               	fcall	_beep
  1993  02CE  3000               	movlw	0
  1994                           
  1995                           ;smartkey.C: 498: RegStatus.bits.b5 = 1;
  1996  02CF  16F2               	bsf	_RegStatus,5
  1997                           
  1998                           ;smartkey.C: 499: setState(0, 0);
  1999  02D0  01A0               	clrf	?_setState
  2000  02D1  01A1               	clrf	?_setState+1
  2001  02D2                     L2:	
  2002  02D2  271B               	fcall	_setState
  2003  02D3                     l7067:	
  2004                           
  2005                           ;smartkey.C: 501: tmp16 = timeTick + 40;
  2006  02D3  0871               	movf	_timeTick+1,w
  2007  02D4  00C1               	movwf	main@tmp16+1
  2008  02D5  0870               	movf	_timeTick,w
  2009  02D6  00C0               	movwf	main@tmp16
  2010  02D7  3028               	movlw	40
  2011  02D8  07C0               	addwf	main@tmp16,f
  2012  02D9  1803               	skipnc
  2013  02DA  0AC1               	incf	main@tmp16+1,f
  2014                           
  2015                           ;smartkey.C: 502: break;
  2016  02DB  2B2E               	goto	l967
  2017  02DC                     l7071:	
  2018                           
  2019                           ;smartkey.C: 505: if (READ_EEPROM(0x08) == 0xcc) WRITE_EEPROM(0x08, 0);
  2020  02DC  3008               	movlw	8
  2021  02DD  270E               	fcall	_READ_EEPROM
  2022  02DE  3ACC               	xorlw	204
  2023  02DF  1D03               	skipz
  2024  02E0  2AE4               	goto	l7075
  2025  02E1  3008               	movlw	8
  2026  02E2  01A0               	clrf	?_WRITE_EEPROM
  2027  02E3  265F               	fcall	_WRITE_EEPROM
  2028  02E4                     l7075:	
  2029                           
  2030                           ;smartkey.C: 506: if (RegStatus.bits.b7) {
  2031  02E4  1FF2               	btfss	_RegStatus,7
  2032  02E5  2AFA               	goto	l7085
  2033                           
  2034                           ;smartkey.C: 507: setState(4, 6000);
  2035  02E6  3070               	movlw	112
  2036  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2037  02E8  00A0               	movwf	?_setState
  2038  02E9  3017               	movlw	23
  2039  02EA  00A1               	movwf	?_setState+1
  2040  02EB  3004               	movlw	4
  2041  02EC  271B               	fcall	_setState
  2042                           
  2043                           ;smartkey.C: 508: cntTmp = timeTick + 40;
  2044  02ED  0871               	movf	_timeTick+1,w
  2045  02EE  00C4               	movwf	_cntTmp+1
  2046  02EF  0870               	movf	_timeTick,w
  2047  02F0  00C3               	movwf	_cntTmp
  2048  02F1  3028               	movlw	40
  2049  02F2  07C3               	addwf	_cntTmp,f
  2050  02F3  1803               	skipnc
  2051  02F4  0AC4               	incf	_cntTmp+1,f
  2052                           
  2053                           ;smartkey.C: 509: PR2L = 20;
  2054  02F5  3014               	movlw	20
  2055  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  2056  02F7  0091               	movwf	17	;volatile
  2057                           
  2058                           ;smartkey.C: 510: beepOn();
  2059  02F8  2742               	fcall	_beepOn
  2060                           
  2061                           ;smartkey.C: 512: } else if (mtOldState == 0) {
  2062  02F9  2B2E               	goto	l967
  2063  02FA                     l7085:	
  2064  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2065  02FB  08C8               	movf	_mtOldState,f
  2066  02FC  1D03               	skipz
  2067  02FD  2B12               	goto	l7099
  2068                           
  2069                           ;smartkey.C: 514: beep(10, 5);
  2070  02FE  3005               	movlw	5
  2071  02FF  00A4               	movwf	?_beep
  2072  0300  300A               	movlw	10
  2073  0301  2692               	fcall	_beep
  2074  0302  3040               	movlw	64
  2075                           
  2076                           ;smartkey.C: 515: RegStatus.bits.b0 = 1;
  2077  0303  1472               	bsf	_RegStatus,0
  2078                           
  2079                           ;smartkey.C: 516: if (READ_EEPROM(0x40))WRITE_EEPROM(0x40, 0);
  2080  0304  270E               	fcall	_READ_EEPROM
  2081  0305  3A00               	xorlw	0
  2082  0306  1903               	skipnz
  2083  0307  2B0B               	goto	l978
  2084  0308  3040               	movlw	64
  2085  0309  01A0               	clrf	?_WRITE_EEPROM
  2086  030A  265F               	fcall	_WRITE_EEPROM
  2087  030B                     l978:	
  2088                           
  2089                           ;smartkey.C: 517: setState(1, 3500);
  2090  030B  30AC               	movlw	172
  2091  030C  1283               	bcf	3,5	;RP0=0, select bank0
  2092  030D  00A0               	movwf	?_setState
  2093  030E  300D               	movlw	13
  2094  030F  00A1               	movwf	?_setState+1
  2095  0310  3001               	movlw	1
  2096  0311  2AD2               	goto	L2
  2097  0312                     l7099:	
  2098                           
  2099                           ;smartkey.C: 521: beepOn(); TMR2ON = 0;
  2100  0312  2742               	fcall	_beepOn
  2101  0313  301E               	movlw	30
  2102  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2103  0315  1112               	bcf	18,2
  2104                           
  2105                           ;smartkey.C: 522: RegStatus.bits.b7 = 0;
  2106  0316  13F2               	bcf	_RegStatus,7
  2107  0317  01A4               	clrf	?_beep
  2108  0318  0AA4               	incf	?_beep,f
  2109  0319  2692               	fcall	_beep
  2110  031A  3000               	movlw	0
  2111                           
  2112                           ;smartkey.C: 524: setState(0, 0);
  2113  031B  01A0               	clrf	?_setState
  2114  031C  01A1               	clrf	?_setState+1
  2115  031D  271B               	fcall	_setState
  2116                           
  2117                           ;smartkey.C: 526: RegStatus.bits.b5 = 1;
  2118  031E  16F2               	bsf	_RegStatus,5
  2119  031F  2AD3               	goto	l7067
  2120  0320                     l7117:	
  2121  0320  0874               	movf	_mtState,w
  2122                           
  2123                           ; Switch size 1, requested type "space"
  2124                           ; Number of cases is 4, Range of values is 1 to 4
  2125                           ; switch strategies available:
  2126                           ; Name         Instructions Cycles
  2127                           ; simple_byte           13     7 (average)
  2128                           ; direct_byte           13     9 (fixed)
  2129                           ; jumptable            263     9 (fixed)
  2130                           ;	Chosen strategy is simple_byte
  2131  0321  3A01               	xorlw	1	; case 1
  2132  0322  1903               	skipnz
  2133  0323  2B2E               	goto	l967
  2134  0324  3A03               	xorlw	3	; case 2
  2135  0325  1903               	skipnz
  2136  0326  2ADC               	goto	l7071
  2137  0327  3A01               	xorlw	1	; case 3
  2138  0328  1903               	skipnz
  2139  0329  2AB6               	goto	l7049
  2140  032A  3A07               	xorlw	7	; case 4
  2141  032B  1903               	skipnz
  2142  032C  2AC0               	goto	l7055
  2143  032D  2B2E               	goto	l967
  2144  032E                     l967:	
  2145                           
  2146                           ;smartkey.C: 531: }
  2147                           ;smartkey.C: 533: if (RegStatus.bits.b6 == 1) {
  2148  032E  1F72               	btfss	_RegStatus,6
  2149  032F  2C17               	goto	l7231
  2150                           
  2151                           ;smartkey.C: 534: if ((timeTick > tmp16) && (mtState == 1) ) {
  2152  0330  0871               	movf	_timeTick+1,w
  2153  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2154  0332  0241               	subwf	main@tmp16+1,w
  2155  0333  1D03               	skipz
  2156  0334  2B37               	goto	u3435
  2157  0335  0870               	movf	_timeTick,w
  2158  0336  0240               	subwf	main@tmp16,w
  2159  0337                     u3435:	
  2160  0337  1803               	skipnc
  2161  0338  2BCF               	goto	l7201
  2162  0339  0B74               	decfsz	_mtState,w
  2163  033A  2BCF               	goto	l7201
  2164                           
  2165                           ;smartkey.C: 535: tmp16 = timeTick + 40;
  2166  033B  0871               	movf	_timeTick+1,w
  2167  033C  00C1               	movwf	main@tmp16+1
  2168  033D  0870               	movf	_timeTick,w
  2169  033E  00C0               	movwf	main@tmp16
  2170  033F  3028               	movlw	40
  2171  0340  07C0               	addwf	main@tmp16,f
  2172  0341  1803               	skipnc
  2173  0342  0AC1               	incf	main@tmp16+1,f
  2174                           
  2175                           ;smartkey.C: 536: if (AccRead(0x02, buf, 6) == 0) {
  2176  0343  3039               	movlw	main@buf& (0+255)
  2177  0344  00A4               	movwf	?_AccRead
  2178  0345  3000               	movlw	0
  2179  0346  00A5               	movwf	?_AccRead+1
  2180  0347  3006               	movlw	6
  2181  0348  00A6               	movwf	?_AccRead+2
  2182  0349  3002               	movlw	2
  2183  034A  25C2               	fcall	_AccRead
  2184  034B  3800               	iorlw	0
  2185  034C  1D03               	skipz
  2186  034D  2BCF               	goto	l7201
  2187                           
  2188                           ;smartkey.C: 538: if (compe(buf[1], (signed char)acXsum, 5) && compe(buf[3], (signed cha
      +                          r)acYsum, 5)) {
  2189  034E  1283               	bcf	3,5	;RP0=0, select bank0
  2190  034F  0837               	movf	main@acXsum,w
  2191  0350  00A0               	movwf	?_compe
  2192  0351  3005               	movlw	5
  2193  0352  00A1               	movwf	?_compe+1
  2194  0353  083A               	movf	main@buf+1,w
  2195  0354  2501               	fcall	_compe
  2196  0355  3A00               	xorlw	0
  2197  0356  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0357  1903               	skipnz
  2199  0358  2B7F               	goto	L5
  2200  0359  0835               	movf	main@acYsum,w
  2201  035A  00A0               	movwf	?_compe
  2202  035B  3005               	movlw	5
  2203  035C  00A1               	movwf	?_compe+1
  2204  035D  083C               	movf	main@buf+3,w
  2205  035E  2501               	fcall	_compe
  2206  035F  3A00               	xorlw	0
  2207                           
  2208                           ;smartkey.C: 540: isSw++;
  2209  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0361  1903               	skipnz
  2211  0362  2B7F               	goto	L5
  2212  0363  302D               	movlw	45
  2213  0364  0ABF               	incf	main@isSw,f
  2214                           
  2215                           ;smartkey.C: 541: if (isSw > 44) {
  2216  0365  023F               	subwf	main@isSw,w
  2217  0366  1C03               	skipc
  2218  0367  2B72               	goto	l7147
  2219  0368  302C               	movlw	44
  2220                           
  2221                           ;smartkey.C: 542: isSw = 0;
  2222  0369  01BF               	clrf	main@isSw
  2223                           
  2224                           ;smartkey.C: 543: RegStatus.bits.b5 = 1;
  2225  036A  16F2               	bsf	_RegStatus,5
  2226                           
  2227                           ;smartkey.C: 546: RegStatus.bits.b0 = 0;
  2228  036B  1072               	bcf	_RegStatus,0
  2229                           
  2230                           ;smartkey.C: 547: setState(2, 300);
  2231  036C  00A0               	movwf	?_setState
  2232  036D  3001               	movlw	1
  2233  036E  00A1               	movwf	?_setState+1
  2234  036F  3002               	movlw	2
  2235  0370  271B               	fcall	_setState
  2236                           
  2237                           ;smartkey.C: 548: }
  2238  0371  2BAE               	goto	l7179
  2239  0372                     l7147:	
  2240                           
  2241                           ;smartkey.C: 549: else if (isSw > 25) {
  2242  0372  301A               	movlw	26
  2243  0373  023F               	subwf	main@isSw,w
  2244  0374  1803               	btfsc	3,0
  2245                           
  2246                           ;smartkey.C: 550: if (isSw % 2 == 0) {
  2247  0375  183F               	btfsc	main@isSw,0
  2248  0376  2BAE               	goto	l7179
  2249                           
  2250                           ;smartkey.C: 551: beepOn(); TMR2ON = 0; beep(7, 1);
  2251  0377  2742               	fcall	_beepOn
  2252  0378  3007               	movlw	7
  2253  0379  1283               	bcf	3,5	;RP0=0, select bank0
  2254  037A  1112               	bcf	18,2
  2255  037B  01A4               	clrf	?_beep
  2256  037C  0AA4               	incf	?_beep,f
  2257  037D  2692               	fcall	_beep
  2258  037E  2BAE               	goto	l7179
  2259  037F                     L5:	
  2260                           ;smartkey.C: 556: else {
  2261                           ;smartkey.C: 557: isSw = 0;
  2262                           
  2263                           ;smartkey.C: 552: }
  2264                           ;smartkey.C: 553: }
  2265                           ;smartkey.C: 554: }
  2266                           
  2267  037F  01BF               	clrf	main@isSw
  2268                           
  2269                           ;smartkey.C: 560: if (compe(buf[1], acXOld, 1) && compe(buf[3], acYOld, 1)) {
  2270  0380  0834               	movf	main@acXOld,w
  2271  0381  00A0               	movwf	?_compe
  2272  0382  01A1               	clrf	?_compe+1
  2273  0383  0AA1               	incf	?_compe+1,f
  2274  0384  083A               	movf	main@buf+1,w
  2275  0385  2501               	fcall	_compe
  2276  0386  3A00               	xorlw	0
  2277  0387  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0388  1903               	skipnz
  2279  0389  2BAC               	goto	L6
  2280  038A  0833               	movf	main@acYOld,w
  2281  038B  00A0               	movwf	?_compe
  2282  038C  01A1               	clrf	?_compe+1
  2283  038D  0AA1               	incf	?_compe+1,f
  2284  038E  083C               	movf	main@buf+3,w
  2285  038F  2501               	fcall	_compe
  2286  0390  3A00               	xorlw	0
  2287                           
  2288                           ;smartkey.C: 561: isWait++;
  2289  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0392  1903               	skipnz
  2291  0393  2BAC               	goto	L6
  2292  0394  0AAF               	incf	main@isWait,f
  2293  0395  1903               	skipnz
  2294  0396  0AB0               	incf	main@isWait+1,f
  2295                           
  2296                           ;smartkey.C: 562: if (isWait == 450) {
  2297  0397  0330               	decf	main@isWait+1,w
  2298  0398  30C2               	movlw	194
  2299  0399  1903               	skipnz
  2300  039A  062F               	xorwf	main@isWait,w
  2301  039B  1D03               	skipz
  2302  039C  2BAE               	goto	l7179
  2303  039D  3002               	movlw	2
  2304                           
  2305                           ;smartkey.C: 563: isWait = 0;
  2306  039E  01AF               	clrf	main@isWait
  2307  039F  01B0               	clrf	main@isWait+1
  2308                           
  2309                           ;smartkey.C: 564: beep(7, 2);
  2310  03A0  00A4               	movwf	?_beep
  2311  03A1  3007               	movlw	7
  2312  03A2  2692               	fcall	_beep
  2313  03A3  302C               	movlw	44
  2314                           
  2315                           ;smartkey.C: 565: RegStatus.bits.b5 = 1;
  2316  03A4  16F2               	bsf	_RegStatus,5
  2317                           
  2318                           ;smartkey.C: 566: RegStatus.bits.b0 = 0;
  2319  03A5  1072               	bcf	_RegStatus,0
  2320                           
  2321                           ;smartkey.C: 567: setState(2, 300);
  2322  03A6  00A0               	movwf	?_setState
  2323  03A7  3001               	movlw	1
  2324  03A8  00A1               	movwf	?_setState+1
  2325  03A9  3002               	movlw	2
  2326  03AA  271B               	fcall	_setState
  2327  03AB  2BAE               	goto	l7179
  2328  03AC                     L6:	
  2329                           ;smartkey.C: 570: else
  2330                           ;smartkey.C: 571: isWait = 0;
  2331                           
  2332  03AC  01AF               	clrf	main@isWait
  2333  03AD  01B0               	clrf	main@isWait+1
  2334  03AE                     l7179:	
  2335                           
  2336                           ;smartkey.C: 572: }
  2337                           ;smartkey.C: 574: if ( (buf[5] > -31) && (buf[5] < 31)) {
  2338  03AE  083E               	movf	main@buf+5,w
  2339  03AF  3A80               	xorlw	128
  2340  03B0  3E9E               	addlw	158
  2341  03B1  1C03               	skipc
  2342  03B2  2BCA               	goto	l7195
  2343  03B3  083E               	movf	main@buf+5,w
  2344  03B4  3A80               	xorlw	128
  2345  03B5  3E61               	addlw	-159
  2346  03B6  1803               	skipnc
  2347  03B7  2BCA               	goto	l7195
  2348  03B8  3005               	movlw	5
  2349                           
  2350                           ;smartkey.C: 575: isFall++;
  2351  03B9  0AB1               	incf	main@isFall,f
  2352                           
  2353                           ;smartkey.C: 576: if (isFall > 4) {
  2354  03BA  0231               	subwf	main@isFall,w
  2355  03BB  1C03               	skipc
  2356  03BC  2BCB               	goto	l7197
  2357  03BD  3002               	movlw	2
  2358                           
  2359                           ;smartkey.C: 577: isFall = 0;
  2360  03BE  01B1               	clrf	main@isFall
  2361                           
  2362                           ;smartkey.C: 578: beep(7, 2);
  2363  03BF  00A4               	movwf	?_beep
  2364  03C0  3007               	movlw	7
  2365  03C1  2692               	fcall	_beep
  2366  03C2  302C               	movlw	44
  2367                           
  2368                           ;smartkey.C: 579: RegStatus.bits.b0 = 0;
  2369  03C3  1072               	bcf	_RegStatus,0
  2370                           
  2371                           ;smartkey.C: 580: setState(2, 300);
  2372  03C4  00A0               	movwf	?_setState
  2373  03C5  3001               	movlw	1
  2374  03C6  00A1               	movwf	?_setState+1
  2375  03C7  3002               	movlw	2
  2376  03C8  271B               	fcall	_setState
  2377  03C9  2BCB               	goto	l7197
  2378  03CA                     l7195:	
  2379                           
  2380                           ;smartkey.C: 583: else {
  2381                           ;smartkey.C: 584: isFall = 0;
  2382  03CA  01B1               	clrf	main@isFall
  2383  03CB                     l7197:	
  2384                           
  2385                           ;smartkey.C: 585: }
  2386                           ;smartkey.C: 587: acYOld = buf[3]; acXOld = buf[1];
  2387  03CB  083C               	movf	main@buf+3,w
  2388  03CC  00B3               	movwf	main@acYOld
  2389  03CD  083A               	movf	main@buf+1,w
  2390  03CE  00B4               	movwf	main@acXOld
  2391  03CF                     l7201:	
  2392                           
  2393                           ;smartkey.C: 588: }
  2394                           ;smartkey.C: 589: }
  2395                           ;smartkey.C: 592: if ((timeTick > tmp16) && (mtState == 0 ) ) {
  2396  03CF  0871               	movf	_timeTick+1,w
  2397  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2398  03D1  0241               	subwf	main@tmp16+1,w
  2399  03D2  1D03               	skipz
  2400  03D3  2BD6               	goto	u3575
  2401  03D4  0870               	movf	_timeTick,w
  2402  03D5  0240               	subwf	main@tmp16,w
  2403  03D6                     u3575:	
  2404  03D6  1803               	skipnc
  2405  03D7  2C17               	goto	l7231
  2406  03D8  08F4               	movf	_mtState,f
  2407  03D9  1D03               	skipz
  2408  03DA  2C17               	goto	l7231
  2409                           
  2410                           ;smartkey.C: 594: if (timeTick > 65000) timeTick = 0;
  2411  03DB  30FD               	movlw	253
  2412  03DC  0271               	subwf	_timeTick+1,w
  2413  03DD  30E9               	movlw	233
  2414  03DE  1903               	skipnz
  2415  03DF  0270               	subwf	_timeTick,w
  2416  03E0  1C03               	skipc
  2417  03E1  2BE4               	goto	l7209
  2418  03E2  01F0               	clrf	_timeTick
  2419  03E3  01F1               	clrf	_timeTick+1
  2420  03E4                     l7209:	
  2421                           
  2422                           ;smartkey.C: 595: tmp16 = timeTick + 40;
  2423  03E4  0871               	movf	_timeTick+1,w
  2424  03E5  00C1               	movwf	main@tmp16+1
  2425  03E6  0870               	movf	_timeTick,w
  2426  03E7  00C0               	movwf	main@tmp16
  2427  03E8  3028               	movlw	40
  2428  03E9  07C0               	addwf	main@tmp16,f
  2429  03EA  1803               	skipnc
  2430  03EB  0AC1               	incf	main@tmp16+1,f
  2431                           
  2432                           ;smartkey.C: 597: if (AccRead(0x02, buf, 6) == 0) {
  2433  03EC  3039               	movlw	main@buf& (0+255)
  2434  03ED  00A4               	movwf	?_AccRead
  2435  03EE  3000               	movlw	0
  2436  03EF  00A5               	movwf	?_AccRead+1
  2437  03F0  3006               	movlw	6
  2438  03F1  00A6               	movwf	?_AccRead+2
  2439  03F2  3002               	movlw	2
  2440  03F3  25C2               	fcall	_AccRead
  2441  03F4  3800               	iorlw	0
  2442  03F5  1903               	btfsc	3,2
  2443                           
  2444                           ;smartkey.C: 598: if (RegStatus.bits.b5) {
  2445  03F6  1EF2               	btfss	_RegStatus,5
  2446  03F7  2C17               	goto	l7231
  2447                           
  2448                           ;smartkey.C: 599: if (compe(buf[1], acXOld , 3) && compe(buf[3], acYOld , 3)) {
  2449  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2450  03F9  0834               	movf	main@acXOld,w
  2451  03FA  00A0               	movwf	?_compe
  2452  03FB  3003               	movlw	3
  2453  03FC  00A1               	movwf	?_compe+1
  2454  03FD  083A               	movf	main@buf+1,w
  2455  03FE  2501               	fcall	_compe
  2456  03FF  3A00               	xorlw	0
  2457  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2458  0401  1903               	skipnz
  2459  0402  2C0F               	goto	L7
  2460  0403  0833               	movf	main@acYOld,w
  2461  0404  00A0               	movwf	?_compe
  2462  0405  3003               	movlw	3
  2463  0406  00A1               	movwf	?_compe+1
  2464  0407  083C               	movf	main@buf+3,w
  2465  0408  2501               	fcall	_compe
  2466  0409  3A00               	xorlw	0
  2467                           
  2468                           ;smartkey.C: 601: isSw = 0;
  2469  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2470  040B  1903               	skipnz
  2471  040C  2C0F               	goto	L7
  2472  040D  01BF               	clrf	main@isSw
  2473                           
  2474                           ;smartkey.C: 602: }
  2475  040E  2C17               	goto	l7231
  2476  040F                     L7:	
  2477                           ;smartkey.C: 603: else {
  2478                           ;smartkey.C: 604: isSw++;
  2479                           
  2480  040F  0ABF               	incf	main@isSw,f
  2481                           
  2482                           ;smartkey.C: 605: beepOn(); TMR2ON = 0; beep(7, 3);
  2483  0410  2742               	fcall	_beepOn
  2484  0411  3003               	movlw	3
  2485  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0413  1112               	bcf	18,2
  2487  0414  00A4               	movwf	?_beep
  2488  0415  3007               	movlw	7
  2489  0416  2692               	fcall	_beep
  2490  0417                     l7231:	
  2491                           
  2492                           ;smartkey.C: 606: }
  2493                           ;smartkey.C: 607: }
  2494                           ;smartkey.C: 608: }
  2495                           ;smartkey.C: 609: }
  2496                           ;smartkey.C: 610: }
  2497                           ;smartkey.C: 612: if (RegStatus.bits.b0) {RC0 = 1; RC1 = 1;}
  2498  0417  1C72               	btfss	_RegStatus,0
  2499  0418  2C1D               	goto	l1001
  2500  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2501  041A  1407               	bsf	7,0
  2502  041B  1487               	bsf	7,1
  2503  041C  2C20               	goto	l7235
  2504  041D                     l1001:	
  2505                           
  2506                           ;smartkey.C: 613: else {RC0 = 0; RC1 = 0;}
  2507  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2508  041E  1007               	bcf	7,0
  2509  041F  1087               	bcf	7,1
  2510  0420                     l7235:	
  2511                           
  2512                           ;smartkey.C: 616: if (timeTick > 500){
  2513  0420  3001               	movlw	1
  2514  0421  0271               	subwf	_timeTick+1,w
  2515  0422  30F5               	movlw	245
  2516  0423  1903               	skipnz
  2517  0424  0270               	subwf	_timeTick,w
  2518  0425  1C03               	skipc
  2519  0426  29D0               	goto	l6929
  2520                           
  2521                           ;smartkey.C: 617: if (READ_EEPROM(0x3F)) WRITE_EEPROM(0x3F, 0);
  2522  0427  303F               	movlw	63
  2523  0428  270E               	fcall	_READ_EEPROM
  2524  0429  3A00               	xorlw	0
  2525  042A  1903               	skipnz
  2526  042B  2C2F               	goto	l7241
  2527  042C  303F               	movlw	63
  2528  042D  01A0               	clrf	?_WRITE_EEPROM
  2529  042E  265F               	fcall	_WRITE_EEPROM
  2530  042F                     l7241:	
  2531                           
  2532                           ;smartkey.C: 618: if (READ_EEPROM(0x40)) WRITE_EEPROM(0x40, 0);
  2533  042F  3040               	movlw	64
  2534  0430  270E               	fcall	_READ_EEPROM
  2535  0431  3A00               	xorlw	0
  2536  0432  1903               	skipnz
  2537  0433  29D0               	goto	l6929
  2538  0434  3040               	movlw	64
  2539  0435  01A0               	clrf	?_WRITE_EEPROM
  2540  0436  265F               	fcall	_WRITE_EEPROM
  2541  0437  29D0               	goto	l6929
  2542  0438                     __end_of_main:	
  2543                           
  2544                           	psect	swtext1
  2545  073D                     __pswtext1:	
  2546  073D                     S7293:	
  2547  073D  2AA7               	ljmp	l958
  2548  073E  29DA               	ljmp	l6939
  2549  073F  29E2               	ljmp	l6943
  2550  0740  2A2A               	ljmp	l6983
  2551  0741  2A4B               	ljmp	l6997
  2552                           
  2553                           	psect	text872
  2554  05C2                     __ptext872:	
  2555 ;; =============== function _main ends ============
  2556                           
  2557                           
  2558 ;; *************** function _AccRead *****************
  2559 ;; Defined at:
  2560 ;;		line 31 in file "mpu6x.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  rAdd            1    wreg     unsigned char 
  2563 ;;  dat             2    4[BANK0 ] PTR unsigned char 
  2564 ;;		 -> RAM(256), main@buf(6), 
  2565 ;;  len             1    6[BANK0 ] unsigned char 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  rAdd            1   10[BANK0 ] unsigned char 
  2568 ;;  i               1   11[BANK0 ] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      unsigned char 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 20/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1
  2578 ;;      Params:         0       3       0
  2579 ;;      Locals:         0       2       0
  2580 ;;      Temps:          0       3       0
  2581 ;;      Totals:         0       8       0
  2582 ;;Total ram usage:        8 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    3
  2585 ;; This function calls:
  2586 ;;		_swI2C_Start
  2587 ;;		_swI2C_WriteByte
  2588 ;;		_swI2C_ReadByte
  2589 ;;		_swI2C_Stop
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594  05C2                     _AccRead:	
  2595                           
  2596                           ; Regs used in _AccRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2597                           ;AccRead@rAdd stored from wreg
  2598  05C2  00AA               	movwf	AccRead@rAdd
  2599                           
  2600                           ;mpu6x.c: 32: unsigned char i;
  2601                           ;mpu6x.c: 34: swI2C_Start();
  2602  05C3  26BE               	fcall	_swI2C_Start
  2603                           
  2604                           ;mpu6x.c: 36: if(swI2C_WriteByte(0x18<<1)== 0 )
  2605  05C4  3030               	movlw	48
  2606  05C5  2585               	fcall	_swI2C_WriteByte
  2607  05C6  3800               	iorlw	0
  2608  05C7  1D03               	skipz
  2609  05C8  3401               	retlw	1
  2610                           
  2611                           ;mpu6x.c: 37: {
  2612                           ;mpu6x.c: 38: if(swI2C_WriteByte(rAdd)==0 )
  2613  05C9  082A               	movf	AccRead@rAdd,w
  2614  05CA  2585               	fcall	_swI2C_WriteByte
  2615  05CB  3800               	iorlw	0
  2616  05CC  1D03               	skipz
  2617  05CD  3402               	retlw	2
  2618                           
  2619                           ;mpu6x.c: 39: {
  2620                           ;mpu6x.c: 40: swI2C_Start();
  2621  05CE  26BE               	fcall	_swI2C_Start
  2622                           
  2623                           ;mpu6x.c: 41: if(swI2C_WriteByte((0x18<<1)|1)== 0 ){
  2624  05CF  3031               	movlw	49
  2625  05D0  2585               	fcall	_swI2C_WriteByte
  2626  05D1  3800               	iorlw	0
  2627  05D2  1D03               	skipz
  2628  05D3  3401               	retlw	1
  2629                           
  2630                           ;mpu6x.c: 43: for(i=0; i<(len-1);i++){
  2631  05D4  01AB               	clrf	AccRead@i
  2632  05D5                     l6741:	
  2633  05D5  0826               	movf	AccRead@len,w
  2634  05D6  3EFF               	addlw	255
  2635  05D7  00A7               	movwf	??_AccRead
  2636  05D8  30FF               	movlw	255
  2637  05D9  1803               	skipnc
  2638  05DA  3000               	movlw	0
  2639  05DB  00A8               	movwf	??_AccRead+1
  2640  05DC  3A80               	xorlw	128
  2641  05DD  3C80               	sublw	128
  2642  05DE  1D03               	skipz
  2643  05DF  2DE2               	goto	u2955
  2644  05E0  0827               	movf	??_AccRead,w
  2645  05E1  022B               	subwf	AccRead@i,w
  2646  05E2                     u2955:	
  2647                           
  2648                           ;mpu6x.c: 44: dat[i]=swI2C_ReadByte(1);
  2649  05E2  3001               	movlw	1
  2650  05E3  1803               	btfsc	3,0
  2651  05E4  2DE9               	goto	L8
  2652  05E5  2546               	fcall	_swI2C_ReadByte
  2653  05E6  25ED               	fcall	PL2	;call to abstracted procedure
  2654  05E7  0AAB               	incf	AccRead@i,f
  2655  05E8  2DD5               	goto	l6741
  2656  05E9                     L8:	
  2657                           ;mpu6x.c: 45: }
  2658                           ;mpu6x.c: 46: dat[i]=swI2C_ReadByte(1);
  2659                           
  2660  05E9  2546               	fcall	_swI2C_ReadByte
  2661  05EA  25ED               	fcall	PL2	;call to abstracted procedure
  2662                           
  2663                           ;mpu6x.c: 47: swI2C_Stop();
  2664  05EB  2701               	fcall	_swI2C_Stop
  2665                           
  2666                           ;mpu6x.c: 48: return 0;
  2667  05EC  3400               	retlw	0
  2668  05ED                     __end_of_AccRead:	
  2669                           ;mpu6x.c: 54: else
  2670                           ;mpu6x.c: 55: return 2;
  2671                           
  2672                           ;mpu6x.c: 51: else
  2673                           ;mpu6x.c: 52: return 1;
  2674                           
  2675  05ED                     PL2:	
  2676  05ED  00A7               	movwf	??_AccRead
  2677  05EE  082B               	movf	AccRead@i,w
  2678  05EF  0724               	addwf	AccRead@dat,w
  2679  05F0  00A8               	movwf	??_AccRead+1
  2680  05F1  0825               	movf	AccRead@dat+1,w
  2681  05F2  1803               	skipnc
  2682  05F3  3E01               	addlw	1
  2683  05F4  00A9               	movwf	??_AccRead+2
  2684  05F5  0828               	movf	??_AccRead+1,w
  2685  05F6  0084               	movwf	4
  2686  05F7  1383               	bcf	3,7
  2687  05F8  1829               	btfsc	??_AccRead+2,0
  2688  05F9  1783               	bsf	3,7
  2689  05FA  0827               	movf	??_AccRead,w
  2690  05FB  0080               	movwf	0
  2691  05FC  0008               	return
  2692                           
  2693                           	psect	text873
  2694  05FD                     __ptext873:	
  2695 ;; =============== function _AccRead ends ============
  2696                           
  2697                           
  2698 ;; *************** function _AccWrite *****************
  2699 ;; Defined at:
  2700 ;;		line 4 in file "mpu6x.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  rAdd            1    wreg     unsigned char 
  2703 ;;  dat             2    3[BANK0 ] PTR unsigned char 
  2704 ;;		 -> RAM(256), 
  2705 ;;  len             1    5[BANK0 ] unsigned char 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  rAdd            1    8[BANK0 ] unsigned char 
  2708 ;;  i               1    9[BANK0 ] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      unsigned char 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 20/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1
  2718 ;;      Params:         0       3       0
  2719 ;;      Locals:         0       2       0
  2720 ;;      Temps:          0       2       0
  2721 ;;      Totals:         0       7       0
  2722 ;;Total ram usage:        7 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    3
  2725 ;; This function calls:
  2726 ;;		_swI2C_Start
  2727 ;;		_swI2C_WriteByte
  2728 ;;		_swI2C_Stop
  2729 ;; This function is called by:
  2730 ;;		_main
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733  05FD                     _AccWrite:	
  2734                           
  2735                           ; Regs used in _AccWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2736                           ;AccWrite@rAdd stored from wreg
  2737  05FD  00A8               	movwf	AccWrite@rAdd
  2738                           
  2739                           ;mpu6x.c: 5: unsigned char i;
  2740                           ;mpu6x.c: 6: swI2C_Start();
  2741  05FE  26BE               	fcall	_swI2C_Start
  2742                           
  2743                           ;mpu6x.c: 8: if(swI2C_WriteByte(0x18<<1)== 0 )
  2744  05FF  3030               	movlw	48
  2745  0600  2585               	fcall	_swI2C_WriteByte
  2746  0601  3800               	iorlw	0
  2747  0602  1D03               	skipz
  2748  0603  3401               	retlw	1
  2749                           
  2750                           ;mpu6x.c: 9: {
  2751                           ;mpu6x.c: 10: if(swI2C_WriteByte(rAdd)==0 )
  2752  0604  0828               	movf	AccWrite@rAdd,w
  2753  0605  2585               	fcall	_swI2C_WriteByte
  2754  0606  3800               	iorlw	0
  2755  0607  1D03               	skipz
  2756  0608  3402               	retlw	2
  2757                           
  2758                           ;mpu6x.c: 11: {
  2759                           ;mpu6x.c: 12: for(i=0; i<len;i++){
  2760  0609  01A9               	clrf	AccWrite@i
  2761  060A                     l6711:	
  2762  060A  0825               	movf	AccWrite@len,w
  2763  060B  0229               	subwf	AccWrite@i,w
  2764  060C  1803               	btfsc	3,0
  2765  060D  2E23               	goto	l6713
  2766                           
  2767                           ;mpu6x.c: 13: if(swI2C_WriteByte(dat[i])==1 ){
  2768  060E  0829               	movf	AccWrite@i,w
  2769  060F  0723               	addwf	AccWrite@dat,w
  2770  0610  00A6               	movwf	??_AccWrite
  2771  0611  0824               	movf	AccWrite@dat+1,w
  2772  0612  1803               	skipnc
  2773  0613  3E01               	addlw	1
  2774  0614  00A7               	movwf	??_AccWrite+1
  2775  0615  0826               	movf	??_AccWrite,w
  2776  0616  0084               	movwf	4
  2777  0617  1783               	bsf	3,7
  2778  0618  1C27               	btfss	??_AccWrite+1,0
  2779  0619  1383               	bcf	3,7
  2780  061A  0800               	movf	0,w
  2781  061B  2585               	fcall	_swI2C_WriteByte
  2782  061C  3A01               	xorlw	1
  2783  061D  1D03               	skipz
  2784  061E  2E21               	goto	l6709
  2785                           
  2786                           ;mpu6x.c: 14: swI2C_Stop();
  2787  061F  2701               	fcall	_swI2C_Stop
  2788                           
  2789                           ;mpu6x.c: 15: return 3;
  2790  0620  3403               	retlw	3
  2791  0621                     l6709:	
  2792  0621  0AA9               	incf	AccWrite@i,f
  2793  0622  2E0A               	goto	l6711
  2794  0623                     l6713:	
  2795                           
  2796                           ;mpu6x.c: 16: }
  2797                           ;mpu6x.c: 17: }
  2798                           ;mpu6x.c: 18: swI2C_Stop();
  2799  0623  2701               	fcall	_swI2C_Stop
  2800                           
  2801                           ;mpu6x.c: 19: return 0;
  2802  0624  3400               	retlw	0
  2803  0625                     __end_of_AccWrite:	
  2804                           ;mpu6x.c: 24: else
  2805                           ;mpu6x.c: 25: return 1;
  2806                           
  2807                           ;mpu6x.c: 21: else
  2808                           ;mpu6x.c: 22: return 2;
  2809                           
  2810                           
  2811                           	psect	text874
  2812  0546                     __ptext874:	
  2813 ;; =============== function _AccWrite ends ============
  2814                           
  2815                           
  2816 ;; *************** function _swI2C_ReadByte *****************
  2817 ;; Defined at:
  2818 ;;		line 112 in file "SWI2C.C"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  Ack             1    wreg     unsigned char 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  Ack             1    1[BANK0 ] unsigned char 
  2823 ;;  i               1    3[BANK0 ] unsigned char 
  2824 ;;  dat             1    2[BANK0 ] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      unsigned char 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 20/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1
  2834 ;;      Params:         0       0       0
  2835 ;;      Locals:         0       3       0
  2836 ;;      Temps:          0       1       0
  2837 ;;      Totals:         0       4       0
  2838 ;;Total ram usage:        4 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    2
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_AccRead
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847  0546                     _swI2C_ReadByte:	
  2848                           
  2849                           ; Regs used in _swI2C_ReadByte: [wreg+status,2+status,0]
  2850                           ;swI2C_ReadByte@Ack stored from wreg
  2851  0546  1283               	bcf	3,5	;RP0=0, select bank0
  2852  0547  00A1               	movwf	swI2C_ReadByte@Ack
  2853  0548  01A2               	clrf	swI2C_ReadByte@dat
  2854                           
  2855                           ;SWI2C.C: 115: RA7 = 0;
  2856  0549  1385               	bcf	5,7
  2857                           
  2858                           ;SWI2C.C: 116: TRISA |=0x40;;
  2859  054A  1683               	bsf	3,5	;RP0=1, select bank1
  2860  054B  1705               	bsf	5,6	;volatile
  2861                           
  2862                           ;SWI2C.C: 117: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2863  054C  3005               	movlw	5
  2864  054D  1283               	bcf	3,5	;RP0=0, select bank0
  2865  054E  00A0               	movwf	??_swI2C_ReadByte
  2866  054F                     u3757:	
  2867  054F  0BA0               	decfsz	??_swI2C_ReadByte,f
  2868  0550  2D4F               	goto	u3757
  2869                           
  2870                           ;SWI2C.C: 118: for(i=0;i<8;i++)
  2871  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2872  0552  01A3               	clrf	swI2C_ReadByte@i
  2873  0553                     l2611:	
  2874  0553  3005               	movlw	5
  2875                           
  2876                           ;SWI2C.C: 119: {
  2877                           ;SWI2C.C: 120: RA7 = 1;
  2878  0554  1785               	bsf	5,7
  2879                           
  2880                           ;SWI2C.C: 121: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2881  0555  00A0               	movwf	??_swI2C_ReadByte
  2882  0556                     u3767:	
  2883  0556  0BA0               	decfsz	??_swI2C_ReadByte,f
  2884  0557  2D56               	goto	u3767
  2885                           
  2886                           ;SWI2C.C: 122: dat = dat<<1 |(RA6 & 1 );
  2887  0558  3000               	movlw	0
  2888  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2889  055A  1B05               	btfsc	5,6
  2890  055B  3001               	movlw	1
  2891  055C  3901               	andlw	1
  2892  055D  00A0               	movwf	??_swI2C_ReadByte
  2893  055E  1003               	clrc
  2894  055F  0D22               	rlf	swI2C_ReadByte@dat,w
  2895  0560  0420               	iorwf	??_swI2C_ReadByte,w
  2896  0561  00A2               	movwf	swI2C_ReadByte@dat
  2897  0562  3005               	movlw	5
  2898                           
  2899                           ;SWI2C.C: 125: RA7 = 0;
  2900  0563  1385               	bcf	5,7
  2901                           
  2902                           ;SWI2C.C: 126: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2903  0564  00A0               	movwf	??_swI2C_ReadByte
  2904  0565                     u3777:	
  2905  0565  0BA0               	decfsz	??_swI2C_ReadByte,f
  2906  0566  2D65               	goto	u3777
  2907  0567  3008               	movlw	8
  2908  0568  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0569  0AA3               	incf	swI2C_ReadByte@i,f
  2910  056A  0223               	subwf	swI2C_ReadByte@i,w
  2911  056B  1C03               	skipc
  2912  056C  2D53               	goto	l2611
  2913                           
  2914                           ;SWI2C.C: 127: }
  2915                           ;SWI2C.C: 129: TRISA &=0xbf;;
  2916  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2917  056E  1305               	bcf	5,6	;volatile
  2918                           
  2919                           ;SWI2C.C: 131: RA6 = (Ack) ? 0 : 1;
  2920  056F  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0570  08A1               	movf	swI2C_ReadByte@Ack,f
  2922  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2923  0572  1D03               	btfss	3,2
  2924  0573  2D76               	goto	L9
  2925  0574  1705               	bsf	5,6
  2926  0575  2D77               	goto	u2874
  2927  0576                     L9:	
  2928  0576  1305               	bcf	5,6
  2929  0577                     u2874:	
  2930  0577  3005               	movlw	5
  2931                           
  2932                           ;SWI2C.C: 132: RA7 = 1;
  2933  0578  1785               	bsf	5,7
  2934                           
  2935                           ;SWI2C.C: 133: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2936  0579  00A0               	movwf	??_swI2C_ReadByte
  2937  057A                     u3787:	
  2938  057A  0BA0               	decfsz	??_swI2C_ReadByte,f
  2939  057B  2D7A               	goto	u3787
  2940  057C  3005               	movlw	5
  2941                           
  2942                           ;SWI2C.C: 134: RA7 = 0;
  2943  057D  1283               	bcf	3,5	;RP0=0, select bank0
  2944  057E  1385               	bcf	5,7
  2945                           
  2946                           ;SWI2C.C: 135: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2947  057F  00A0               	movwf	??_swI2C_ReadByte
  2948  0580                     u3797:	
  2949  0580  0BA0               	decfsz	??_swI2C_ReadByte,f
  2950  0581  2D80               	goto	u3797
  2951                           
  2952                           ;SWI2C.C: 136: return dat;
  2953  0582  1283               	bcf	3,5	;RP0=0, select bank0
  2954  0583  0822               	movf	swI2C_ReadByte@dat,w
  2955  0584  0008               	return
  2956  0585                     __end_of_swI2C_ReadByte:	
  2957                           
  2958                           	psect	text875
  2959  0585                     __ptext875:	
  2960 ;; =============== function _swI2C_ReadByte ends ============
  2961                           
  2962                           
  2963 ;; *************** function _swI2C_WriteByte *****************
  2964 ;; Defined at:
  2965 ;;		line 86 in file "SWI2C.C"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  dat             1    wreg     unsigned char 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  dat             1    1[BANK0 ] unsigned char 
  2970 ;;  i               1    2[BANK0 ] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      unsigned char 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 20/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1
  2980 ;;      Params:         0       0       0
  2981 ;;      Locals:         0       2       0
  2982 ;;      Temps:          0       1       0
  2983 ;;      Totals:         0       3       0
  2984 ;;Total ram usage:        3 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    2
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_AccWrite
  2991 ;;		_AccRead
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994  0585                     _swI2C_WriteByte:	
  2995                           
  2996                           ; Regs used in _swI2C_WriteByte: [wreg+status,2+status,0]
  2997                           ;swI2C_WriteByte@dat stored from wreg
  2998  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2999  0586  00A1               	movwf	swI2C_WriteByte@dat
  3000                           
  3001                           ;SWI2C.C: 89: TRISA &=0xbf;;
  3002  0587  1683               	bsf	3,5	;RP0=1, select bank1
  3003  0588  1305               	bcf	5,6	;volatile
  3004                           
  3005                           ;SWI2C.C: 90: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3006  0589  3005               	movlw	5
  3007  058A  1283               	bcf	3,5	;RP0=0, select bank0
  3008  058B  00A0               	movwf	??_swI2C_WriteByte
  3009  058C                     u3807:	
  3010  058C  0BA0               	decfsz	??_swI2C_WriteByte,f
  3011  058D  2D8C               	goto	u3807
  3012                           
  3013                           ;SWI2C.C: 91: for(i=0;i<8;i++)
  3014  058E  1283               	bcf	3,5	;RP0=0, select bank0
  3015  058F  01A2               	clrf	swI2C_WriteByte@i
  3016  0590                     l2606:	
  3017                           
  3018                           ;SWI2C.C: 92: {
  3019                           ;SWI2C.C: 93: RA6 = (dat&0x80) ? 1:0;
  3020  0590  1FA1               	btfss	swI2C_WriteByte@dat,7
  3021  0591  2D95               	goto	u2820
  3022  0592  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0593  1705               	bsf	5,6
  3024  0594  2D97               	goto	u2834
  3025  0595                     u2820:	
  3026  0595  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0596  1305               	bcf	5,6
  3028  0597                     u2834:	
  3029  0597  3005               	movlw	5
  3030                           
  3031                           ;SWI2C.C: 94: dat<<=1;
  3032  0598  1003               	clrc
  3033  0599  0DA1               	rlf	swI2C_WriteByte@dat,f
  3034                           
  3035                           ;SWI2C.C: 95: RA7 = 1;
  3036  059A  1785               	bsf	5,7
  3037                           
  3038                           ;SWI2C.C: 96: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3039  059B  00A0               	movwf	??_swI2C_WriteByte
  3040  059C                     u3817:	
  3041  059C  0BA0               	decfsz	??_swI2C_WriteByte,f
  3042  059D  2D9C               	goto	u3817
  3043  059E  3005               	movlw	5
  3044                           
  3045                           ;SWI2C.C: 97: RA7 = 0;
  3046  059F  1283               	bcf	3,5	;RP0=0, select bank0
  3047  05A0  1385               	bcf	5,7
  3048                           
  3049                           ;SWI2C.C: 98: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3050  05A1  00A0               	movwf	??_swI2C_WriteByte
  3051  05A2                     u3827:	
  3052  05A2  0BA0               	decfsz	??_swI2C_WriteByte,f
  3053  05A3  2DA2               	goto	u3827
  3054  05A4  3008               	movlw	8
  3055  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  3056  05A6  0AA2               	incf	swI2C_WriteByte@i,f
  3057  05A7  0222               	subwf	swI2C_WriteByte@i,w
  3058  05A8  1C03               	skipc
  3059  05A9  2D90               	goto	l2606
  3060                           
  3061                           ;SWI2C.C: 99: }
  3062                           ;SWI2C.C: 101: TRISA |=0x40;;
  3063  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  3064  05AB  1705               	bsf	5,6	;volatile
  3065                           
  3066                           ;SWI2C.C: 102: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3067  05AC  3005               	movlw	5
  3068  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  3069  05AE  00A0               	movwf	??_swI2C_WriteByte
  3070  05AF                     u3837:	
  3071  05AF  0BA0               	decfsz	??_swI2C_WriteByte,f
  3072  05B0  2DAF               	goto	u3837
  3073  05B1  3005               	movlw	5
  3074                           
  3075                           ;SWI2C.C: 103: RA7 = 1;
  3076  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  3077  05B3  1785               	bsf	5,7
  3078                           
  3079                           ;SWI2C.C: 104: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3080  05B4  00A0               	movwf	??_swI2C_WriteByte
  3081  05B5                     u3847:	
  3082  05B5  0BA0               	decfsz	??_swI2C_WriteByte,f
  3083  05B6  2DB5               	goto	u3847
  3084                           
  3085                           ;SWI2C.C: 105: i= RA6;
  3086  05B7  3000               	movlw	0
  3087  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3088  05B9  1B05               	btfsc	5,6
  3089  05BA  3001               	movlw	1
  3090  05BB  00A2               	movwf	swI2C_WriteByte@i
  3091                           
  3092                           ;SWI2C.C: 106: RA7 = 0;
  3093  05BC  1385               	bcf	5,7
  3094                           
  3095                           ;SWI2C.C: 107: TRISA &=0xbf;;
  3096  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  3097  05BE  1305               	bcf	5,6	;volatile
  3098                           
  3099                           ;SWI2C.C: 108: return i;
  3100  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  3101  05C0  0822               	movf	swI2C_WriteByte@i,w
  3102  05C1  0008               	return
  3103  05C2                     __end_of_swI2C_WriteByte:	
  3104                           
  3105                           	psect	text876
  3106  0701                     __ptext876:	
  3107 ;; =============== function _swI2C_WriteByte ends ============
  3108                           
  3109                           
  3110 ;; *************** function _swI2C_Stop *****************
  3111 ;; Defined at:
  3112 ;;		line 35 in file "SWI2C.C"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;		None               void
  3119 ;; Registers used:
  3120 ;;		wreg
  3121 ;; Tracked objects:
  3122 ;;		On entry : 20/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1
  3126 ;;      Params:         0       0       0
  3127 ;;      Locals:         0       0       0
  3128 ;;      Temps:          0       1       0
  3129 ;;      Totals:         0       1       0
  3130 ;;Total ram usage:        1 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    2
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_AccWrite
  3137 ;;		_AccRead
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140  0701                     _swI2C_Stop:	
  3141  0701  3005               	movlw	5
  3142                           
  3143                           ;SWI2C.C: 37: RA6 = 0;
  3144                           
  3145                           ; Regs used in _swI2C_Stop: [wreg]
  3146  0702  1305               	bcf	5,6
  3147                           
  3148                           ;SWI2C.C: 38: RA7 = 1;
  3149  0703  1785               	bsf	5,7
  3150                           
  3151                           ;SWI2C.C: 39: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3152  0704  00A0               	movwf	??_swI2C_Stop
  3153  0705                     u3857:	
  3154  0705  0BA0               	decfsz	??_swI2C_Stop,f
  3155  0706  2F05               	goto	u3857
  3156  0707  3005               	movlw	5
  3157                           
  3158                           ;SWI2C.C: 40: RA6 = 1;
  3159  0708  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0709  1705               	bsf	5,6
  3161                           
  3162                           ;SWI2C.C: 41: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3163  070A  00A0               	movwf	??_swI2C_Stop
  3164  070B                     u3867:	
  3165  070B  0BA0               	decfsz	??_swI2C_Stop,f
  3166  070C  2F0B               	goto	u3867
  3167  070D  0008               	return
  3168  070E                     __end_of_swI2C_Stop:	
  3169                           
  3170                           	psect	text877
  3171  06BE                     __ptext877:	
  3172 ;; =============== function _swI2C_Stop ends ============
  3173                           
  3174                           
  3175 ;; *************** function _swI2C_Start *****************
  3176 ;; Defined at:
  3177 ;;		line 22 in file "SWI2C.C"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;		None               void
  3184 ;; Registers used:
  3185 ;;		wreg
  3186 ;; Tracked objects:
  3187 ;;		On entry : 20/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1
  3191 ;;      Params:         0       0       0
  3192 ;;      Locals:         0       0       0
  3193 ;;      Temps:          0       1       0
  3194 ;;      Totals:         0       1       0
  3195 ;;Total ram usage:        1 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    2
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_AccWrite
  3202 ;;		_AccRead
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205  06BE                     _swI2C_Start:	
  3206  06BE  3005               	movlw	5
  3207                           
  3208                           ;SWI2C.C: 24: RA7 = 1;
  3209                           
  3210                           ; Regs used in _swI2C_Start: [wreg]
  3211  06BF  1785               	bsf	5,7
  3212                           
  3213                           ;SWI2C.C: 26: RA6 = 1;
  3214  06C0  1705               	bsf	5,6
  3215                           
  3216                           ;SWI2C.C: 27: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3217  06C1  00A0               	movwf	??_swI2C_Start
  3218  06C2                     u3877:	
  3219  06C2  0BA0               	decfsz	??_swI2C_Start,f
  3220  06C3  2EC2               	goto	u3877
  3221  06C4  3005               	movlw	5
  3222                           
  3223                           ;SWI2C.C: 28: RA6 = 0;
  3224  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  3225  06C6  1305               	bcf	5,6
  3226                           
  3227                           ;SWI2C.C: 29: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3228  06C7  00A0               	movwf	??_swI2C_Start
  3229  06C8                     u3887:	
  3230  06C8  0BA0               	decfsz	??_swI2C_Start,f
  3231  06C9  2EC8               	goto	u3887
  3232  06CA  3005               	movlw	5
  3233                           
  3234                           ;SWI2C.C: 30: RA7 = 0;
  3235  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3236  06CC  1385               	bcf	5,7
  3237                           
  3238                           ;SWI2C.C: 31: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3239  06CD  00A0               	movwf	??_swI2C_Start
  3240  06CE                     u3897:	
  3241  06CE  0BA0               	decfsz	??_swI2C_Start,f
  3242  06CF  2ECE               	goto	u3897
  3243  06D0  0008               	return
  3244  06D1                     __end_of_swI2C_Start:	
  3245                           
  3246                           	psect	text878
  3247  0625                     __ptext878:	
  3248 ;; =============== function _swI2C_Start ends ============
  3249                           
  3250                           
  3251 ;; *************** function _swI2C_Init *****************
  3252 ;; Defined at:
  3253 ;;		line 8 in file "SWI2C.C"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1
  3267 ;;      Params:         0       0       0
  3268 ;;      Locals:         0       0       0
  3269 ;;      Temps:          0       1       0
  3270 ;;      Totals:         0       1       0
  3271 ;;Total ram usage:        1 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    2
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280  0625                     _swI2C_Init:	
  3281                           
  3282                           ;SWI2C.C: 10: TRISA &=0xbf;;
  3283                           
  3284                           ; Regs used in _swI2C_Init: [wreg]
  3285  0625  1683               	bsf	3,5	;RP0=1, select bank1
  3286  0626  1305               	bcf	5,6	;volatile
  3287                           
  3288                           ;SWI2C.C: 11: TRISA &=0x7f;;
  3289  0627  1385               	bcf	5,7	;volatile
  3290                           
  3291                           ;SWI2C.C: 12: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3292  0628  3005               	movlw	5
  3293  0629  1283               	bcf	3,5	;RP0=0, select bank0
  3294  062A  00A0               	movwf	??_swI2C_Init
  3295  062B                     u3907:	
  3296  062B  0BA0               	decfsz	??_swI2C_Init,f
  3297  062C  2E2B               	goto	u3907
  3298  062D  3005               	movlw	5
  3299                           
  3300                           ;SWI2C.C: 13: RA7 = 1;
  3301  062E  1283               	bcf	3,5	;RP0=0, select bank0
  3302  062F  1785               	bsf	5,7
  3303  0630  1705               	bsf	5,6
  3304                           
  3305                           ;SWI2C.C: 15: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3306  0631  00A0               	movwf	??_swI2C_Init
  3307  0632                     u3917:	
  3308  0632  0BA0               	decfsz	??_swI2C_Init,f
  3309  0633  2E32               	goto	u3917
  3310                           
  3311                           ;SWI2C.C: 16: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3312  0634  3005               	movlw	5
  3313  0635  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0636  00A0               	movwf	??_swI2C_Init
  3315  0637                     u3927:	
  3316  0637  0BA0               	decfsz	??_swI2C_Init,f
  3317  0638  2E37               	goto	u3927
  3318                           
  3319                           ;SWI2C.C: 17: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3320  0639  3005               	movlw	5
  3321  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3322  063B  00A0               	movwf	??_swI2C_Init
  3323  063C                     u3937:	
  3324  063C  0BA0               	decfsz	??_swI2C_Init,f
  3325  063D  2E3C               	goto	u3937
  3326                           
  3327                           ;SWI2C.C: 18: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3328  063E  3005               	movlw	5
  3329  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3330  0640  00A0               	movwf	??_swI2C_Init
  3331  0641                     u3947:	
  3332  0641  0BA0               	decfsz	??_swI2C_Init,f
  3333  0642  2E41               	goto	u3947
  3334  0643  0008               	return
  3335  0644                     __end_of_swI2C_Init:	
  3336                           
  3337                           	psect	text879
  3338  0727                     __ptext879:	
  3339 ;; =============== function _swI2C_Init ends ============
  3340                           
  3341                           
  3342 ;; *************** function _sys_init *****************
  3343 ;; Defined at:
  3344 ;;		line 3 in file "sysinit.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;		None
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;		None               void
  3351 ;; Registers used:
  3352 ;;		wreg
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 20/20
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1
  3358 ;;      Params:         0       0       0
  3359 ;;      Locals:         0       0       0
  3360 ;;      Temps:          0       0       0
  3361 ;;      Totals:         0       0       0
  3362 ;;Total ram usage:        0 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    2
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_main
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371  0727                     _sys_init:	
  3372                           
  3373                           ;sysinit.c: 21: OSCCON = 0B01010001;
  3374                           
  3375                           ; Regs used in _sys_init: [wreg]
  3376  0727  3051               	movlw	81
  3377  0728  1683               	bsf	3,5	;RP0=1, select bank1
  3378  0729  008F               	movwf	15	;volatile
  3379                           
  3380                           ;sysinit.c: 22: _nop();
  3381  072A  0000               	nop
  3382  072B                     l1795:	
  3383                           ;sysinit.c: 28: while(HTS==0);
  3384                           
  3385  072B  1683               	bsf	3,5	;RP0=1, select bank1
  3386  072C  190F               	btfsc	15,2
  3387  072D  0008               	return
  3388  072E  2F2B               	goto	l1795
  3389  072F                     __end_of_sys_init:	
  3390                           
  3391                           	psect	text880
  3392  0692                     __ptext880:	
  3393 ;; =============== function _sys_init ends ============
  3394                           
  3395                           
  3396 ;; *************** function _beep *****************
  3397 ;; Defined at:
  3398 ;;		line 146 in file "smartkey.C"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  delay           1    wreg     unsigned char 
  3401 ;;  rep             1    4[BANK0 ] unsigned char 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  delay           1    5[BANK0 ] unsigned char 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;		None               void
  3406 ;; Registers used:
  3407 ;;		wreg, status,2, status,0, pclath, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 20/0
  3410 ;;		On exit  : 20/0
  3411 ;;		Unchanged: FFFDF/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1
  3413 ;;      Params:         0       1       0
  3414 ;;      Locals:         0       1       0
  3415 ;;      Temps:          0       0       0
  3416 ;;      Totals:         0       2       0
  3417 ;;Total ram usage:        2 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    3
  3420 ;; This function calls:
  3421 ;;		_delay_x10ms
  3422 ;; This function is called by:
  3423 ;;		_main
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426  0692                     _beep:	
  3427                           
  3428                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  3429                           ;beep@delay stored from wreg
  3430  0692  00A5               	movwf	beep@delay
  3431  0693                     l6611:	
  3432                           ;smartkey.C: 147: {
  3433                           ;smartkey.C: 148: while (rep--) {
  3434                           
  3435  0693  03A4               	decf	beep@rep,f
  3436  0694  0824               	movf	beep@rep,w
  3437  0695  3AFF               	xorlw	255
  3438  0696  1903               	btfsc	3,2
  3439  0697  0008               	return
  3440  0698  300C               	movlw	12
  3441                           
  3442                           ;smartkey.C: 149: TMR2ON = 1;
  3443  0699  1512               	bsf	18,2
  3444                           
  3445                           ;smartkey.C: 150: PR2L = 12;
  3446  069A  1683               	bsf	3,5	;RP0=1, select bank1
  3447  069B  0091               	movwf	17	;volatile
  3448                           
  3449                           ;smartkey.C: 151: delay_x10ms(delay);
  3450  069C  1283               	bcf	3,5	;RP0=0, select bank0
  3451  069D  0825               	movf	beep@delay,w
  3452  069E  00A0               	movwf	?_delay_x10ms
  3453  069F  01A1               	clrf	?_delay_x10ms+1
  3454  06A0  26D1               	fcall	_delay_x10ms
  3455  06A1  3014               	movlw	20
  3456                           
  3457                           ;smartkey.C: 153: TMR2ON = 0; RA3 = 0;
  3458  06A2  1112               	bcf	18,2
  3459  06A3  1185               	bcf	5,3
  3460                           
  3461                           ;smartkey.C: 154: delay_x10ms(20);
  3462  06A4  00A0               	movwf	?_delay_x10ms
  3463  06A5  01A1               	clrf	?_delay_x10ms+1
  3464  06A6  26D1               	fcall	_delay_x10ms
  3465  06A7  2E93               	goto	l6611
  3466  06A8                     __end_of_beep:	
  3467                           
  3468                           	psect	text881
  3469  04BC                     __ptext881:	
  3470 ;; =============== function _beep ends ============
  3471                           
  3472                           
  3473 ;; *************** function ___awdiv *****************
  3474 ;; Defined at:
  3475 ;;		line 5 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\awdiv.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  divisor         2    0[BANK0 ] int 
  3478 ;;  dividend        2    2[BANK0 ] int 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  quotient        2    6[BANK0 ] int 
  3481 ;;  sign            1    5[BANK0 ] unsigned char 
  3482 ;;  counter         1    4[BANK0 ] unsigned char 
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  2    0[BANK0 ] int 
  3485 ;; Registers used:
  3486 ;;		wreg, status,2, status,0
  3487 ;; Tracked objects:
  3488 ;;		On entry : 20/0
  3489 ;;		On exit  : 20/0
  3490 ;;		Unchanged: FFFDF/0
  3491 ;; Data sizes:     COMMON   BANK0   BANK1
  3492 ;;      Params:         0       4       0
  3493 ;;      Locals:         0       4       0
  3494 ;;      Temps:          0       0       0
  3495 ;;      Totals:         0       8       0
  3496 ;;Total ram usage:        8 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; Hardware stack levels required when called:    2
  3499 ;; This function calls:
  3500 ;;		Nothing
  3501 ;; This function is called by:
  3502 ;;		_main
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505  04BC                     ___awdiv:	
  3506                           
  3507                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3508  04BC  01A5               	clrf	___awdiv@sign
  3509  04BD  1FA1               	btfss	___awdiv@divisor+1,7
  3510  04BE  2CC6               	goto	l6563
  3511  04BF  09A0               	comf	___awdiv@divisor,f
  3512  04C0  09A1               	comf	___awdiv@divisor+1,f
  3513  04C1  0AA0               	incf	___awdiv@divisor,f
  3514  04C2  1903               	skipnz
  3515  04C3  0AA1               	incf	___awdiv@divisor+1,f
  3516  04C4  01A5               	clrf	___awdiv@sign
  3517  04C5  0AA5               	incf	___awdiv@sign,f
  3518  04C6                     l6563:	
  3519  04C6  1FA3               	btfss	___awdiv@dividend+1,7
  3520  04C7  2CCF               	goto	l6569
  3521  04C8  09A2               	comf	___awdiv@dividend,f
  3522  04C9  09A3               	comf	___awdiv@dividend+1,f
  3523  04CA  0AA2               	incf	___awdiv@dividend,f
  3524  04CB  1903               	skipnz
  3525  04CC  0AA3               	incf	___awdiv@dividend+1,f
  3526  04CD  3001               	movlw	1
  3527  04CE  06A5               	xorwf	___awdiv@sign,f
  3528  04CF                     l6569:	
  3529  04CF  01A6               	clrf	___awdiv@quotient
  3530  04D0  01A7               	clrf	___awdiv@quotient+1
  3531  04D1  0821               	movf	___awdiv@divisor+1,w
  3532  04D2  0420               	iorwf	___awdiv@divisor,w
  3533  04D3  1903               	skipnz
  3534  04D4  2CF4               	goto	l6591
  3535  04D5  01A4               	clrf	___awdiv@counter
  3536  04D6                     L10:	
  3537  04D6  0AA4               	incf	___awdiv@counter,f
  3538  04D7  1BA1               	btfsc	___awdiv@divisor+1,7
  3539  04D8  2CDD               	goto	l6579
  3540  04D9  1003               	clrc
  3541  04DA  0DA0               	rlf	___awdiv@divisor,f
  3542  04DB  0DA1               	rlf	___awdiv@divisor+1,f
  3543  04DC  2CD6               	goto	L10
  3544  04DD                     l6579:	
  3545  04DD  1003               	clrc
  3546  04DE  0DA6               	rlf	___awdiv@quotient,f
  3547  04DF  0DA7               	rlf	___awdiv@quotient+1,f
  3548  04E0  0821               	movf	___awdiv@divisor+1,w
  3549  04E1  0223               	subwf	___awdiv@dividend+1,w
  3550  04E2  1D03               	skipz
  3551  04E3  2CE6               	goto	u2775
  3552  04E4  0820               	movf	___awdiv@divisor,w
  3553  04E5  0222               	subwf	___awdiv@dividend,w
  3554  04E6                     u2775:	
  3555  04E6  1C03               	skipc
  3556  04E7  2CF0               	goto	L11
  3557  04E8  0820               	movf	___awdiv@divisor,w
  3558  04E9  02A2               	subwf	___awdiv@dividend,f
  3559  04EA  0821               	movf	___awdiv@divisor+1,w
  3560  04EB  1C03               	skipc
  3561  04EC  03A3               	decf	___awdiv@dividend+1,f
  3562  04ED  02A3               	subwf	___awdiv@dividend+1,f
  3563  04EE  1426               	bsf	___awdiv@quotient,0
  3564  04EF  1003               	clrc
  3565  04F0                     L11:	
  3566  04F0  0CA1               	rrf	___awdiv@divisor+1,f
  3567  04F1  0CA0               	rrf	___awdiv@divisor,f
  3568  04F2  0BA4               	decfsz	___awdiv@counter,f
  3569  04F3  2CDD               	goto	l6579
  3570  04F4                     l6591:	
  3571  04F4  0825               	movf	___awdiv@sign,w
  3572  04F5  1903               	btfsc	3,2
  3573  04F6  2CFC               	goto	l6595
  3574  04F7  09A6               	comf	___awdiv@quotient,f
  3575  04F8  09A7               	comf	___awdiv@quotient+1,f
  3576  04F9  0AA6               	incf	___awdiv@quotient,f
  3577  04FA  1903               	skipnz
  3578  04FB  0AA7               	incf	___awdiv@quotient+1,f
  3579  04FC                     l6595:	
  3580  04FC  0827               	movf	___awdiv@quotient+1,w
  3581  04FD  00A1               	movwf	?___awdiv+1
  3582  04FE  0826               	movf	___awdiv@quotient,w
  3583  04FF  00A0               	movwf	?___awdiv
  3584  0500  0008               	return
  3585  0501                     __end_of___awdiv:	
  3586                           
  3587                           	psect	text882
  3588  0644                     __ptext882:	
  3589 ;; =============== function ___awdiv ends ============
  3590                           
  3591                           
  3592 ;; *************** function _int_init *****************
  3593 ;; Defined at:
  3594 ;;		line 83 in file "sysinit.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  tmp             1    0        unsigned char 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;		None               void
  3601 ;; Registers used:
  3602 ;;		wreg, status,2
  3603 ;; Tracked objects:
  3604 ;;		On entry : 20/0
  3605 ;;		On exit  : 20/0
  3606 ;;		Unchanged: FFFDF/0
  3607 ;; Data sizes:     COMMON   BANK0   BANK1
  3608 ;;      Params:         0       0       0
  3609 ;;      Locals:         0       0       0
  3610 ;;      Temps:          0       0       0
  3611 ;;      Totals:         0       0       0
  3612 ;;Total ram usage:        0 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    2
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_main
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621  0644                     _int_init:	
  3622                           
  3623                           ;sysinit.c: 88: INTCON = 0B00000000;
  3624                           
  3625                           ; Regs used in _int_init: [wreg+status,2]
  3626  0644  018B               	clrf	11	;volatile
  3627                           
  3628                           ;sysinit.c: 89: PIE1 = 0B00000000;
  3629  0645  1683               	bsf	3,5	;RP0=1, select bank1
  3630  0646  018C               	clrf	12	;volatile
  3631                           
  3632                           ;sysinit.c: 90: PIR1 = 0B00000000;
  3633  0647  1283               	bcf	3,5	;RP0=0, select bank0
  3634  0648  018C               	clrf	12	;volatile
  3635                           
  3636                           ;sysinit.c: 92: IOCA5 = 1;
  3637  0649  1683               	bsf	3,5	;RP0=1, select bank1
  3638  064A  1696               	bsf	22,5
  3639                           
  3640                           ;sysinit.c: 93: tmp = PORTA;
  3641  064B  1283               	bcf	3,5	;RP0=0, select bank0
  3642  064C  0805               	movf	5,w	;volatile
  3643                           
  3644                           ;sysinit.c: 94: PAIF = 0;
  3645  064D  100B               	bcf	11,0
  3646                           
  3647                           ;sysinit.c: 95: PAIE = 0;
  3648  064E  118B               	bcf	11,3
  3649                           
  3650                           ;sysinit.c: 98: INTEDG = 0;
  3651  064F  1683               	bsf	3,5	;RP0=1, select bank1
  3652  0650  1301               	bcf	1,6
  3653                           
  3654                           ;sysinit.c: 99: INTF = 0;
  3655  0651  108B               	bcf	11,1
  3656                           
  3657                           ;sysinit.c: 100: INTE = 1;
  3658  0652  160B               	bsf	11,4
  3659                           
  3660                           ;sysinit.c: 102: TMR2IF = 0;
  3661  0653  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0654  108C               	bcf	12,1
  3663                           
  3664                           ;sysinit.c: 103: TMR2IE = 1;
  3665  0655  1683               	bsf	3,5	;RP0=1, select bank1
  3666  0656  148C               	bsf	12,1
  3667                           
  3668                           ;sysinit.c: 104: TMR2ON = 0;
  3669  0657  1283               	bcf	3,5	;RP0=0, select bank0
  3670  0658  1112               	bcf	18,2
  3671                           
  3672                           ;sysinit.c: 110: T0IF = 0;
  3673  0659  110B               	bcf	11,2
  3674                           
  3675                           ;sysinit.c: 111: T0IE = 1;
  3676  065A  168B               	bsf	11,5
  3677                           
  3678                           ;sysinit.c: 112: T0ON = 1;
  3679  065B  159F               	bsf	31,3
  3680                           
  3681                           ;sysinit.c: 114: PEIE = 1;
  3682  065C  170B               	bsf	11,6
  3683                           
  3684                           ;sysinit.c: 116: GIE = 1;
  3685  065D  178B               	bsf	11,7
  3686  065E  0008               	return
  3687  065F                     __end_of_int_init:	
  3688                           
  3689                           	psect	text883
  3690  06E4                     __ptext883:	
  3691 ;; =============== function _int_init ends ============
  3692                           
  3693                           
  3694 ;; *************** function _timer_init *****************
  3695 ;; Defined at:
  3696 ;;		line 51 in file "sysinit.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;		None               void
  3703 ;; Registers used:
  3704 ;;		wreg, status,2
  3705 ;; Tracked objects:
  3706 ;;		On entry : 20/0
  3707 ;;		On exit  : 20/0
  3708 ;;		Unchanged: FFFDF/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1
  3710 ;;      Params:         0       0       0
  3711 ;;      Locals:         0       0       0
  3712 ;;      Temps:          0       0       0
  3713 ;;      Totals:         0       0       0
  3714 ;;Total ram usage:        0 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    2
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_main
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723  06E4                     _timer_init:	
  3724                           
  3725                           ;sysinit.c: 60: T0CON0 = 0B00000000;
  3726                           
  3727                           ; Regs used in _timer_init: [wreg+status,2]
  3728  06E4  019F               	clrf	31	;volatile
  3729                           
  3730                           ;sysinit.c: 61: OPTION = 0B00000111;
  3731  06E5  3007               	movlw	7
  3732  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  3733  06E7  0081               	movwf	1	;volatile
  3734                           
  3735                           ;sysinit.c: 62: TMR0 = 179;
  3736  06E8  30B3               	movlw	179
  3737  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3738  06EA  0081               	movwf	1	;volatile
  3739                           
  3740                           ;sysinit.c: 64: TMR2H = 0;
  3741  06EB  0193               	clrf	19	;volatile
  3742                           
  3743                           ;sysinit.c: 65: TMR2L = 0;
  3744  06EC  0191               	clrf	17	;volatile
  3745                           
  3746                           ;sysinit.c: 66: PR2H = 0;
  3747  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  3748  06EE  0192               	clrf	18	;volatile
  3749                           
  3750                           ;sysinit.c: 67: PR2L =0;
  3751  06EF  0191               	clrf	17	;volatile
  3752                           
  3753                           ;sysinit.c: 68: T2CON0 = 0B00101001;
  3754  06F0  3029               	movlw	41
  3755  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  3756  06F2  0092               	movwf	18	;volatile
  3757  06F3  0008               	return
  3758  06F4                     __end_of_timer_init:	
  3759                           
  3760                           	psect	text884
  3761  06A8                     __ptext884:	
  3762 ;; =============== function _timer_init ends ============
  3763                           
  3764                           
  3765 ;; *************** function _gpio_init *****************
  3766 ;; Defined at:
  3767 ;;		line 32 in file "sysinit.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;		None               void
  3774 ;; Registers used:
  3775 ;;		wreg, status,2
  3776 ;; Tracked objects:
  3777 ;;		On entry : 20/20
  3778 ;;		On exit  : 20/0
  3779 ;;		Unchanged: FFFDF/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1
  3781 ;;      Params:         0       0       0
  3782 ;;      Locals:         0       0       0
  3783 ;;      Temps:          0       0       0
  3784 ;;      Totals:         0       0       0
  3785 ;;Total ram usage:        0 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; Hardware stack levels required when called:    2
  3788 ;; This function calls:
  3789 ;;		Nothing
  3790 ;; This function is called by:
  3791 ;;		_main
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794  06A8                     _gpio_init:	
  3795                           
  3796                           ;sysinit.c: 34: PORTA = 0B00000000;
  3797                           
  3798                           ; Regs used in _gpio_init: [wreg+status,2]
  3799  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  3800  06A9  0185               	clrf	5	;volatile
  3801                           
  3802                           ;sysinit.c: 35: TRISA = 0B00110111;
  3803  06AA  3037               	movlw	55
  3804  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  3805  06AC  0085               	movwf	5	;volatile
  3806                           
  3807                           ;sysinit.c: 36: WPUA = 0B11000000;
  3808  06AD  30C0               	movlw	192
  3809  06AE  0095               	movwf	21	;volatile
  3810                           
  3811                           ;sysinit.c: 38: PORTC = 0B00000000;
  3812  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  3813  06B0  0187               	clrf	7	;volatile
  3814                           
  3815                           ;sysinit.c: 39: TRISC = 0B11111100;
  3816  06B1  30FC               	movlw	252
  3817  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  3818  06B3  0087               	movwf	7	;volatile
  3819                           
  3820                           ;sysinit.c: 40: WPUC = 0B00000000;
  3821  06B4  0193               	clrf	19	;volatile
  3822                           
  3823                           ;sysinit.c: 42: PSRCA = 0B11111111;
  3824  06B5  30FF               	movlw	255
  3825  06B6  0088               	movwf	8	;volatile
  3826                           
  3827                           ;sysinit.c: 43: PSRCC = 0B11111111;
  3828  06B7  0094               	movwf	20	;volatile
  3829                           
  3830                           ;sysinit.c: 44: PSINKA = 0B11111111;
  3831  06B8  0097               	movwf	23	;volatile
  3832                           
  3833                           ;sysinit.c: 45: PSINKC = 0B11111111;
  3834  06B9  009F               	movwf	31	;volatile
  3835                           
  3836                           ;sysinit.c: 47: MSCON = 0B00110000;
  3837  06BA  3030               	movlw	48
  3838  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3839  06BC  009B               	movwf	27	;volatile
  3840  06BD  0008               	return
  3841  06BE                     __end_of_gpio_init:	
  3842                           
  3843                           	psect	text885
  3844  0501                     __ptext885:	
  3845 ;; =============== function _gpio_init ends ============
  3846                           
  3847                           
  3848 ;; *************** function _compe *****************
  3849 ;; Defined at:
  3850 ;;		line 190 in file "smartkey.C"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  a               1    wreg     char 
  3853 ;;  b               1    0[BANK0 ] char 
  3854 ;;  dt              1    1[BANK0 ] char 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  a               1    7[BANK0 ] char 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      unsigned char 
  3859 ;; Registers used:
  3860 ;;		wreg
  3861 ;; Tracked objects:
  3862 ;;		On entry : 20/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: FFE00/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1
  3866 ;;      Params:         0       2       0
  3867 ;;      Locals:         0       1       0
  3868 ;;      Temps:          0       5       0
  3869 ;;      Totals:         0       8       0
  3870 ;;Total ram usage:        8 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    2
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_main
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879  0501                     _compe:	
  3880                           
  3881                           ; Regs used in _compe: [wreg]
  3882                           ;compe@a stored from wreg
  3883  0501  00A7               	movwf	compe@a
  3884                           
  3885                           ;smartkey.C: 192: if (a > b) {
  3886  0502  0820               	movf	compe@b,w
  3887  0503  3A80               	xorlw	128
  3888  0504  00A2               	movwf	??_compe
  3889  0505  0827               	movf	compe@a,w
  3890  0506  3A80               	xorlw	128
  3891  0507  02A2               	subwf	??_compe,f
  3892  0508  1803               	skipnc
  3893  0509  2D2D               	goto	l6481
  3894                           
  3895                           ;smartkey.C: 193: if ((a - b) <= dt) return 1;
  3896  050A  0820               	movf	compe@b,w
  3897  050B  0227               	subwf	compe@a,w
  3898  050C  00A2               	movwf	??_compe
  3899  050D  01A3               	clrf	??_compe+1
  3900  050E  1C03               	skipc
  3901  050F  03A3               	decf	??_compe+1,f
  3902  0510  1BA7               	btfsc	compe@a,7
  3903  0511  03A3               	decf	??_compe+1,f
  3904  0512  1BA0               	btfsc	compe@b,7
  3905  0513  0AA3               	incf	??_compe+1,f
  3906  0514  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0515  253A               	fcall	PL3	;call to abstracted procedure
  3908  0516  1D03               	skipz
  3909  0517  2D1A               	goto	u2685
  3910  0518  0822               	movf	??_compe,w
  3911  0519  0224               	subwf	??_compe+2,w
  3912  051A                     u2685:	
  3913  051A  1C03               	skipc
  3914  051B  3400               	retlw	0
  3915  051C  3401               	retlw	1
  3916  051D                     L12:	
  3917                           ;smartkey.C: 197: if ((b - a) <= dt) return 1;
  3918                           
  3919  051D  0220               	subwf	compe@b,w
  3920  051E  00A2               	movwf	??_compe
  3921  051F  01A3               	clrf	??_compe+1
  3922  0520  1C03               	skipc
  3923  0521  03A3               	decf	??_compe+1,f
  3924  0522  1BA0               	btfsc	compe@b,7
  3925  0523  03A3               	decf	??_compe+1,f
  3926  0524  1BA7               	btfsc	compe@a,7
  3927  0525  0AA3               	incf	??_compe+1,f
  3928  0526  1283               	bcf	3,5	;RP0=0, select bank0
  3929  0527  253A               	fcall	PL3	;call to abstracted procedure
  3930  0528  1D03               	skipz
  3931  0529  2D1A               	goto	u2685
  3932  052A  0822               	movf	??_compe,w
  3933  052B  0224               	subwf	??_compe+2,w
  3934  052C  2D1A               	goto	u2685
  3935  052D                     l6481:	
  3936                           ;smartkey.C: 194: else return 0;
  3937                           
  3938                           
  3939                           ;smartkey.C: 196: else if (a < b) {
  3940  052D  0827               	movf	compe@a,w
  3941  052E  3A80               	xorlw	128
  3942  052F  00A2               	movwf	??_compe
  3943  0530  0820               	movf	compe@b,w
  3944  0531  3A80               	xorlw	128
  3945  0532  02A2               	subwf	??_compe,f
  3946                           
  3947                           ;smartkey.C: 200: else if (a == b) {
  3948  0533  0827               	movf	compe@a,w
  3949  0534  1C03               	btfss	3,0
  3950  0535  2D1D               	goto	L12
  3951  0536  0620               	xorwf	compe@b,w
  3952  0537  1903               	btfsc	3,2
  3953  0538  3401               	retlw	1
  3954  0539  3400               	retlw	0
  3955  053A                     __end_of_compe:	
  3956  053A                     PL3:	
  3957  053A  0821               	movf	compe@dt,w
  3958  053B  00A4               	movwf	??_compe+2
  3959  053C  01A5               	clrf	??_compe+3
  3960  053D  1BA4               	btfsc	??_compe+2,7
  3961  053E  03A5               	decf	??_compe+3,f
  3962  053F  0825               	movf	??_compe+3,w
  3963  0540  3A80               	xorlw	128
  3964  0541  00A6               	movwf	??_compe+4
  3965  0542  0823               	movf	??_compe+1,w
  3966  0543  3A80               	xorlw	128
  3967  0544  0226               	subwf	??_compe+4,w
  3968  0545  0008               	return
  3969                           
  3970                           	psect	text886
  3971  071B                     __ptext886:	
  3972 ;; =============== function _compe ends ============
  3973                           
  3974                           
  3975 ;; *************** function _setState *****************
  3976 ;; Defined at:
  3977 ;;		line 184 in file "smartkey.C"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  stt             1    wreg     unsigned char 
  3980 ;;  _tOut           2    0[BANK0 ] unsigned int 
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;  stt             1    2[BANK0 ] unsigned char 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;		None               void
  3985 ;; Registers used:
  3986 ;;		wreg, status,2
  3987 ;; Tracked objects:
  3988 ;;		On entry : 20/0
  3989 ;;		On exit  : 20/0
  3990 ;;		Unchanged: FFFDF/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1
  3992 ;;      Params:         0       2       0
  3993 ;;      Locals:         0       1       0
  3994 ;;      Temps:          0       0       0
  3995 ;;      Totals:         0       3       0
  3996 ;;Total ram usage:        3 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    2
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_main
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005  071B                     _setState:	
  4006                           
  4007                           ; Regs used in _setState: [wreg+status,2]
  4008                           ;setState@stt stored from wreg
  4009  071B  00A2               	movwf	setState@stt
  4010                           
  4011                           ;smartkey.C: 185: mtOldState = mtState;
  4012  071C  0874               	movf	_mtState,w
  4013  071D  00C8               	movwf	_mtOldState
  4014                           
  4015                           ;smartkey.C: 186: mtState = stt;
  4016  071E  0822               	movf	setState@stt,w
  4017  071F  00F4               	movwf	_mtState
  4018                           
  4019                           ;smartkey.C: 187: timeTick = 0;
  4020  0720  01F0               	clrf	_timeTick
  4021  0721  01F1               	clrf	_timeTick+1
  4022                           
  4023                           ;smartkey.C: 188: timeOut = _tOut;
  4024  0722  0821               	movf	setState@_tOut+1,w
  4025  0723  00C6               	movwf	_timeOut+1
  4026  0724  0820               	movf	setState@_tOut,w
  4027  0725  00C5               	movwf	_timeOut
  4028  0726  0008               	return
  4029  0727                     __end_of_setState:	
  4030                           
  4031                           	psect	text887
  4032  0742                     __ptext887:	
  4033 ;; =============== function _setState ends ============
  4034                           
  4035                           
  4036 ;; *************** function _beepOn *****************
  4037 ;; Defined at:
  4038 ;;		line 142 in file "smartkey.C"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;		None
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;		None               void
  4045 ;; Registers used:
  4046 ;;		None
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/20
  4049 ;;		On exit  : 20/20
  4050 ;;		Unchanged: FFFDF/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1
  4052 ;;      Params:         0       0       0
  4053 ;;      Locals:         0       0       0
  4054 ;;      Temps:          0       0       0
  4055 ;;      Totals:         0       0       0
  4056 ;;Total ram usage:        0 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:    2
  4059 ;; This function calls:
  4060 ;;		Nothing
  4061 ;; This function is called by:
  4062 ;;		_main
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065  0742                     _beepOn:	
  4066                           
  4067                           ;smartkey.C: 143: TMR2ON = 1;
  4068                           
  4069                           ; Regs used in _beepOn: []
  4070  0742  1283               	bcf	3,5	;RP0=0, select bank0
  4071  0743  1512               	bsf	18,2
  4072                           
  4073                           ;smartkey.C: 144: TRISA &= 0xf7;
  4074  0744  1683               	bsf	3,5	;RP0=1, select bank1
  4075  0745  1185               	bcf	5,3	;volatile
  4076  0746  0008               	return
  4077  0747                     __end_of_beepOn:	
  4078                           
  4079                           	psect	text888
  4080  0737                     __ptext888:	
  4081 ;; =============== function _beepOn ends ============
  4082                           
  4083                           
  4084 ;; *************** function _beepOff *****************
  4085 ;; Defined at:
  4086 ;;		line 139 in file "smartkey.C"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;		None               void
  4093 ;; Registers used:
  4094 ;;		None
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 20/20
  4098 ;;		Unchanged: FFFDF/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1
  4100 ;;      Params:         0       0       0
  4101 ;;      Locals:         0       0       0
  4102 ;;      Temps:          0       0       0
  4103 ;;      Totals:         0       0       0
  4104 ;;Total ram usage:        0 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    2
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_main
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113  0737                     _beepOff:	
  4114                           
  4115                           ;smartkey.C: 140: TMR2ON = 0; RA3 = 0; TRISA |= 0x08;
  4116                           
  4117                           ; Regs used in _beepOff: []
  4118  0737  1283               	bcf	3,5	;RP0=0, select bank0
  4119  0738  1112               	bcf	18,2
  4120  0739  1185               	bcf	5,3
  4121  073A  1683               	bsf	3,5	;RP0=1, select bank1
  4122  073B  1585               	bsf	5,3	;volatile
  4123  073C  0008               	return
  4124  073D                     __end_of_beepOff:	
  4125                           
  4126                           	psect	text889
  4127  06D1                     __ptext889:	
  4128 ;; =============== function _beepOff ends ============
  4129                           
  4130                           
  4131 ;; *************** function _delay_x10ms *****************
  4132 ;; Defined at:
  4133 ;;		line 134 in file "smartkey.C"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  t               2    0[BANK0 ] unsigned int 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  set             2    2[BANK0 ] unsigned int 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;		None               void
  4140 ;; Registers used:
  4141 ;;		wreg
  4142 ;; Tracked objects:
  4143 ;;		On entry : 20/0
  4144 ;;		On exit  : 20/0
  4145 ;;		Unchanged: FFFDF/0
  4146 ;; Data sizes:     COMMON   BANK0   BANK1
  4147 ;;      Params:         0       2       0
  4148 ;;      Locals:         0       2       0
  4149 ;;      Temps:          0       0       0
  4150 ;;      Totals:         0       4       0
  4151 ;;Total ram usage:        4 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    2
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_beep
  4158 ;;		_main
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161  06D1                     _delay_x10ms:	
  4162                           
  4163                           ;smartkey.C: 135: unsigned int set = t + timeTick;
  4164                           
  4165                           ; Regs used in _delay_x10ms: [wreg]
  4166  06D1  0821               	movf	delay_x10ms@t+1,w
  4167  06D2  00A3               	movwf	delay_x10ms@set+1
  4168  06D3  0820               	movf	delay_x10ms@t,w
  4169  06D4  00A2               	movwf	delay_x10ms@set
  4170  06D5  0870               	movf	_timeTick,w
  4171  06D6  07A2               	addwf	delay_x10ms@set,f
  4172  06D7  1803               	skipnc
  4173  06D8  0AA3               	incf	delay_x10ms@set+1,f
  4174  06D9  0871               	movf	_timeTick+1,w
  4175  06DA  07A3               	addwf	delay_x10ms@set+1,f
  4176  06DB                     l6455:	
  4177                           ;smartkey.C: 136: while (timeTick < set);
  4178                           
  4179  06DB  0823               	movf	delay_x10ms@set+1,w
  4180  06DC  0271               	subwf	_timeTick+1,w
  4181  06DD  1D03               	skipz
  4182  06DE  2EE1               	goto	u2655
  4183  06DF  0822               	movf	delay_x10ms@set,w
  4184  06E0  0270               	subwf	_timeTick,w
  4185  06E1                     u2655:	
  4186  06E1  1803               	btfsc	3,0
  4187  06E2  0008               	return
  4188  06E3  2EDB               	goto	l6455
  4189  06E4                     __end_of_delay_x10ms:	
  4190                           
  4191                           	psect	text890
  4192  065F                     __ptext890:	
  4193 ;; =============== function _delay_x10ms ends ============
  4194                           
  4195                           
  4196 ;; *************** function _WRITE_EEPROM *****************
  4197 ;; Defined at:
  4198 ;;		line 172 in file "smartkey.C"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  EEAddr          1    wreg     unsigned char 
  4201 ;;  EEData          1    0[BANK0 ] unsigned char 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  EEAddr          1    1[BANK0 ] unsigned char 
  4204 ;; Return value:  Size  Location     Type
  4205 ;;		None               void
  4206 ;; Registers used:
  4207 ;;		wreg
  4208 ;; Tracked objects:
  4209 ;;		On entry : 20/0
  4210 ;;		On exit  : 20/20
  4211 ;;		Unchanged: FFE00/0
  4212 ;; Data sizes:     COMMON   BANK0   BANK1
  4213 ;;      Params:         0       1       0
  4214 ;;      Locals:         0       1       0
  4215 ;;      Temps:          0       0       0
  4216 ;;      Totals:         0       2       0
  4217 ;;Total ram usage:        2 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; Hardware stack levels required when called:    2
  4220 ;; This function calls:
  4221 ;;		Nothing
  4222 ;; This function is called by:
  4223 ;;		_main
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226  065F                     _WRITE_EEPROM:	
  4227                           
  4228                           ; Regs used in _WRITE_EEPROM: [wreg]
  4229                           ;WRITE_EEPROM@EEAddr stored from wreg
  4230  065F  00A1               	movwf	WRITE_EEPROM@EEAddr
  4231                           
  4232                           ;smartkey.C: 173: GIE = 0;
  4233  0660  138B               	bcf	11,7
  4234  0661                     l870:	
  4235                           ;smartkey.C: 174: while (GIE) asm("clrwdt");
  4236                           
  4237  0661  1F8B               	btfss	11,7
  4238  0662  2E65               	goto	l6447
  4239  0663  0064               	clrwdt	;#
  4240  0664  2E61               	goto	l870
  4241  0665                     l6447:	
  4242                           
  4243                           ;smartkey.C: 175: EEADR = EEAddr;
  4244  0665  1283               	bcf	3,5	;RP0=0, select bank0
  4245  0666  0821               	movf	WRITE_EEPROM@EEAddr,w
  4246  0667  1683               	bsf	3,5	;RP0=1, select bank1
  4247  0668  009B               	movwf	27	;volatile
  4248                           
  4249                           ;smartkey.C: 176: EEDAT = EEData;
  4250  0669  1283               	bcf	3,5	;RP0=0, select bank0
  4251  066A  0820               	movf	WRITE_EEPROM@EEData,w
  4252  066B  1683               	bsf	3,5	;RP0=1, select bank1
  4253  066C  009A               	movwf	26	;volatile
  4254  066D  3034               	movlw	52
  4255                           
  4256                           ;smartkey.C: 177: EEIF = 0;
  4257  066E  1283               	bcf	3,5	;RP0=0, select bank0
  4258  066F  138C               	bcf	12,7
  4259                           
  4260                           ;smartkey.C: 178: EECON1 = 0x34;
  4261  0670  1683               	bsf	3,5	;RP0=1, select bank1
  4262  0671  009C               	movwf	28	;volatile
  4263                           
  4264                           ;smartkey.C: 179: WR = 1;
  4265  0672  141D               	bsf	29,0
  4266  0673                     l873:	
  4267                           ;smartkey.C: 180: while (WR) asm("clrwdt");
  4268                           
  4269  0673  1683               	bsf	3,5	;RP0=1, select bank1
  4270  0674  1C1D               	btfss	29,0
  4271  0675  2E78               	goto	l875
  4272  0676  0064               	clrwdt	;#
  4273  0677  2E73               	goto	l873
  4274  0678                     l875:	
  4275                           
  4276                           ;smartkey.C: 181: GIE = 1;
  4277  0678  178B               	bsf	11,7
  4278  0679  0008               	return
  4279  067A                     __end_of_WRITE_EEPROM:	
  4280                           
  4281                           	psect	text891
  4282  070E                     __ptext891:	
  4283 ;; =============== function _WRITE_EEPROM ends ============
  4284                           
  4285                           
  4286 ;; *************** function _READ_EEPROM *****************
  4287 ;; Defined at:
  4288 ;;		line 162 in file "smartkey.C"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  EEAddr          1    wreg     unsigned char 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  EEAddr          1    0[BANK0 ] unsigned char 
  4293 ;;  ReEepromData    1    1[BANK0 ] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      unsigned char 
  4296 ;; Registers used:
  4297 ;;		wreg
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 20/0
  4301 ;;		Unchanged: FFFDF/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1
  4303 ;;      Params:         0       0       0
  4304 ;;      Locals:         0       2       0
  4305 ;;      Temps:          0       0       0
  4306 ;;      Totals:         0       2       0
  4307 ;;Total ram usage:        2 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    2
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_main
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316  070E                     _READ_EEPROM:	
  4317                           
  4318                           ; Regs used in _READ_EEPROM: [wreg]
  4319                           ;READ_EEPROM@EEAddr stored from wreg
  4320  070E  1283               	bcf	3,5	;RP0=0, select bank0
  4321  070F  00A0               	movwf	READ_EEPROM@EEAddr
  4322                           
  4323                           ;smartkey.C: 163: unsigned char ReEepromData;
  4324                           ;smartkey.C: 164: EEADR = EEAddr;
  4325  0710  1683               	bsf	3,5	;RP0=1, select bank1
  4326  0711  009B               	movwf	27	;volatile
  4327                           
  4328                           ;smartkey.C: 165: RD = 1;
  4329  0712  141C               	bsf	28,0
  4330                           
  4331                           ;smartkey.C: 166: ReEepromData = EEDAT;
  4332  0713  081A               	movf	26,w	;volatile
  4333  0714  1283               	bcf	3,5	;RP0=0, select bank0
  4334  0715  00A1               	movwf	READ_EEPROM@ReEepromData
  4335                           
  4336                           ;smartkey.C: 167: RD = 0;
  4337  0716  1683               	bsf	3,5	;RP0=1, select bank1
  4338  0717  101C               	bcf	28,0
  4339                           
  4340                           ;smartkey.C: 168: return ReEepromData;
  4341  0718  1283               	bcf	3,5	;RP0=0, select bank0
  4342  0719  0821               	movf	READ_EEPROM@ReEepromData,w
  4343  071A  0008               	return
  4344  071B                     __end_of_READ_EEPROM:	
  4345                           
  4346                           	psect	text892
  4347  0438                     __ptext892:	
  4348 ;; =============== function _READ_EEPROM ends ============
  4349                           
  4350                           
  4351 ;; *************** function _ISR *****************
  4352 ;; Defined at:
  4353 ;;		line 46 in file "smartkey.C"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  tmp             1    4[COMMON] unsigned char 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;		None               void
  4360 ;; Registers used:
  4361 ;;		wreg, status,2, status,0, pclath, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: FFE00/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1
  4367 ;;      Params:         0       0       0
  4368 ;;      Locals:         1       0       0
  4369 ;;      Temps:          2       0       0
  4370 ;;      Totals:         3       0       0
  4371 ;;Total ram usage:        3 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    1
  4374 ;; This function calls:
  4375 ;;		i1_READ_EEPROM
  4376 ;;		i1_WRITE_EEPROM
  4377 ;; This function is called by:
  4378 ;;		Interrupt level 1
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381  0438                     _ISR:	
  4382                           
  4383                           ;smartkey.C: 50: if (PAIE && PAIF) {
  4384  0438  198B               	btfsc	11,3
  4385  0439  1C0B               	btfss	11,0
  4386  043A  2C47               	goto	i1l5491
  4387  043B  1283               	bcf	3,5	;RP0=0, select bank0
  4388  043C  0805               	movf	5,w	;volatile
  4389                           
  4390                           ;smartkey.C: 52: PAIF = 0;
  4391  043D  100B               	bcf	11,0
  4392                           
  4393                           ;smartkey.C: 54: if (RA5) {
  4394  043E  1E85               	btfss	5,5
  4395  043F  2C46               	goto	i1l5489
  4396                           
  4397                           ;smartkey.C: 55: if (RegStatus.bits.b3 == 0) {
  4398  0440  19F2               	btfsc	_RegStatus,3
  4399  0441  2C47               	goto	i1l5491
  4400                           
  4401                           ;smartkey.C: 56: cntCyc = 0;
  4402  0442  01F3               	clrf	_cntCyc
  4403                           
  4404                           ;smartkey.C: 57: cntOff = 0;
  4405  0443  01C7               	clrf	_cntOff
  4406                           
  4407                           ;smartkey.C: 59: RegStatus.bits.b3 = 1;
  4408  0444  15F2               	bsf	_RegStatus,3
  4409  0445  2C47               	goto	i1l5491
  4410  0446                     i1l5489:	
  4411                           
  4412                           ;smartkey.C: 62: else {
  4413                           ;smartkey.C: 63: cntOff = 0;
  4414  0446  01C7               	clrf	_cntOff
  4415  0447                     i1l5491:	
  4416                           
  4417                           ;smartkey.C: 64: }
  4418                           ;smartkey.C: 65: }
  4419                           ;smartkey.C: 67: if (INTE && INTF) {
  4420  0447  1A0B               	btfsc	11,4
  4421  0448  1C8B               	btfss	11,1
  4422  0449  2C5D               	goto	i1l825
  4423                           
  4424                           ;smartkey.C: 68: INTF = 0;
  4425  044A  108B               	bcf	11,1
  4426                           
  4427                           ;smartkey.C: 69: if ( RA2 == 0) {
  4428  044B  1283               	bcf	3,5	;RP0=0, select bank0
  4429  044C  1905               	btfsc	5,2
  4430  044D  2C5D               	goto	i1l825
  4431                           
  4432                           ;smartkey.C: 70: if (timeTick < 32) {
  4433  044E  3000               	movlw	0
  4434  044F  0271               	subwf	_timeTick+1,w
  4435  0450  3020               	movlw	32
  4436  0451  1903               	skipnz
  4437  0452  0270               	subwf	_timeTick,w
  4438  0453  1803               	skipnc
  4439  0454  2C5C               	goto	i1l827
  4440                           
  4441                           ;smartkey.C: 71: tmp = READ_EEPROM(0x3F);
  4442  0455  303F               	movlw	63
  4443  0456  272F               	fcall	i1_READ_EEPROM
  4444  0457  00F9               	movwf	ISR@tmp
  4445                           
  4446                           ;smartkey.C: 72: WRITE_EEPROM(0x3F, tmp + 1);
  4447  0458  0A79               	incf	ISR@tmp,w
  4448  0459  00F5               	movwf	?i1_WRITE_EEPROM
  4449  045A  303F               	movlw	63
  4450  045B  267A               	fcall	i1_WRITE_EEPROM
  4451  045C                     i1l827:	
  4452  045C  2C5C               	goto	i1l827
  4453  045D                     i1l825:	
  4454                           
  4455                           ;smartkey.C: 75: }
  4456                           ;smartkey.C: 76: }
  4457                           ;smartkey.C: 79: if (T0IE && T0IF) {
  4458  045D  1A8B               	btfsc	11,5
  4459  045E  1D0B               	btfss	11,2
  4460  045F  2CAC               	goto	i1l5551
  4461  0460  30B3               	movlw	179
  4462                           
  4463                           ;smartkey.C: 80: T0IF = 0;
  4464  0461  110B               	bcf	11,2
  4465                           
  4466                           ;smartkey.C: 81: TMR0 = 179;
  4467  0462  1283               	bcf	3,5	;RP0=0, select bank0
  4468  0463  0081               	movwf	1	;volatile
  4469                           
  4470                           ;smartkey.C: 87: if ( RegStatus.bits.b3 == 1) {
  4471  0464  1DF2               	btfss	_RegStatus,3
  4472  0465  2C7E               	goto	i1l5531
  4473                           
  4474                           ;smartkey.C: 89: cntCyc++;
  4475  0466  0AF3               	incf	_cntCyc,f
  4476                           
  4477                           ;smartkey.C: 90: if (RA5 == 0) {
  4478  0467  1A85               	btfsc	5,5
  4479  0468  2C7E               	goto	i1l5531
  4480  0469  3010               	movlw	16
  4481                           
  4482                           ;smartkey.C: 92: cntOff++;
  4483  046A  0AC7               	incf	_cntOff,f
  4484                           
  4485                           ;smartkey.C: 94: if (cntOff > 15) {
  4486  046B  0247               	subwf	_cntOff,w
  4487  046C  1C03               	skipc
  4488  046D  2C7E               	goto	i1l5531
  4489  046E  3010               	movlw	16
  4490                           
  4491                           ;smartkey.C: 96: RegStatus.bits.b3 = 0;
  4492  046F  11F2               	bcf	_RegStatus,3
  4493                           
  4494                           ;smartkey.C: 98: if ((cntCyc > 15) && (cntCyc < 50)) {
  4495  0470  0273               	subwf	_cntCyc,w
  4496  0471  3032               	movlw	50
  4497  0472  1C03               	skipc
  4498  0473  2C7A               	goto	L14
  4499  0474  0273               	subwf	_cntCyc,w
  4500  0475  1803               	skipnc
  4501  0476  2C79               	goto	i1l5527
  4502                           
  4503                           ;smartkey.C: 99: RegStatus.bits.b2 =1;
  4504  0477  1572               	bsf	_RegStatus,2
  4505                           
  4506                           ;smartkey.C: 100: } else if (cntCyc >= 50) {
  4507  0478  2C7D               	goto	i1l836
  4508  0479                     i1l5527:	
  4509  0479  3032               	movlw	50
  4510  047A                     L14:	
  4511  047A  0273               	subwf	_cntCyc,w
  4512  047B  1803               	btfsc	3,0
  4513                           
  4514                           ;smartkey.C: 101: RegStatus.bits.b2 =0;
  4515  047C  1172               	bcf	_RegStatus,2
  4516  047D                     i1l836:	
  4517                           
  4518                           ;smartkey.C: 102: }
  4519                           ;smartkey.C: 103: RegStatus.bits.b1 = 1;
  4520  047D  14F2               	bsf	_RegStatus,1
  4521  047E                     i1l5531:	
  4522                           
  4523                           ;smartkey.C: 104: }
  4524                           ;smartkey.C: 105: }
  4525                           ;smartkey.C: 106: }
  4526                           ;smartkey.C: 108: timeTick++;
  4527  047E  0AF0               	incf	_timeTick,f
  4528  047F  1903               	skipnz
  4529  0480  0AF1               	incf	_timeTick+1,f
  4530                           
  4531                           ;smartkey.C: 110: if ((mtState == 4) || (mtState == 3)) {
  4532  0481  0874               	movf	_mtState,w
  4533  0482  3A04               	xorlw	4
  4534  0483  1903               	skipnz
  4535  0484  2C89               	goto	i1l5537
  4536  0485  0874               	movf	_mtState,w
  4537  0486  3A03               	xorlw	3
  4538  0487  1D03               	skipz
  4539  0488  2CAC               	goto	i1l5551
  4540  0489                     i1l5537:	
  4541                           
  4542                           ;smartkey.C: 111: if (timeTick > cntTmp) {
  4543  0489  0871               	movf	_timeTick+1,w
  4544  048A  0244               	subwf	_cntTmp+1,w
  4545  048B  1D03               	skipz
  4546  048C  2C8F               	goto	u151_25
  4547  048D  0870               	movf	_timeTick,w
  4548  048E  0243               	subwf	_cntTmp,w
  4549  048F                     u151_25:	
  4550  048F  1803               	skipnc
  4551  0490  2CAC               	goto	i1l5551
  4552                           
  4553                           ;smartkey.C: 112: cntTmp = timeTick + 38;
  4554  0491  0871               	movf	_timeTick+1,w
  4555  0492  00C4               	movwf	_cntTmp+1
  4556  0493  0870               	movf	_timeTick,w
  4557  0494  00C3               	movwf	_cntTmp
  4558  0495  3026               	movlw	38
  4559  0496  07C3               	addwf	_cntTmp,f
  4560  0497  1803               	skipnc
  4561  0498  0AC4               	incf	_cntTmp+1,f
  4562                           
  4563                           ;smartkey.C: 113: if (cntTmp <= timeOut)
  4564  0499  0844               	movf	_cntTmp+1,w
  4565  049A  0246               	subwf	_timeOut+1,w
  4566  049B  1D03               	skipz
  4567  049C  2C9F               	goto	u152_25
  4568  049D  0843               	movf	_cntTmp,w
  4569  049E  0245               	subwf	_timeOut,w
  4570  049F                     u152_25:	
  4571                           
  4572                           ;smartkey.C: 114: {
  4573                           ;smartkey.C: 115: TMR2IE = 0;
  4574  049F  1683               	bsf	3,5	;RP0=1, select bank1
  4575  04A0  1C03               	skipc
  4576  04A1  2CAD               	goto	L15
  4577  04A2  108C               	bcf	12,1
  4578                           
  4579                           ;smartkey.C: 116: if (PR2L == 20)
  4580  04A3  0811               	movf	17,w	;volatile
  4581  04A4  3A14               	xorlw	20
  4582  04A5  1D03               	skipz
  4583  04A6  2CA9               	goto	i1l5547
  4584                           
  4585                           ;smartkey.C: 117: PR2L = 25;
  4586  04A7  3019               	movlw	25
  4587  04A8  2CAA               	goto	L13
  4588  04A9                     i1l5547:	
  4589                           
  4590                           ;smartkey.C: 118: else
  4591                           ;smartkey.C: 119: PR2L = 20;
  4592  04A9  3014               	movlw	20
  4593  04AA                     L13:	
  4594  04AA  0091               	movwf	17	;volatile
  4595                           
  4596                           ;smartkey.C: 120: TMR2IE = 1;
  4597  04AB  148C               	bsf	12,1
  4598  04AC                     i1l5551:	
  4599                           
  4600                           ;smartkey.C: 121: }
  4601                           ;smartkey.C: 122: }
  4602                           ;smartkey.C: 123: }
  4603                           ;smartkey.C: 124: }
  4604                           ;smartkey.C: 127: if (TMR2IE && TMR2IF)
  4605  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  4606  04AD                     L15:	
  4607  04AD  1C8C               	btfss	12,1
  4608  04AE  2CB5               	goto	i1l846
  4609  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  4610  04B0  1C8C               	btfss	12,1
  4611  04B1  2CB5               	goto	i1l846
  4612  04B2  3008               	movlw	8
  4613                           
  4614                           ;smartkey.C: 128: {
  4615                           ;smartkey.C: 129: TMR2IF = 0;
  4616  04B3  108C               	bcf	12,1
  4617                           
  4618                           ;smartkey.C: 130: RA3 = ~ RA3;
  4619  04B4  0685               	xorwf	5,f
  4620  04B5                     i1l846:	
  4621  04B5  0878               	movf	??_ISR+1,w
  4622  04B6  008A               	movwf	10
  4623  04B7  0E77               	swapf	??_ISR^(0+-128),w
  4624  04B8  0083               	movwf	3
  4625  04B9  0EFE               	swapf	126,f
  4626  04BA  0E7E               	swapf	126,w
  4627  04BB  0009               	retfie
  4628  04BC                     __end_of_ISR:	
  4629                           
  4630                           	psect	intentry
  4631  0004                     __pintentry:	
  4632                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4633                           
  4634  0004                     interrupt_function:	
  4635  007E                     saved_w	set	btemp
  4636  0004  00FE               	movwf	btemp
  4637  0005  0E03               	swapf	3,w
  4638  0006  00F7               	movwf	??_ISR
  4639  0007  080A               	movf	10,w
  4640  0008  00F8               	movwf	??_ISR+1
  4641  0009  2C38               	ljmp	_ISR
  4642                           
  4643                           	psect	text893
  4644  067A                     __ptext893:	
  4645 ;; =============== function _ISR ends ============
  4646                           
  4647                           
  4648 ;; *************** function i1_WRITE_EEPROM *****************
  4649 ;; Defined at:
  4650 ;;		line 172 in file "smartkey.C"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  WRITE_EEPROM    1    wreg     unsigned char 
  4653 ;;  WRITE_EEPROM    1    0[COMMON] unsigned char 
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;  WRITE_EEPROM    1    1[COMMON] unsigned char 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;		None               void
  4658 ;; Registers used:
  4659 ;;		wreg
  4660 ;; Tracked objects:
  4661 ;;		On entry : 20/20
  4662 ;;		On exit  : 20/20
  4663 ;;		Unchanged: FFE00/0
  4664 ;; Data sizes:     COMMON   BANK0   BANK1
  4665 ;;      Params:         1       0       0
  4666 ;;      Locals:         1       0       0
  4667 ;;      Temps:          0       0       0
  4668 ;;      Totals:         2       0       0
  4669 ;;Total ram usage:        2 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; This function calls:
  4672 ;;		Nothing
  4673 ;; This function is called by:
  4674 ;;		_ISR
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677  067A                     i1_WRITE_EEPROM:	
  4678                           
  4679                           ; Regs used in i1_WRITE_EEPROM: [wreg]
  4680                           ;i1WRITE_EEPROM@EEAddr stored from wreg
  4681  067A  00F6               	movwf	i1WRITE_EEPROM@EEAddr
  4682                           
  4683                           ;smartkey.C: 173: GIE = 0;
  4684  067B  138B               	bcf	11,7
  4685  067C                     i1l870:	
  4686                           ;smartkey.C: 174: while (GIE) asm("clrwdt");
  4687                           
  4688  067C  1F8B               	btfss	11,7
  4689  067D  2E80               	goto	i1l5731
  4690  067E  0064               	clrwdt	;#
  4691  067F  2E7C               	goto	i1l870
  4692  0680                     i1l5731:	
  4693                           
  4694                           ;smartkey.C: 175: EEADR = EEAddr;
  4695  0680  0876               	movf	i1WRITE_EEPROM@EEAddr,w
  4696  0681  1683               	bsf	3,5	;RP0=1, select bank1
  4697  0682  009B               	movwf	27	;volatile
  4698                           
  4699                           ;smartkey.C: 176: EEDAT = EEData;
  4700  0683  0875               	movf	i1WRITE_EEPROM@EEData,w
  4701  0684  009A               	movwf	26	;volatile
  4702  0685  3034               	movlw	52
  4703                           
  4704                           ;smartkey.C: 177: EEIF = 0;
  4705  0686  1283               	bcf	3,5	;RP0=0, select bank0
  4706  0687  138C               	bcf	12,7
  4707                           
  4708                           ;smartkey.C: 178: EECON1 = 0x34;
  4709  0688  1683               	bsf	3,5	;RP0=1, select bank1
  4710  0689  009C               	movwf	28	;volatile
  4711                           
  4712                           ;smartkey.C: 179: WR = 1;
  4713  068A  141D               	bsf	29,0
  4714  068B                     i1l873:	
  4715                           ;smartkey.C: 180: while (WR) asm("clrwdt");
  4716                           
  4717  068B  1683               	bsf	3,5	;RP0=1, select bank1
  4718  068C  1C1D               	btfss	29,0
  4719  068D  2E90               	goto	i1l875
  4720  068E  0064               	clrwdt	;#
  4721  068F  2E8B               	goto	i1l873
  4722  0690                     i1l875:	
  4723                           
  4724                           ;smartkey.C: 181: GIE = 1;
  4725  0690  178B               	bsf	11,7
  4726  0691  0008               	return
  4727  0692                     __end_ofi1_WRITE_EEPROM:	
  4728                           
  4729                           	psect	text894
  4730  072F                     __ptext894:	
  4731 ;; =============== function i1_WRITE_EEPROM ends ============
  4732                           
  4733                           
  4734 ;; *************** function i1_READ_EEPROM *****************
  4735 ;; Defined at:
  4736 ;;		line 162 in file "smartkey.C"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  READ_EEPROM     1    wreg     unsigned char 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  READ_EEPROM     1    0[COMMON] unsigned char 
  4741 ;;  READ_EEPROM     1    1[COMMON] unsigned char 
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      unsigned char 
  4744 ;; Registers used:
  4745 ;;		wreg
  4746 ;; Tracked objects:
  4747 ;;		On entry : 20/0
  4748 ;;		On exit  : 20/20
  4749 ;;		Unchanged: FFFDF/0
  4750 ;; Data sizes:     COMMON   BANK0   BANK1
  4751 ;;      Params:         0       0       0
  4752 ;;      Locals:         2       0       0
  4753 ;;      Temps:          0       0       0
  4754 ;;      Totals:         2       0       0
  4755 ;;Total ram usage:        2 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_ISR
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763  072F                     i1_READ_EEPROM:	
  4764                           
  4765                           ; Regs used in i1_READ_EEPROM: [wreg]
  4766                           ;i1READ_EEPROM@EEAddr stored from wreg
  4767  072F  00F5               	movwf	i1READ_EEPROM@EEAddr
  4768                           
  4769                           ;smartkey.C: 163: unsigned char ReEepromData;
  4770                           ;smartkey.C: 164: EEADR = EEAddr;
  4771  0730  1683               	bsf	3,5	;RP0=1, select bank1
  4772  0731  009B               	movwf	27	;volatile
  4773                           
  4774                           ;smartkey.C: 165: RD = 1;
  4775  0732  141C               	bsf	28,0
  4776                           
  4777                           ;smartkey.C: 166: ReEepromData = EEDAT;
  4778  0733  081A               	movf	26,w	;volatile
  4779  0734  00F6               	movwf	i1READ_EEPROM@ReEepromData
  4780                           
  4781                           ;smartkey.C: 167: RD = 0;
  4782  0735  101C               	bcf	28,0
  4783                           
  4784                           ;smartkey.C: 168: return ReEepromData;
  4785  0736  0008               	return
  4786  0737                     __end_ofi1_READ_EEPROM:	
  4787                           
  4788                           	psect	text895
  4789  0000                     __ptext895:	
  4790 ;; =============== function i1_READ_EEPROM ends ============
  4791                           
  4792  007E                     btemp	set	126	;btemp
  4793  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Apr 18 09:52:50 2020

                        pc 0002                         _RD 04E0                         _WR 04E8  
             ___awdiv@sign 0025      __size_of_WRITE_EEPROM 001B                         fsr 0004  
                      _C1R 08CA                        _C2R 08D2                        l903 00D9  
                      l912 011E                        l923 0182                        l907 00E5  
                      l852 0000                        l870 0661                        l926 0194  
                      l855 0000                        l864 0000                        l873 0673  
                      l961 028D                        l929 01C0                        l858 0000  
                      l962 0279                        l867 0000                        l875 0678  
                      l876 0000                        l948 020A                        l958 02A7  
                      l879 0000                        l967 032E                        l895 0055  
                      l978 030B                        _GIE 005F                        _RA2 002A  
                      _RA3 002B                        _RC0 0038                        _RC1 0039  
                      _RA5 002D                        _RA6 002E                        _RA7 002F  
             ?_swI2C_Start 0075                        _HTS 047A                        _ISR 0438  
                      _SR0 0CF6                        _SR1 0CF7                        _VR0 08C0  
                      _VR1 08C1                        _VR2 08C2                        _VR3 08C3  
                      _VRR 08C5                        fsr0 0004                        indf 0000  
           _swI2C_ReadByte 0546                       S7293 073D                       ?_ISR 0075  
                     l1001 041D                       _C1OE 08CD                       _C2OE 08D5  
                     l2600 0000                       _C1ON 08CF                       l1801 0000  
                     l2611 0553                       l1804 0000                       _C2ON 08D7  
                     l2613 0000                       l2606 0590                       l1807 0000  
                     l2608 0000                       l4245 0000                       l2594 0000  
                     l1795 072B                       l7003 0254                       l2597 0000  
                     l7101 0000                       l7021 0000                       l7005 025F  
                     l1798 0000                       l7103 0000                       l7031 0000  
                     l7015 0000                       l7007 0000                       l7201 03CF  
                     l7105 0000                       l7033 0000                       l7017 0000  
                     l7041 029F                       l7211 0000                       l7123 0000  
                     l7107 0000                       l7051 0000                       l7035 0000  
                     l7027 0290                       l7019 0000                       l7043 02A8  
                     l7213 0000                       l7141 0000                       l7133 0000  
                     l7125 0000                       l7109 0000                       l7061 0000  
                     l7053 0000                       l7117 0320                       l7029 0000  
                     l6511 0000                       l7143 0000                       l7231 0417  
                     l7071 02DC                       l7063 0000                       l7055 02C0  
                     l6441 0000                       l6513 0000                       l6505 0000  
                     l6521 0000                       l6601 0000                       l7241 042F  
                     l7225 0000                       l7209 03E4                       l7153 0000  
                     l7145 0000                       l7137 0000                       l7081 0000  
                     l7065 0000                       l7057 0000                       l7049 02B6  
                     l6451 0000                       l6507 0000                       l6515 0000  
                     l6531 0000                       l6523 0000                       l6603 0000  
                     l6611 0693                       l7235 0420                       l7227 0000  
                     l7171 0000                       l7155 0000                       l7139 0000  
                     l7147 0372                       l7091 0000                       l7083 0000  
                     l7075 02E4                       l7067 02D3                       l7059 0000  
                     l6437 0000                       l6445 0000                       l6453 0000  
                     l6461 0000                       l6509 0000                       l6517 0000  
                     l6541 0000                       l6533 0000                       l6525 0000  
                     l6605 0000                       l6613 0000                       l6621 0000  
                     l7229 0000                       l7173 0000                       l7165 0000  
                     l7085 02FA                       l7069 0000                       l6439 0000  
                     l6447 0665                       l6455 06DB                       l6463 0000  
                     l6519 0000                       l6551 0000                       l6543 0000  
                     l6535 0000                       l6527 0000                       l6607 0000  
                     l6615 0000                       l6623 0000                       l6631 0000  
                     l6711 060A                       l7191 0000                       l7175 0000  
                     l7159 0000                       l7079 0000                       l6449 0000  
                     l6457 0000                       l6465 0000                       l6481 052D  
                     l6553 0000                       l6545 0000                       l6537 0000  
                     l6529 0000                       l6561 0000                       l6609 0000  
                     l6617 0000                       l6625 0000                       l6633 0000  
                     l6641 0000                       l6713 0623                       l6705 0000  
                     l7193 0000                       l7185 0000                       l7169 0000  
                     l7089 0000                       l6459 0000                       l6467 0000  
                     l6547 0000                       l6539 0000                       l6571 0000  
                     l6563 04C6                       l6555 0000                       l6619 0000  
                     l6627 0000                       l6635 0000                       l6651 0000  
                     l6643 0000                       l6715 0000                       l7195 03CA  
                     l7179 03AE                       l7099 0312                       l6811 0075  
                     l6803 0000                       l6549 0000                       l6581 0000  
                     l6557 0000                       l6629 0000                       l6637 0000  
                     l6661 0000                       l6653 0000                       l6645 0000  
                     l6709 0621                       l6741 05D5                       l7189 0000  
                     l7197 03CB                       l6901 0195                       l6813 0000  
                     l6805 0000                       l6591 04F4                       l6567 0000  
                     l6663 0000                       l6655 0000                       l6639 0000  
                     l6671 0000                       l7199 0000                       l6911 0000  
                     l6831 0000                       l6823 0000                       l6593 0000  
                     l6585 0000                       l6569 04CF                       l6657 0000  
                     l6649 0000                       l6681 0000                       l6673 0000  
                     l6745 0000                       l6729 0000                       l6905 019F  
                     l6825 0000                       l6833 00A3                       l6817 0000  
                     l6809 0000                       l6595 04FC                       l6579 04DD  
                     l6659 0000                       l6691 0000                       l6683 0000  
                     l6675 0000                       l6667 0000                       l6747 0000  
                     l6739 0000                       l6915 0000                       l6907 01AA  
                     l6843 0000                       l6835 0000                       l6827 0000  
                     l6819 0088                       l6771 0000                       l6589 0000  
                     l6685 0000                       l6669 0000                       l6925 0000  
                     l6917 0000                       l6909 0000                       l6861 00EB  
                     l6853 0000                       l6837 00AA                       l6829 0000  
                     l6781 0000                       l6773 0000                       l6765 0000  
                     l6599 0000                       l6687 0000                       l6679 0000  
                     l6695 0000                       l6951 01F3                       l6943 01E2  
                     l6919 0000                       l6927 01CE                       l6871 0000  
                     l6863 0000                       l6847 0000                       l6839 0000  
                     l6791 0000                       l6783 0000                       l6775 0000  
                     l6767 0000                       l6689 0000                       l6929 01D0  
                     l6873 0130                       l6849 0000                       l6857 00B4  
                     l6793 0000                       l6785 0000                       l6777 0000  
                     l6769 0000                       l6955 0000                       l6963 0203  
                     l6947 0000                       l6939 01DA                       l6883 0167  
                     l6867 00F1                       l6859 00E7                       l6795 0000  
                     l6787 0000                       l6779 0000                       l6973 0219  
                     l6965 0000                       l6957 0000                       l6893 0183  
                     l6877 0000                       l6885 0176                       l6869 0000  
                     l6797 0000                       l6789 0000                       l6991 023A  
                     l6983 022A                       l6975 0000                       l6967 0000  
                     l6959 0000                       l6895 018D                       l6887 017B  
                     l6993 0000                       l6969 0000                       l6977 0227  
                     l6897 0000                       l6889 0000                       l6995 0000  
                     l6987 0000                       l6979 0000                       l6997 024B  
                     l6999 0000                       _EEIF 0067                       _ANS0 08F0  
                     _ANS1 08F1                       _ANS2 08F2                       _ANS3 08F3  
                     _ANS4 08F4                       _ANS5 08F5                       _ANS6 08F6  
                     _ANS7 08F7                       _ANS8 08F8                       _ANS9 08F9  
                     _T0IE 005D                       _T0IF 005A                       _T0ON 00FB  
                     _IOCB 0116                       _PAIE 005B                       _PAIF 0058  
                     _PIE1 008C                       u3435 0337                       u2820 0595  
                     u2655 06E1                       u3375 02B3                       u2834 0597  
                     u3707 0070                       _PEIE 005E                       u2685 051A  
                     u3717 0083                       _INTE 005C                       _INTF 0059  
                     u2775 04E6                       u3807 058C                       u3575 03D6  
                     u3727 00BD                       u3817 059C                       u3737 00D0  
                     u2874 0577                       u3907 062B                       u3827 05A2  
                     u2955 05E2                       u3747 0117                       _PR2H 0092  
                     u3917 0632                       u3837 05AF                       u3757 054F  
                     u3927 0637                       u3847 05B5                       u3767 0556  
                     u3687 001F                       _PR2L 0091                       u3937 063C  
                     u3857 0705                       u3777 0565                       u3697 0039  
                     _PIR1 000C                       u3947 0641                       u3867 070B  
                     u3787 057A                       u3877 06C2                       u3797 0580  
                     u3887 06C8                       u3897 06CE                       _TMR0 0001  
                     _STRA 0CE8                       _STRB 0CE9                       _STRC 0CEA  
                     _STRD 0CEB                       _WREN 0C62                       _WPUA 0095  
                     _WPUB 0115                       _WPUC 0093               ?_READ_EEPROM 0075  
                     _beep 0692            __end_of_AccRead 05ED                       _main 000B  
                     btemp 007E                       start 000A               _WRITE_EEPROM 065F  
                    ??_ISR 0077                      _C1CH0 08C8                      _C1CH1 08C9  
                    _C2CH0 08D0                      _C2CH1 08D1                      ?_beep 0024  
                    _C1SEN 0CF5                      _C2REN 0CF4                      _C1POL 08CC  
                    _C2POL 08D4                      _C1OUT 08CE                      _C2OUT 08D6  
                    ?_main 0075            __end_of___awdiv 0501                      _EEADR 009B  
                    _EEDAT 009A                      _ANS10 08FA                      _ANS11 08FB  
                    _EEPGD 0C67     __end_of_swI2C_ReadByte 0585                      _ANSEL 011E  
             AccWrite@rAdd 0028            ___awdiv@divisor 0020                      _IOCA5 04B5  
                    _IOCB4 08B4                      _IOCB5 08B5                      _IOCB6 08B6  
                    _IOCB7 08B7                      _T1GSS 08D9                      i1l825 045D  
                    i1l827 045C                      i1l836 047D                      i1l870 067C  
                    i1l846 04B5                      i1l873 068B                      i1l867 0000  
                    i1l875 0690                      i1l876 0000            ___awdiv@counter 0024  
                    _MSCON 001B            __end_of_beepOff 073D                      _VP6EN 08C4  
                    _TMR2H 0013                      _TMR2L 0011                      _PSRCA 0088  
                    _PSRCC 0094                      _PORTA 0005                      _PORTC 0007  
                    _SRCON 019E                      _PULSR 0CF2                      _PULSS 0CF3  
                    _TRISA 0085                      _TRISC 0087                      _VRCON 0118  
                    _WPUB4 08AC                      _WPUB5 08AD                      _WPUB6 08AE  
                    _WPUB7 08AF                      _compe 0501           __end_of_AccWrite 0625  
                    pclath 000A                      status 0003                      wtemp0 007E  
          _swI2C_WriteByte 0585       __size_of_delay_x10ms 0013             i1_WRITE_EEPROM 067A  
             __end_of_beep 06A8               __end_of_main 0438                     ??_beep 0025  
                   ??_main 002C            ?_swI2C_ReadByte 0075                     ISR@tmp 0079  
                   _C1VREN 08C7                     _C2VREN 08C6                     _C2SYNC 08D8  
                   ?_compe 0020                  ??_AccRead 0027                     _EEADRH 010F  
                   _EEDATH 010E                     _EECON1 009C           ___awdiv@dividend 0022  
                   _ANSELH 011F                     _MC1OUT 08DF                     _MC2OUT 08DE  
                   _T0CON0 001F                     _T2CON0 0012                     i1l5501 0000  
                   i1l5521 0000                     i1l5513 0000                     i1l5531 047E  
                   i1l5507 0000                     i1l5533 0000                     i1l5517 0000  
                   i1l5509 0000                     i1l5543 0000                     i1l5527 0479  
                   i1l5551 04AC                     i1l5471 0000                     i1l5721 0000  
                   i1l5537 0489                     i1l5481 0000                     i1l5473 0000  
                   i1l5723 0000                     i1l5731 0680                     i1l5547 04A9  
                   i1l5491 0447                     i1l5725 0000                     i1l5733 0000  
                   i1l5557 0000                     i1l5735 0000                     i1l5487 0000  
                   i1l5479 0000                     i1l5729 0000                     i1l5489 0446  
                   _INTEDG 040E                     u151_25 048F                     u152_25 049F  
                   _INTCON 000B                     _OSCCON 008F                     _TMR2IE 0461  
                   _TMR2IF 0061                     _PSINKA 0097                     _PSINKC 009F  
                   _OPTION 0081                     _TMR2ON 0092     __end_ofi1_WRITE_EEPROM 0692  
          swI2C_ReadByte@i 0023                     _beepOn 0742                  ??___awdiv 0024  
                   _cntCyc 0073                     _cntOff 0047                     _cntTmp 0043  
                ??_beepOff 0020           ___awdiv@quotient 0026           __end_of_int_init 065F  
                   compe@a 0027                     compe@b 0020     __size_ofi1_READ_EEPROM 0008  
         __end_of_setState 0727                     saved_w 007E       __size_of_swI2C_Start 0013  
  __end_of_swI2C_WriteByte 05C2           __end_of_sys_init 072F       i1WRITE_EEPROM@EEAddr 0076  
     i1WRITE_EEPROM@EEData 0075       __size_of_READ_EEPROM 000D            ?i1_WRITE_EEPROM 0075  
           __pcstackCOMMON 0075              __end_of_compe 053A                  ?_AccWrite 0023  
                  ??_compe 0022                 __pbssBANK0 0043         __size_of_gpio_init 0016  
  READ_EEPROM@ReEepromData 0021              i1_READ_EEPROM 072F                 __pmaintext 000B  
                  ?_beepOn 0075                 __pintentry 0004  i1READ_EEPROM@ReEepromData 0076  
                  _CM1CON0 0119                    _CM2CON0 011A                    _CM2CON1 011B  
               ??_AccWrite 0026                    _AccRead 05C2                    _PSTRCON 019D  
               _swI2C_Init 0625                    _STRSYNC 0CEC                 _swI2C_Stop 0701  
         ?_swI2C_WriteByte 0075             ?i1_READ_EEPROM 0075                  AccWrite@i 0029  
                ?_int_init 0075                setState@stt 0022                  ?_setState 0020  
               _mtOldState 0048                    ___awdiv 04BC           ??_swI2C_ReadByte 0020  
          __size_of_beepOn 0005                    _beepOff 0737             main@lostDetect 0032  
                  beep@rep 0024          __end_of_gpio_init 06BE                  ?_sys_init 0075  
             __size_of_ISR 0084                    _mtState 0074                    _timeOut 0045  
                  compe@dt 0021                    main@buf 0039       end_of_initialization 06FF  
            ??_delay_x10ms 0022                 ??_int_init 0020                 ??_setState 0022  
              AccRead@rAdd 002A                 _timer_init 06E4                 ??_sys_init 0020  
              ?_swI2C_Init 0075            ??i1_READ_EEPROM 0075                ?_swI2C_Stop 0075  
               main@acXOld 0034                 main@acYOld 0033           ??i1_WRITE_EEPROM 0076  
               main@acXsum 0037                 main@acYsum 0035                 main@isFall 0031  
       WRITE_EEPROM@EEAddr 0021         WRITE_EEPROM@EEData 0020                 main@isWait 002F  
      __end_of_delay_x10ms 06E4                AccWrite@dat 0023                AccWrite@len 0025  
           __end_of_beepOn 0747              ??_swI2C_Start 0020          __size_of_AccWrite 0028  
      start_initialization 06F4                __end_of_ISR 04BC              setState@_tOut 0020  
                _RegStatus 0072              ??_READ_EEPROM 0020              ?_WRITE_EEPROM 0020  
                 ??_beepOn 0020          READ_EEPROM@EEAddr 0020        __size_of_swI2C_Init 001F  
      __size_of_swI2C_Stop 000D                ?_timer_init 0075                __pbssCOMMON 0070  
            __pcstackBANK0 0020                   ?_AccRead 0024        __end_of_swI2C_Start 06D1  
              _delay_x10ms 06D1             ??_WRITE_EEPROM 0021          __size_of_int_init 001B  
      __end_of_READ_EEPROM 071B           swI2C_WriteByte@i 0022                   ?___awdiv 0020  
        __size_of_setState 000C                  __ptext871 0000                  __ptext880 0692  
                __ptext872 05C2                  __ptext881 04BC                  __ptext873 05FD  
                __ptext890 065F                  __ptext882 0644                  __ptext874 0546  
                __ptext891 070E                  __ptext883 06E4                  __ptext875 0585  
                __ptext892 0438                  __ptext884 06A8                  __ptext876 0701  
                __ptext893 067A                  __ptext885 0501                  __ptext877 06BE  
                __ptext894 072F                  __ptext886 071B                  __ptext878 0625  
                __ptext895 0000                  __ptext887 0742                  __ptext879 0727  
                __ptext888 0737                  __ptext889 06D1                  beep@delay 0025  
                 ?_beepOff 0075                   AccRead@i 002B         swI2C_WriteByte@dat 0021  
                __pswtext1 073D          __size_of_sys_init 0008                  _gpio_init 06A8  
           __size_of_compe 0039          interrupt_function 0004        __size_of_timer_init 0010  
 __size_of_swI2C_WriteByte 003D                 AccRead@dat 0024                 AccRead@len 0026  
             delay_x10ms@t 0020                   _AccWrite 05FD                _swI2C_Start 06BE  
                main@tmp16 0040                 ?_gpio_init 0075               ??_swI2C_Init 0020  
         __size_of_AccRead 002B               ??_swI2C_Stop 0020                _READ_EEPROM 070E  
        swI2C_ReadByte@Ack 0021          swI2C_ReadByte@dat 0022           __size_of___awdiv 0045  
         __size_of_beepOff 0006         __end_of_swI2C_Init 0644         __end_of_swI2C_Stop 070E  
     __end_of_WRITE_EEPROM 067A    __size_of_swI2C_ReadByte 003F      __end_ofi1_READ_EEPROM 0737  
            __size_of_beep 0016              __size_of_main 042D                   _int_init 0644  
                 _setState 071B                   _timeTick 0070                   main@isSw 003F  
                 main@tmp8 0042          ??_swI2C_WriteByte 0020               ??_timer_init 0020  
                 _sys_init 0727                ??_gpio_init 0020                   intlevel1 0000  
             ?_delay_x10ms 0020         __end_of_timer_init 06F4    __size_ofi1_WRITE_EEPROM 0018  
      i1READ_EEPROM@EEAddr 0075             delay_x10ms@set 0022  
