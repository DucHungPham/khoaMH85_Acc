

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Dec 24 16:14:23 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text760,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	text761,local,class=CODE,delta=2
    13                           	psect	text762,local,class=CODE,delta=2
    14                           	psect	text763,local,class=CODE,delta=2
    15                           	psect	text764,local,class=CODE,delta=2
    16                           	psect	text765,local,class=CODE,delta=2
    17                           	psect	text766,local,class=CODE,delta=2
    18                           	psect	text767,local,class=CODE,delta=2
    19                           	psect	text768,local,class=CODE,delta=2
    20                           	psect	text769,local,class=CODE,delta=2
    21                           	psect	text770,local,class=CODE,delta=2
    22                           	psect	text771,local,class=CODE,delta=2
    23                           	psect	text772,local,class=CODE,delta=2
    24                           	psect	text773,local,class=CODE,delta=2
    25                           	psect	text774,local,class=CODE,delta=2
    26                           	psect	text775,local,class=CODE,delta=2
    27                           	psect	text776,local,class=CODE,delta=2
    28                           	psect	text777,local,class=CODE,delta=2
    29                           	psect	text778,local,class=CODE,delta=2
    30                           	psect	text779,local,class=CODE,delta=2
    31                           	psect	text780,local,class=CODE,delta=2
    32                           	psect	text781,local,class=CODE,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text782,local,class=CODE,delta=2
    35                           	psect	pa_nodes,global,class=CODE,delta=2
    36                           	dabs	1,0x19D,1
    37                           	dabs	1,0x19E,1
    38                           	dabs	1,0x19E,1
    39                           	dabs	1,0x19E,1
    40                           	dabs	1,0x18C,1
    41                           	dabs	1,0x19E,1
    42                           	dabs	1,0x19E,1
    43                           	dabs	1,0x19E,1
    44                           	dabs	1,0x19E,1
    45                           	dabs	1,0x19D,1
    46                           	dabs	1,0x19D,1
    47                           	dabs	1,0x19D,1
    48                           	dabs	1,0x19D,1
    49                           	dabs	1,0x19D,1
    50                           	dabs	1,0x18C,1
    51                           	dabs	1,0x7E,2
    52  000A                     
    53                           	psect	text760
    54  0000                     __ptext760:	
    55  019D                     _PSTRCON	set	413	;_PSTRCON
    56  019E                     _SRCON	set	414	;_SRCON
    57  0CF5                     _C1SEN	set	3317	;_C1SEN
    58  0CF4                     _C2REN	set	3316	;_C2REN
    59  0C67                     _EEPGD	set	3175	;_EEPGD
    60  0CF2                     _PULSR	set	3314	;_PULSR
    61  0CF3                     _PULSS	set	3315	;_PULSS
    62  0CF6                     _SR0	set	3318	;_SR0
    63  0CF7                     _SR1	set	3319	;_SR1
    64  0CE8                     _STRA	set	3304	;_STRA
    65  0CE9                     _STRB	set	3305	;_STRB
    66  0CEA                     _STRC	set	3306	;_STRC
    67  0CEB                     _STRD	set	3307	;_STRD
    68  0CEC                     _STRSYNC	set	3308	;_STRSYNC
    69  0C62                     _WREN	set	3170	;_WREN
    70  000B                     _INTCON	set	11
    71  000C                     _PIR1	set	12
    72  0005                     _PORTA	set	5
    73  0007                     _PORTC	set	7
    74  0010                     _T1CON	set	16
    75  0012                     _T2CON	set	18
    76  000F                     _TMR1H	set	15
    77  000E                     _TMR1L	set	14
    78  0011                     _TMR2	set	17
    79  0067                     _EEIF	set	103
    80  005F                     _GIE	set	95
    81  005C                     _INTE	set	92
    82  0059                     _INTF	set	89
    83  005B                     _PAIE	set	91
    84  0058                     _PAIF	set	88
    85  005E                     _PEIE	set	94
    86  0028                     _RA0	set	40
    87  0029                     _RA1	set	41
    88  002C                     _RA4	set	44
    89  002E                     _RA6	set	46
    90  002F                     _RA7	set	47
    91  0038                     _RC0	set	56
    92  0039                     _RC1	set	57
    93  003A                     _RC2	set	58
    94  003C                     _RC4	set	60
    95  0060                     _TMR1IF	set	96
    96  0080                     _TMR1ON	set	128
    97  0061                     _TMR2IF	set	97
    98  0092                     _TMR2ON	set	146
    99  009B                     _EEADR	set	155
   100  009C                     _EECON1	set	156
   101  009A                     _EEDAT	set	154
   102  008F                     _OSCCON	set	143
   103  008C                     _PIE1	set	140
   104  0092                     _PR2	set	146
   105  0085                     _TRISA	set	133
   106  0087                     _TRISC	set	135
   107  0095                     _WPUA	set	149
   108  0088                     _WPUC	set	136
   109  047A                     _HTS	set	1146
   110  040E                     _INTEDG	set	1038
   111  04B6                     _IOCA6	set	1206
   112  04E0                     _RD	set	1248
   113  0460                     _TMR1IE	set	1120
   114  0461                     _TMR2IE	set	1121
   115  04E8                     _WR	set	1256
   116                           
   117                           	psect	cinit
   118  0641                     start_initialization:	
   119                           
   120                           ; Clear objects allocated to COMMON
   121  0641  01FA               	clrf	__pbssCOMMON& (0+127)
   122  0642  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   123                           
   124                           ; Clear objects allocated to BANK0
   125  0643  01BE               	clrf	__pbssBANK0& (0+127)
   126  0644  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   127  0645  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   128  0646  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   129  0647  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   130  0648  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   131  0649  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   132  064A  01C5               	clrf	(__pbssBANK0+7)& (0+127)
   133  064B  01C6               	clrf	(__pbssBANK0+8)& (0+127)
   134  064C  01C7               	clrf	(__pbssBANK0+9)& (0+127)
   135  064D  01C8               	clrf	(__pbssBANK0+10)& (0+127)
   136  064E                     end_of_initialization:	
   137                           ;End of C runtime variable initialization code
   138                           
   139  064E  0183               	clrf	3
   140  064F  280B               	ljmp	_main	;jump to C main() function
   141                           
   142                           	psect	bssCOMMON
   143  007A                     __pbssCOMMON:	
   144  007A                     _timeTick:	
   145  007A                     	ds	2
   146                           
   147                           	psect	bssBANK0
   148  003E                     __pbssBANK0:	
   149  003E                     _cntTmp:	
   150  003E                     	ds	2
   151  0040                     _timeOut:	
   152  0040                     	ds	2
   153  0042                     _RegStatus:	
   154  0042                     	ds	1
   155  0043                     _cntCyc:	
   156  0043                     	ds	1
   157  0044                     _cntOff:	
   158  0044                     	ds	1
   159  0045                     _lostDetect:	
   160  0045                     	ds	1
   161  0046                     _mode_chek:	
   162  0046                     	ds	1
   163  0047                     _mtOldState:	
   164  0047                     	ds	1
   165  0048                     _mtState:	
   166  0048                     	ds	1
   167                           
   168                           	psect	cstackCOMMON
   169  0070                     __pcstackCOMMON:	
   170  0070                     ?_sys_init:	
   171  0070                     ?_gpio_init:	
   172                           ; 0 bytes @ 0x0
   173                           
   174  0070                     ?_int_init:	
   175                           ; 0 bytes @ 0x0
   176                           
   177  0070                     ?_timer_init:	
   178                           ; 0 bytes @ 0x0
   179                           
   180  0070                     ?_swI2C_Init:	
   181                           ; 0 bytes @ 0x0
   182                           
   183  0070                     ?_ISR:	
   184                           ; 0 bytes @ 0x0
   185                           
   186  0070                     ??_ISR:	
   187                           ; 0 bytes @ 0x0
   188                           
   189  0070                     ?_beepOff:	
   190                           ; 0 bytes @ 0x0
   191                           
   192  0070                     ?_beepOn:	
   193                           ; 0 bytes @ 0x0
   194                           
   195  0070                     ?_main:	
   196                           ; 0 bytes @ 0x0
   197                           
   198  0070                     ?_swI2C_Start:	
   199                           ; 0 bytes @ 0x0
   200                           
   201  0070                     ?_swI2C_Stop:	
   202                           ; 0 bytes @ 0x0
   203                           
   204  0070                     ?_READ_EEPROM:	
   205                           ; 0 bytes @ 0x0
   206                           
   207  0070                     ?_swI2C_WriteByte:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ?_swI2C_ReadByte:	
   211                           ; 1 bytes @ 0x0
   212                           
   213                           
   214                           ; 1 bytes @ 0x0
   215  0070                     	ds	2
   216  0072                     ??_sys_init:	
   217  0072                     ??_gpio_init:	
   218                           ; 0 bytes @ 0x2
   219                           
   220  0072                     ??_int_init:	
   221                           ; 0 bytes @ 0x2
   222                           
   223  0072                     ??_timer_init:	
   224                           ; 0 bytes @ 0x2
   225                           
   226  0072                     ??_swI2C_Init:	
   227                           ; 0 bytes @ 0x2
   228                           
   229  0072                     ?_delay_x10ms:	
   230                           ; 0 bytes @ 0x2
   231                           
   232  0072                     ??_beepOff:	
   233                           ; 0 bytes @ 0x2
   234                           
   235  0072                     ??_beepOn:	
   236                           ; 0 bytes @ 0x2
   237                           
   238  0072                     ??_READ_EEPROM:	
   239                           ; 0 bytes @ 0x2
   240                           
   241  0072                     ?_WRITE_EEPROM:	
   242                           ; 0 bytes @ 0x2
   243                           
   244  0072                     ?_setState:	
   245                           ; 0 bytes @ 0x2
   246                           
   247  0072                     ??_swI2C_Start:	
   248                           ; 0 bytes @ 0x2
   249                           
   250  0072                     ??_swI2C_Stop:	
   251                           ; 0 bytes @ 0x2
   252                           
   253  0072                     ??_swI2C_WriteByte:	
   254                           ; 0 bytes @ 0x2
   255                           
   256  0072                     ??_swI2C_ReadByte:	
   257                           ; 0 bytes @ 0x2
   258                           
   259  0072                     ?_compe:	
   260                           ; 0 bytes @ 0x2
   261                           
   262  0072                     ?___awdiv:	
   263                           ; 1 bytes @ 0x2
   264                           
   265  0072                     READ_EEPROM@EEAddr:	
   266                           ; 2 bytes @ 0x2
   267                           
   268  0072                     WRITE_EEPROM@EEData:	
   269                           ; 1 bytes @ 0x2
   270                           
   271  0072                     compe@b:	
   272                           ; 1 bytes @ 0x2
   273                           
   274  0072                     delay_x10ms@t:	
   275                           ; 1 bytes @ 0x2
   276                           
   277  0072                     setState@_tOut:	
   278                           ; 2 bytes @ 0x2
   279                           
   280  0072                     ___awdiv@divisor:	
   281                           ; 2 bytes @ 0x2
   282                           
   283                           
   284                           ; 2 bytes @ 0x2
   285  0072                     	ds	1
   286  0073                     ??_WRITE_EEPROM:	
   287  0073                     READ_EEPROM@ReEepromData:	
   288                           ; 0 bytes @ 0x3
   289                           
   290  0073                     WRITE_EEPROM@EEAddr:	
   291                           ; 1 bytes @ 0x3
   292                           
   293  0073                     compe@dt:	
   294                           ; 1 bytes @ 0x3
   295                           
   296  0073                     swI2C_WriteByte@dat:	
   297                           ; 1 bytes @ 0x3
   298                           
   299  0073                     swI2C_ReadByte@Ack:	
   300                           ; 1 bytes @ 0x3
   301                           
   302                           
   303                           ; 1 bytes @ 0x3
   304  0073                     	ds	1
   305  0074                     ??_delay_x10ms:	
   306  0074                     ??_setState:	
   307                           ; 0 bytes @ 0x4
   308                           
   309  0074                     ??_compe:	
   310                           ; 0 bytes @ 0x4
   311                           
   312  0074                     setState@stt:	
   313                           ; 0 bytes @ 0x4
   314                           
   315  0074                     swI2C_WriteByte@i:	
   316                           ; 1 bytes @ 0x4
   317                           
   318  0074                     swI2C_ReadByte@dat:	
   319                           ; 1 bytes @ 0x4
   320                           
   321  0074                     delay_x10ms@set:	
   322                           ; 1 bytes @ 0x4
   323                           
   324  0074                     ___awdiv@dividend:	
   325                           ; 2 bytes @ 0x4
   326                           
   327                           
   328                           ; 2 bytes @ 0x4
   329  0074                     	ds	1
   330  0075                     ?_AccWrite:	
   331  0075                     swI2C_ReadByte@i:	
   332                           ; 1 bytes @ 0x5
   333                           
   334  0075                     AccWrite@dat:	
   335                           ; 1 bytes @ 0x5
   336                           
   337                           
   338                           ; 2 bytes @ 0x5
   339  0075                     	ds	1
   340  0076                     ?_beep:	
   341  0076                     ??___awdiv:	
   342                           ; 0 bytes @ 0x6
   343                           
   344  0076                     ?_AccRead:	
   345                           ; 0 bytes @ 0x6
   346                           
   347  0076                     beep@rep:	
   348                           ; 1 bytes @ 0x6
   349                           
   350  0076                     ___awdiv@counter:	
   351                           ; 1 bytes @ 0x6
   352                           
   353  0076                     AccRead@dat:	
   354                           ; 1 bytes @ 0x6
   355                           
   356                           
   357                           ; 2 bytes @ 0x6
   358  0076                     	ds	1
   359  0077                     ??_beep:	
   360  0077                     beep@delay:	
   361                           ; 0 bytes @ 0x7
   362                           
   363  0077                     AccWrite@len:	
   364                           ; 1 bytes @ 0x7
   365                           
   366  0077                     ___awdiv@sign:	
   367                           ; 1 bytes @ 0x7
   368                           
   369                           
   370                           ; 1 bytes @ 0x7
   371  0077                     	ds	1
   372  0078                     ??_AccWrite:	
   373  0078                     AccRead@len:	
   374                           ; 0 bytes @ 0x8
   375                           
   376  0078                     ___awdiv@quotient:	
   377                           ; 1 bytes @ 0x8
   378                           
   379                           
   380                           ; 2 bytes @ 0x8
   381  0078                     	ds	1
   382  0079                     compe@a:	
   383                           
   384                           ; 1 bytes @ 0x9
   385  0079                     	ds	1
   386                           
   387                           	psect	cstackBANK0
   388  0020                     __pcstackBANK0:	
   389  0020                     ??_AccRead:	
   390  0020                     AccWrite@rAdd:	
   391                           ; 0 bytes @ 0x0
   392                           
   393                           
   394                           ; 1 bytes @ 0x0
   395  0020                     	ds	1
   396  0021                     AccWrite@i:	
   397                           
   398                           ; 1 bytes @ 0x1
   399  0021                     	ds	2
   400  0023                     AccRead@rAdd:	
   401                           
   402                           ; 1 bytes @ 0x3
   403  0023                     	ds	1
   404  0024                     AccRead@i:	
   405                           
   406                           ; 1 bytes @ 0x4
   407  0024                     	ds	1
   408  0025                     ??_main:	
   409                           
   410                           ; 0 bytes @ 0x5
   411  0025                     	ds	3
   412  0028                     main@isWait:	
   413                           
   414                           ; 2 bytes @ 0x8
   415  0028                     	ds	2
   416  002A                     main@isFall:	
   417                           
   418                           ; 1 bytes @ 0xA
   419  002A                     	ds	1
   420  002B                     main@acYOld:	
   421                           
   422                           ; 1 bytes @ 0xB
   423  002B                     	ds	1
   424  002C                     main@acXOld:	
   425                           
   426                           ; 1 bytes @ 0xC
   427  002C                     	ds	1
   428  002D                     main@vibrateOn:	
   429                           
   430                           ; 1 bytes @ 0xD
   431  002D                     	ds	1
   432  002E                     main@buf:	
   433                           
   434                           ; 6 bytes @ 0xE
   435  002E                     	ds	6
   436  0034                     main@reAlertOn:	
   437                           
   438                           ; 1 bytes @ 0x14
   439  0034                     	ds	1
   440  0035                     main@tmp8:	
   441                           
   442                           ; 1 bytes @ 0x15
   443  0035                     	ds	1
   444  0036                     main@mpuOk:	
   445                           
   446                           ; 1 bytes @ 0x16
   447  0036                     	ds	1
   448  0037                     main@acYsum:	
   449                           
   450                           ; 2 bytes @ 0x17
   451  0037                     	ds	2
   452  0039                     main@acXsum:	
   453                           
   454                           ; 2 bytes @ 0x19
   455  0039                     	ds	2
   456  003B                     main@isSw:	
   457                           
   458                           ; 1 bytes @ 0x1B
   459  003B                     	ds	1
   460  003C                     main@tmp16:	
   461                           
   462                           ; 2 bytes @ 0x1C
   463  003C                     	ds	2
   464                           
   465                           	psect	maintext
   466  000B                     __pmaintext:	
   467 ;;Data sizes: Strings 0, constant 0, data 0, bss 13, persistent 0 stack 0
   468 ;;Auto spaces:   Size  Autos    Used
   469 ;; COMMON          14     10      12
   470 ;; BANK0           80     30      41
   471 ;; BANK1           32      0       0
   472 ;;
   473 ;; Pointer list with targets:
   474 ;; ?___awdiv	int  size(1) Largest target is 0
   475 ;;
   476 ;; AccRead@dat	PTR unsigned char  size(2) Largest target is 256
   477 ;;		 -> RAM(DATA[256]), main@buf(BANK0[6]), 
   478 ;;
   479 ;; AccWrite@dat	PTR unsigned char  size(2) Largest target is 256
   480 ;;		 -> RAM(DATA[256]), 
   481 ;;
   482 ;;
   483 ;; Critical Paths under _main in COMMON
   484 ;;
   485 ;;   _main->_AccWrite
   486 ;;   _main->___awdiv
   487 ;;   _main->_compe
   488 ;;   _AccRead->_swI2C_ReadByte
   489 ;;   _AccWrite->_swI2C_WriteByte
   490 ;;   _beep->_delay_x10ms
   491 ;;
   492 ;; Critical Paths under _ISR in COMMON
   493 ;;
   494 ;;   None.
   495 ;;
   496 ;; Critical Paths under _main in BANK0
   497 ;;
   498 ;;   _main->_AccRead
   499 ;;
   500 ;; Critical Paths under _ISR in BANK0
   501 ;;
   502 ;;   None.
   503 ;;
   504 ;; Critical Paths under _main in BANK1
   505 ;;
   506 ;;   None.
   507 ;;
   508 ;; Critical Paths under _ISR in BANK1
   509 ;;
   510 ;;   None.
   511 ;;
   512 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   513 ;;
   514 ;;
   515 ;;Call Graph Tables:
   516 ;;
   517 ;; ---------------------------------------------------------------------------------
   518 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   519 ;; ---------------------------------------------------------------------------------
   520 ;; (0) _main                                                25    25      0    3547
   521 ;;                                              5 BANK0     25    25      0
   522 ;;                           _sys_init
   523 ;;                          _gpio_init
   524 ;;                           _int_init
   525 ;;                         _timer_init
   526 ;;                         _swI2C_Init
   527 ;;                           _setState
   528 ;;                       _WRITE_EEPROM
   529 ;;                        _READ_EEPROM
   530 ;;                             _beepOn
   531 ;;                           _AccWrite
   532 ;;                               _beep
   533 ;;                            _AccRead
   534 ;;                            ___awdiv
   535 ;;                            _beepOff
   536 ;;                        _delay_x10ms
   537 ;;                              _compe
   538 ;; ---------------------------------------------------------------------------------
   539 ;; (1) _AccRead                                              8     5      3     477
   540 ;;                                              6 COMMON     3     0      3
   541 ;;                                              0 BANK0      5     5      0
   542 ;;                        _swI2C_Start
   543 ;;                    _swI2C_WriteByte
   544 ;;                     _swI2C_ReadByte
   545 ;;                         _swI2C_Stop
   546 ;; ---------------------------------------------------------------------------------
   547 ;; (1) _AccWrite                                             7     4      3     300
   548 ;;                                              5 COMMON     5     2      3
   549 ;;                                              0 BANK0      2     2      0
   550 ;;                        _swI2C_Start
   551 ;;                    _swI2C_WriteByte
   552 ;;                         _swI2C_Stop
   553 ;; ---------------------------------------------------------------------------------
   554 ;; (2) _swI2C_ReadByte                                       4     4      0     115
   555 ;;                                              2 COMMON     4     4      0
   556 ;; ---------------------------------------------------------------------------------
   557 ;; (2) _swI2C_WriteByte                                      3     3      0     139
   558 ;;                                              2 COMMON     3     3      0
   559 ;; ---------------------------------------------------------------------------------
   560 ;; (2) _swI2C_Stop                                           1     1      0       0
   561 ;;                                              2 COMMON     1     1      0
   562 ;; ---------------------------------------------------------------------------------
   563 ;; (2) _swI2C_Start                                          1     1      0       0
   564 ;;                                              2 COMMON     1     1      0
   565 ;; ---------------------------------------------------------------------------------
   566 ;; (1) _swI2C_Init                                           1     1      0       0
   567 ;;                                              2 COMMON     1     1      0
   568 ;; ---------------------------------------------------------------------------------
   569 ;; (1) _sys_init                                             0     0      0       0
   570 ;; ---------------------------------------------------------------------------------
   571 ;; (1) _beep                                                 2     1      1      90
   572 ;;                                              6 COMMON     2     1      1
   573 ;;                        _delay_x10ms
   574 ;; ---------------------------------------------------------------------------------
   575 ;; (1) ___awdiv                                              8     4      4     300
   576 ;;                                              2 COMMON     8     4      4
   577 ;; ---------------------------------------------------------------------------------
   578 ;; (1) _timer_init                                           0     0      0       0
   579 ;; ---------------------------------------------------------------------------------
   580 ;; (1) _int_init                                             1     1      0       0
   581 ;; ---------------------------------------------------------------------------------
   582 ;; (1) _gpio_init                                            0     0      0       0
   583 ;; ---------------------------------------------------------------------------------
   584 ;; (1) _compe                                                8     6      2     264
   585 ;;                                              2 COMMON     8     6      2
   586 ;; ---------------------------------------------------------------------------------
   587 ;; (1) _setState                                             3     1      2      44
   588 ;;                                              2 COMMON     3     1      2
   589 ;; ---------------------------------------------------------------------------------
   590 ;; (1) _WRITE_EEPROM                                         2     1      1      44
   591 ;;                                              2 COMMON     2     1      1
   592 ;; ---------------------------------------------------------------------------------
   593 ;; (1) _READ_EEPROM                                          2     2      0      45
   594 ;;                                              2 COMMON     2     2      0
   595 ;; ---------------------------------------------------------------------------------
   596 ;; (1) _beepOn                                               0     0      0       0
   597 ;; ---------------------------------------------------------------------------------
   598 ;; (1) _beepOff                                              0     0      0       0
   599 ;; ---------------------------------------------------------------------------------
   600 ;; (1) _delay_x10ms                                          4     2      2      46
   601 ;;                                              2 COMMON     4     2      2
   602 ;; ---------------------------------------------------------------------------------
   603 ;; Estimated maximum stack depth 2
   604 ;; ---------------------------------------------------------------------------------
   605 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   606 ;; ---------------------------------------------------------------------------------
   607 ;; (3) _ISR                                                  3     3      0       0
   608 ;;                                              0 COMMON     2     2      0
   609 ;; ---------------------------------------------------------------------------------
   610 ;; Estimated maximum stack depth 3
   611 ;; ---------------------------------------------------------------------------------
   612 ;; Call Graph Graphs:
   613 ;; _main (ROOT)
   614 ;;   _sys_init
   615 ;;   _gpio_init
   616 ;;   _int_init
   617 ;;   _timer_init
   618 ;;   _swI2C_Init
   619 ;;   _setState
   620 ;;   _WRITE_EEPROM
   621 ;;   _READ_EEPROM
   622 ;;   _beepOn
   623 ;;   _AccWrite
   624 ;;     _swI2C_Start
   625 ;;     _swI2C_WriteByte
   626 ;;     _swI2C_Stop
   627 ;;   _beep
   628 ;;     _delay_x10ms
   629 ;;   _AccRead
   630 ;;     _swI2C_Start
   631 ;;     _swI2C_WriteByte
   632 ;;     _swI2C_ReadByte
   633 ;;     _swI2C_Stop
   634 ;;   ___awdiv
   635 ;;   _beepOff
   636 ;;   _delay_x10ms
   637 ;;   _compe
   638 ;;
   639 ;; _ISR (ROOT)
   640 ;;
   641 ;; Address spaces:
   642 ;;Name               Size   Autos  Total    Cost      Usage
   643 ;;BITCOMMON            E      0       0       0        0.0%
   644 ;;EEDATA              80      0       0       0        0.0%
   645 ;;NULL                 0      0       0       0        0.0%
   646 ;;CODE                 0      0       0       0        0.0%
   647 ;;COMMON               E      A       C       1       85.7%
   648 ;;BITSFR0              0      0       0       1        0.0%
   649 ;;SFR0                 0      0       0       1        0.0%
   650 ;;BITSFR1              0      0       0       2        0.0%
   651 ;;SFR1                 0      0       0       2        0.0%
   652 ;;STACK                0      0       2       2        0.0%
   653 ;;BITBANK0            50      0       0       3        0.0%
   654 ;;BANK0               50     1E      29       4       51.3%
   655 ;;BITBANK1            20      0       0       5        0.0%
   656 ;;BITSFR2              0      0       0       5        0.0%
   657 ;;SFR2                 0      0       0       5        0.0%
   658 ;;BANK1               20      0       0       6        0.0%
   659 ;;ABS                  0      0      35       7        0.0%
   660 ;;DATA                 0      0      37       8        0.0%
   661                           
   662                           
   663 ;; *************** function _main *****************
   664 ;; Defined at:
   665 ;;		line 250 in file "smartkey.C"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  buf             6   14[BANK0 ] char [6]
   670 ;;  tmp16           2   28[BANK0 ] unsigned int 
   671 ;;  acXsum          2   25[BANK0 ] int 
   672 ;;  acYsum          2   23[BANK0 ] int 
   673 ;;  isWait          2    8[BANK0 ] unsigned int 
   674 ;;  isSw            1   27[BANK0 ] unsigned char 
   675 ;;  mpuOk           1   22[BANK0 ] unsigned char 
   676 ;;  tmp8            1   21[BANK0 ] unsigned char 
   677 ;;  reAlertOn       1   20[BANK0 ] unsigned char 
   678 ;;  vibrateOn       1   13[BANK0 ] unsigned char 
   679 ;;  acXOld          1   12[BANK0 ] char 
   680 ;;  acYOld          1   11[BANK0 ] char 
   681 ;;  isFall          1   10[BANK0 ] unsigned char 
   682 ;; Return value:  Size  Location     Type
   683 ;;		None               void
   684 ;; Registers used:
   685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 17F/0
   688 ;;		On exit  : 60/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1
   691 ;;      Params:         0       0       0
   692 ;;      Locals:         0      22       0
   693 ;;      Temps:          0       3       0
   694 ;;      Totals:         0      25       0
   695 ;;Total ram usage:       25 bytes
   696 ;; Hardware stack levels required when called:    3
   697 ;; This function calls:
   698 ;;		_sys_init
   699 ;;		_gpio_init
   700 ;;		_int_init
   701 ;;		_timer_init
   702 ;;		_swI2C_Init
   703 ;;		_setState
   704 ;;		_WRITE_EEPROM
   705 ;;		_READ_EEPROM
   706 ;;		_beepOn
   707 ;;		_AccWrite
   708 ;;		_beep
   709 ;;		_AccRead
   710 ;;		___awdiv
   711 ;;		_beepOff
   712 ;;		_delay_x10ms
   713 ;;		_compe
   714 ;; This function is called by:
   715 ;;		Startup code after reset
   716 ;; This function uses a non-reentrant model
   717 ;;
   718  000B                     _main:	
   719                           
   720                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   721  000B  3007               	movlw	7	;#
   722  000C  0099               	movwf	25	;#
   723                           
   724                           ;smartkey.C: 257: unsigned char reAlertOn=0,tmp8,isSw=0,isFall=0,mpuOk=0,vibrateOn=0;
   725  000D  1283               	bcf	3,5	;RP0=0, select bank0
   726  000E  1303               	bcf	3,6	;RP1=0, select bank0
   727  000F  01B4               	clrf	main@reAlertOn
   728  0010  01BB               	clrf	main@isSw
   729  0011  01AA               	clrf	main@isFall
   730  0012  01AD               	clrf	main@vibrateOn
   731                           
   732                           ;smartkey.C: 258: unsigned int isWait =0;
   733  0013  01A8               	clrf	main@isWait
   734  0014  01A9               	clrf	main@isWait+1
   735                           
   736                           ;smartkey.C: 259: signed int acYsum=0,acXsum=0;
   737  0015  01B7               	clrf	main@acYsum
   738  0016  01B8               	clrf	main@acYsum+1
   739  0017  01B9               	clrf	main@acXsum
   740  0018  01BA               	clrf	main@acXsum+1
   741                           
   742                           ;smartkey.C: 260: unsigned int tmp16=0;
   743  0019  01BC               	clrf	main@tmp16
   744  001A  01BD               	clrf	main@tmp16+1
   745  001B  0064               	clrwdt	;#
   746                           
   747                           ;smartkey.C: 266: sys_init();
   748  001C  268A               	fcall	_sys_init
   749                           
   750                           ;smartkey.C: 267: gpio_init();
   751  001D  266E               	fcall	_gpio_init
   752                           
   753                           ;smartkey.C: 268: int_init();
   754  001E  25CC               	fcall	_int_init
   755                           
   756                           ;smartkey.C: 269: timer_init();
   757  001F  265F               	fcall	_timer_init
   758                           
   759                           ;smartkey.C: 271: _delay((unsigned long)((100)*(4000000/4000.0)));
   760  0020  3082               	movlw	130
   761  0021  00A6               	movwf	??_main+1
   762  0022  30DD               	movlw	221
   763  0023  00A5               	movwf	??_main
   764  0024                     u3057:	
   765  0024  0BA5               	decfsz	??_main,f
   766  0025  2824               	goto	u3057
   767  0026  0BA6               	decfsz	??_main+1,f
   768  0027  2824               	goto	u3057
   769  0028  2829               	nop2
   770  0029  3082               	movlw	130
   771                           
   772                           ;smartkey.C: 272: RA7 =1;
   773  002A  1283               	bcf	3,5	;RP0=0, select bank0
   774  002B  1303               	bcf	3,6	;RP1=0, select bank0
   775  002C  1785               	bsf	5,7
   776                           
   777                           ;smartkey.C: 273: _delay((unsigned long)((100)*(4000000/4000.0)));
   778  002D  00A6               	movwf	??_main+1
   779  002E  30DD               	movlw	221
   780  002F  00A5               	movwf	??_main
   781  0030                     u3067:	
   782  0030  0BA5               	decfsz	??_main,f
   783  0031  2830               	goto	u3067
   784  0032  0BA6               	decfsz	??_main+1,f
   785  0033  2830               	goto	u3067
   786  0034  2835               	nop2
   787                           
   788                           ;smartkey.C: 275: PAIE = 1;
   789  0035  158B               	bsf	11,3
   790                           
   791                           ;smartkey.C: 277: RegStatus = 0;
   792  0036  1283               	bcf	3,5	;RP0=0, select bank0
   793  0037  1303               	bcf	3,6	;RP1=0, select bank0
   794  0038  01C2               	clrf	_RegStatus
   795                           
   796                           ;smartkey.C: 279: swI2C_Init();
   797  0039  25B0               	fcall	_swI2C_Init
   798  003A  3000               	movlw	0
   799                           
   800                           ;smartkey.C: 282: setState(0,0);
   801  003B  01F2               	clrf	?_setState
   802  003C  01F3               	clrf	?_setState+1
   803  003D  267C               	fcall	_setState
   804                           
   805                           ;smartkey.C: 284: WRITE_EEPROM(0x7F,0xAA);
   806  003E  30AA               	movlw	170
   807  003F  00F2               	movwf	?_WRITE_EEPROM
   808  0040  307F               	movlw	127
   809  0041  25E6               	fcall	_WRITE_EEPROM
   810                           
   811                           ;smartkey.C: 285: WRITE_EEPROM(0x7F,0xAA);
   812  0042  30AA               	movlw	170
   813  0043  00F2               	movwf	?_WRITE_EEPROM
   814  0044  307F               	movlw	127
   815  0045  25E6               	fcall	_WRITE_EEPROM
   816                           
   817                           ;smartkey.C: 289: _delay((unsigned long)((200)*(4000000/4000.0)));
   818  0046  3002               	movlw	2
   819  0047  1283               	bcf	3,5	;RP0=0, select bank0
   820  0048  00A7               	movwf	??_main+2
   821  0049  3004               	movlw	4
   822  004A  00A6               	movwf	??_main+1
   823  004B  30BA               	movlw	186
   824  004C  00A5               	movwf	??_main
   825  004D                     u3077:	
   826  004D  0BA5               	decfsz	??_main,f
   827  004E  284D               	goto	u3077
   828  004F  0BA6               	decfsz	??_main+1,f
   829  0050  284D               	goto	u3077
   830  0051  0BA7               	decfsz	??_main+2,f
   831  0052  284D               	goto	u3077
   832  0053  0064               	clrwdt
   833                           
   834                           ;smartkey.C: 291: tmp8= READ_EEPROM(0x08);
   835  0054  3008               	movlw	8
   836  0055  2694               	fcall	_READ_EEPROM
   837  0056  1283               	bcf	3,5	;RP0=0, select bank0
   838  0057  00B5               	movwf	main@tmp8
   839                           
   840                           ;smartkey.C: 292: if(tmp8==0xff) {WRITE_EEPROM(0x08,0);_delay((unsigned long)((2)*(40000
      +                          00/4000.0)));}
   841  0058  3AFF               	xorlw	255
   842  0059  1D03               	skipz
   843  005A  2868               	goto	l5806
   844  005B  3008               	movlw	8
   845  005C  01F2               	clrf	?_WRITE_EEPROM
   846  005D  25E6               	fcall	_WRITE_EEPROM
   847  005E  3003               	movlw	3
   848  005F  1283               	bcf	3,5	;RP0=0, select bank0
   849  0060  00A6               	movwf	??_main+1
   850  0061  3097               	movlw	151
   851  0062  00A5               	movwf	??_main
   852  0063                     u3087:	
   853  0063  0BA5               	decfsz	??_main,f
   854  0064  2863               	goto	u3087
   855  0065  0BA6               	decfsz	??_main+1,f
   856  0066  2863               	goto	u3087
   857  0067  2868               	nop2
   858  0068                     l5806:	
   859                           
   860                           ;smartkey.C: 294: if(tmp8==0xcc){
   861  0068  1283               	bcf	3,5	;RP0=0, select bank0
   862  0069  1303               	bcf	3,6	;RP1=0, select bank0
   863  006A  0835               	movf	main@tmp8,w
   864  006B  3ACC               	xorlw	204
   865  006C  1D03               	skipz
   866  006D  2884               	goto	l5820
   867  006E  3008               	movlw	8
   868                           
   869                           ;smartkey.C: 295: RegStatus &=~(0x20);
   870  006F  12C2               	bcf	_RegStatus,5
   871                           
   872                           ;smartkey.C: 296: setState(3,1800);
   873  0070  00F2               	movwf	?_setState
   874  0071  3007               	movlw	7
   875  0072  00F3               	movwf	?_setState+1
   876  0073  3003               	movlw	3
   877  0074  267C               	fcall	_setState
   878                           
   879                           ;smartkey.C: 297: mtOldState = 1;
   880  0075  01C7               	clrf	_mtOldState
   881  0076  0AC7               	incf	_mtOldState,f
   882                           
   883                           ;smartkey.C: 298: cntTmp = timeTick+50;
   884  0077  087B               	movf	_timeTick+1,w
   885  0078  00BF               	movwf	_cntTmp+1
   886  0079  087A               	movf	_timeTick,w
   887  007A  00BE               	movwf	_cntTmp
   888  007B  3032               	movlw	50
   889  007C  07BE               	addwf	_cntTmp,f
   890  007D  1803               	skipnc
   891  007E  0ABF               	incf	_cntTmp+1,f
   892                           
   893                           ;smartkey.C: 299: PR2 =12;
   894  007F  300C               	movlw	12
   895  0080  1683               	bsf	3,5	;RP0=1, select bank1
   896  0081  0092               	movwf	18	;volatile
   897                           
   898                           ;smartkey.C: 300: beepOn();
   899  0082  26A2               	fcall	_beepOn
   900                           
   901                           ;smartkey.C: 301: } else {
   902  0083  288B               	goto	l5824
   903  0084                     l5820:	
   904                           
   905                           ;smartkey.C: 302: setState(2,400);
   906  0084  3090               	movlw	144
   907  0085  00F2               	movwf	?_setState
   908  0086  3001               	movlw	1
   909  0087  00F3               	movwf	?_setState+1
   910  0088  3002               	movlw	2
   911  0089  267C               	fcall	_setState
   912                           
   913                           ;smartkey.C: 304: mtOldState = 0;
   914  008A  01C7               	clrf	_mtOldState
   915  008B                     l5824:	
   916                           
   917                           ;smartkey.C: 308: }
   918                           ;smartkey.C: 327: {
   919                           ;smartkey.C: 328: buf[0] = 0x28;
   920  008B  3028               	movlw	40
   921  008C  1283               	bcf	3,5	;RP0=0, select bank0
   922  008D  00AE               	movwf	main@buf
   923                           
   924                           ;smartkey.C: 329: buf[1] = 0x87;
   925  008E  3087               	movlw	-121
   926  008F  00AF               	movwf	main@buf+1
   927                           
   928                           ;smartkey.C: 330: if(AccWrite(0x6b,(unsigned char)buf,2)==0) mpuOk =1;
   929  0090  302E               	movlw	main@buf& (0+255)
   930  0091  00A5               	movwf	??_main
   931  0092  01A6               	clrf	??_main+1
   932  0093  00F5               	movwf	?_AccWrite
   933  0094  0826               	movf	??_main+1,w
   934  0095  00F6               	movwf	?_AccWrite+1
   935  0096  3002               	movlw	2
   936  0097  00F7               	movwf	?_AccWrite+2
   937  0098  306B               	movlw	107
   938  0099  2585               	fcall	_AccWrite
   939  009A  3800               	iorlw	0
   940  009B  1283               	bcf	3,5	;RP0=0, select bank0
   941  009C  1303               	bcf	3,6	;RP1=0, select bank0
   942  009D  1D03               	skipz
   943  009E  28A2               	goto	L5
   944  009F  01B6               	clrf	main@mpuOk
   945  00A0  0AB6               	incf	main@mpuOk,f
   946  00A1  28A3               	goto	l5834
   947  00A2                     L5:	
   948                           ;smartkey.C: 331: else mpuOk =0;
   949                           
   950  00A2  01B6               	clrf	main@mpuOk
   951  00A3                     l5834:	
   952                           
   953                           ;smartkey.C: 333: _delay((unsigned long)((100)*(4000000/4000.0)));
   954  00A3  3082               	movlw	130
   955  00A4  00A6               	movwf	??_main+1
   956  00A5  30DD               	movlw	221
   957  00A6  00A5               	movwf	??_main
   958  00A7                     u3097:	
   959  00A7  0BA5               	decfsz	??_main,f
   960  00A8  28A7               	goto	u3097
   961  00A9  0BA6               	decfsz	??_main+1,f
   962  00AA  28A7               	goto	u3097
   963  00AB  28AC               	nop2
   964                           
   965                           ;smartkey.C: 334: }
   966                           ;smartkey.C: 335: if(mpuOk ==0){beep(10,2);}
   967  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   968  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   969  00AE  08B6               	movf	main@mpuOk,f
   970  00AF  1D03               	skipz
   971  00B0  28B5               	goto	l5840
   972  00B1  3002               	movlw	2
   973  00B2  00F6               	movwf	?_beep
   974  00B3  300A               	movlw	10
   975  00B4  2600               	fcall	_beep
   976  00B5                     l5840:	
   977                           
   978                           ;smartkey.C: 339: if(RC1 && mpuOk ==1)
   979  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   980  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   981  00B7  1C87               	btfss	7,1
   982  00B8  2960               	goto	l758
   983  00B9  0B36               	decfsz	main@mpuOk,w
   984  00BA  2960               	goto	l758
   985                           
   986                           ;smartkey.C: 340: {
   987                           ;smartkey.C: 341: tmp8=0;
   988  00BB  01B5               	clrf	main@tmp8
   989                           
   990                           ;smartkey.C: 342: while((RC1 )&&(tmp8<11))
   991  00BC  28FA               	goto	l5854
   992  00BD                     l5846:	
   993                           
   994                           ;smartkey.C: 343: {
   995                           ;smartkey.C: 344: if(AccRead(0x3b,(unsigned char)buf,6)==0){
   996  00BD  302E               	movlw	main@buf& (0+255)
   997  00BE  00A5               	movwf	??_main
   998  00BF  01A6               	clrf	??_main+1
   999  00C0  00F6               	movwf	?_AccRead
  1000  00C1  0826               	movf	??_main+1,w
  1001  00C2  00F7               	movwf	?_AccRead+1
  1002  00C3  3006               	movlw	6
  1003  00C4  00F8               	movwf	?_AccRead+2
  1004  00C5  303B               	movlw	59
  1005  00C6  2508               	fcall	_AccRead
  1006  00C7  3800               	iorlw	0
  1007  00C8  1D03               	skipz
  1008  00C9  28EB               	goto	l5852
  1009                           
  1010                           ;smartkey.C: 346: acXsum += buf[0];
  1011  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1012  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1013  00CC  082E               	movf	main@buf,w
  1014  00CD  00A5               	movwf	??_main
  1015  00CE  01A6               	clrf	??_main+1
  1016  00CF  1BA5               	btfsc	??_main,7
  1017  00D0  03A6               	decf	??_main+1,f
  1018  00D1  07B9               	addwf	main@acXsum,f
  1019  00D2  1803               	skipnc
  1020  00D3  0ABA               	incf	main@acXsum+1,f
  1021  00D4  0826               	movf	??_main+1,w
  1022  00D5  07BA               	addwf	main@acXsum+1,f
  1023                           
  1024                           ;smartkey.C: 347: acYsum += buf[2];
  1025  00D6  0830               	movf	main@buf+2,w
  1026  00D7  00A5               	movwf	??_main
  1027  00D8  01A6               	clrf	??_main+1
  1028  00D9  1BA5               	btfsc	??_main,7
  1029  00DA  03A6               	decf	??_main+1,f
  1030  00DB  07B7               	addwf	main@acYsum,f
  1031  00DC  1803               	skipnc
  1032  00DD  0AB8               	incf	main@acYsum+1,f
  1033  00DE  0826               	movf	??_main+1,w
  1034  00DF  07B8               	addwf	main@acYsum+1,f
  1035                           
  1036                           ;smartkey.C: 348: tmp16 = (signed int)tmp16 + buf[4];
  1037  00E0  0832               	movf	main@buf+4,w
  1038  00E1  00A5               	movwf	??_main
  1039  00E2  01A6               	clrf	??_main+1
  1040  00E3  1BA5               	btfsc	??_main,7
  1041  00E4  03A6               	decf	??_main+1,f
  1042  00E5  07BC               	addwf	main@tmp16,f
  1043  00E6  1803               	skipnc
  1044  00E7  0ABD               	incf	main@tmp16+1,f
  1045  00E8  0826               	movf	??_main+1,w
  1046  00E9  07BD               	addwf	main@tmp16+1,f
  1047                           
  1048                           ;smartkey.C: 349: tmp8++;
  1049  00EA  0AB5               	incf	main@tmp8,f
  1050  00EB                     l5852:	
  1051                           
  1052                           ;smartkey.C: 350: }
  1053                           ;smartkey.C: 351: _delay((unsigned long)((500)*(4000000/4000.0)));
  1054  00EB  3003               	movlw	3
  1055  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1056  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1057  00EE  00A7               	movwf	??_main+2
  1058  00EF  308A               	movlw	138
  1059  00F0  00A6               	movwf	??_main+1
  1060  00F1  3056               	movlw	86
  1061  00F2  00A5               	movwf	??_main
  1062  00F3                     u3107:	
  1063  00F3  0BA5               	decfsz	??_main,f
  1064  00F4  28F3               	goto	u3107
  1065  00F5  0BA6               	decfsz	??_main+1,f
  1066  00F6  28F3               	goto	u3107
  1067  00F7  0BA7               	decfsz	??_main+2,f
  1068  00F8  28F3               	goto	u3107
  1069  00F9  28FA               	nop2
  1070  00FA                     l5854:	
  1071  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1072  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1073  00FC  1C87               	btfss	7,1
  1074  00FD  2902               	goto	l5858
  1075  00FE  300B               	movlw	11
  1076  00FF  0235               	subwf	main@tmp8,w
  1077  0100  1C03               	skipc
  1078  0101  28BD               	goto	l5846
  1079  0102                     l5858:	
  1080                           
  1081                           ;smartkey.C: 353: }
  1082                           ;smartkey.C: 355: if(tmp8==11){
  1083  0102  0835               	movf	main@tmp8,w
  1084  0103  3A0B               	xorlw	11
  1085  0104  1D03               	skipz
  1086  0105  295C               	goto	l5872
  1087                           
  1088                           ;smartkey.C: 356: acXsum =acXsum/10;
  1089  0106  300A               	movlw	10
  1090  0107  00F2               	movwf	?___awdiv
  1091  0108  01F3               	clrf	?___awdiv+1
  1092  0109  083A               	movf	main@acXsum+1,w
  1093  010A  00F5               	movwf	?___awdiv+3
  1094  010B  0839               	movf	main@acXsum,w
  1095  010C  00F4               	movwf	?___awdiv+2
  1096  010D  243E               	fcall	___awdiv
  1097  010E  0873               	movf	?___awdiv+1,w
  1098  010F  00BA               	movwf	main@acXsum+1
  1099  0110  0872               	movf	?___awdiv,w
  1100  0111  00B9               	movwf	main@acXsum
  1101                           
  1102                           ;smartkey.C: 357: acYsum = acYsum/10;
  1103  0112  300A               	movlw	10
  1104  0113  00F2               	movwf	?___awdiv
  1105  0114  01F3               	clrf	?___awdiv+1
  1106  0115  0838               	movf	main@acYsum+1,w
  1107  0116  00F5               	movwf	?___awdiv+3
  1108  0117  0837               	movf	main@acYsum,w
  1109  0118  00F4               	movwf	?___awdiv+2
  1110  0119  243E               	fcall	___awdiv
  1111  011A  0873               	movf	?___awdiv+1,w
  1112  011B  00B8               	movwf	main@acYsum+1
  1113  011C  0872               	movf	?___awdiv,w
  1114  011D  00B7               	movwf	main@acYsum
  1115                           
  1116                           ;smartkey.C: 358: tmp16 = (signed int)tmp16/10;
  1117  011E  300A               	movlw	10
  1118  011F  00F2               	movwf	?___awdiv
  1119  0120  01F3               	clrf	?___awdiv+1
  1120  0121  083D               	movf	main@tmp16+1,w
  1121  0122  00F5               	movwf	?___awdiv+3
  1122  0123  083C               	movf	main@tmp16,w
  1123  0124  00F4               	movwf	?___awdiv+2
  1124  0125  243E               	fcall	___awdiv
  1125  0126  0873               	movf	?___awdiv+1,w
  1126  0127  00BD               	movwf	main@tmp16+1
  1127  0128  0872               	movf	?___awdiv,w
  1128  0129  00BC               	movwf	main@tmp16
  1129                           
  1130                           ;smartkey.C: 360: if(((signed int)tmp16 > (-31)) && ((signed int)tmp16 < 31)){
  1131  012A  083D               	movf	main@tmp16+1,w
  1132  012B  3A80               	xorlw	128
  1133  012C  00FF               	movwf	127
  1134  012D  307F               	movlw	127
  1135  012E  027F               	subwf	127,w
  1136  012F  1D03               	skipz
  1137  0130  2933               	goto	u2525
  1138  0131  30E2               	movlw	226
  1139  0132  023C               	subwf	main@tmp16,w
  1140  0133                     u2525:	
  1141  0133  1C03               	skipc
  1142  0134  2942               	goto	l5868
  1143  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1144  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1145  0137  083D               	movf	main@tmp16+1,w
  1146  0138  3A80               	xorlw	128
  1147  0139  00FF               	movwf	127
  1148  013A  3080               	movlw	128
  1149  013B  027F               	subwf	127,w
  1150  013C  1D03               	skipz
  1151  013D  2940               	goto	u2535
  1152  013E  301F               	movlw	31
  1153  013F  023C               	subwf	main@tmp16,w
  1154  0140                     u2535:	
  1155  0140  1C03               	btfss	3,0
  1156  0141  295C               	goto	l5872
  1157  0142                     l5868:	
  1158                           ;smartkey.C: 362: }
  1159                           
  1160                           ;smartkey.C: 361: beep(10,2);
  1161                           
  1162                           
  1163                           ;smartkey.C: 363: else
  1164                           ;smartkey.C: 365: {
  1165                           ;smartkey.C: 366: beep(10,3);
  1166  0142  3003               	movlw	3
  1167  0143  00F6               	movwf	?_beep
  1168  0144  300A               	movlw	10
  1169  0145  2600               	fcall	_beep
  1170                           
  1171                           ;smartkey.C: 367: WRITE_EEPROM(0x10,(unsigned char)acXsum);
  1172  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1173  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1174  0148  0839               	movf	main@acXsum,w
  1175  0149  00F2               	movwf	?_WRITE_EEPROM
  1176  014A  3010               	movlw	16
  1177  014B  25E6               	fcall	_WRITE_EEPROM
  1178                           
  1179                           ;smartkey.C: 368: WRITE_EEPROM(0x11,(unsigned char)acYsum);
  1180  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1181  014D  0837               	movf	main@acYsum,w
  1182  014E  00F2               	movwf	?_WRITE_EEPROM
  1183  014F  3011               	movlw	17
  1184  0150  25E6               	fcall	_WRITE_EEPROM
  1185                           
  1186                           ;smartkey.C: 369: _delay((unsigned long)((100)*(4000000/4000.0)));
  1187  0151  3082               	movlw	130
  1188  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0153  00A6               	movwf	??_main+1
  1190  0154  30DD               	movlw	221
  1191  0155  00A5               	movwf	??_main
  1192  0156                     u3117:	
  1193  0156  0BA5               	decfsz	??_main,f
  1194  0157  2956               	goto	u3117
  1195  0158  0BA6               	decfsz	??_main+1,f
  1196  0159  2956               	goto	u3117
  1197  015A  295B               	nop2
  1198  015B  2960               	goto	l758
  1199  015C                     l5872:	
  1200                           
  1201                           ;smartkey.C: 373: beep(10,2);
  1202  015C  3002               	movlw	2
  1203  015D  00F6               	movwf	?_beep
  1204  015E  300A               	movlw	10
  1205  015F  2600               	fcall	_beep
  1206  0160                     l758:	
  1207                           
  1208                           ;smartkey.C: 374: }
  1209                           ;smartkey.C: 375: }
  1210                           ;smartkey.C: 377: acXsum = (signed char)READ_EEPROM(0x10);
  1211  0160  3010               	movlw	16
  1212  0161  2694               	fcall	_READ_EEPROM
  1213  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0163  00B9               	movwf	main@acXsum
  1215  0164  01BA               	clrf	main@acXsum+1
  1216  0165  1BB9               	btfsc	main@acXsum,7
  1217  0166  03BA               	decf	main@acXsum+1,f
  1218                           
  1219                           ;smartkey.C: 378: acYsum = (signed char)READ_EEPROM(0x11);
  1220  0167  3011               	movlw	17
  1221  0168  2694               	fcall	_READ_EEPROM
  1222  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1223  016A  00B7               	movwf	main@acYsum
  1224  016B  01B8               	clrf	main@acYsum+1
  1225  016C  1BB7               	btfsc	main@acYsum,7
  1226  016D  03B8               	decf	main@acYsum+1,f
  1227                           
  1228                           ;smartkey.C: 380: timeTick = 0;
  1229  016E  01FA               	clrf	_timeTick
  1230  016F  01FB               	clrf	_timeTick+1
  1231  0170                     l5876:	
  1232                           
  1233                           ;smartkey.C: 385: RC0 =RA6;
  1234  0170  1F05               	btfss	5,6
  1235  0171  2976               	goto	u2540
  1236  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0174  1407               	bsf	7,0
  1239  0175  2979               	goto	l5878
  1240  0176                     u2540:	
  1241  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1242  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1243  0178  1007               	bcf	7,0
  1244  0179                     l5878:	
  1245                           
  1246                           ;smartkey.C: 389: if(mode_chek == 0)
  1247  0179  08C6               	movf	_mode_chek,f
  1248  017A  1903               	btfsc	3,2
  1249                           
  1250                           ;smartkey.C: 390: {
  1251                           ;smartkey.C: 392: if(RegStatus & 0x80)
  1252  017B  1FC2               	btfss	_RegStatus,7
  1253  017C  2A43               	goto	l5982
  1254                           
  1255                           ;smartkey.C: 393: {
  1256                           ;smartkey.C: 394: PAIE = 0;
  1257  017D  118B               	bcf	11,3
  1258                           
  1259                           ;smartkey.C: 397: RegStatus &= (~0x80);
  1260  017E  13C2               	bcf	_RegStatus,7
  1261                           
  1262                           ;smartkey.C: 409: {
  1263                           ;smartkey.C: 411: if ((RegStatus & 0x40) !=0){
  1264  017F  1B42               	btfsc	_RegStatus,6
  1265  0180  29F4               	goto	l5944
  1266  0181  2A3A               	goto	l5980
  1267  0182                     l5886:	
  1268                           
  1269                           ;smartkey.C: 417: lostDetect =0;
  1270  0182  01C5               	clrf	_lostDetect
  1271  0183                     L2:	
  1272  0183  3028               	movlw	40
  1273                           
  1274                           ;smartkey.C: 418: timeTick =0;
  1275  0184  01FA               	clrf	_timeTick
  1276  0185  01FB               	clrf	_timeTick+1
  1277                           
  1278                           ;smartkey.C: 419: tmp16 = 40;
  1279  0186  00BC               	movwf	main@tmp16
  1280  0187  01BD               	clrf	main@tmp16+1
  1281                           
  1282                           ;smartkey.C: 420: break;
  1283  0188  2A42               	goto	l793
  1284  0189                     l5890:	
  1285                           
  1286                           ;smartkey.C: 423: if(timeTick >30){
  1287  0189  3000               	movlw	0
  1288  018A  027B               	subwf	_timeTick+1,w
  1289  018B  301F               	movlw	31
  1290  018C  1903               	skipnz
  1291  018D  027A               	subwf	_timeTick,w
  1292  018E  1C03               	skipc
  1293  018F  2A42               	goto	l793
  1294  0190  3008               	movlw	8
  1295                           
  1296                           ;smartkey.C: 424: timeTick =0;
  1297  0191  01FA               	clrf	_timeTick
  1298  0192  01FB               	clrf	_timeTick+1
  1299                           
  1300                           ;smartkey.C: 426: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1301  0193  2694               	fcall	_READ_EEPROM
  1302  0194  3ACC               	xorlw	204
  1303  0195  1D03               	skipz
  1304  0196  299A               	goto	l5898
  1305  0197  3008               	movlw	8
  1306  0198  01F2               	clrf	?_WRITE_EEPROM
  1307  0199  25E6               	fcall	_WRITE_EEPROM
  1308  019A                     l5898:	
  1309                           
  1310                           ;smartkey.C: 428: if((mtOldState == 3)){
  1311  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1312  019B  0847               	movf	_mtOldState,w
  1313  019C  3A03               	xorlw	3
  1314  019D  1D03               	skipz
  1315  019E  29AD               	goto	l5908
  1316                           
  1317                           ;smartkey.C: 429: beepOn();TMR2ON = 0; beep(10,1);
  1318  019F  26A2               	fcall	_beepOn
  1319  01A0  300A               	movlw	10
  1320  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1321  01A2  1112               	bcf	18,2
  1322  01A3  01F6               	clrf	?_beep
  1323  01A4  0AF6               	incf	?_beep,f
  1324  01A5  2600               	fcall	_beep
  1325                           
  1326                           ;smartkey.C: 430: if(reAlertOn)reAlertOn =0;
  1327  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1328  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1329  01A8                     L1:	
  1330  01A8  0834               	movf	main@reAlertOn,w
  1331  01A9  1903               	btfsc	3,2
  1332  01AA  2A42               	goto	l793
  1333  01AB  01B4               	clrf	main@reAlertOn
  1334  01AC  2A42               	goto	l793
  1335  01AD                     l5908:	
  1336                           
  1337                           ;smartkey.C: 432: else if((mtOldState == 0)||(mtOldState == 4)){
  1338  01AD  0847               	movf	_mtOldState,w
  1339  01AE  1903               	btfsc	3,2
  1340  01AF  29B4               	goto	l784
  1341  01B0  0847               	movf	_mtOldState,w
  1342  01B1  3A04               	xorlw	4
  1343  01B2  1D03               	skipz
  1344  01B3  29C8               	goto	l5918
  1345  01B4                     l784:	
  1346  01B4  30AC               	movlw	172
  1347                           
  1348                           ;smartkey.C: 433: RegStatus |=(0x20);
  1349  01B5  16C2               	bsf	_RegStatus,5
  1350                           
  1351                           ;smartkey.C: 434: setState(1,3500);
  1352  01B6  00F2               	movwf	?_setState
  1353  01B7  300D               	movlw	13
  1354  01B8  00F3               	movwf	?_setState+1
  1355  01B9  3001               	movlw	1
  1356  01BA  267C               	fcall	_setState
  1357                           
  1358                           ;smartkey.C: 435: tmp16 = timeTick+40;
  1359  01BB  087B               	movf	_timeTick+1,w
  1360  01BC  00BD               	movwf	main@tmp16+1
  1361  01BD  087A               	movf	_timeTick,w
  1362  01BE  00BC               	movwf	main@tmp16
  1363  01BF  3028               	movlw	40
  1364  01C0  07BC               	addwf	main@tmp16,f
  1365  01C1  1803               	skipnc
  1366  01C2  0ABD               	incf	main@tmp16+1,f
  1367  01C3  300A               	movlw	10
  1368                           
  1369                           ;smartkey.C: 436: beep(10,1);
  1370  01C4  01F6               	clrf	?_beep
  1371  01C5  0AF6               	incf	?_beep,f
  1372  01C6  2600               	fcall	_beep
  1373                           
  1374                           ;smartkey.C: 437: }
  1375  01C7  2A42               	goto	l793
  1376  01C8                     l5918:	
  1377                           
  1378                           ;smartkey.C: 438: else if((mtOldState == 1)){
  1379  01C8  0B47               	decfsz	_mtOldState,w
  1380  01C9  2A42               	goto	l793
  1381  01CA  29A8               	goto	L1
  1382  01CB                     l5924:	
  1383                           ;smartkey.C: 441: }
  1384                           ;smartkey.C: 442: }
  1385                           ;smartkey.C: 443: break;
  1386                           
  1387                           ;smartkey.C: 440: if(reAlertOn)reAlertOn =0;
  1388                           
  1389                           
  1390                           ;smartkey.C: 446: if(timeTick > 200)
  1391  01CB  3000               	movlw	0
  1392  01CC  027B               	subwf	_timeTick+1,w
  1393  01CD  30C9               	movlw	201
  1394  01CE  1903               	skipnz
  1395  01CF  027A               	subwf	_timeTick,w
  1396  01D0  1C03               	skipc
  1397  01D1  2A42               	goto	l793
  1398                           
  1399                           ;smartkey.C: 447: {
  1400                           ;smartkey.C: 448: beepOff();
  1401  01D2  26A7               	fcall	_beepOff
  1402                           
  1403                           ;smartkey.C: 449: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1404  01D3  3008               	movlw	8
  1405  01D4  2694               	fcall	_READ_EEPROM
  1406  01D5  3ACC               	xorlw	204
  1407  01D6  1D03               	skipz
  1408  01D7  29DB               	goto	l5932
  1409  01D8  3008               	movlw	8
  1410  01D9  01F2               	clrf	?_WRITE_EEPROM
  1411  01DA  25E6               	fcall	_WRITE_EEPROM
  1412  01DB                     l5932:	
  1413  01DB  30AC               	movlw	172
  1414                           
  1415                           ;smartkey.C: 450: RegStatus |=(0x20);
  1416  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1417  01DD  16C2               	bsf	_RegStatus,5
  1418                           
  1419                           ;smartkey.C: 451: setState(1,3500);
  1420  01DE  00F2               	movwf	?_setState
  1421  01DF  300D               	movlw	13
  1422  01E0  00F3               	movwf	?_setState+1
  1423  01E1  3001               	movlw	1
  1424  01E2  267C               	fcall	_setState
  1425                           
  1426                           ;smartkey.C: 452: tmp16 = timeTick+40;
  1427  01E3  087B               	movf	_timeTick+1,w
  1428  01E4  00BD               	movwf	main@tmp16+1
  1429  01E5  087A               	movf	_timeTick,w
  1430  01E6  00BC               	movwf	main@tmp16
  1431  01E7  3028               	movlw	40
  1432  01E8  07BC               	addwf	main@tmp16,f
  1433  01E9  1803               	skipnc
  1434  01EA  0ABD               	incf	main@tmp16+1,f
  1435  01EB  2A42               	goto	l793
  1436  01EC                     l5938:	
  1437                           
  1438                           ;smartkey.C: 458: beepOff();
  1439  01EC  26A7               	fcall	_beepOff
  1440                           
  1441                           ;smartkey.C: 459: setState(2,300);
  1442  01ED  302C               	movlw	44
  1443  01EE  00F2               	movwf	?_setState
  1444  01EF  3001               	movlw	1
  1445  01F0  00F3               	movwf	?_setState+1
  1446  01F1  3002               	movlw	2
  1447  01F2  267C               	fcall	_setState
  1448                           
  1449                           ;smartkey.C: 460: break;
  1450  01F3  2A42               	goto	l793
  1451  01F4                     l5944:	
  1452  01F4  0848               	movf	_mtState,w
  1453                           
  1454                           ; Switch size 1, requested type "space"
  1455                           ; Number of cases is 5, Range of values is 0 to 4
  1456                           ; switch strategies available:
  1457                           ; Name         Instructions Cycles
  1458                           ; direct_byte           11     6 (fixed)
  1459                           ; simple_byte           16     9 (average)
  1460                           ; jumptable            260     6 (fixed)
  1461                           ; rangetable             9     6 (fixed)
  1462                           ; spacedrange           16     9 (fixed)
  1463                           ; locatedrange           5     3 (fixed)
  1464                           ;	Chosen strategy is direct_byte
  1465  01F5  0084               	movwf	4
  1466  01F6  3005               	movlw	5
  1467  01F7  0204               	subwf	4,w
  1468  01F8  1803               	skipnc
  1469  01F9  2A42               	goto	l793
  1470  01FA  3006               	movlw	high S6224
  1471  01FB  008A               	movwf	10
  1472  01FC  309D               	movlw	low S6224
  1473  01FD  0704               	addwf	4,w
  1474  01FE  0082               	movwf	2
  1475  01FF                     l5946:	
  1476                           
  1477                           ;smartkey.C: 477: {
  1478                           ;smartkey.C: 479: if(lostDetect==1 && timeTick< 1500)
  1479  01FF  0B45               	decfsz	_lostDetect,w
  1480  0200  2A25               	goto	l796
  1481  0201  3005               	movlw	5
  1482  0202  027B               	subwf	_timeTick+1,w
  1483  0203  30DC               	movlw	220
  1484  0204  1903               	skipnz
  1485  0205  027A               	subwf	_timeTick,w
  1486  0206  1803               	skipnc
  1487  0207  2A25               	goto	l796
  1488                           
  1489                           ;smartkey.C: 480: {
  1490                           ;smartkey.C: 481: if(READ_EEPROM(0x08)==0x00) WRITE_EEPROM(0x08,0xcc);
  1491  0208  3008               	movlw	8
  1492  0209  2694               	fcall	_READ_EEPROM
  1493  020A  3800               	iorlw	0
  1494  020B  1D03               	skipz
  1495  020C  2A11               	goto	l797
  1496  020D  30CC               	movlw	204
  1497  020E  00F2               	movwf	?_WRITE_EEPROM
  1498  020F  3008               	movlw	8
  1499  0210  25E6               	fcall	_WRITE_EEPROM
  1500  0211                     l797:	
  1501                           
  1502                           ;smartkey.C: 483: setState(3,1800);
  1503  0211  3008               	movlw	8
  1504  0212  00F2               	movwf	?_setState
  1505  0213  3007               	movlw	7
  1506  0214  00F3               	movwf	?_setState+1
  1507  0215  3003               	movlw	3
  1508  0216  267C               	fcall	_setState
  1509                           
  1510                           ;smartkey.C: 484: cntTmp = timeTick+40;
  1511  0217  087B               	movf	_timeTick+1,w
  1512  0218  00BF               	movwf	_cntTmp+1
  1513  0219  087A               	movf	_timeTick,w
  1514  021A  00BE               	movwf	_cntTmp
  1515  021B  3028               	movlw	40
  1516  021C  07BE               	addwf	_cntTmp,f
  1517  021D  1803               	skipnc
  1518  021E  0ABF               	incf	_cntTmp+1,f
  1519                           
  1520                           ;smartkey.C: 485: PR2 =11;
  1521  021F  300B               	movlw	11
  1522  0220  1683               	bsf	3,5	;RP0=1, select bank1
  1523  0221  0092               	movwf	18	;volatile
  1524                           
  1525                           ;smartkey.C: 486: beepOn();
  1526  0222  26A2               	fcall	_beepOn
  1527                           
  1528                           ;smartkey.C: 487: lostDetect =0;
  1529  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0224  2982               	goto	l5886
  1531  0225                     l796:	
  1532                           ;smartkey.C: 488: }
  1533                           
  1534                           
  1535                           ;smartkey.C: 489: else {
  1536                           ;smartkey.C: 490: lostDetect =1;
  1537  0225  01C5               	clrf	_lostDetect
  1538  0226  0AC5               	incf	_lostDetect,f
  1539  0227  2983               	goto	L2
  1540  0228                     l5966:	
  1541                           ;smartkey.C: 493: }
  1542                           ;smartkey.C: 494: timeTick =0;
  1543                           
  1544                           
  1545                           ;smartkey.C: 500: {
  1546                           ;smartkey.C: 501: timeTick =0;
  1547  0228  01FA               	clrf	_timeTick
  1548  0229  01FB               	clrf	_timeTick+1
  1549                           
  1550                           ;smartkey.C: 502: beepOn();TMR2ON = 0;
  1551  022A  26A2               	fcall	_beepOn
  1552  022B  3002               	movlw	2
  1553  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1554  022D  1112               	bcf	18,2
  1555                           
  1556                           ;smartkey.C: 503: beep(10,2);
  1557  022E  00F6               	movwf	?_beep
  1558  022F  300A               	movlw	10
  1559  0230  2600               	fcall	_beep
  1560                           
  1561                           ;smartkey.C: 504: if(mtOldState == 3){reAlertOn =1;}
  1562  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0233  0847               	movf	_mtOldState,w
  1565  0234  3A03               	xorlw	3
  1566  0235  1D03               	skipz
  1567  0236  2A42               	goto	l793
  1568  0237  01B4               	clrf	main@reAlertOn
  1569  0238  0AB4               	incf	main@reAlertOn,f
  1570  0239  2A42               	goto	l793
  1571  023A                     l5980:	
  1572  023A  0848               	movf	_mtState,w
  1573                           
  1574                           ; Switch size 1, requested type "space"
  1575                           ; Number of cases is 2, Range of values is 1 to 2
  1576                           ; switch strategies available:
  1577                           ; Name         Instructions Cycles
  1578                           ; simple_byte            7     4 (average)
  1579                           ; direct_byte           11     9 (fixed)
  1580                           ; jumptable            263     9 (fixed)
  1581                           ;	Chosen strategy is simple_byte
  1582  023B  3A01               	xorlw	1	; case 1
  1583  023C  1903               	skipnz
  1584  023D  29FF               	goto	l5946
  1585  023E  3A03               	xorlw	3	; case 2
  1586  023F  1903               	skipnz
  1587  0240  2A28               	goto	l5966
  1588  0241  2A42               	goto	l793
  1589  0242                     l793:	
  1590                           
  1591                           ;smartkey.C: 508: }
  1592                           ;smartkey.C: 510: }
  1593                           ;smartkey.C: 512: PAIE = 1;
  1594  0242  158B               	bsf	11,3
  1595  0243                     l5982:	
  1596                           
  1597                           ;smartkey.C: 513: }
  1598                           ;smartkey.C: 515: }
  1599                           ;smartkey.C: 519: {
  1600                           ;smartkey.C: 520: if((timeOut!=0)&&( timeTick >timeOut)){
  1601  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1603  0245  0841               	movf	_timeOut+1,w
  1604  0246  0440               	iorwf	_timeOut,w
  1605  0247  1903               	skipnz
  1606  0248  2AB5               	goto	l6058
  1607  0249  087B               	movf	_timeTick+1,w
  1608  024A  0241               	subwf	_timeOut+1,w
  1609  024B  1D03               	skipz
  1610  024C  2A4F               	goto	u2745
  1611  024D  087A               	movf	_timeTick,w
  1612  024E  0240               	subwf	_timeOut,w
  1613  024F                     u2745:	
  1614  024F  1C03               	btfss	3,0
  1615  0250  2AA7               	goto	l6056
  1616  0251  2AB5               	goto	l6058
  1617  0252                     l5988:	
  1618                           
  1619                           ;smartkey.C: 531: beepOff();
  1620  0252  26A7               	fcall	_beepOff
  1621  0253  302C               	movlw	44
  1622                           
  1623                           ;smartkey.C: 532: RegStatus &=(~0x20);
  1624  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1625  0255  12C2               	bcf	_RegStatus,5
  1626                           
  1627                           ;smartkey.C: 533: setState(2,300);
  1628  0256  00F2               	movwf	?_setState
  1629  0257  3001               	movlw	1
  1630  0258  00F3               	movwf	?_setState+1
  1631  0259  3002               	movlw	2
  1632  025A  267C               	fcall	_setState
  1633                           
  1634                           ;smartkey.C: 534: break;
  1635  025B  2AB5               	goto	l6058
  1636  025C                     l5994:	
  1637                           
  1638                           ;smartkey.C: 536: beepOff();
  1639  025C  26A7               	fcall	_beepOff
  1640                           
  1641                           ;smartkey.C: 537: delay_x10ms(20);
  1642  025D  3014               	movlw	20
  1643  025E  00F2               	movwf	?_delay_x10ms
  1644  025F  01F3               	clrf	?_delay_x10ms+1
  1645  0260  262E               	fcall	_delay_x10ms
  1646  0261                     L3:	
  1647                           
  1648                           ;smartkey.C: 538: beepOn();TMR2ON = 0;reAlertOn =0;
  1649  0261  26A2               	fcall	_beepOn
  1650  0262  301E               	movlw	30
  1651  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1652  0264  1112               	bcf	18,2
  1653  0265  01B4               	clrf	main@reAlertOn
  1654  0266  01F6               	clrf	?_beep
  1655  0267  0AF6               	incf	?_beep,f
  1656  0268  2600               	fcall	_beep
  1657  0269  3000               	movlw	0
  1658                           
  1659                           ;smartkey.C: 540: setState(0,0);
  1660  026A  01F2               	clrf	?_setState
  1661  026B  01F3               	clrf	?_setState+1
  1662  026C  267C               	fcall	_setState
  1663                           
  1664                           ;smartkey.C: 541: RA7 =0;
  1665  026D  1385               	bcf	5,7
  1666  026E                     l6010:	
  1667                           
  1668                           ;smartkey.C: 542: tmp16 = timeTick+40;
  1669  026E  087B               	movf	_timeTick+1,w
  1670  026F  00BD               	movwf	main@tmp16+1
  1671  0270  087A               	movf	_timeTick,w
  1672  0271  00BC               	movwf	main@tmp16
  1673  0272  3028               	movlw	40
  1674  0273  07BC               	addwf	main@tmp16,f
  1675  0274  1803               	skipnc
  1676  0275  0ABD               	incf	main@tmp16+1,f
  1677                           
  1678                           ;smartkey.C: 543: break;
  1679  0276  2AB5               	goto	l6058
  1680  0277                     l6014:	
  1681                           
  1682                           ;smartkey.C: 546: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1683  0277  3008               	movlw	8
  1684  0278  2694               	fcall	_READ_EEPROM
  1685  0279  3ACC               	xorlw	204
  1686  027A  1D03               	skipz
  1687  027B  2A7F               	goto	l6018
  1688  027C  3008               	movlw	8
  1689  027D  01F2               	clrf	?_WRITE_EEPROM
  1690  027E  25E6               	fcall	_WRITE_EEPROM
  1691  027F                     l6018:	
  1692                           
  1693                           ;smartkey.C: 548: if(reAlertOn){
  1694  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1695  0280  0834               	movf	main@reAlertOn,w
  1696  0281  1903               	btfsc	3,2
  1697  0282  2A96               	goto	l6028
  1698                           
  1699                           ;smartkey.C: 549: setState(4,6000);
  1700  0283  3070               	movlw	112
  1701  0284  00F2               	movwf	?_setState
  1702  0285  3017               	movlw	23
  1703  0286  00F3               	movwf	?_setState+1
  1704  0287  3004               	movlw	4
  1705  0288  267C               	fcall	_setState
  1706                           
  1707                           ;smartkey.C: 550: cntTmp = timeTick+40;
  1708  0289  087B               	movf	_timeTick+1,w
  1709  028A  00BF               	movwf	_cntTmp+1
  1710  028B  087A               	movf	_timeTick,w
  1711  028C  00BE               	movwf	_cntTmp
  1712  028D  3028               	movlw	40
  1713  028E  07BE               	addwf	_cntTmp,f
  1714  028F  1803               	skipnc
  1715  0290  0ABF               	incf	_cntTmp+1,f
  1716                           
  1717                           ;smartkey.C: 551: PR2 =11;
  1718  0291  300B               	movlw	11
  1719  0292  1683               	bsf	3,5	;RP0=1, select bank1
  1720  0293  0092               	movwf	18	;volatile
  1721                           
  1722                           ;smartkey.C: 552: beepOn();
  1723  0294  26A2               	fcall	_beepOn
  1724                           
  1725                           ;smartkey.C: 554: }else if(mtOldState == 0){
  1726  0295  2AB5               	goto	l6058
  1727  0296                     l6028:	
  1728  0296  08C7               	movf	_mtOldState,f
  1729  0297  1D03               	skipz
  1730  0298  2A61               	goto	L3
  1731                           
  1732                           ;smartkey.C: 556: beep(10,5);
  1733  0299  3005               	movlw	5
  1734  029A  00F6               	movwf	?_beep
  1735  029B  300A               	movlw	10
  1736  029C  2600               	fcall	_beep
  1737  029D  30AC               	movlw	172
  1738                           
  1739                           ;smartkey.C: 557: RegStatus |=(0x20);
  1740  029E  1283               	bcf	3,5	;RP0=0, select bank0
  1741  029F  1303               	bcf	3,6	;RP1=0, select bank0
  1742  02A0  16C2               	bsf	_RegStatus,5
  1743                           
  1744                           ;smartkey.C: 559: setState(1,3500);
  1745  02A1  00F2               	movwf	?_setState
  1746  02A2  300D               	movlw	13
  1747  02A3  00F3               	movwf	?_setState+1
  1748  02A4  3001               	movlw	1
  1749  02A5  267C               	fcall	_setState
  1750  02A6  2A6E               	goto	l6010
  1751  02A7                     l6056:	
  1752                           ;smartkey.C: 566: setState(0,0);
  1753                           
  1754                           ;smartkey.C: 565: beep(30,1);
  1755                           
  1756                           ;smartkey.C: 564: reAlertOn =0;
  1757                           
  1758                           ;smartkey.C: 563: beepOn();TMR2ON = 0;
  1759                           
  1760  02A7  0848               	movf	_mtState,w
  1761                           
  1762                           ; Switch size 1, requested type "space"
  1763                           ; Number of cases is 4, Range of values is 1 to 4
  1764                           ; switch strategies available:
  1765                           ; Name         Instructions Cycles
  1766                           ; simple_byte           13     7 (average)
  1767                           ; direct_byte           13     9 (fixed)
  1768                           ; jumptable            263     9 (fixed)
  1769                           ;	Chosen strategy is simple_byte
  1770  02A8  3A01               	xorlw	1	; case 1
  1771  02A9  1903               	skipnz
  1772  02AA  2AB5               	goto	l6058
  1773  02AB  3A03               	xorlw	3	; case 2
  1774  02AC  1903               	skipnz
  1775  02AD  2A77               	goto	l6014
  1776  02AE  3A01               	xorlw	1	; case 3
  1777  02AF  1903               	skipnz
  1778  02B0  2A52               	goto	l5988
  1779  02B1  3A07               	xorlw	7	; case 4
  1780  02B2  1903               	skipnz
  1781  02B3  2A5C               	goto	l5994
  1782  02B4  2AB5               	goto	l6058
  1783  02B5                     l6058:	
  1784                           
  1785                           ;smartkey.C: 572: }
  1786                           ;smartkey.C: 574: }
  1787                           ;smartkey.C: 576: if((timeTick>tmp16) && (mtState == 1) && mpuOk ==1){
  1788  02B5  087B               	movf	_timeTick+1,w
  1789  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1790  02B7  023D               	subwf	main@tmp16+1,w
  1791  02B8  1D03               	skipz
  1792  02B9  2ABC               	goto	u2785
  1793  02BA  087A               	movf	_timeTick,w
  1794  02BB  023C               	subwf	main@tmp16,w
  1795  02BC                     u2785:	
  1796  02BC  1803               	skipnc
  1797  02BD  2B58               	goto	l6136
  1798  02BE  0B48               	decfsz	_mtState,w
  1799  02BF  2B58               	goto	l6136
  1800  02C0  0B36               	decfsz	main@mpuOk,w
  1801  02C1  2B58               	goto	l6136
  1802                           
  1803                           ;smartkey.C: 577: tmp16 = timeTick+40;
  1804  02C2  087B               	movf	_timeTick+1,w
  1805  02C3  00BD               	movwf	main@tmp16+1
  1806  02C4  087A               	movf	_timeTick,w
  1807  02C5  00BC               	movwf	main@tmp16
  1808  02C6  3028               	movlw	40
  1809  02C7  07BC               	addwf	main@tmp16,f
  1810  02C8  1803               	skipnc
  1811  02C9  0ABD               	incf	main@tmp16+1,f
  1812                           
  1813                           ;smartkey.C: 578: if(AccRead(0x3b,buf,6)==0){
  1814  02CA  302E               	movlw	main@buf& (0+255)
  1815  02CB  00F6               	movwf	?_AccRead
  1816  02CC  3006               	movlw	6
  1817  02CD  01F7               	clrf	?_AccRead+1
  1818  02CE  00F8               	movwf	?_AccRead+2
  1819  02CF  303B               	movlw	59
  1820  02D0  2508               	fcall	_AccRead
  1821  02D1  3800               	iorlw	0
  1822  02D2  1D03               	skipz
  1823  02D3  2B58               	goto	l6136
  1824                           
  1825                           ;smartkey.C: 580: if(compe(buf[0], (signed char)acXsum,5) && compe(buf[2], (signed char)
      +                          acYsum,5)){
  1826  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  1827  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  1828  02D6  0839               	movf	main@acXsum,w
  1829  02D7  00F2               	movwf	?_compe
  1830  02D8  3005               	movlw	5
  1831  02D9  00F3               	movwf	?_compe+1
  1832  02DA  082E               	movf	main@buf,w
  1833  02DB  2483               	fcall	_compe
  1834  02DC  3A00               	xorlw	0
  1835  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1836  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  1837  02DF  1903               	skipnz
  1838  02E0  2B02               	goto	L6
  1839  02E1  0837               	movf	main@acYsum,w
  1840  02E2  00F2               	movwf	?_compe
  1841  02E3  3005               	movlw	5
  1842  02E4  00F3               	movwf	?_compe+1
  1843  02E5  0830               	movf	main@buf+2,w
  1844  02E6  2483               	fcall	_compe
  1845  02E7  3A00               	xorlw	0
  1846                           
  1847                           ;smartkey.C: 582: isSw++;
  1848  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1849  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1850  02EA  1903               	skipnz
  1851  02EB  2B02               	goto	L6
  1852  02EC  302D               	movlw	45
  1853  02ED  0ABB               	incf	main@isSw,f
  1854                           
  1855                           ;smartkey.C: 583: if(isSw >44){
  1856  02EE  023B               	subwf	main@isSw,w
  1857  02EF  1C03               	skipc
  1858  02F0  2AF5               	goto	l6084
  1859  02F1  3002               	movlw	2
  1860                           
  1861                           ;smartkey.C: 584: isSw =0;
  1862  02F2  01BB               	clrf	main@isSw
  1863                           
  1864                           ;smartkey.C: 585: vibrateOn=2;
  1865  02F3  00AD               	movwf	main@vibrateOn
  1866  02F4  2B2C               	goto	L4
  1867  02F5                     l6084:	
  1868                           ;smartkey.C: 588: }
  1869                           
  1870                           ;smartkey.C: 587: setState(2,300);
  1871                           
  1872                           ;smartkey.C: 586: RegStatus &=(~0x20);
  1873                           
  1874                           
  1875                           ;smartkey.C: 589: else if(isSw > 25){
  1876  02F5  301A               	movlw	26
  1877  02F6  023B               	subwf	main@isSw,w
  1878  02F7  1803               	btfsc	3,0
  1879                           
  1880                           ;smartkey.C: 590: if(isSw%2==0){
  1881  02F8  183B               	btfsc	main@isSw,0
  1882  02F9  2B33               	goto	l6114
  1883                           
  1884                           ;smartkey.C: 591: beepOn();TMR2ON = 0; beep(7,1);
  1885  02FA  26A2               	fcall	_beepOn
  1886  02FB  3007               	movlw	7
  1887  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1888  02FD  1112               	bcf	18,2
  1889  02FE  01F6               	clrf	?_beep
  1890  02FF  0AF6               	incf	?_beep,f
  1891  0300  2600               	fcall	_beep
  1892  0301  2B33               	goto	l6114
  1893  0302                     L6:	
  1894                           ;smartkey.C: 596: else{
  1895                           ;smartkey.C: 597: isSw =0;
  1896                           
  1897                           ;smartkey.C: 592: }
  1898                           ;smartkey.C: 593: }
  1899                           ;smartkey.C: 595: }
  1900                           
  1901  0302  01BB               	clrf	main@isSw
  1902                           
  1903                           ;smartkey.C: 600: if(compe(buf[0], acXOld,2) && compe(buf[2], acYOld,2)){
  1904  0303  082C               	movf	main@acXOld,w
  1905  0304  00F2               	movwf	?_compe
  1906  0305  3002               	movlw	2
  1907  0306  00F3               	movwf	?_compe+1
  1908  0307  082E               	movf	main@buf,w
  1909  0308  2483               	fcall	_compe
  1910  0309  3A00               	xorlw	0
  1911  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1912  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1913  030C  1903               	skipnz
  1914  030D  2B35               	goto	L7
  1915  030E  082B               	movf	main@acYOld,w
  1916  030F  00F2               	movwf	?_compe
  1917  0310  3002               	movlw	2
  1918  0311  00F3               	movwf	?_compe+1
  1919  0312  0830               	movf	main@buf+2,w
  1920  0313  2483               	fcall	_compe
  1921  0314  3A00               	xorlw	0
  1922                           
  1923                           ;smartkey.C: 601: isWait++;
  1924  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1926  0317  1903               	skipnz
  1927  0318  2B35               	goto	L7
  1928  0319  0AA8               	incf	main@isWait,f
  1929  031A  1903               	skipnz
  1930  031B  0AA9               	incf	main@isWait+1,f
  1931                           
  1932                           ;smartkey.C: 602: if(isWait==450){
  1933  031C  0329               	decf	main@isWait+1,w
  1934  031D  30C2               	movlw	194
  1935  031E  1903               	skipnz
  1936  031F  0628               	xorwf	main@isWait,w
  1937  0320  1D03               	skipz
  1938  0321  2B33               	goto	l6114
  1939  0322  3002               	movlw	2
  1940                           
  1941                           ;smartkey.C: 603: isWait = 0;
  1942  0323  01A8               	clrf	main@isWait
  1943  0324  01A9               	clrf	main@isWait+1
  1944                           
  1945                           ;smartkey.C: 604: beep(7,2);
  1946  0325  00F6               	movwf	?_beep
  1947  0326  3007               	movlw	7
  1948  0327  2600               	fcall	_beep
  1949                           
  1950                           ;smartkey.C: 605: vibrateOn=1;
  1951  0328  1283               	bcf	3,5	;RP0=0, select bank0
  1952  0329  1303               	bcf	3,6	;RP1=0, select bank0
  1953  032A  01AD               	clrf	main@vibrateOn
  1954  032B  0AAD               	incf	main@vibrateOn,f
  1955  032C                     L4:	
  1956  032C  302C               	movlw	44
  1957                           
  1958                           ;smartkey.C: 606: RegStatus &=(~0x20);
  1959  032D  12C2               	bcf	_RegStatus,5
  1960                           
  1961                           ;smartkey.C: 607: setState(2,300);
  1962  032E  00F2               	movwf	?_setState
  1963  032F  3001               	movlw	1
  1964  0330  00F3               	movwf	?_setState+1
  1965  0331  3002               	movlw	2
  1966  0332  267C               	fcall	_setState
  1967  0333                     l6114:	
  1968                           
  1969                           ;smartkey.C: 608: }
  1970                           ;smartkey.C: 609: }
  1971                           ;smartkey.C: 611: }
  1972                           ;smartkey.C: 613: if( (buf[4] > -31) && (buf[4] < 31)) {
  1973  0333  1283               	bcf	3,5	;RP0=0, select bank0
  1974  0334  1303               	bcf	3,6	;RP1=0, select bank0
  1975  0335                     L7:	
  1976  0335  0832               	movf	main@buf+4,w
  1977  0336  3A80               	xorlw	128
  1978  0337  3E9E               	addlw	158
  1979  0338  1C03               	skipc
  1980  0339  2B53               	goto	l6130
  1981  033A  0832               	movf	main@buf+4,w
  1982  033B  3A80               	xorlw	128
  1983  033C  3E61               	addlw	-159
  1984  033D  1803               	skipnc
  1985  033E  2B53               	goto	l6130
  1986  033F  3005               	movlw	5
  1987                           
  1988                           ;smartkey.C: 614: isFall++;
  1989  0340  0AAA               	incf	main@isFall,f
  1990                           
  1991                           ;smartkey.C: 615: if(isFall >4){
  1992  0341  022A               	subwf	main@isFall,w
  1993  0342  1C03               	skipc
  1994  0343  2B54               	goto	l6132
  1995  0344  3002               	movlw	2
  1996                           
  1997                           ;smartkey.C: 616: isFall =0;
  1998  0345  01AA               	clrf	main@isFall
  1999                           
  2000                           ;smartkey.C: 617: beep(7,2);
  2001  0346  00F6               	movwf	?_beep
  2002  0347  3007               	movlw	7
  2003  0348  2600               	fcall	_beep
  2004  0349  302C               	movlw	44
  2005                           
  2006                           ;smartkey.C: 618: RegStatus &=(~0x20);
  2007  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2008  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2009  034C  12C2               	bcf	_RegStatus,5
  2010                           
  2011                           ;smartkey.C: 619: setState(2,300);
  2012  034D  00F2               	movwf	?_setState
  2013  034E  3001               	movlw	1
  2014  034F  00F3               	movwf	?_setState+1
  2015  0350  3002               	movlw	2
  2016  0351  267C               	fcall	_setState
  2017  0352  2B54               	goto	l6132
  2018  0353                     l6130:	
  2019                           
  2020                           ;smartkey.C: 622: else{
  2021                           ;smartkey.C: 623: isFall=0;
  2022  0353  01AA               	clrf	main@isFall
  2023  0354                     l6132:	
  2024                           
  2025                           ;smartkey.C: 624: }
  2026                           ;smartkey.C: 626: acYOld = buf[2];acXOld = buf[0];
  2027  0354  0830               	movf	main@buf+2,w
  2028  0355  00AB               	movwf	main@acYOld
  2029  0356  082E               	movf	main@buf,w
  2030  0357  00AC               	movwf	main@acXOld
  2031  0358                     l6136:	
  2032                           
  2033                           ;smartkey.C: 627: }
  2034                           ;smartkey.C: 629: }
  2035                           ;smartkey.C: 632: if((timeTick>tmp16) && (mtState == 0 ) && mpuOk ==1){
  2036  0358  087B               	movf	_timeTick+1,w
  2037  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2038  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2039  035B  023D               	subwf	main@tmp16+1,w
  2040  035C  1D03               	skipz
  2041  035D  2B60               	goto	u2935
  2042  035E  087A               	movf	_timeTick,w
  2043  035F  023C               	subwf	main@tmp16,w
  2044  0360                     u2935:	
  2045  0360  1803               	skipnc
  2046  0361  2BC0               	goto	l6184
  2047  0362  08C8               	movf	_mtState,f
  2048  0363  1D03               	skipz
  2049  0364  2BC0               	goto	l6184
  2050  0365  0B36               	decfsz	main@mpuOk,w
  2051  0366  2BC0               	goto	l6184
  2052                           
  2053                           ;smartkey.C: 634: if(timeTick >65000) timeTick =0;
  2054  0367  30FD               	movlw	253
  2055  0368  027B               	subwf	_timeTick+1,w
  2056  0369  30E9               	movlw	233
  2057  036A  1903               	skipnz
  2058  036B  027A               	subwf	_timeTick,w
  2059  036C  1C03               	skipc
  2060  036D  2B70               	goto	l6146
  2061  036E  01FA               	clrf	_timeTick
  2062  036F  01FB               	clrf	_timeTick+1
  2063  0370                     l6146:	
  2064                           
  2065                           ;smartkey.C: 635: tmp16 = timeTick+40;
  2066  0370  087B               	movf	_timeTick+1,w
  2067  0371  00BD               	movwf	main@tmp16+1
  2068  0372  087A               	movf	_timeTick,w
  2069  0373  00BC               	movwf	main@tmp16
  2070  0374  3028               	movlw	40
  2071  0375  07BC               	addwf	main@tmp16,f
  2072  0376  1803               	skipnc
  2073  0377  0ABD               	incf	main@tmp16+1,f
  2074                           
  2075                           ;smartkey.C: 637: if(AccRead(0x3b,buf,6)==0){
  2076  0378  302E               	movlw	main@buf& (0+255)
  2077  0379  00F6               	movwf	?_AccRead
  2078  037A  3006               	movlw	6
  2079  037B  01F7               	clrf	?_AccRead+1
  2080  037C  00F8               	movwf	?_AccRead+2
  2081  037D  303B               	movlw	59
  2082  037E  2508               	fcall	_AccRead
  2083  037F  3800               	iorlw	0
  2084                           
  2085                           ;smartkey.C: 638: if(vibrateOn==1){
  2086  0380  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0381  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0382  1D03               	skipz
  2089  0383  2BC2               	goto	L8
  2090  0384  0B2D               	decfsz	main@vibrateOn,w
  2091  0385  2B9E               	goto	l6168
  2092                           
  2093                           ;smartkey.C: 639: if(compe(buf[0],acXOld ,2) && compe(buf[2],acYOld ,2)){
  2094  0386  082C               	movf	main@acXOld,w
  2095  0387  00F2               	movwf	?_compe
  2096  0388  3002               	movlw	2
  2097  0389  00F3               	movwf	?_compe+1
  2098  038A  082E               	movf	main@buf,w
  2099  038B  2483               	fcall	_compe
  2100  038C  3A00               	xorlw	0
  2101  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2102  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2103  038F  1903               	skipnz
  2104  0390  2BB8               	goto	L9
  2105  0391  082B               	movf	main@acYOld,w
  2106  0392  00F2               	movwf	?_compe
  2107  0393  3002               	movlw	2
  2108  0394  00F3               	movwf	?_compe+1
  2109  0395  0830               	movf	main@buf+2,w
  2110  0396  2483               	fcall	_compe
  2111  0397  3A00               	xorlw	0
  2112  0398  1903               	skipnz
  2113  0399  2BB6               	goto	l6176
  2114  039A                     l6158:	
  2115                           
  2116                           ;smartkey.C: 641: isSw=0;
  2117  039A  1283               	bcf	3,5	;RP0=0, select bank0
  2118  039B  1303               	bcf	3,6	;RP1=0, select bank0
  2119  039C  01BB               	clrf	main@isSw
  2120                           
  2121                           ;smartkey.C: 644: }
  2122  039D  2BC0               	goto	l6184
  2123  039E                     l6168:	
  2124                           ;smartkey.C: 649: {
  2125                           ;smartkey.C: 650: beepOn();TMR2ON = 0; beep(7,3);
  2126                           
  2127                           ;smartkey.C: 645: else{
  2128                           ;smartkey.C: 646: isSw++;
  2129                           
  2130                           
  2131                           ;smartkey.C: 654: else if(vibrateOn==2){
  2132  039E  082D               	movf	main@vibrateOn,w
  2133  039F  3A02               	xorlw	2
  2134  03A0  1D03               	skipz
  2135  03A1  2BC0               	goto	l6184
  2136                           
  2137                           ;smartkey.C: 655: if(compe(buf[0],(signed char)acXsum ,5) && compe(buf[2],(signed char)a
      +                          cYsum ,5)){
  2138  03A2  0839               	movf	main@acXsum,w
  2139  03A3  00F2               	movwf	?_compe
  2140  03A4  3005               	movlw	5
  2141  03A5  00F3               	movwf	?_compe+1
  2142  03A6  082E               	movf	main@buf,w
  2143  03A7  2483               	fcall	_compe
  2144  03A8  3A00               	xorlw	0
  2145  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2146  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2147  03AB  1903               	skipnz
  2148  03AC  2BB8               	goto	L9
  2149  03AD  0837               	movf	main@acYsum,w
  2150  03AE  00F2               	movwf	?_compe
  2151  03AF  3005               	movlw	5
  2152  03B0  00F3               	movwf	?_compe+1
  2153  03B1  0830               	movf	main@buf+2,w
  2154  03B2  2483               	fcall	_compe
  2155  03B3  3A00               	xorlw	0
  2156  03B4  1D03               	btfss	3,2
  2157  03B5  2B9A               	goto	l6158
  2158  03B6                     l6176:	
  2159                           
  2160                           ;smartkey.C: 661: else{
  2161                           ;smartkey.C: 662: isSw++;
  2162  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2163  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2164  03B8                     L9:	
  2165  03B8  0ABB               	incf	main@isSw,f
  2166                           
  2167                           ;smartkey.C: 665: {
  2168                           ;smartkey.C: 666: beepOn();TMR2ON = 0; beep(7,3);
  2169  03B9  26A2               	fcall	_beepOn
  2170  03BA  3003               	movlw	3
  2171  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2172  03BC  1112               	bcf	18,2
  2173  03BD  00F6               	movwf	?_beep
  2174  03BE  3007               	movlw	7
  2175  03BF  2600               	fcall	_beep
  2176  03C0                     l6184:	
  2177                           
  2178                           ;smartkey.C: 667: }
  2179                           ;smartkey.C: 668: }
  2180                           ;smartkey.C: 669: }
  2181                           ;smartkey.C: 671: }
  2182                           ;smartkey.C: 674: }
  2183                           ;smartkey.C: 676: if(RegStatus & 0x20) {RC4 =1;RC2 =1;}
  2184  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  2185  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  2186  03C2                     L8:	
  2187  03C2  1EC2               	btfss	_RegStatus,5
  2188  03C3  2BC7               	goto	l837
  2189  03C4  1607               	bsf	7,4
  2190  03C5  1507               	bsf	7,2
  2191  03C6  2970               	goto	l5876
  2192  03C7                     l837:	
  2193                           
  2194                           ;smartkey.C: 677: else {RC4 =0;RC2 =0;}
  2195  03C7  1207               	bcf	7,4
  2196  03C8  1107               	bcf	7,2
  2197  03C9  2970               	goto	l5876
  2198  03CA                     __end_of_main:	
  2199                           
  2200                           	psect	swtext1
  2201  069D                     __pswtext1:	
  2202  069D                     S6224:	
  2203  069D  2A42               	ljmp	l793
  2204  069E  2982               	ljmp	l5886
  2205  069F  2989               	ljmp	l5890
  2206  06A0  29CB               	ljmp	l5924
  2207  06A1  29EC               	ljmp	l5938
  2208                           
  2209                           	psect	text761
  2210  0508                     __ptext761:	
  2211 ;; =============== function _main ends ============
  2212                           
  2213                           
  2214 ;; *************** function _AccRead *****************
  2215 ;; Defined at:
  2216 ;;		line 31 in file "mpu6x.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  rAdd            1    wreg     unsigned char 
  2219 ;;  dat             2    6[COMMON] PTR unsigned char 
  2220 ;;		 -> RAM(256), main@buf(6), 
  2221 ;;  len             1    8[COMMON] unsigned char 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  rAdd            1    3[BANK0 ] unsigned char 
  2224 ;;  i               1    4[BANK0 ] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      unsigned char 
  2227 ;; Registers used:
  2228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 60/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1
  2234 ;;      Params:         3       0       0
  2235 ;;      Locals:         0       2       0
  2236 ;;      Temps:          0       3       0
  2237 ;;      Totals:         3       5       0
  2238 ;;Total ram usage:        8 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    2
  2241 ;; This function calls:
  2242 ;;		_swI2C_Start
  2243 ;;		_swI2C_WriteByte
  2244 ;;		_swI2C_ReadByte
  2245 ;;		_swI2C_Stop
  2246 ;; This function is called by:
  2247 ;;		_main
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250  0508                     _AccRead:	
  2251                           
  2252                           ; Regs used in _AccRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2253                           ;AccRead@rAdd stored from wreg
  2254  0508  00A3               	movwf	AccRead@rAdd
  2255                           
  2256                           ;mpu6x.c: 32: unsigned char i;
  2257                           ;mpu6x.c: 34: swI2C_Start();
  2258  0509  2618               	fcall	_swI2C_Start
  2259                           
  2260                           ;mpu6x.c: 36: if(swI2C_WriteByte(0x68<<1)== 0 )
  2261  050A  30D0               	movlw	208
  2262  050B  2547               	fcall	_swI2C_WriteByte
  2263  050C  3800               	iorlw	0
  2264  050D  1D03               	skipz
  2265  050E  3401               	retlw	1
  2266                           
  2267                           ;mpu6x.c: 37: {
  2268                           ;mpu6x.c: 38: if(swI2C_WriteByte(rAdd)==0 )
  2269  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2270  0510  0823               	movf	AccRead@rAdd,w
  2271  0511  2547               	fcall	_swI2C_WriteByte
  2272  0512  3800               	iorlw	0
  2273  0513  1D03               	skipz
  2274  0514  3402               	retlw	2
  2275                           
  2276                           ;mpu6x.c: 39: {
  2277                           ;mpu6x.c: 40: swI2C_Start();
  2278  0515  2618               	fcall	_swI2C_Start
  2279                           
  2280                           ;mpu6x.c: 41: if(swI2C_WriteByte((0x68<<1)|1)== 0 ){
  2281  0516  30D1               	movlw	209
  2282  0517  2547               	fcall	_swI2C_WriteByte
  2283  0518  3800               	iorlw	0
  2284  0519  1D03               	skipz
  2285  051A  3401               	retlw	1
  2286                           
  2287                           ;mpu6x.c: 43: for(i=0; i<(len-1);i++){
  2288  051B  1283               	bcf	3,5	;RP0=0, select bank0
  2289  051C  01A4               	clrf	AccRead@i
  2290  051D                     l5742:	
  2291  051D  0878               	movf	AccRead@len,w
  2292  051E  3EFF               	addlw	255
  2293  051F  00A0               	movwf	??_AccRead
  2294  0520  30FF               	movlw	255
  2295  0521  1803               	skipnc
  2296  0522  3000               	movlw	0
  2297  0523  00A1               	movwf	??_AccRead+1
  2298  0524  3A80               	xorlw	128
  2299  0525  3C80               	sublw	128
  2300  0526  1D03               	skipz
  2301  0527  2D2A               	goto	u2415
  2302  0528  0820               	movf	??_AccRead,w
  2303  0529  0224               	subwf	AccRead@i,w
  2304  052A                     u2415:	
  2305                           
  2306                           ;mpu6x.c: 44: dat[i]=swI2C_ReadByte(1);
  2307  052A  3001               	movlw	1
  2308  052B  1803               	btfsc	3,0
  2309  052C  2D31               	goto	L10
  2310  052D  24C7               	fcall	_swI2C_ReadByte
  2311  052E  2535               	fcall	PL2	;call to abstracted procedure
  2312  052F  0AA4               	incf	AccRead@i,f
  2313  0530  2D1D               	goto	l5742
  2314  0531                     L10:	
  2315                           ;mpu6x.c: 45: }
  2316                           ;mpu6x.c: 46: dat[i]=swI2C_ReadByte(1);
  2317                           
  2318  0531  24C7               	fcall	_swI2C_ReadByte
  2319  0532  2535               	fcall	PL2	;call to abstracted procedure
  2320                           
  2321                           ;mpu6x.c: 47: swI2C_Stop();
  2322  0533  2650               	fcall	_swI2C_Stop
  2323                           
  2324                           ;mpu6x.c: 48: return 0;
  2325  0534  3400               	retlw	0
  2326  0535                     __end_of_AccRead:	
  2327                           ;mpu6x.c: 54: else
  2328                           ;mpu6x.c: 55: return 2;
  2329                           
  2330                           ;mpu6x.c: 51: else
  2331                           ;mpu6x.c: 52: return 1;
  2332                           
  2333  0535                     PL2:	
  2334  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0537  00A0               	movwf	??_AccRead
  2337  0538  0824               	movf	AccRead@i,w
  2338  0539  0776               	addwf	AccRead@dat,w
  2339  053A  00A1               	movwf	??_AccRead+1
  2340  053B  0877               	movf	AccRead@dat+1,w
  2341  053C  1803               	skipnc
  2342  053D  3E01               	addlw	1
  2343  053E  00A2               	movwf	??_AccRead+2
  2344  053F  0821               	movf	??_AccRead+1,w
  2345  0540  0084               	movwf	4
  2346  0541  1383               	bcf	3,7
  2347  0542  1822               	btfsc	??_AccRead+2,0
  2348  0543  1783               	bsf	3,7
  2349  0544  0820               	movf	??_AccRead,w
  2350  0545  0080               	movwf	0
  2351  0546  0008               	return
  2352                           
  2353                           	psect	text762
  2354  0585                     __ptext762:	
  2355 ;; =============== function _AccRead ends ============
  2356                           
  2357                           
  2358 ;; *************** function _AccWrite *****************
  2359 ;; Defined at:
  2360 ;;		line 4 in file "mpu6x.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  rAdd            1    wreg     unsigned char 
  2363 ;;  dat             2    5[COMMON] PTR unsigned char 
  2364 ;;		 -> RAM(256), 
  2365 ;;  len             1    7[COMMON] unsigned char 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  rAdd            1    0[BANK0 ] unsigned char 
  2368 ;;  i               1    1[BANK0 ] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      unsigned char 
  2371 ;; Registers used:
  2372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 60/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1
  2378 ;;      Params:         3       0       0
  2379 ;;      Locals:         0       2       0
  2380 ;;      Temps:          2       0       0
  2381 ;;      Totals:         5       2       0
  2382 ;;Total ram usage:        7 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    2
  2385 ;; This function calls:
  2386 ;;		_swI2C_Start
  2387 ;;		_swI2C_WriteByte
  2388 ;;		_swI2C_Stop
  2389 ;; This function is called by:
  2390 ;;		_main
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393  0585                     _AccWrite:	
  2394                           
  2395                           ; Regs used in _AccWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2396                           ;AccWrite@rAdd stored from wreg
  2397  0585  00A0               	movwf	AccWrite@rAdd
  2398                           
  2399                           ;mpu6x.c: 5: unsigned char i;
  2400                           ;mpu6x.c: 6: swI2C_Start();
  2401  0586  2618               	fcall	_swI2C_Start
  2402                           
  2403                           ;mpu6x.c: 8: if(swI2C_WriteByte(0x68<<1)== 0 )
  2404  0587  30D0               	movlw	208
  2405  0588  2547               	fcall	_swI2C_WriteByte
  2406  0589  3800               	iorlw	0
  2407  058A  1D03               	skipz
  2408  058B  3401               	retlw	1
  2409                           
  2410                           ;mpu6x.c: 9: {
  2411                           ;mpu6x.c: 10: if(swI2C_WriteByte(rAdd)==0 )
  2412  058C  1283               	bcf	3,5	;RP0=0, select bank0
  2413  058D  0820               	movf	AccWrite@rAdd,w
  2414  058E  2547               	fcall	_swI2C_WriteByte
  2415  058F  3800               	iorlw	0
  2416  0590  1D03               	skipz
  2417  0591  3402               	retlw	2
  2418                           
  2419                           ;mpu6x.c: 11: {
  2420                           ;mpu6x.c: 12: for(i=0; i<len;i++){
  2421  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0593  01A1               	clrf	AccWrite@i
  2423  0594                     l5712:	
  2424  0594  0877               	movf	AccWrite@len,w
  2425  0595  0221               	subwf	AccWrite@i,w
  2426  0596  1803               	btfsc	3,0
  2427  0597  2DAE               	goto	l5714
  2428                           
  2429                           ;mpu6x.c: 13: if(swI2C_WriteByte(dat[i])==1 ){
  2430  0598  0821               	movf	AccWrite@i,w
  2431  0599  0775               	addwf	AccWrite@dat,w
  2432  059A  00F8               	movwf	??_AccWrite
  2433  059B  0876               	movf	AccWrite@dat+1,w
  2434  059C  1803               	skipnc
  2435  059D  3E01               	addlw	1
  2436  059E  00F9               	movwf	??_AccWrite+1
  2437  059F  0878               	movf	??_AccWrite,w
  2438  05A0  0084               	movwf	4
  2439  05A1  1783               	bsf	3,7
  2440  05A2  1C79               	btfss	??_AccWrite+1,0
  2441  05A3  1383               	bcf	3,7
  2442  05A4  0800               	movf	0,w
  2443  05A5  2547               	fcall	_swI2C_WriteByte
  2444  05A6  3A01               	xorlw	1
  2445  05A7  1D03               	skipz
  2446  05A8  2DAB               	goto	l5710
  2447                           
  2448                           ;mpu6x.c: 14: swI2C_Stop();
  2449  05A9  2650               	fcall	_swI2C_Stop
  2450                           
  2451                           ;mpu6x.c: 15: return 3;
  2452  05AA  3403               	retlw	3
  2453  05AB                     l5710:	
  2454  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2455  05AC  0AA1               	incf	AccWrite@i,f
  2456  05AD  2D94               	goto	l5712
  2457  05AE                     l5714:	
  2458                           
  2459                           ;mpu6x.c: 16: }
  2460                           ;mpu6x.c: 17: }
  2461                           ;mpu6x.c: 18: swI2C_Stop();
  2462  05AE  2650               	fcall	_swI2C_Stop
  2463                           
  2464                           ;mpu6x.c: 19: return 0;
  2465  05AF  3400               	retlw	0
  2466  05B0                     __end_of_AccWrite:	
  2467                           ;mpu6x.c: 24: else
  2468                           ;mpu6x.c: 25: return 1;
  2469                           
  2470                           ;mpu6x.c: 21: else
  2471                           ;mpu6x.c: 22: return 2;
  2472                           
  2473                           
  2474                           	psect	text763
  2475  04C7                     __ptext763:	
  2476 ;; =============== function _AccWrite ends ============
  2477                           
  2478                           
  2479 ;; *************** function _swI2C_ReadByte *****************
  2480 ;; Defined at:
  2481 ;;		line 112 in file "SWI2C.C"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  Ack             1    wreg     unsigned char 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  Ack             1    3[COMMON] unsigned char 
  2486 ;;  i               1    5[COMMON] unsigned char 
  2487 ;;  dat             1    4[COMMON] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      unsigned char 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1
  2497 ;;      Params:         0       0       0
  2498 ;;      Locals:         3       0       0
  2499 ;;      Temps:          1       0       0
  2500 ;;      Totals:         4       0       0
  2501 ;;Total ram usage:        4 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    1
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_AccRead
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510  04C7                     _swI2C_ReadByte:	
  2511                           
  2512                           ; Regs used in _swI2C_ReadByte: [wreg+status,2+status,0]
  2513                           ;swI2C_ReadByte@Ack stored from wreg
  2514  04C7  00F3               	movwf	swI2C_ReadByte@Ack
  2515  04C8  01F4               	clrf	swI2C_ReadByte@dat
  2516                           
  2517                           ;SWI2C.C: 115: RA0 = 0;
  2518  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2519  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  2520  04CB  1005               	bcf	5,0
  2521                           
  2522                           ;SWI2C.C: 116: TRISA |=0x02;;
  2523  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  2524  04CD  1485               	bsf	5,1	;volatile
  2525                           
  2526                           ;SWI2C.C: 117: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2527  04CE  2CCF               	nop2	;2 cycle nop
  2528  04CF  2CD0               	nop2	;2 cycle nop
  2529  04D0  2CD1               	nop2	;2 cycle nop
  2530  04D1  2CD2               	nop2	;2 cycle nop
  2531                           
  2532                           ;SWI2C.C: 118: for(i=0;i<8;i++)
  2533  04D2  01F5               	clrf	swI2C_ReadByte@i
  2534  04D3                     l2172:	
  2535                           
  2536                           ;SWI2C.C: 119: {
  2537                           ;SWI2C.C: 120: RA0 = 1;
  2538  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2539  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2540  04D5  1405               	bsf	5,0
  2541                           
  2542                           ;SWI2C.C: 121: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2543  04D6  2CD7               	nop2	;2 cycle nop
  2544  04D7  2CD8               	nop2	;2 cycle nop
  2545  04D8  2CD9               	nop2	;2 cycle nop
  2546  04D9  2CDA               	nop2	;2 cycle nop
  2547                           
  2548                           ;SWI2C.C: 122: dat = dat<<1 |(RA1 & 1 );
  2549  04DA  3000               	movlw	0
  2550  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  2551  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  2552  04DD  1885               	btfsc	5,1
  2553  04DE  3001               	movlw	1
  2554  04DF  3901               	andlw	1
  2555  04E0  00F2               	movwf	??_swI2C_ReadByte
  2556  04E1  1003               	clrc
  2557  04E2  0D74               	rlf	swI2C_ReadByte@dat,w
  2558  04E3  0472               	iorwf	??_swI2C_ReadByte,w
  2559  04E4  00F4               	movwf	swI2C_ReadByte@dat
  2560                           
  2561                           ;SWI2C.C: 125: RA0 = 0;
  2562  04E5  1005               	bcf	5,0
  2563                           
  2564                           ;SWI2C.C: 126: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2565  04E6  2CE7               	nop2	;2 cycle nop
  2566  04E7  2CE8               	nop2	;2 cycle nop
  2567  04E8  2CE9               	nop2	;2 cycle nop
  2568  04E9  2CEA               	nop2	;2 cycle nop
  2569  04EA  3008               	movlw	8
  2570  04EB  0AF5               	incf	swI2C_ReadByte@i,f
  2571  04EC  0275               	subwf	swI2C_ReadByte@i,w
  2572  04ED  1C03               	skipc
  2573  04EE  2CD3               	goto	l2172
  2574                           
  2575                           ;SWI2C.C: 127: }
  2576                           ;SWI2C.C: 129: TRISA &=0xfD;;
  2577  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2578  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  2579  04F1  1085               	bcf	5,1	;volatile
  2580                           
  2581                           ;SWI2C.C: 131: RA1 = (Ack) ? 0 : 1;
  2582  04F2  08F3               	movf	swI2C_ReadByte@Ack,f
  2583  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2584  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  2585  04F5  1D03               	btfss	3,2
  2586  04F6  2CF9               	goto	L11
  2587  04F7  1485               	bsf	5,1
  2588  04F8  2CFA               	goto	u1594
  2589  04F9                     L11:	
  2590  04F9  1085               	bcf	5,1
  2591  04FA                     u1594:	
  2592                           
  2593                           ;SWI2C.C: 132: RA0 = 1;
  2594  04FA  1405               	bsf	5,0
  2595                           
  2596                           ;SWI2C.C: 133: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2597  04FB  2CFC               	nop2	;2 cycle nop
  2598  04FC  2CFD               	nop2	;2 cycle nop
  2599  04FD  2CFE               	nop2	;2 cycle nop
  2600  04FE  2CFF               	nop2	;2 cycle nop
  2601                           
  2602                           ;SWI2C.C: 134: RA0 = 0;
  2603  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  2604  0500  1303               	bcf	3,6	;RP1=0, select bank0
  2605  0501  1005               	bcf	5,0
  2606                           
  2607                           ;SWI2C.C: 135: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2608  0502  2D03               	nop2	;2 cycle nop
  2609  0503  2D04               	nop2	;2 cycle nop
  2610  0504  2D05               	nop2	;2 cycle nop
  2611  0505  2D06               	nop2	;2 cycle nop
  2612                           
  2613                           ;SWI2C.C: 136: return dat;
  2614  0506  0874               	movf	swI2C_ReadByte@dat,w
  2615  0507  0008               	return
  2616  0508                     __end_of_swI2C_ReadByte:	
  2617                           
  2618                           	psect	text764
  2619  0547                     __ptext764:	
  2620 ;; =============== function _swI2C_ReadByte ends ============
  2621                           
  2622                           
  2623 ;; *************** function _swI2C_WriteByte *****************
  2624 ;; Defined at:
  2625 ;;		line 86 in file "SWI2C.C"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  dat             1    wreg     unsigned char 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  dat             1    3[COMMON] unsigned char 
  2630 ;;  i               1    4[COMMON] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      unsigned char 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 60/20
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1
  2640 ;;      Params:         0       0       0
  2641 ;;      Locals:         2       0       0
  2642 ;;      Temps:          1       0       0
  2643 ;;      Totals:         3       0       0
  2644 ;;Total ram usage:        3 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    1
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_AccWrite
  2651 ;;		_AccRead
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654  0547                     _swI2C_WriteByte:	
  2655                           
  2656                           ; Regs used in _swI2C_WriteByte: [wreg+status,2+status,0]
  2657                           ;swI2C_WriteByte@dat stored from wreg
  2658  0547  00F3               	movwf	swI2C_WriteByte@dat
  2659                           
  2660                           ;SWI2C.C: 89: TRISA &=0xfD;;
  2661  0548  1683               	bsf	3,5	;RP0=1, select bank1
  2662  0549  1303               	bcf	3,6	;RP1=0, select bank1
  2663  054A  1085               	bcf	5,1	;volatile
  2664                           
  2665                           ;SWI2C.C: 90: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2666  054B  2D4C               	nop2	;2 cycle nop
  2667  054C  2D4D               	nop2	;2 cycle nop
  2668  054D  2D4E               	nop2	;2 cycle nop
  2669  054E  2D4F               	nop2	;2 cycle nop
  2670                           
  2671                           ;SWI2C.C: 91: for(i=0;i<8;i++)
  2672  054F  01F4               	clrf	swI2C_WriteByte@i
  2673  0550                     l2167:	
  2674                           
  2675                           ;SWI2C.C: 92: {
  2676                           ;SWI2C.C: 93: RA1 = (dat&0x80) ? 1:0;
  2677  0550  1FF3               	btfss	swI2C_WriteByte@dat,7
  2678  0551  2D56               	goto	u2310
  2679  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0554  1485               	bsf	5,1
  2682  0555  2D59               	goto	u2324
  2683  0556                     u2310:	
  2684  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2685  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2686  0558  1085               	bcf	5,1
  2687  0559                     u2324:	
  2688                           
  2689                           ;SWI2C.C: 94: dat<<=1;
  2690  0559  1003               	clrc
  2691  055A  0DF3               	rlf	swI2C_WriteByte@dat,f
  2692                           
  2693                           ;SWI2C.C: 95: RA0 = 1;
  2694  055B  1405               	bsf	5,0
  2695                           
  2696                           ;SWI2C.C: 96: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2697  055C  2D5D               	nop2	;2 cycle nop
  2698  055D  2D5E               	nop2	;2 cycle nop
  2699  055E  2D5F               	nop2	;2 cycle nop
  2700  055F  2D60               	nop2	;2 cycle nop
  2701                           
  2702                           ;SWI2C.C: 97: RA0 = 0;
  2703  0560  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0561  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0562  1005               	bcf	5,0
  2706                           
  2707                           ;SWI2C.C: 98: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2708  0563  2D64               	nop2	;2 cycle nop
  2709  0564  2D65               	nop2	;2 cycle nop
  2710  0565  2D66               	nop2	;2 cycle nop
  2711  0566  2D67               	nop2	;2 cycle nop
  2712  0567  3008               	movlw	8
  2713  0568  0AF4               	incf	swI2C_WriteByte@i,f
  2714  0569  0274               	subwf	swI2C_WriteByte@i,w
  2715  056A  1C03               	skipc
  2716  056B  2D50               	goto	l2167
  2717                           
  2718                           ;SWI2C.C: 99: }
  2719                           ;SWI2C.C: 101: TRISA |=0x02;;
  2720  056C  1683               	bsf	3,5	;RP0=1, select bank1
  2721  056D  1303               	bcf	3,6	;RP1=0, select bank1
  2722  056E  1485               	bsf	5,1	;volatile
  2723                           
  2724                           ;SWI2C.C: 102: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2725  056F  2D70               	nop2	;2 cycle nop
  2726  0570  2D71               	nop2	;2 cycle nop
  2727  0571  2D72               	nop2	;2 cycle nop
  2728  0572  2D73               	nop2	;2 cycle nop
  2729                           
  2730                           ;SWI2C.C: 103: RA0 = 1;
  2731  0573  1283               	bcf	3,5	;RP0=0, select bank0
  2732  0574  1303               	bcf	3,6	;RP1=0, select bank0
  2733  0575  1405               	bsf	5,0
  2734                           
  2735                           ;SWI2C.C: 104: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2736  0576  2D77               	nop2	;2 cycle nop
  2737  0577  2D78               	nop2	;2 cycle nop
  2738  0578  2D79               	nop2	;2 cycle nop
  2739  0579  2D7A               	nop2	;2 cycle nop
  2740                           
  2741                           ;SWI2C.C: 105: i= RA1;
  2742  057A  3000               	movlw	0
  2743  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2744  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2745  057D  1885               	btfsc	5,1
  2746  057E  3001               	movlw	1
  2747  057F  00F4               	movwf	swI2C_WriteByte@i
  2748                           
  2749                           ;SWI2C.C: 106: RA0 = 0;
  2750  0580  1005               	bcf	5,0
  2751                           
  2752                           ;SWI2C.C: 107: TRISA &=0xfD;;
  2753  0581  1683               	bsf	3,5	;RP0=1, select bank1
  2754  0582  1085               	bcf	5,1	;volatile
  2755                           
  2756                           ;SWI2C.C: 108: return i;
  2757  0583  0874               	movf	swI2C_WriteByte@i,w
  2758  0584  0008               	return
  2759  0585                     __end_of_swI2C_WriteByte:	
  2760                           
  2761                           	psect	text765
  2762  0650                     __ptext765:	
  2763 ;; =============== function _swI2C_WriteByte ends ============
  2764                           
  2765                           
  2766 ;; *************** function _swI2C_Stop *****************
  2767 ;; Defined at:
  2768 ;;		line 35 in file "SWI2C.C"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;		None               void
  2775 ;; Registers used:
  2776 ;;		wreg
  2777 ;; Tracked objects:
  2778 ;;		On entry : 40/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1
  2782 ;;      Params:         0       0       0
  2783 ;;      Locals:         0       0       0
  2784 ;;      Temps:          1       0       0
  2785 ;;      Totals:         1       0       0
  2786 ;;Total ram usage:        1 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    1
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_AccWrite
  2793 ;;		_AccRead
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796  0650                     _swI2C_Stop:	
  2797                           
  2798                           ;SWI2C.C: 37: RA1 = 0;
  2799                           
  2800                           ; Regs used in _swI2C_Stop: [wreg]
  2801  0650  1283               	bcf	3,5	;RP0=0, select bank0
  2802  0651  1085               	bcf	5,1
  2803                           
  2804                           ;SWI2C.C: 38: RA0 = 1;
  2805  0652  1405               	bsf	5,0
  2806                           
  2807                           ;SWI2C.C: 39: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2808  0653  2E54               	nop2	;2 cycle nop
  2809  0654  2E55               	nop2	;2 cycle nop
  2810  0655  2E56               	nop2	;2 cycle nop
  2811  0656  2E57               	nop2	;2 cycle nop
  2812                           
  2813                           ;SWI2C.C: 40: RA1 = 1;
  2814  0657  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0658  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0659  1485               	bsf	5,1
  2817                           
  2818                           ;SWI2C.C: 41: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2819  065A  2E5B               	nop2	;2 cycle nop
  2820  065B  2E5C               	nop2	;2 cycle nop
  2821  065C  2E5D               	nop2	;2 cycle nop
  2822  065D  2E5E               	nop2	;2 cycle nop
  2823  065E  0008               	return
  2824  065F                     __end_of_swI2C_Stop:	
  2825                           
  2826                           	psect	text766
  2827  0618                     __ptext766:	
  2828 ;; =============== function _swI2C_Stop ends ============
  2829                           
  2830                           
  2831 ;; *************** function _swI2C_Start *****************
  2832 ;; Defined at:
  2833 ;;		line 22 in file "SWI2C.C"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;		None               void
  2840 ;; Registers used:
  2841 ;;		wreg
  2842 ;; Tracked objects:
  2843 ;;		On entry : 40/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1
  2847 ;;      Params:         0       0       0
  2848 ;;      Locals:         0       0       0
  2849 ;;      Temps:          1       0       0
  2850 ;;      Totals:         1       0       0
  2851 ;;Total ram usage:        1 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    1
  2854 ;; This function calls:
  2855 ;;		Nothing
  2856 ;; This function is called by:
  2857 ;;		_AccWrite
  2858 ;;		_AccRead
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861  0618                     _swI2C_Start:	
  2862                           
  2863                           ;SWI2C.C: 24: RA0 = 1;
  2864                           
  2865                           ; Regs used in _swI2C_Start: [wreg]
  2866  0618  1283               	bcf	3,5	;RP0=0, select bank0
  2867  0619  1405               	bsf	5,0
  2868                           
  2869                           ;SWI2C.C: 26: RA1 = 1;
  2870  061A  1485               	bsf	5,1
  2871                           
  2872                           ;SWI2C.C: 27: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2873  061B  2E1C               	nop2	;2 cycle nop
  2874  061C  2E1D               	nop2	;2 cycle nop
  2875  061D  2E1E               	nop2	;2 cycle nop
  2876  061E  2E1F               	nop2	;2 cycle nop
  2877                           
  2878                           ;SWI2C.C: 28: RA1 = 0;
  2879  061F  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0620  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0621  1085               	bcf	5,1
  2882                           
  2883                           ;SWI2C.C: 29: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2884  0622  2E23               	nop2	;2 cycle nop
  2885  0623  2E24               	nop2	;2 cycle nop
  2886  0624  2E25               	nop2	;2 cycle nop
  2887  0625  2E26               	nop2	;2 cycle nop
  2888                           
  2889                           ;SWI2C.C: 30: RA0 = 0;
  2890  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2891  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2892  0628  1005               	bcf	5,0
  2893                           
  2894                           ;SWI2C.C: 31: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2895  0629  2E2A               	nop2	;2 cycle nop
  2896  062A  2E2B               	nop2	;2 cycle nop
  2897  062B  2E2C               	nop2	;2 cycle nop
  2898  062C  2E2D               	nop2	;2 cycle nop
  2899  062D  0008               	return
  2900  062E                     __end_of_swI2C_Start:	
  2901                           
  2902                           	psect	text767
  2903  05B0                     __ptext767:	
  2904 ;; =============== function _swI2C_Start ends ============
  2905                           
  2906                           
  2907 ;; *************** function _swI2C_Init *****************
  2908 ;; Defined at:
  2909 ;;		line 8 in file "SWI2C.C"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;		None               void
  2916 ;; Registers used:
  2917 ;;		wreg
  2918 ;; Tracked objects:
  2919 ;;		On entry : 60/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1
  2923 ;;      Params:         0       0       0
  2924 ;;      Locals:         0       0       0
  2925 ;;      Temps:          1       0       0
  2926 ;;      Totals:         1       0       0
  2927 ;;Total ram usage:        1 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    1
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_main
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936  05B0                     _swI2C_Init:	
  2937                           
  2938                           ;SWI2C.C: 10: TRISA &=0xfD;;
  2939                           
  2940                           ; Regs used in _swI2C_Init: [wreg]
  2941  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  2942  05B1  1085               	bcf	5,1	;volatile
  2943                           
  2944                           ;SWI2C.C: 11: TRISA &=0xfe;;
  2945  05B2  1005               	bcf	5,0	;volatile
  2946                           
  2947                           ;SWI2C.C: 12: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2948  05B3  2DB4               	nop2	;2 cycle nop
  2949  05B4  2DB5               	nop2	;2 cycle nop
  2950  05B5  2DB6               	nop2	;2 cycle nop
  2951  05B6  2DB7               	nop2	;2 cycle nop
  2952                           
  2953                           ;SWI2C.C: 13: RA0 = 1;
  2954  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  2955  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  2956  05B9  1405               	bsf	5,0
  2957                           
  2958                           ;SWI2C.C: 14: RA1 = 1;
  2959  05BA  1485               	bsf	5,1
  2960                           
  2961                           ;SWI2C.C: 15: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2962  05BB  2DBC               	nop2	;2 cycle nop
  2963  05BC  2DBD               	nop2	;2 cycle nop
  2964  05BD  2DBE               	nop2	;2 cycle nop
  2965  05BE  2DBF               	nop2	;2 cycle nop
  2966                           
  2967                           ;SWI2C.C: 16: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2968  05BF  2DC0               	nop2	;2 cycle nop
  2969  05C0  2DC1               	nop2	;2 cycle nop
  2970  05C1  2DC2               	nop2	;2 cycle nop
  2971  05C2  2DC3               	nop2	;2 cycle nop
  2972                           
  2973                           ;SWI2C.C: 17: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2974  05C3  2DC4               	nop2	;2 cycle nop
  2975  05C4  2DC5               	nop2	;2 cycle nop
  2976  05C5  2DC6               	nop2	;2 cycle nop
  2977  05C6  2DC7               	nop2	;2 cycle nop
  2978                           
  2979                           ;SWI2C.C: 18: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2980  05C7  2DC8               	nop2	;2 cycle nop
  2981  05C8  2DC9               	nop2	;2 cycle nop
  2982  05C9  2DCA               	nop2	;2 cycle nop
  2983  05CA  2DCB               	nop2	;2 cycle nop
  2984  05CB  0008               	return
  2985  05CC                     __end_of_swI2C_Init:	
  2986                           
  2987                           	psect	text768
  2988  068A                     __ptext768:	
  2989 ;; =============== function _swI2C_Init ends ============
  2990                           
  2991                           
  2992 ;; *************** function _sys_init *****************
  2993 ;; Defined at:
  2994 ;;		line 3 in file "sysinit.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;		None
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;		None
  2999 ;; Return value:  Size  Location     Type
  3000 ;;		None               void
  3001 ;; Registers used:
  3002 ;;		wreg
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 60/20
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1
  3008 ;;      Params:         0       0       0
  3009 ;;      Locals:         0       0       0
  3010 ;;      Temps:          0       0       0
  3011 ;;      Totals:         0       0       0
  3012 ;;Total ram usage:        0 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    1
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021  068A                     _sys_init:	
  3022                           
  3023                           ;sysinit.c: 21: OSCCON = 0B01010001;
  3024                           
  3025                           ; Regs used in _sys_init: [wreg]
  3026  068A  3051               	movlw	81
  3027  068B  1683               	bsf	3,5	;RP0=1, select bank1
  3028  068C  1303               	bcf	3,6	;RP1=0, select bank1
  3029  068D  008F               	movwf	15	;volatile
  3030                           
  3031                           ;sysinit.c: 22: _nop();
  3032  068E  0000               	nop
  3033  068F                     l1492:	
  3034                           ;sysinit.c: 28: while(HTS==0);
  3035                           
  3036  068F  1683               	bsf	3,5	;RP0=1, select bank1
  3037  0690  1303               	bcf	3,6	;RP1=0, select bank1
  3038  0691  190F               	btfsc	15,2
  3039  0692  0008               	return
  3040  0693  2E8F               	goto	l1492
  3041  0694                     __end_of_sys_init:	
  3042                           
  3043                           	psect	text769
  3044  0600                     __ptext769:	
  3045 ;; =============== function _sys_init ends ============
  3046                           
  3047                           
  3048 ;; *************** function _beep *****************
  3049 ;; Defined at:
  3050 ;;		line 182 in file "smartkey.C"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  delay           1    wreg     unsigned char 
  3053 ;;  rep             1    6[COMMON] unsigned char 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  delay           1    7[COMMON] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;		None               void
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0, pclath, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: FFF9F/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1
  3065 ;;      Params:         1       0       0
  3066 ;;      Locals:         1       0       0
  3067 ;;      Temps:          0       0       0
  3068 ;;      Totals:         2       0       0
  3069 ;;Total ram usage:        2 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    2
  3072 ;; This function calls:
  3073 ;;		_delay_x10ms
  3074 ;; This function is called by:
  3075 ;;		_main
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078  0600                     _beep:	
  3079                           
  3080                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  3081                           ;beep@delay stored from wreg
  3082  0600  00F7               	movwf	beep@delay
  3083  0601                     l5036:	
  3084                           ;smartkey.C: 185: {
  3085                           ;smartkey.C: 187: while(rep--){
  3086                           
  3087  0601  03F6               	decf	beep@rep,f
  3088  0602  0876               	movf	beep@rep,w
  3089  0603  3AFF               	xorlw	255
  3090  0604  1903               	btfsc	3,2
  3091  0605  0008               	return
  3092  0606  300C               	movlw	12
  3093                           
  3094                           ;smartkey.C: 188: TMR2ON = 1;
  3095  0607  1283               	bcf	3,5	;RP0=0, select bank0
  3096  0608  1303               	bcf	3,6	;RP1=0, select bank0
  3097  0609  1512               	bsf	18,2
  3098                           
  3099                           ;smartkey.C: 189: PR2 = 12;
  3100  060A  1683               	bsf	3,5	;RP0=1, select bank1
  3101  060B  0092               	movwf	18	;volatile
  3102                           
  3103                           ;smartkey.C: 190: delay_x10ms(delay);
  3104  060C  0877               	movf	beep@delay,w
  3105  060D  00F2               	movwf	?_delay_x10ms
  3106  060E  01F3               	clrf	?_delay_x10ms+1
  3107  060F  262E               	fcall	_delay_x10ms
  3108  0610  3014               	movlw	20
  3109                           
  3110                           ;smartkey.C: 191: TMR2ON = 0;RA4 =0;
  3111  0611  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0612  1112               	bcf	18,2
  3113  0613  1205               	bcf	5,4
  3114                           
  3115                           ;smartkey.C: 192: delay_x10ms(20);
  3116  0614  00F2               	movwf	?_delay_x10ms
  3117  0615  01F3               	clrf	?_delay_x10ms+1
  3118  0616  262E               	fcall	_delay_x10ms
  3119  0617  2E01               	goto	l5036
  3120  0618                     __end_of_beep:	
  3121                           
  3122                           	psect	text770
  3123  043E                     __ptext770:	
  3124 ;; =============== function _beep ends ============
  3125                           
  3126                           
  3127 ;; *************** function ___awdiv *****************
  3128 ;; Defined at:
  3129 ;;		line 5 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\awdiv.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  divisor         2    2[COMMON] int 
  3132 ;;  dividend        2    4[COMMON] int 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  quotient        2    8[COMMON] int 
  3135 ;;  sign            1    7[COMMON] unsigned char 
  3136 ;;  counter         1    6[COMMON] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  2    2[COMMON] int 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 60/0
  3143 ;;		On exit  : 60/0
  3144 ;;		Unchanged: FFF9F/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1
  3146 ;;      Params:         4       0       0
  3147 ;;      Locals:         4       0       0
  3148 ;;      Temps:          0       0       0
  3149 ;;      Totals:         8       0       0
  3150 ;;Total ram usage:        8 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    1
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159  043E                     ___awdiv:	
  3160                           
  3161                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3162  043E  01F7               	clrf	___awdiv@sign
  3163  043F  1FF3               	btfss	___awdiv@divisor+1,7
  3164  0440  2C48               	goto	l4988
  3165  0441  09F2               	comf	___awdiv@divisor,f
  3166  0442  09F3               	comf	___awdiv@divisor+1,f
  3167  0443  0AF2               	incf	___awdiv@divisor,f
  3168  0444  1903               	skipnz
  3169  0445  0AF3               	incf	___awdiv@divisor+1,f
  3170  0446  01F7               	clrf	___awdiv@sign
  3171  0447  0AF7               	incf	___awdiv@sign,f
  3172  0448                     l4988:	
  3173  0448  1FF5               	btfss	___awdiv@dividend+1,7
  3174  0449  2C51               	goto	l4994
  3175  044A  09F4               	comf	___awdiv@dividend,f
  3176  044B  09F5               	comf	___awdiv@dividend+1,f
  3177  044C  0AF4               	incf	___awdiv@dividend,f
  3178  044D  1903               	skipnz
  3179  044E  0AF5               	incf	___awdiv@dividend+1,f
  3180  044F  3001               	movlw	1
  3181  0450  06F7               	xorwf	___awdiv@sign,f
  3182  0451                     l4994:	
  3183  0451  01F8               	clrf	___awdiv@quotient
  3184  0452  01F9               	clrf	___awdiv@quotient+1
  3185  0453  0873               	movf	___awdiv@divisor+1,w
  3186  0454  0472               	iorwf	___awdiv@divisor,w
  3187  0455  1903               	skipnz
  3188  0456  2C76               	goto	l5016
  3189  0457  01F6               	clrf	___awdiv@counter
  3190  0458                     L12:	
  3191  0458  0AF6               	incf	___awdiv@counter,f
  3192  0459  1BF3               	btfsc	___awdiv@divisor+1,7
  3193  045A  2C5F               	goto	l5004
  3194  045B  1003               	clrc
  3195  045C  0DF2               	rlf	___awdiv@divisor,f
  3196  045D  0DF3               	rlf	___awdiv@divisor+1,f
  3197  045E  2C58               	goto	L12
  3198  045F                     l5004:	
  3199  045F  1003               	clrc
  3200  0460  0DF8               	rlf	___awdiv@quotient,f
  3201  0461  0DF9               	rlf	___awdiv@quotient+1,f
  3202  0462  0873               	movf	___awdiv@divisor+1,w
  3203  0463  0275               	subwf	___awdiv@dividend+1,w
  3204  0464  1D03               	skipz
  3205  0465  2C68               	goto	u1495
  3206  0466  0872               	movf	___awdiv@divisor,w
  3207  0467  0274               	subwf	___awdiv@dividend,w
  3208  0468                     u1495:	
  3209  0468  1C03               	skipc
  3210  0469  2C72               	goto	L13
  3211  046A  0872               	movf	___awdiv@divisor,w
  3212  046B  02F4               	subwf	___awdiv@dividend,f
  3213  046C  0873               	movf	___awdiv@divisor+1,w
  3214  046D  1C03               	skipc
  3215  046E  03F5               	decf	___awdiv@dividend+1,f
  3216  046F  02F5               	subwf	___awdiv@dividend+1,f
  3217  0470  1478               	bsf	___awdiv@quotient,0
  3218  0471  1003               	clrc
  3219  0472                     L13:	
  3220  0472  0CF3               	rrf	___awdiv@divisor+1,f
  3221  0473  0CF2               	rrf	___awdiv@divisor,f
  3222  0474  0BF6               	decfsz	___awdiv@counter,f
  3223  0475  2C5F               	goto	l5004
  3224  0476                     l5016:	
  3225  0476  0877               	movf	___awdiv@sign,w
  3226  0477  1903               	btfsc	3,2
  3227  0478  2C7E               	goto	l5020
  3228  0479  09F8               	comf	___awdiv@quotient,f
  3229  047A  09F9               	comf	___awdiv@quotient+1,f
  3230  047B  0AF8               	incf	___awdiv@quotient,f
  3231  047C  1903               	skipnz
  3232  047D  0AF9               	incf	___awdiv@quotient+1,f
  3233  047E                     l5020:	
  3234  047E  0879               	movf	___awdiv@quotient+1,w
  3235  047F  00F3               	movwf	?___awdiv+1
  3236  0480  0878               	movf	___awdiv@quotient,w
  3237  0481  00F2               	movwf	?___awdiv
  3238  0482  0008               	return
  3239  0483                     __end_of___awdiv:	
  3240                           
  3241                           	psect	text771
  3242  065F                     __ptext771:	
  3243 ;; =============== function ___awdiv ends ============
  3244                           
  3245                           
  3246 ;; *************** function _timer_init *****************
  3247 ;; Defined at:
  3248 ;;		line 45 in file "sysinit.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;		None
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;		None
  3253 ;; Return value:  Size  Location     Type
  3254 ;;		None               void
  3255 ;; Registers used:
  3256 ;;		wreg, status,2
  3257 ;; Tracked objects:
  3258 ;;		On entry : 60/20
  3259 ;;		On exit  : 60/0
  3260 ;;		Unchanged: FFF9F/0
  3261 ;; Data sizes:     COMMON   BANK0   BANK1
  3262 ;;      Params:         0       0       0
  3263 ;;      Locals:         0       0       0
  3264 ;;      Temps:          0       0       0
  3265 ;;      Totals:         0       0       0
  3266 ;;Total ram usage:        0 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    1
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_main
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275  065F                     _timer_init:	
  3276                           
  3277                           ;sysinit.c: 55: TMR2 = 0;
  3278                           
  3279                           ; Regs used in _timer_init: [wreg+status,2]
  3280  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3281  0660  0191               	clrf	17	;volatile
  3282                           
  3283                           ;sysinit.c: 56: PR2 = 0;
  3284  0661  1683               	bsf	3,5	;RP0=1, select bank1
  3285  0662  0192               	clrf	18	;volatile
  3286                           
  3287                           ;sysinit.c: 57: T2CON = 0B00101001;
  3288  0663  3029               	movlw	41
  3289  0664  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0665  0092               	movwf	18	;volatile
  3291                           
  3292                           ;sysinit.c: 60: TMR1H = -5000>>8;
  3293  0666  30EC               	movlw	236
  3294  0667  008F               	movwf	15	;volatile
  3295                           
  3296                           ;sysinit.c: 61: TMR1L = -5000;
  3297  0668  3078               	movlw	120
  3298  0669  008E               	movwf	14	;volatile
  3299                           
  3300                           ;sysinit.c: 62: T1CON = 0B00100001;
  3301  066A  3021               	movlw	33
  3302  066B  0090               	movwf	16	;volatile
  3303                           
  3304                           ;sysinit.c: 63: TMR1ON = 1;
  3305  066C  1410               	bsf	16,0
  3306  066D  0008               	return
  3307  066E                     __end_of_timer_init:	
  3308                           
  3309                           	psect	text772
  3310  05CC                     __ptext772:	
  3311 ;; =============== function _timer_init ends ============
  3312                           
  3313                           
  3314 ;; *************** function _int_init *****************
  3315 ;; Defined at:
  3316 ;;		line 67 in file "sysinit.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;		None
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  tmp             1    0        unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;		None               void
  3323 ;; Registers used:
  3324 ;;		wreg, status,2
  3325 ;; Tracked objects:
  3326 ;;		On entry : 60/20
  3327 ;;		On exit  : 60/20
  3328 ;;		Unchanged: FFF9F/0
  3329 ;; Data sizes:     COMMON   BANK0   BANK1
  3330 ;;      Params:         0       0       0
  3331 ;;      Locals:         0       0       0
  3332 ;;      Temps:          0       0       0
  3333 ;;      Totals:         0       0       0
  3334 ;;Total ram usage:        0 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    1
  3337 ;; This function calls:
  3338 ;;		Nothing
  3339 ;; This function is called by:
  3340 ;;		_main
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343  05CC                     _int_init:	
  3344                           
  3345                           ;sysinit.c: 72: INTCON = 0B00000000;
  3346                           
  3347                           ; Regs used in _int_init: [wreg+status,2]
  3348  05CC  018B               	clrf	11	;volatile
  3349                           
  3350                           ;sysinit.c: 73: PIE1 = 0B00000000;
  3351  05CD  018C               	clrf	12	;volatile
  3352                           
  3353                           ;sysinit.c: 74: PIR1 = 0B00000000;
  3354  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3355  05CF  018C               	clrf	12	;volatile
  3356                           
  3357                           ;sysinit.c: 76: IOCA6 = 1;
  3358  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  3359  05D1  1716               	bsf	22,6
  3360                           
  3361                           ;sysinit.c: 77: tmp = PORTA;
  3362  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  3363  05D3  0805               	movf	5,w	;volatile
  3364                           
  3365                           ;sysinit.c: 78: PAIF = 0;
  3366  05D4  100B               	bcf	11,0
  3367                           
  3368                           ;sysinit.c: 79: PAIE = 0;
  3369  05D5  118B               	bcf	11,3
  3370                           
  3371                           ;sysinit.c: 82: INTEDG = 0;
  3372  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  3373  05D7  1301               	bcf	1,6
  3374                           
  3375                           ;sysinit.c: 83: INTF = 0;
  3376  05D8  108B               	bcf	11,1
  3377                           
  3378                           ;sysinit.c: 84: INTE = 0;
  3379  05D9  120B               	bcf	11,4
  3380                           
  3381                           ;sysinit.c: 86: TMR2IF = 0;
  3382  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3383  05DB  108C               	bcf	12,1
  3384                           
  3385                           ;sysinit.c: 87: TMR2IE = 1;
  3386  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  3387  05DD  148C               	bsf	12,1
  3388                           
  3389                           ;sysinit.c: 88: TMR2ON = 0;
  3390  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3391  05DF  1112               	bcf	18,2
  3392                           
  3393                           ;sysinit.c: 90: TMR1IF = 0;
  3394  05E0  100C               	bcf	12,0
  3395                           
  3396                           ;sysinit.c: 91: TMR1IE = 1;
  3397  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  3398  05E2  140C               	bsf	12,0
  3399                           
  3400                           ;sysinit.c: 94: PEIE = 1;
  3401  05E3  170B               	bsf	11,6
  3402                           
  3403                           ;sysinit.c: 96: GIE = 1;
  3404  05E4  178B               	bsf	11,7
  3405  05E5  0008               	return
  3406  05E6                     __end_of_int_init:	
  3407                           
  3408                           	psect	text773
  3409  066E                     __ptext773:	
  3410 ;; =============== function _int_init ends ============
  3411                           
  3412                           
  3413 ;; *************** function _gpio_init *****************
  3414 ;; Defined at:
  3415 ;;		line 32 in file "sysinit.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;		None
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;		None               void
  3422 ;; Registers used:
  3423 ;;		wreg, status,2
  3424 ;; Tracked objects:
  3425 ;;		On entry : 60/20
  3426 ;;		On exit  : 60/20
  3427 ;;		Unchanged: FFF9F/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1
  3429 ;;      Params:         0       0       0
  3430 ;;      Locals:         0       0       0
  3431 ;;      Temps:          0       0       0
  3432 ;;      Totals:         0       0       0
  3433 ;;Total ram usage:        0 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    1
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_main
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442  066E                     _gpio_init:	
  3443                           
  3444                           ;sysinit.c: 34: PORTA = 0B00000000;
  3445                           
  3446                           ; Regs used in _gpio_init: [wreg+status,2]
  3447  066E  1283               	bcf	3,5	;RP0=0, select bank0
  3448  066F  0185               	clrf	5	;volatile
  3449                           
  3450                           ;sysinit.c: 35: TRISA = 0B01101110;
  3451  0670  306E               	movlw	110
  3452  0671  1683               	bsf	3,5	;RP0=1, select bank1
  3453  0672  0085               	movwf	5	;volatile
  3454                           
  3455                           ;sysinit.c: 36: WPUA = 0B10000000;
  3456  0673  3080               	movlw	128
  3457  0674  0095               	movwf	21	;volatile
  3458                           
  3459                           ;sysinit.c: 38: PORTC = 0B00000000;
  3460  0675  1283               	bcf	3,5	;RP0=0, select bank0
  3461  0676  0187               	clrf	7	;volatile
  3462                           
  3463                           ;sysinit.c: 39: TRISC = 0B11101011;
  3464  0677  30EB               	movlw	235
  3465  0678  1683               	bsf	3,5	;RP0=1, select bank1
  3466  0679  0087               	movwf	7	;volatile
  3467                           
  3468                           ;sysinit.c: 40: WPUC = 0B00000000;
  3469  067A  0188               	clrf	8	;volatile
  3470  067B  0008               	return
  3471  067C                     __end_of_gpio_init:	
  3472                           
  3473                           	psect	text774
  3474  0483                     __ptext774:	
  3475 ;; =============== function _gpio_init ends ============
  3476                           
  3477                           
  3478 ;; *************** function _compe *****************
  3479 ;; Defined at:
  3480 ;;		line 233 in file "smartkey.C"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  a               1    wreg     char 
  3483 ;;  b               1    2[COMMON] char 
  3484 ;;  dt              1    3[COMMON] char 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  a               1    9[COMMON] char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      unsigned char 
  3489 ;; Registers used:
  3490 ;;		wreg
  3491 ;; Tracked objects:
  3492 ;;		On entry : 60/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: FFE00/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1
  3496 ;;      Params:         2       0       0
  3497 ;;      Locals:         1       0       0
  3498 ;;      Temps:          5       0       0
  3499 ;;      Totals:         8       0       0
  3500 ;;Total ram usage:        8 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    1
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_main
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509  0483                     _compe:	
  3510                           
  3511                           ; Regs used in _compe: [wreg]
  3512                           ;compe@a stored from wreg
  3513  0483  00F9               	movwf	compe@a
  3514                           
  3515                           ;smartkey.C: 235: if(a>b){
  3516  0484  0872               	movf	compe@b,w
  3517  0485  3A80               	xorlw	128
  3518  0486  00F4               	movwf	??_compe
  3519  0487  0879               	movf	compe@a,w
  3520  0488  3A80               	xorlw	128
  3521  0489  02F4               	subwf	??_compe,f
  3522  048A  1803               	skipnc
  3523  048B  2CAF               	goto	l4904
  3524                           
  3525                           ;smartkey.C: 236: if((a-b)<=dt) return 1;
  3526  048C  0872               	movf	compe@b,w
  3527  048D  0279               	subwf	compe@a,w
  3528  048E  00F4               	movwf	??_compe
  3529  048F  01F5               	clrf	??_compe+1
  3530  0490  1C03               	skipc
  3531  0491  03F5               	decf	??_compe+1,f
  3532  0492  1BF9               	btfsc	compe@a,7
  3533  0493  03F5               	decf	??_compe+1,f
  3534  0494  1BF2               	btfsc	compe@b,7
  3535  0495  0AF5               	incf	??_compe+1,f
  3536  0496  0873               	movf	compe@dt,w
  3537  0497  24BC               	fcall	PL3	;call to abstracted procedure
  3538  0498  1D03               	skipz
  3539  0499  2C9C               	goto	u1405
  3540  049A  0874               	movf	??_compe,w
  3541  049B  0276               	subwf	??_compe+2,w
  3542  049C                     u1405:	
  3543  049C  1C03               	skipc
  3544  049D  3400               	retlw	0
  3545  049E  3401               	retlw	1
  3546  049F                     L14:	
  3547                           ;smartkey.C: 240: if((b-a)<=dt) return 1;
  3548                           
  3549  049F  0272               	subwf	compe@b,w
  3550  04A0  00F4               	movwf	??_compe
  3551  04A1  01F5               	clrf	??_compe+1
  3552  04A2  1C03               	skipc
  3553  04A3  03F5               	decf	??_compe+1,f
  3554  04A4  1BF2               	btfsc	compe@b,7
  3555  04A5  03F5               	decf	??_compe+1,f
  3556  04A6  1BF9               	btfsc	compe@a,7
  3557  04A7  0AF5               	incf	??_compe+1,f
  3558  04A8  0873               	movf	compe@dt,w
  3559  04A9  24BC               	fcall	PL3	;call to abstracted procedure
  3560  04AA  1D03               	skipz
  3561  04AB  2C9C               	goto	u1405
  3562  04AC  0874               	movf	??_compe,w
  3563  04AD  0276               	subwf	??_compe+2,w
  3564  04AE  2C9C               	goto	u1405
  3565  04AF                     l4904:	
  3566                           ;smartkey.C: 237: else return 0;
  3567                           
  3568                           
  3569                           ;smartkey.C: 239: else if(a<b){
  3570  04AF  0879               	movf	compe@a,w
  3571  04B0  3A80               	xorlw	128
  3572  04B1  00F4               	movwf	??_compe
  3573  04B2  0872               	movf	compe@b,w
  3574  04B3  3A80               	xorlw	128
  3575  04B4  02F4               	subwf	??_compe,f
  3576                           
  3577                           ;smartkey.C: 243: else if(a==b){
  3578  04B5  0879               	movf	compe@a,w
  3579  04B6  1C03               	btfss	3,0
  3580  04B7  2C9F               	goto	L14
  3581  04B8  0672               	xorwf	compe@b,w
  3582  04B9  1903               	btfsc	3,2
  3583  04BA  3401               	retlw	1
  3584  04BB  3400               	retlw	0
  3585  04BC                     __end_of_compe:	
  3586  04BC                     PL3:	
  3587  04BC  00F6               	movwf	??_compe+2
  3588  04BD  01F7               	clrf	??_compe+3
  3589  04BE  1BF6               	btfsc	??_compe+2,7
  3590  04BF  03F7               	decf	??_compe+3,f
  3591  04C0  0877               	movf	??_compe+3,w
  3592  04C1  3A80               	xorlw	128
  3593  04C2  00F8               	movwf	??_compe+4
  3594  04C3  0875               	movf	??_compe+1,w
  3595  04C4  3A80               	xorlw	128
  3596  04C5  0278               	subwf	??_compe+4,w
  3597  04C6  0008               	return
  3598                           
  3599                           	psect	text775
  3600  067C                     __ptext775:	
  3601 ;; =============== function _compe ends ============
  3602                           
  3603                           
  3604 ;; *************** function _setState *****************
  3605 ;; Defined at:
  3606 ;;		line 227 in file "smartkey.C"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  stt             1    wreg     unsigned char 
  3609 ;;  _tOut           2    2[COMMON] unsigned int 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  stt             1    4[COMMON] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;		None               void
  3614 ;; Registers used:
  3615 ;;		wreg, status,2
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 60/0
  3619 ;;		Unchanged: FFF9F/0
  3620 ;; Data sizes:     COMMON   BANK0   BANK1
  3621 ;;      Params:         2       0       0
  3622 ;;      Locals:         1       0       0
  3623 ;;      Temps:          0       0       0
  3624 ;;      Totals:         3       0       0
  3625 ;;Total ram usage:        3 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    1
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		_main
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634  067C                     _setState:	
  3635                           
  3636                           ; Regs used in _setState: [wreg+status,2]
  3637                           ;setState@stt stored from wreg
  3638  067C  00F4               	movwf	setState@stt
  3639                           
  3640                           ;smartkey.C: 228: mtOldState = mtState;
  3641  067D  1283               	bcf	3,5	;RP0=0, select bank0
  3642  067E  1303               	bcf	3,6	;RP1=0, select bank0
  3643  067F  0848               	movf	_mtState,w
  3644  0680  00C7               	movwf	_mtOldState
  3645                           
  3646                           ;smartkey.C: 229: mtState = stt;
  3647  0681  0874               	movf	setState@stt,w
  3648  0682  00C8               	movwf	_mtState
  3649                           
  3650                           ;smartkey.C: 230: timeTick =0;
  3651  0683  01FA               	clrf	_timeTick
  3652  0684  01FB               	clrf	_timeTick+1
  3653                           
  3654                           ;smartkey.C: 231: timeOut = _tOut;
  3655  0685  0873               	movf	setState@_tOut+1,w
  3656  0686  00C1               	movwf	_timeOut+1
  3657  0687  0872               	movf	setState@_tOut,w
  3658  0688  00C0               	movwf	_timeOut
  3659  0689  0008               	return
  3660  068A                     __end_of_setState:	
  3661                           
  3662                           	psect	text776
  3663  05E6                     __ptext776:	
  3664 ;; =============== function _setState ends ============
  3665                           
  3666                           
  3667 ;; *************** function _WRITE_EEPROM *****************
  3668 ;; Defined at:
  3669 ;;		line 212 in file "smartkey.C"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  EEAddr          1    wreg     unsigned char 
  3672 ;;  EEData          1    2[COMMON] unsigned char 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  EEAddr          1    3[COMMON] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;		None               void
  3677 ;; Registers used:
  3678 ;;		wreg
  3679 ;; Tracked objects:
  3680 ;;		On entry : 40/0
  3681 ;;		On exit  : 60/20
  3682 ;;		Unchanged: FFE00/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1
  3684 ;;      Params:         1       0       0
  3685 ;;      Locals:         1       0       0
  3686 ;;      Temps:          0       0       0
  3687 ;;      Totals:         2       0       0
  3688 ;;Total ram usage:        2 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    1
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_main
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697  05E6                     _WRITE_EEPROM:	
  3698                           
  3699                           ; Regs used in _WRITE_EEPROM: [wreg]
  3700                           ;WRITE_EEPROM@EEAddr stored from wreg
  3701  05E6  00F3               	movwf	WRITE_EEPROM@EEAddr
  3702                           
  3703                           ;smartkey.C: 213: GIE = 0;
  3704  05E7  138B               	bcf	11,7
  3705  05E8                     l728:	
  3706                           ;smartkey.C: 214: while(GIE) asm("clrwdt");
  3707                           
  3708  05E8  1F8B               	btfss	11,7
  3709  05E9  2DEC               	goto	l4878
  3710  05EA  0064               	clrwdt	;#
  3711  05EB  2DE8               	goto	l728
  3712  05EC                     l4878:	
  3713                           
  3714                           ;smartkey.C: 215: EEADR = EEAddr;
  3715  05EC  0873               	movf	WRITE_EEPROM@EEAddr,w
  3716  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  3717  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  3718  05EF  009B               	movwf	27	;volatile
  3719                           
  3720                           ;smartkey.C: 216: EEDAT = EEData;
  3721  05F0  0872               	movf	WRITE_EEPROM@EEData,w
  3722  05F1  009A               	movwf	26	;volatile
  3723  05F2  3034               	movlw	52
  3724                           
  3725                           ;smartkey.C: 217: EEIF = 0;
  3726  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3727  05F4  138C               	bcf	12,7
  3728                           
  3729                           ;smartkey.C: 218: EECON1 = 0x34;
  3730  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  3731  05F6  009C               	movwf	28	;volatile
  3732                           
  3733                           ;smartkey.C: 219: WR = 1;
  3734  05F7  141D               	bsf	29,0
  3735  05F8                     l731:	
  3736                           ;smartkey.C: 220: while(WR) asm("clrwdt");
  3737                           
  3738  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  3739  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  3740  05FA  1C1D               	btfss	29,0
  3741  05FB  2DFE               	goto	l733
  3742  05FC  0064               	clrwdt	;#
  3743  05FD  2DF8               	goto	l731
  3744  05FE                     l733:	
  3745                           
  3746                           ;smartkey.C: 222: GIE = 1;
  3747  05FE  178B               	bsf	11,7
  3748  05FF  0008               	return
  3749  0600                     __end_of_WRITE_EEPROM:	
  3750                           
  3751                           	psect	text777
  3752  0694                     __ptext777:	
  3753 ;; =============== function _WRITE_EEPROM ends ============
  3754                           
  3755                           
  3756 ;; *************** function _READ_EEPROM *****************
  3757 ;; Defined at:
  3758 ;;		line 201 in file "smartkey.C"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  EEAddr          1    wreg     unsigned char 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  EEAddr          1    2[COMMON] unsigned char 
  3763 ;;  ReEepromData    1    3[COMMON] unsigned char 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      unsigned char 
  3766 ;; Registers used:
  3767 ;;		wreg
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/20
  3770 ;;		On exit  : 60/20
  3771 ;;		Unchanged: FFF9F/0
  3772 ;; Data sizes:     COMMON   BANK0   BANK1
  3773 ;;      Params:         0       0       0
  3774 ;;      Locals:         2       0       0
  3775 ;;      Temps:          0       0       0
  3776 ;;      Totals:         2       0       0
  3777 ;;Total ram usage:        2 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:    1
  3780 ;; This function calls:
  3781 ;;		Nothing
  3782 ;; This function is called by:
  3783 ;;		_main
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786  0694                     _READ_EEPROM:	
  3787                           
  3788                           ; Regs used in _READ_EEPROM: [wreg]
  3789                           ;READ_EEPROM@EEAddr stored from wreg
  3790  0694  00F2               	movwf	READ_EEPROM@EEAddr
  3791                           
  3792                           ;smartkey.C: 202: unsigned char ReEepromData;
  3793                           ;smartkey.C: 204: EEADR = EEAddr;
  3794  0695  1683               	bsf	3,5	;RP0=1, select bank1
  3795  0696  1303               	bcf	3,6	;RP1=0, select bank1
  3796  0697  009B               	movwf	27	;volatile
  3797                           
  3798                           ;smartkey.C: 205: RD = 1;
  3799  0698  141C               	bsf	28,0
  3800                           
  3801                           ;smartkey.C: 206: ReEepromData = EEDAT;
  3802  0699  081A               	movf	26,w	;volatile
  3803  069A  00F3               	movwf	READ_EEPROM@ReEepromData
  3804                           
  3805                           ;smartkey.C: 207: RD = 0;
  3806  069B  101C               	bcf	28,0
  3807                           
  3808                           ;smartkey.C: 208: return ReEepromData;
  3809  069C  0008               	return
  3810  069D                     __end_of_READ_EEPROM:	
  3811                           
  3812                           	psect	text778
  3813  06A2                     __ptext778:	
  3814 ;; =============== function _READ_EEPROM ends ============
  3815                           
  3816                           
  3817 ;; *************** function _beepOn *****************
  3818 ;; Defined at:
  3819 ;;		line 178 in file "smartkey.C"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;		None               void
  3826 ;; Registers used:
  3827 ;;		None
  3828 ;; Tracked objects:
  3829 ;;		On entry : 40/20
  3830 ;;		On exit  : 60/20
  3831 ;;		Unchanged: FFF9F/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1
  3833 ;;      Params:         0       0       0
  3834 ;;      Locals:         0       0       0
  3835 ;;      Temps:          0       0       0
  3836 ;;      Totals:         0       0       0
  3837 ;;Total ram usage:        0 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    1
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_main
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846  06A2                     _beepOn:	
  3847                           
  3848                           ;smartkey.C: 179: TMR2ON = 1;
  3849                           
  3850                           ; Regs used in _beepOn: []
  3851  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  3852  06A3  1512               	bsf	18,2
  3853                           
  3854                           ;smartkey.C: 180: TRISA &= 0xef;
  3855  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  3856  06A5  1205               	bcf	5,4	;volatile
  3857  06A6  0008               	return
  3858  06A7                     __end_of_beepOn:	
  3859                           
  3860                           	psect	text779
  3861  06A7                     __ptext779:	
  3862 ;; =============== function _beepOn ends ============
  3863                           
  3864                           
  3865 ;; *************** function _beepOff *****************
  3866 ;; Defined at:
  3867 ;;		line 175 in file "smartkey.C"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;		None
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;		None
  3872 ;; Return value:  Size  Location     Type
  3873 ;;		None               void
  3874 ;; Registers used:
  3875 ;;		None
  3876 ;; Tracked objects:
  3877 ;;		On entry : 60/0
  3878 ;;		On exit  : 60/20
  3879 ;;		Unchanged: FFF9F/0
  3880 ;; Data sizes:     COMMON   BANK0   BANK1
  3881 ;;      Params:         0       0       0
  3882 ;;      Locals:         0       0       0
  3883 ;;      Temps:          0       0       0
  3884 ;;      Totals:         0       0       0
  3885 ;;Total ram usage:        0 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    1
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_main
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894  06A7                     _beepOff:	
  3895                           
  3896                           ;smartkey.C: 176: TMR2ON = 0;RA4 =0;TRISA |= 0x10;
  3897                           
  3898                           ; Regs used in _beepOff: []
  3899  06A7  1112               	bcf	18,2
  3900  06A8  1205               	bcf	5,4
  3901  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  3902  06AA  1605               	bsf	5,4	;volatile
  3903  06AB  0008               	return
  3904  06AC                     __end_of_beepOff:	
  3905                           
  3906                           	psect	text780
  3907  062E                     __ptext780:	
  3908 ;; =============== function _beepOff ends ============
  3909                           
  3910                           
  3911 ;; *************** function _delay_x10ms *****************
  3912 ;; Defined at:
  3913 ;;		line 170 in file "smartkey.C"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  t               2    2[COMMON] unsigned int 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  set             2    4[COMMON] unsigned int 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;		None               void
  3920 ;; Registers used:
  3921 ;;		wreg
  3922 ;; Tracked objects:
  3923 ;;		On entry : 40/20
  3924 ;;		On exit  : 40/20
  3925 ;;		Unchanged: FFFBF/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1
  3927 ;;      Params:         2       0       0
  3928 ;;      Locals:         2       0       0
  3929 ;;      Temps:          0       0       0
  3930 ;;      Totals:         4       0       0
  3931 ;;Total ram usage:        4 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    1
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_beep
  3938 ;;		_main
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941  062E                     _delay_x10ms:	
  3942                           
  3943                           ;smartkey.C: 171: unsigned int set = t + timeTick;
  3944                           
  3945                           ; Regs used in _delay_x10ms: [wreg]
  3946  062E  0873               	movf	delay_x10ms@t+1,w
  3947  062F  00F5               	movwf	delay_x10ms@set+1
  3948  0630  0872               	movf	delay_x10ms@t,w
  3949  0631  00F4               	movwf	delay_x10ms@set
  3950  0632  087A               	movf	_timeTick,w
  3951  0633  07F4               	addwf	delay_x10ms@set,f
  3952  0634  1803               	skipnc
  3953  0635  0AF5               	incf	delay_x10ms@set+1,f
  3954  0636  087B               	movf	_timeTick+1,w
  3955  0637  07F5               	addwf	delay_x10ms@set+1,f
  3956  0638                     l4862:	
  3957                           ;smartkey.C: 172: while(timeTick < set);
  3958                           
  3959  0638  0875               	movf	delay_x10ms@set+1,w
  3960  0639  027B               	subwf	_timeTick+1,w
  3961  063A  1D03               	skipz
  3962  063B  2E3E               	goto	u1355
  3963  063C  0874               	movf	delay_x10ms@set,w
  3964  063D  027A               	subwf	_timeTick,w
  3965  063E                     u1355:	
  3966  063E  1803               	btfsc	3,0
  3967  063F  0008               	return
  3968  0640  2E38               	goto	l4862
  3969  0641                     __end_of_delay_x10ms:	
  3970                           
  3971                           	psect	text781
  3972  03CA                     __ptext781:	
  3973 ;; =============== function _delay_x10ms ends ============
  3974                           
  3975                           
  3976 ;; *************** function _ISR *****************
  3977 ;; Defined at:
  3978 ;;		line 46 in file "smartkey.C"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;  tmp             1    0        unsigned char 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;		None               void
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 40/0
  3990 ;;		Unchanged: FFF9F/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1
  3992 ;;      Params:         0       0       0
  3993 ;;      Locals:         0       0       0
  3994 ;;      Temps:          2       0       0
  3995 ;;      Totals:         2       0       0
  3996 ;;Total ram usage:        2 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		Interrupt level 1
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004  03CA                     _ISR:	
  4005                           
  4006                           ;smartkey.C: 50: if(PAIE&&PAIF){
  4007  03CA  198B               	btfsc	11,3
  4008  03CB  1C0B               	btfss	11,0
  4009  03CC  2BDC               	goto	i1l4808
  4010                           
  4011                           ;smartkey.C: 53: tmp = PORTA;
  4012  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  4013  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  4014  03CF  0805               	movf	5,w	;volatile
  4015                           
  4016                           ;smartkey.C: 54: PAIF = 0;
  4017  03D0  100B               	bcf	11,0
  4018                           
  4019                           ;smartkey.C: 56: if(RA6){
  4020  03D1  1F05               	btfss	5,6
  4021  03D2  2BDB               	goto	i1l4806
  4022                           
  4023                           ;smartkey.C: 58: if(mode_chek == 0){
  4024  03D3  08C6               	movf	_mode_chek,f
  4025  03D4  1D03               	skipz
  4026  03D5  2BDC               	goto	i1l4808
  4027                           
  4028                           ;smartkey.C: 59: cntCyc = 0;
  4029  03D6  01C3               	clrf	_cntCyc
  4030                           
  4031                           ;smartkey.C: 60: cntOff = 0;
  4032  03D7  01C4               	clrf	_cntOff
  4033                           
  4034                           ;smartkey.C: 62: mode_chek = 1;
  4035  03D8  01C6               	clrf	_mode_chek
  4036  03D9  0AC6               	incf	_mode_chek,f
  4037  03DA  2BDC               	goto	i1l4808
  4038  03DB                     i1l4806:	
  4039                           
  4040                           ;smartkey.C: 67: else{
  4041                           ;smartkey.C: 68: cntOff = 0;
  4042  03DB  01C4               	clrf	_cntOff
  4043  03DC                     i1l4808:	
  4044                           
  4045                           ;smartkey.C: 71: }
  4046                           ;smartkey.C: 73: }
  4047                           ;smartkey.C: 94: if(TMR1IE&&TMR1IF){
  4048  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  4049  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  4050  03DE  1C0C               	btfss	12,0
  4051  03DF  2C2E               	goto	i1l4852
  4052  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  4053  03E1  1C0C               	btfss	12,0
  4054  03E2  2C2E               	goto	i1l4852
  4055  03E3  30EC               	movlw	236
  4056                           
  4057                           ;smartkey.C: 96: TMR1IF = 0;
  4058  03E4  100C               	bcf	12,0
  4059                           
  4060                           ;smartkey.C: 98: TMR1H = -5000>>8;
  4061  03E5  008F               	movwf	15	;volatile
  4062                           
  4063                           ;smartkey.C: 99: TMR1L = -5000;
  4064  03E6  3078               	movlw	120
  4065  03E7  008E               	movwf	14	;volatile
  4066                           
  4067                           ;smartkey.C: 105: if( mode_chek == 1){
  4068  03E8  0B46               	decfsz	_mode_chek,w
  4069  03E9  2C02               	goto	i1l4836
  4070                           
  4071                           ;smartkey.C: 107: cntCyc++;
  4072  03EA  0AC3               	incf	_cntCyc,f
  4073                           
  4074                           ;smartkey.C: 109: if(RA6==0){
  4075  03EB  1B05               	btfsc	5,6
  4076  03EC  2C02               	goto	i1l4836
  4077  03ED  3010               	movlw	16
  4078                           
  4079                           ;smartkey.C: 111: cntOff++;
  4080  03EE  0AC4               	incf	_cntOff,f
  4081                           
  4082                           ;smartkey.C: 114: if(cntOff > 15){
  4083  03EF  0244               	subwf	_cntOff,w
  4084  03F0  1C03               	skipc
  4085  03F1  2C02               	goto	i1l4836
  4086  03F2  3010               	movlw	16
  4087                           
  4088                           ;smartkey.C: 116: mode_chek = 0;
  4089  03F3  01C6               	clrf	_mode_chek
  4090                           
  4091                           ;smartkey.C: 118: if((cntCyc>15) &&(cntCyc<50)) {
  4092  03F4  0243               	subwf	_cntCyc,w
  4093  03F5  3032               	movlw	50
  4094  03F6  1C03               	skipc
  4095  03F7  2BFE               	goto	L16
  4096  03F8  0243               	subwf	_cntCyc,w
  4097  03F9  1803               	skipnc
  4098  03FA  2BFD               	goto	i1l4832
  4099                           
  4100                           ;smartkey.C: 119: RegStatus |= (0x40);
  4101  03FB  1742               	bsf	_RegStatus,6
  4102                           
  4103                           ;smartkey.C: 120: } else if (cntCyc>=50){
  4104  03FC  2C01               	goto	i1l694
  4105  03FD                     i1l4832:	
  4106  03FD  3032               	movlw	50
  4107  03FE                     L16:	
  4108  03FE  0243               	subwf	_cntCyc,w
  4109  03FF  1803               	btfsc	3,0
  4110                           
  4111                           ;smartkey.C: 121: RegStatus &= ~(0x40);
  4112  0400  1342               	bcf	_RegStatus,6
  4113  0401                     i1l694:	
  4114                           
  4115                           ;smartkey.C: 122: }
  4116                           ;smartkey.C: 125: RegStatus |= 0x80;
  4117  0401  17C2               	bsf	_RegStatus,7
  4118  0402                     i1l4836:	
  4119                           
  4120                           ;smartkey.C: 126: }
  4121                           ;smartkey.C: 128: }
  4122                           ;smartkey.C: 138: }
  4123                           ;smartkey.C: 141: timeTick++;
  4124  0402  0AFA               	incf	_timeTick,f
  4125  0403  1903               	skipnz
  4126  0404  0AFB               	incf	_timeTick+1,f
  4127                           
  4128                           ;smartkey.C: 143: if((mtState == 4)||(mtState == 3)){
  4129  0405  0848               	movf	_mtState,w
  4130  0406  3A04               	xorlw	4
  4131  0407  1903               	skipnz
  4132  0408  2C0D               	goto	i1l4842
  4133  0409  0848               	movf	_mtState,w
  4134  040A  3A03               	xorlw	3
  4135  040B  1D03               	skipz
  4136  040C  2C2E               	goto	i1l4852
  4137  040D                     i1l4842:	
  4138                           
  4139                           ;smartkey.C: 145: if(timeTick > cntTmp){
  4140  040D  087B               	movf	_timeTick+1,w
  4141  040E  023F               	subwf	_cntTmp+1,w
  4142  040F  1D03               	skipz
  4143  0410  2C13               	goto	u130_25
  4144  0411  087A               	movf	_timeTick,w
  4145  0412  023E               	subwf	_cntTmp,w
  4146  0413                     u130_25:	
  4147  0413  1803               	skipnc
  4148  0414  2C2E               	goto	i1l4852
  4149                           
  4150                           ;smartkey.C: 146: cntTmp = timeTick+40;
  4151  0415  087B               	movf	_timeTick+1,w
  4152  0416  00BF               	movwf	_cntTmp+1
  4153  0417  087A               	movf	_timeTick,w
  4154  0418  00BE               	movwf	_cntTmp
  4155  0419  3028               	movlw	40
  4156  041A  07BE               	addwf	_cntTmp,f
  4157  041B  1803               	skipnc
  4158  041C  0ABF               	incf	_cntTmp+1,f
  4159                           
  4160                           ;smartkey.C: 147: if(cntTmp<=timeOut)
  4161  041D  083F               	movf	_cntTmp+1,w
  4162  041E  0241               	subwf	_timeOut+1,w
  4163  041F  1D03               	skipz
  4164  0420  2C23               	goto	u131_25
  4165  0421  083E               	movf	_cntTmp,w
  4166  0422  0240               	subwf	_timeOut,w
  4167  0423                     u131_25:	
  4168                           
  4169                           ;smartkey.C: 148: {
  4170                           ;smartkey.C: 149: if(PR2 == 11)
  4171  0423  1683               	bsf	3,5	;RP0=1, select bank1
  4172  0424  1C03               	skipc
  4173  0425  2C2F               	goto	L17
  4174  0426  0812               	movf	18,w	;volatile
  4175  0427  3A0B               	xorlw	11
  4176  0428  1D03               	skipz
  4177  0429  2C2C               	goto	i1l4850
  4178                           
  4179                           ;smartkey.C: 150: PR2 = 30;
  4180  042A  301E               	movlw	30
  4181  042B  2C2D               	goto	L15
  4182  042C                     i1l4850:	
  4183                           
  4184                           ;smartkey.C: 151: else
  4185                           ;smartkey.C: 152: PR2 = 11;
  4186  042C  300B               	movlw	11
  4187  042D                     L15:	
  4188  042D  0092               	movwf	18	;volatile
  4189  042E                     i1l4852:	
  4190                           
  4191                           ;smartkey.C: 153: }
  4192                           ;smartkey.C: 154: }
  4193                           ;smartkey.C: 155: }
  4194                           ;smartkey.C: 158: }
  4195                           ;smartkey.C: 161: if(TMR2IE&&TMR2IF)
  4196  042E  1683               	bsf	3,5	;RP0=1, select bank1
  4197  042F                     L17:	
  4198  042F  1C8C               	btfss	12,1
  4199  0430  2C37               	goto	i1l704
  4200  0431  1283               	bcf	3,5	;RP0=0, select bank0
  4201  0432  1C8C               	btfss	12,1
  4202  0433  2C37               	goto	i1l704
  4203  0434  3010               	movlw	16
  4204                           
  4205                           ;smartkey.C: 162: {
  4206                           ;smartkey.C: 163: TMR2IF = 0;
  4207  0435  108C               	bcf	12,1
  4208                           
  4209                           ;smartkey.C: 164: RA4 =~ RA4;
  4210  0436  0685               	xorwf	5,f
  4211  0437                     i1l704:	
  4212  0437  0871               	movf	??_ISR+1,w
  4213  0438  008A               	movwf	10
  4214  0439  0E70               	swapf	??_ISR^(0+-128),w
  4215  043A  0083               	movwf	3
  4216  043B  0EFE               	swapf	126,f
  4217  043C  0E7E               	swapf	126,w
  4218  043D  0009               	retfie
  4219  043E                     __end_of_ISR:	
  4220                           
  4221                           	psect	intentry
  4222  0004                     __pintentry:	
  4223                           ; Regs used in _ISR: [wreg+status,2+status,0]
  4224                           
  4225  0004                     interrupt_function:	
  4226  007E                     saved_w	set	btemp
  4227  0004  00FE               	movwf	btemp
  4228  0005  0E03               	swapf	3,w
  4229  0006  00F0               	movwf	??_ISR
  4230  0007  080A               	movf	10,w
  4231  0008  00F1               	movwf	??_ISR+1
  4232  0009  2BCA               	ljmp	_ISR
  4233                           
  4234                           	psect	text782
  4235  0000                     __ptext782:	
  4236 ;; =============== function _ISR ends ============
  4237                           
  4238  007E                     btemp	set	126	;btemp
  4239  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Dec 24 16:14:23 2019

                       pc 0002                        _RD 04E0                        _WR 04E8  
            ___awdiv@sign 0077     __size_of_WRITE_EEPROM 001A                        fsr 0004  
                     l710 0000                       l713 0000                       l722 0000  
                     l731 05F8                       l716 0000                       l725 0000  
                     l733 05FE                       l734 0000                       l728 05E8  
                     l737 0000                       l837 03C7                       l758 0160  
                     l784 01B4                       l793 0242                       l796 0225  
                     l797 0211                       _GIE 005F                       _RA0 0028  
                     _RA1 0029                       _RC0 0038                       _RA4 002C  
                     _RC1 0039                       _RC2 003A                       _RA6 002E  
                     _RA7 002F                       _RC4 003C              ?_swI2C_Start 0070  
                     _PR2 0092                       _HTS 047A                       _ISR 03CA  
                     _SR0 0CF6                       _SR1 0CF7                       fsr0 0004  
                     indf 0000            _swI2C_ReadByte 04C7                      S6224 069D  
                    ?_ISR 0070                      l1501 0000                      l1504 0000  
                    l2161 0000                      l2155 0000                      l2172 04D3  
                    l2158 0000                      l2174 0000                      l2167 0550  
                    l2169 0000                      l5010 0000                      l5020 047E  
                    l5004 045F                      l1492 068F                      l5100 0000  
                    l5014 0000                      l5006 0000                      l5030 0000  
                    l5110 0000                      l1495 0000                      l5016 0476  
                    l5032 0000                      l5024 0000                      l5040 0000  
                    l5112 0000                      l5104 0000                      l6000 0000  
                    l1498 0000                      l5018 0000                      l5034 0000  
                    l5026 0000                      l5042 0000                      l5114 0000  
                    l5106 0000                      l6010 026E                      l6002 0000  
                    l5028 0000                      l5036 0601                      l5044 0000  
                    l5116 0000                      l5108 0000                      l6020 0000  
                    l6012 0000                      l6004 0000                      l5038 0000  
                    l5046 0000                      l6110 0000                      l6102 0000  
                    l6022 0000                      l6014 0277                      l6006 0000  
                    l5048 0000                      l6120 0000                      l6040 0000  
                    l6032 0000                      l6024 0000                      l6130 0353  
                    l6106 0000                      l6114 0333                      l6042 0000  
                    l6026 0000                      l6018 027F                      l5092 0000  
                    l6124 0000                      l6132 0354                      l6108 0000  
                    l6044 0000                      l6028 0296                      l3670 0000  
                    l5094 0000                      l6150 0000                      l6142 0000  
                    l6134 0000                      l6126 0000                      l6062 0000  
                    l6046 0000                      l5096 0000                      l6128 0000  
                    l6080 0000                      l6064 0000                      l6136 0358  
                    l6056 02A7                      l5098 0000                      l6162 0000  
                    l6154 0000                      l6146 0370                      l6090 0000  
                    l6082 0000                      l6074 0000                      l6066 0000  
                    l6058 02B5                      l6180 0000                      l6164 0000  
                    l6148 0000                      l6092 0000                      l6084 02F5  
                    l5710 05AB                      l6182 0000                      l6166 0000  
                    l6158 039A                      l6078 0000                      l4904 04AF  
                    l5712 0594                      l6176 03B6                      l6168 039E  
                    l6184 03C0                      l6096 0000                      l5800 0000  
                    l4930 0000                      l5714 05AE                      l5706 0000  
                    l5730 0000                      l6178 0000                      l5810 0000  
                    l4860 0000                      l4932 0000                      l4940 0000  
                    l5660 0000                      l5716 0000                      l5740 0000  
                    l5812 0000                      l5820 0084                      l5804 0000  
                    l4862 0638                      l4870 0000                      l4934 0000  
                    l4950 0000                      l4942 0000                      l5654 0000  
                    l5662 0000                      l5670 0000                      l5742 051D  
                    l5910 0000                      l5902 0000                      l5822 0000  
                    l5814 0000                      l5806 0068                      l4864 0000  
                    l4872 0000                      l4880 0000                      l4936 0000  
                    l4928 0000                      l4960 0000                      l4952 0000  
                    l4944 0000                      l5656 0000                      l5664 0000  
                    l5680 0000                      l5672 0000                      l5920 0000  
                    l5912 0000                      l5904 0000                      l5840 00B5  
                    l5824 008B                      l5816 0000                      l4866 0000  
                    l4882 0000                      l4890 0000                      l4962 0000  
                    l4954 0000                      l4946 0000                      l4938 0000  
                    l4970 0000                      l5658 0000                      l5666 0000  
                    l5690 0000                      l5682 0000                      l5674 0000  
                    l5746 0000                      l5914 0000                      l5850 0000  
                    l5834 00A3                      l5826 0000                      l5818 0000  
                    l5770 0000                      l4868 0000                      l4876 0000  
                    l4884 0000                      l4964 0000                      l4956 0000  
                    l4948 0000                      l4972 0000                      l4980 0000  
                    l5692 0000                      l5684 0000                      l5668 0000  
                    l5748 0000                      l5940 0000                      l5932 01DB  
                    l5924 01CB                      l5916 0000                      l5908 01AD  
                    l5852 00EB                      l5844 0000                      l5836 0000  
                    l5828 0000                      l5780 0000                      l5772 0000  
                    l4878 05EC                      l4886 0000                      l4966 0000  
                    l4958 0000                      l4974 0000                      l4982 0000  
                    l5686 0000                      l5678 0000                      l5934 0000  
                    l5918 01C8                      l5870 0000                      l5862 0000  
                    l5846 00BD                      l5854 00FA                      l5790 0000  
                    l5782 0000                      l5774 0000                      l5766 0000  
                    l4888 0000                      l4976 0000                      l4968 0000  
                    l4992 0000                      l5688 0000                      l5696 0000  
                    l5960 0000                      l5936 0000                      l5928 0000  
                    l5944 01F4                      l5872 015C                      l5792 0000  
                    l5784 0000                      l5776 0000                      l5768 0000  
                    l4978 0000                      l4994 0451                      l4986 0000  
                    l5970 0000                      l5954 0000                      l5946 01FF  
                    l5938 01EC                      l5890 0189                      l5874 0000  
                    l5858 0102                      l5794 0000                      l5786 0000  
                    l5778 0000                      l4996 0000                      l4988 0448  
                    l5972 0000                      l5956 0000                      l5948 0000  
                    l5980 023A                      l5876 0170                      l5868 0142  
                    l5796 0000                      l5788 0000                      l5990 0000  
                    l5974 0000                      l5966 0228                      l5958 0000  
                    l5894 0000                      l5886 0182                      l5982 0243  
                    l5878 0179                      l5798 0000                      l5992 0000  
                    l5968 0000                      l5994 025C                      l5898 019A  
                    l5996 0000                      l5988 0252                      l5998 0000  
                    _EEIF 0067                      u1405 049C                      u2310 0556  
                    u1355 063E                      u3107 00F3                      u2324 0559  
                    u3117 0156                      u2415 052A                      u3057 0024  
                    u3067 0030                      _PAIE 005B                      u2540 0176  
                    _PAIF 0058                      u2525 0133                      u3077 004D  
                    u1495 0468                      u2535 0140                      u3087 0063  
                    _PIE1 008C                      u3097 00A7                      u1594 04FA  
                    u2745 024F                      _PEIE 005E                      _INTE 005C  
                    _INTF 0059                      u2935 0360                      u2785 02BC  
                    _PIR1 000C                      _TMR2 0011                      _STRA 0CE8  
                    _STRB 0CE9                      _STRC 0CEA                      _STRD 0CEB  
                    _WREN 0C62                      _WPUA 0095                      _WPUC 0088  
            ?_READ_EEPROM 0070                      _beep 0600           __end_of_AccRead 0535  
                    _main 000B                      btemp 007E                      start 000A  
            _WRITE_EEPROM 05E6                     ??_ISR 0070                     ?_beep 0076  
                   _C1SEN 0CF5                     _C2REN 0CF4                     ?_main 0070  
         __end_of___awdiv 0483                     _EEADR 009B                     _EEDAT 009A  
                   _EEPGD 0C67    __end_of_swI2C_ReadByte 0508              AccWrite@rAdd 0020  
         ___awdiv@divisor 0072                     _T1CON 0010                     _T2CON 0012  
                   _IOCA6 04B6                     i1l704 0437                     i1l694 0401  
         ___awdiv@counter 0076           __end_of_beepOff 06AC                     _TMR1H 000F  
                   _TMR1L 000E                     _PORTA 0005                     _PORTC 0007  
                   _SRCON 019E                     _PULSR 0CF2                     _PULSS 0CF3  
                   _TRISA 0085                     _TRISC 0087                     _compe 0483  
        __end_of_AccWrite 05B0                     pclath 000A                     status 0003  
                   wtemp0 007E           _swI2C_WriteByte 0547      __size_of_delay_x10ms 0013  
            __end_of_beep 0618              __end_of_main 03CA                    ??_beep 0077  
                  ??_main 0025           ?_swI2C_ReadByte 0070             main@reAlertOn 0034  
                  ?_compe 0072                 ??_AccRead 0020                    _EECON1 009C  
        ___awdiv@dividend 0074                    u130_25 0413                    u131_25 0423  
                  i1l4804 0000                    i1l4822 0000                    i1l4814 0000  
                  i1l4806 03DB                    i1l4832 03FD                    i1l4816 0000  
                  i1l4808 03DC                    i1l4850 042C                    i1l4842 040D  
                  i1l4826 0000                    i1l4818 0000                    i1l4836 0402  
                  i1l4852 042E                    i1l4838 0000                    i1l4790 0000  
                  i1l4858 0000                    _INTEDG 040E                    i1l4796 0000  
                  i1l4798 0000                    _INTCON 000B                    _OSCCON 008F  
                  _TMR1IE 0460                    _TMR1IF 0060                    _TMR2IE 0461  
                  _TMR2IF 0061                    _TMR1ON 0080                    _TMR2ON 0092  
         swI2C_ReadByte@i 0075                    _beepOn 06A2                 ??___awdiv 0076  
                  _cntCyc 0043                    _cntOff 0044                    _cntTmp 003E  
               ??_beepOff 0072          ___awdiv@quotient 0078          __end_of_int_init 05E6  
                  compe@a 0079                    compe@b 0072          __end_of_setState 068A  
           main@vibrateOn 002D                    saved_w 007E      __size_of_swI2C_Start 0016  
 __end_of_swI2C_WriteByte 0585          __end_of_sys_init 0694      __size_of_READ_EEPROM 0009  
          __pcstackCOMMON 0070             __end_of_compe 04BC                 ?_AccWrite 0075  
                 ??_compe 0074                __pbssBANK0 003E        __size_of_gpio_init 000E  
 READ_EEPROM@ReEepromData 0073                __pmaintext 000B                   ?_beepOn 0070  
              __pintentry 0004                ??_AccWrite 0078                   _AccRead 0508  
                 _PSTRCON 019D                _swI2C_Init 05B0                   _STRSYNC 0CEC  
              _swI2C_Stop 0650          ?_swI2C_WriteByte 0070                 AccWrite@i 0021  
               ?_int_init 0070               setState@stt 0074                 ?_setState 0072  
              _mtOldState 0047                   ___awdiv 043E          ??_swI2C_ReadByte 0072  
         __size_of_beepOn 0005                   _beepOff 06A7                   beep@rep 0076  
       __end_of_gpio_init 067C                 ?_sys_init 0070              __size_of_ISR 0074  
                 _mtState 0048                   _timeOut 0040                   compe@dt 0073  
                 main@buf 002E      end_of_initialization 064E                _lostDetect 0045  
           ??_delay_x10ms 0074                ??_int_init 0072                ??_setState 0074  
             AccRead@rAdd 0023                _timer_init 065F                ??_sys_init 0072  
             ?_swI2C_Init 0070               ?_swI2C_Stop 0070                main@acXOld 002C  
              main@acYOld 002B                main@acXsum 0039                main@acYsum 0037  
              main@isFall 002A        WRITE_EEPROM@EEAddr 0073        WRITE_EEPROM@EEData 0072  
              main@isWait 0028       __end_of_delay_x10ms 0641               AccWrite@dat 0075  
             AccWrite@len 0077            __end_of_beepOn 06A7             ??_swI2C_Start 0072  
       __size_of_AccWrite 002B       start_initialization 0641               __end_of_ISR 043E  
           setState@_tOut 0072                 _RegStatus 0042             ??_READ_EEPROM 0072  
           ?_WRITE_EEPROM 0072                  ??_beepOn 0072         READ_EEPROM@EEAddr 0072  
     __size_of_swI2C_Init 001C       __size_of_swI2C_Stop 000F               ?_timer_init 0070  
             __pbssCOMMON 007A             __pcstackBANK0 0020                  ?_AccRead 0076  
     __end_of_swI2C_Start 062E               _delay_x10ms 062E            ??_WRITE_EEPROM 0073  
       __size_of_int_init 001A       __end_of_READ_EEPROM 069D          swI2C_WriteByte@i 0074  
                ?___awdiv 0072         __size_of_setState 000E                 __ptext760 0000  
               __ptext761 0508                 __ptext770 043E                 __ptext762 0585  
               __ptext771 065F                 __ptext763 04C7                 __ptext780 062E  
               __ptext772 05CC                 __ptext764 0547                 __ptext781 03CA  
               __ptext773 066E                 __ptext765 0650                 __ptext782 0000  
               __ptext774 0483                 __ptext766 0618                 __ptext775 067C  
               __ptext767 05B0                 __ptext776 05E6                 __ptext768 068A  
               __ptext777 0694                 __ptext769 0600                 __ptext778 06A2  
               __ptext779 06A7                 beep@delay 0077                  ?_beepOff 0070  
                AccRead@i 0024        swI2C_WriteByte@dat 0073                 __pswtext1 069D  
       __size_of_sys_init 000A                 _gpio_init 066E            __size_of_compe 0039  
               _mode_chek 0046         interrupt_function 0004       __size_of_timer_init 000F  
__size_of_swI2C_WriteByte 003E                AccRead@dat 0076                AccRead@len 0078  
            delay_x10ms@t 0072                  _AccWrite 0585               _swI2C_Start 0618  
               main@tmp16 003C                 main@mpuOk 0036                ?_gpio_init 0070  
            ??_swI2C_Init 0072          __size_of_AccRead 002D              ??_swI2C_Stop 0072  
             _READ_EEPROM 0694         swI2C_ReadByte@Ack 0073         swI2C_ReadByte@dat 0074  
        __size_of___awdiv 0045          __size_of_beepOff 0005        __end_of_swI2C_Init 05CC  
      __end_of_swI2C_Stop 065F      __end_of_WRITE_EEPROM 0600   __size_of_swI2C_ReadByte 0041  
           __size_of_beep 0018             __size_of_main 03BF                  _int_init 05CC  
                _setState 067C                  _timeTick 007A                  main@isSw 003B  
                main@tmp8 0035         ??_swI2C_WriteByte 0072              ??_timer_init 0072  
                _sys_init 068A               ??_gpio_init 0072                  intlevel1 0000  
            ?_delay_x10ms 0072        __end_of_timer_init 066E            delay_x10ms@set 0074  
