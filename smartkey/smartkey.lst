

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Mar 19 12:09:08 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text860,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	text861,local,class=CODE,delta=2
    13                           	psect	text862,local,class=CODE,delta=2
    14                           	psect	text863,local,class=CODE,delta=2
    15                           	psect	text864,local,class=CODE,delta=2
    16                           	psect	text865,local,class=CODE,delta=2
    17                           	psect	text866,local,class=CODE,delta=2
    18                           	psect	text867,local,class=CODE,delta=2
    19                           	psect	text868,local,class=CODE,delta=2
    20                           	psect	text869,local,class=CODE,delta=2
    21                           	psect	text870,local,class=CODE,delta=2
    22                           	psect	text871,local,class=CODE,delta=2
    23                           	psect	text872,local,class=CODE,delta=2
    24                           	psect	text873,local,class=CODE,delta=2
    25                           	psect	text874,local,class=CODE,delta=2
    26                           	psect	text875,local,class=CODE,delta=2
    27                           	psect	text876,local,class=CODE,delta=2
    28                           	psect	text877,local,class=CODE,delta=2
    29                           	psect	text878,local,class=CODE,delta=2
    30                           	psect	text879,local,class=CODE,delta=2
    31                           	psect	text880,local,class=CODE,delta=2
    32                           	psect	text881,local,class=CODE,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text882,local,class=CODE,delta=2
    35                           	psect	text883,local,class=CODE,delta=2
    36                           	psect	text884,local,class=CODE,delta=2
    37                           	psect	pa_nodes,global,class=CODE,delta=2
    38                           	dabs	1,0x11E,1
    39                           	dabs	1,0x11F,1
    40                           	dabs	1,0x119,1
    41                           	dabs	1,0x11A,1
    42                           	dabs	1,0x11B,1
    43                           	dabs	1,0x10F,1
    44                           	dabs	1,0x10E,1
    45                           	dabs	1,0x116,1
    46                           	dabs	1,0x19D,1
    47                           	dabs	1,0x19E,1
    48                           	dabs	1,0x118,1
    49                           	dabs	1,0x115,1
    50                           	dabs	1,0x11E,1
    51                           	dabs	1,0x11E,1
    52                           	dabs	1,0x11F,1
    53                           	dabs	1,0x11F,1
    54                           	dabs	1,0x11E,1
    55                           	dabs	1,0x11E,1
    56                           	dabs	1,0x11E,1
    57                           	dabs	1,0x11E,1
    58                           	dabs	1,0x11E,1
    59                           	dabs	1,0x11E,1
    60                           	dabs	1,0x11F,1
    61                           	dabs	1,0x11F,1
    62                           	dabs	1,0x119,1
    63                           	dabs	1,0x119,1
    64                           	dabs	1,0x119,1
    65                           	dabs	1,0x119,1
    66                           	dabs	1,0x119,1
    67                           	dabs	1,0x119,1
    68                           	dabs	1,0x119,1
    69                           	dabs	1,0x19E,1
    70                           	dabs	1,0x118,1
    71                           	dabs	1,0x11A,1
    72                           	dabs	1,0x11A,1
    73                           	dabs	1,0x11A,1
    74                           	dabs	1,0x11A,1
    75                           	dabs	1,0x11A,1
    76                           	dabs	1,0x11A,1
    77                           	dabs	1,0x11A,1
    78                           	dabs	1,0x19E,1
    79                           	dabs	1,0x11B,1
    80                           	dabs	1,0x118,1
    81                           	dabs	1,0x18C,1
    82                           	dabs	1,0x116,1
    83                           	dabs	1,0x116,1
    84                           	dabs	1,0x116,1
    85                           	dabs	1,0x116,1
    86                           	dabs	1,0x11B,1
    87                           	dabs	1,0x11B,1
    88                           	dabs	1,0x19E,1
    89                           	dabs	1,0x19E,1
    90                           	dabs	1,0x19E,1
    91                           	dabs	1,0x19E,1
    92                           	dabs	1,0x19D,1
    93                           	dabs	1,0x19D,1
    94                           	dabs	1,0x19D,1
    95                           	dabs	1,0x19D,1
    96                           	dabs	1,0x19D,1
    97                           	dabs	1,0x11B,1
    98                           	dabs	1,0x118,1
    99                           	dabs	1,0x118,1
   100                           	dabs	1,0x118,1
   101                           	dabs	1,0x118,1
   102                           	dabs	1,0x118,1
   103                           	dabs	1,0x118,1
   104                           	dabs	1,0x115,1
   105                           	dabs	1,0x115,1
   106                           	dabs	1,0x115,1
   107                           	dabs	1,0x115,1
   108                           	dabs	1,0x18C,1
   109                           	dabs	1,0x7E,2
   110  000A                     
   111                           	psect	text860
   112  0000                     __ptext860:	
   113  011E                     _ANSEL	set	286	;_ANSEL
   114  011F                     _ANSELH	set	287	;_ANSELH
   115  0119                     _CM1CON0	set	281	;_CM1CON0
   116  011A                     _CM2CON0	set	282	;_CM2CON0
   117  011B                     _CM2CON1	set	283	;_CM2CON1
   118  010F                     _EEADRH	set	271	;_EEADRH
   119  010E                     _EEDATH	set	270	;_EEDATH
   120  0116                     _IOCB	set	278	;_IOCB
   121  019D                     _PSTRCON	set	413	;_PSTRCON
   122  019E                     _SRCON	set	414	;_SRCON
   123  0118                     _VRCON	set	280	;_VRCON
   124  0115                     _WPUB	set	277	;_WPUB
   125  08F0                     _ANS0	set	2288	;_ANS0
   126  08F1                     _ANS1	set	2289	;_ANS1
   127  08FA                     _ANS10	set	2298	;_ANS10
   128  08FB                     _ANS11	set	2299	;_ANS11
   129  08F2                     _ANS2	set	2290	;_ANS2
   130  08F3                     _ANS3	set	2291	;_ANS3
   131  08F4                     _ANS4	set	2292	;_ANS4
   132  08F5                     _ANS5	set	2293	;_ANS5
   133  08F6                     _ANS6	set	2294	;_ANS6
   134  08F7                     _ANS7	set	2295	;_ANS7
   135  08F8                     _ANS8	set	2296	;_ANS8
   136  08F9                     _ANS9	set	2297	;_ANS9
   137  08C8                     _C1CH0	set	2248	;_C1CH0
   138  08C9                     _C1CH1	set	2249	;_C1CH1
   139  08CD                     _C1OE	set	2253	;_C1OE
   140  08CF                     _C1ON	set	2255	;_C1ON
   141  08CE                     _C1OUT	set	2254	;_C1OUT
   142  08CC                     _C1POL	set	2252	;_C1POL
   143  08CA                     _C1R	set	2250	;_C1R
   144  0CF5                     _C1SEN	set	3317	;_C1SEN
   145  08C7                     _C1VREN	set	2247	;_C1VREN
   146  08D0                     _C2CH0	set	2256	;_C2CH0
   147  08D1                     _C2CH1	set	2257	;_C2CH1
   148  08D5                     _C2OE	set	2261	;_C2OE
   149  08D7                     _C2ON	set	2263	;_C2ON
   150  08D6                     _C2OUT	set	2262	;_C2OUT
   151  08D4                     _C2POL	set	2260	;_C2POL
   152  08D2                     _C2R	set	2258	;_C2R
   153  0CF4                     _C2REN	set	3316	;_C2REN
   154  08D8                     _C2SYNC	set	2264	;_C2SYNC
   155  08C6                     _C2VREN	set	2246	;_C2VREN
   156  0C67                     _EEPGD	set	3175	;_EEPGD
   157  08B4                     _IOCB4	set	2228	;_IOCB4
   158  08B5                     _IOCB5	set	2229	;_IOCB5
   159  08B6                     _IOCB6	set	2230	;_IOCB6
   160  08B7                     _IOCB7	set	2231	;_IOCB7
   161  08DF                     _MC1OUT	set	2271	;_MC1OUT
   162  08DE                     _MC2OUT	set	2270	;_MC2OUT
   163  0CF2                     _PULSR	set	3314	;_PULSR
   164  0CF3                     _PULSS	set	3315	;_PULSS
   165  0CF6                     _SR0	set	3318	;_SR0
   166  0CF7                     _SR1	set	3319	;_SR1
   167  0CE8                     _STRA	set	3304	;_STRA
   168  0CE9                     _STRB	set	3305	;_STRB
   169  0CEA                     _STRC	set	3306	;_STRC
   170  0CEB                     _STRD	set	3307	;_STRD
   171  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   172  08D9                     _T1GSS	set	2265	;_T1GSS
   173  08C4                     _VP6EN	set	2244	;_VP6EN
   174  08C0                     _VR0	set	2240	;_VR0
   175  08C1                     _VR1	set	2241	;_VR1
   176  08C2                     _VR2	set	2242	;_VR2
   177  08C3                     _VR3	set	2243	;_VR3
   178  08C5                     _VRR	set	2245	;_VRR
   179  08AC                     _WPUB4	set	2220	;_WPUB4
   180  08AD                     _WPUB5	set	2221	;_WPUB5
   181  08AE                     _WPUB6	set	2222	;_WPUB6
   182  08AF                     _WPUB7	set	2223	;_WPUB7
   183  0C62                     _WREN	set	3170	;_WREN
   184  000B                     _INTCON	set	11
   185  001B                     _MSCON	set	27
   186  000C                     _PIR1	set	12
   187  0005                     _PORTA	set	5
   188  0007                     _PORTC	set	7
   189  001F                     _T0CON0	set	31
   190  0012                     _T2CON0	set	18
   191  0001                     _TMR0	set	1
   192  0013                     _TMR2H	set	19
   193  0011                     _TMR2L	set	17
   194  0067                     _EEIF	set	103
   195  005F                     _GIE	set	95
   196  005C                     _INTE	set	92
   197  0059                     _INTF	set	89
   198  005B                     _PAIE	set	91
   199  0058                     _PAIF	set	88
   200  005E                     _PEIE	set	94
   201  002A                     _RA2	set	42
   202  002B                     _RA3	set	43
   203  002D                     _RA5	set	45
   204  002E                     _RA6	set	46
   205  002F                     _RA7	set	47
   206  0038                     _RC0	set	56
   207  0039                     _RC1	set	57
   208  005D                     _T0IE	set	93
   209  005A                     _T0IF	set	90
   210  00FB                     _T0ON	set	251
   211  0061                     _TMR2IF	set	97
   212  0092                     _TMR2ON	set	146
   213  009B                     _EEADR	set	155
   214  009C                     _EECON1	set	156
   215  009A                     _EEDAT	set	154
   216  0081                     _OPTION	set	129
   217  008F                     _OSCCON	set	143
   218  008C                     _PIE1	set	140
   219  0092                     _PR2H	set	146
   220  0091                     _PR2L	set	145
   221  0097                     _PSINKA	set	151
   222  009F                     _PSINKC	set	159
   223  0088                     _PSRCA	set	136
   224  0094                     _PSRCC	set	148
   225  0085                     _TRISA	set	133
   226  0087                     _TRISC	set	135
   227  0095                     _WPUA	set	149
   228  0093                     _WPUC	set	147
   229  047A                     _HTS	set	1146
   230  040E                     _INTEDG	set	1038
   231  04B5                     _IOCA5	set	1205
   232  04E0                     _RD	set	1248
   233  0461                     _TMR2IE	set	1121
   234  04E8                     _WR	set	1256
   235                           
   236                           	psect	cinit
   237  06C0                     start_initialization:	
   238                           
   239                           ; Clear objects allocated to COMMON
   240  06C0  01F0               	clrf	__pbssCOMMON& (0+127)
   241  06C1  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   242  06C2  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   243  06C3  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   244  06C4  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   245                           
   246                           ; Clear objects allocated to BANK0
   247  06C5  01C5               	clrf	__pbssBANK0& (0+127)
   248  06C6  01C6               	clrf	(__pbssBANK0+1)& (0+127)
   249  06C7  01C7               	clrf	(__pbssBANK0+2)& (0+127)
   250  06C8  01C8               	clrf	(__pbssBANK0+3)& (0+127)
   251  06C9  01C9               	clrf	(__pbssBANK0+4)& (0+127)
   252  06CA  01CA               	clrf	(__pbssBANK0+5)& (0+127)
   253  06CB  01CB               	clrf	(__pbssBANK0+6)& (0+127)
   254  06CC  01CC               	clrf	(__pbssBANK0+7)& (0+127)
   255  06CD                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  06CD  0183               	clrf	3
   259  06CE  280B               	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMMON
   262  0070                     __pbssCOMMON:	
   263  0070                     _timeTick:	
   264  0070                     	ds	2
   265  0072                     _cntCyc:	
   266  0072                     	ds	1
   267  0073                     _mode_chek:	
   268  0073                     	ds	1
   269  0074                     _mtState:	
   270  0074                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273  0045                     __pbssBANK0:	
   274  0045                     _cntTmp:	
   275  0045                     	ds	2
   276  0047                     _timeOut:	
   277  0047                     	ds	2
   278  0049                     _RegStatus:	
   279  0049                     	ds	1
   280  004A                     _cntOff:	
   281  004A                     	ds	1
   282  004B                     _lostDetect:	
   283  004B                     	ds	1
   284  004C                     _mtOldState:	
   285  004C                     	ds	1
   286                           
   287                           	psect	cstackCOMMON
   288  0075                     __pcstackCOMMON:	
   289  0075                     ?_sys_init:	
   290  0075                     ?_gpio_init:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0075                     ?_timer_init:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0075                     ?_int_init:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0075                     ?_swI2C_Init:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0075                     ?_ISR:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0075                     ?_beepOff:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0075                     ?_beepOn:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0075                     ?_main:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0075                     ?_swI2C_Start:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0075                     ?_swI2C_Stop:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0075                     ??i1_READ_EEPROM:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0075                     ?i1_WRITE_EEPROM:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0075                     ?_READ_EEPROM:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0075                     ?_swI2C_WriteByte:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0075                     ?_swI2C_ReadByte:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0075                     ?i1_READ_EEPROM:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0075                     i1READ_EEPROM@EEAddr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0075                     i1WRITE_EEPROM@EEData:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346  0075                     	ds	1
   347  0076                     ??i1_WRITE_EEPROM:	
   348  0076                     i1READ_EEPROM@ReEepromData:	
   349                           ; 0 bytes @ 0x1
   350                           
   351  0076                     i1WRITE_EEPROM@EEAddr:	
   352                           ; 1 bytes @ 0x1
   353                           
   354                           
   355                           ; 1 bytes @ 0x1
   356  0076                     	ds	1
   357  0077                     ??_ISR:	
   358                           
   359                           ; 0 bytes @ 0x2
   360  0077                     	ds	2
   361  0079                     ISR@tmp_1138:	
   362                           
   363                           ; 1 bytes @ 0x4
   364  0079                     	ds	1
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:	
   368  0020                     ??_READ_EEPROM:	
   369  0020                     ?_WRITE_EEPROM:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0020                     ??_sys_init:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0020                     ??_gpio_init:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0020                     ??_timer_init:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0020                     ??_int_init:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_swI2C_Init:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ?_delay_x10ms:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ??_beepOff:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_beepOn:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ?_setState:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_swI2C_Start:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ??_swI2C_Stop:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ??_swI2C_WriteByte:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ??_swI2C_ReadByte:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0020                     ?_compe:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0020                     ?___awdiv:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0020                     READ_EEPROM@EEAddr:	
   418                           ; 2 bytes @ 0x0
   419                           
   420  0020                     WRITE_EEPROM@EEData:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0020                     compe@b:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0020                     delay_x10ms@t:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0020                     setState@_tOut:	
   430                           ; 2 bytes @ 0x0
   431                           
   432  0020                     ___awdiv@divisor:	
   433                           ; 2 bytes @ 0x0
   434                           
   435                           
   436                           ; 2 bytes @ 0x0
   437  0020                     	ds	1
   438  0021                     ??_WRITE_EEPROM:	
   439  0021                     READ_EEPROM@ReEepromData:	
   440                           ; 0 bytes @ 0x1
   441                           
   442  0021                     WRITE_EEPROM@EEAddr:	
   443                           ; 1 bytes @ 0x1
   444                           
   445  0021                     compe@dt:	
   446                           ; 1 bytes @ 0x1
   447                           
   448  0021                     swI2C_WriteByte@dat:	
   449                           ; 1 bytes @ 0x1
   450                           
   451  0021                     swI2C_ReadByte@Ack:	
   452                           ; 1 bytes @ 0x1
   453                           
   454                           
   455                           ; 1 bytes @ 0x1
   456  0021                     	ds	1
   457  0022                     ??_delay_x10ms:	
   458  0022                     ??_setState:	
   459                           ; 0 bytes @ 0x2
   460                           
   461  0022                     ??_compe:	
   462                           ; 0 bytes @ 0x2
   463                           
   464  0022                     setState@stt:	
   465                           ; 0 bytes @ 0x2
   466                           
   467  0022                     swI2C_WriteByte@i:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0022                     swI2C_ReadByte@dat:	
   471                           ; 1 bytes @ 0x2
   472                           
   473  0022                     delay_x10ms@set:	
   474                           ; 1 bytes @ 0x2
   475                           
   476  0022                     ___awdiv@dividend:	
   477                           ; 2 bytes @ 0x2
   478                           
   479                           
   480                           ; 2 bytes @ 0x2
   481  0022                     	ds	1
   482  0023                     ?_AccWrite:	
   483  0023                     swI2C_ReadByte@i:	
   484                           ; 1 bytes @ 0x3
   485                           
   486  0023                     AccWrite@dat:	
   487                           ; 1 bytes @ 0x3
   488                           
   489                           
   490                           ; 2 bytes @ 0x3
   491  0023                     	ds	1
   492  0024                     ?_beep:	
   493  0024                     ??___awdiv:	
   494                           ; 0 bytes @ 0x4
   495                           
   496  0024                     ?_AccRead:	
   497                           ; 0 bytes @ 0x4
   498                           
   499  0024                     beep@rep:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  0024                     ___awdiv@counter:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0024                     AccRead@dat:	
   506                           ; 1 bytes @ 0x4
   507                           
   508                           
   509                           ; 2 bytes @ 0x4
   510  0024                     	ds	1
   511  0025                     ??_beep:	
   512  0025                     beep@delay:	
   513                           ; 0 bytes @ 0x5
   514                           
   515  0025                     AccWrite@len:	
   516                           ; 1 bytes @ 0x5
   517                           
   518  0025                     ___awdiv@sign:	
   519                           ; 1 bytes @ 0x5
   520                           
   521                           
   522                           ; 1 bytes @ 0x5
   523  0025                     	ds	1
   524  0026                     ??_AccWrite:	
   525  0026                     AccRead@len:	
   526                           ; 0 bytes @ 0x6
   527                           
   528  0026                     ___awdiv@quotient:	
   529                           ; 1 bytes @ 0x6
   530                           
   531                           
   532                           ; 2 bytes @ 0x6
   533  0026                     	ds	1
   534  0027                     ??_AccRead:	
   535  0027                     compe@a:	
   536                           ; 0 bytes @ 0x7
   537                           
   538                           
   539                           ; 1 bytes @ 0x7
   540  0027                     	ds	1
   541  0028                     AccWrite@rAdd:	
   542                           
   543                           ; 1 bytes @ 0x8
   544  0028                     	ds	1
   545  0029                     AccWrite@i:	
   546                           
   547                           ; 1 bytes @ 0x9
   548  0029                     	ds	1
   549  002A                     AccRead@rAdd:	
   550                           
   551                           ; 1 bytes @ 0xA
   552  002A                     	ds	1
   553  002B                     AccRead@i:	
   554                           
   555                           ; 1 bytes @ 0xB
   556  002B                     	ds	1
   557  002C                     ??_main:	
   558                           
   559                           ; 0 bytes @ 0xC
   560  002C                     	ds	3
   561  002F                     main@isWait:	
   562                           
   563                           ; 2 bytes @ 0xF
   564  002F                     	ds	2
   565  0031                     main@isFall:	
   566                           
   567                           ; 1 bytes @ 0x11
   568  0031                     	ds	1
   569  0032                     main@acYOld:	
   570                           
   571                           ; 1 bytes @ 0x12
   572  0032                     	ds	1
   573  0033                     main@acXOld:	
   574                           
   575                           ; 1 bytes @ 0x13
   576  0033                     	ds	1
   577  0034                     main@vibrateOn:	
   578                           
   579                           ; 1 bytes @ 0x14
   580  0034                     	ds	1
   581  0035                     main@buf:	
   582                           
   583                           ; 6 bytes @ 0x15
   584  0035                     	ds	6
   585  003B                     main@reAlertOn:	
   586                           
   587                           ; 1 bytes @ 0x1B
   588  003B                     	ds	1
   589  003C                     main@mpuOk:	
   590                           
   591                           ; 1 bytes @ 0x1C
   592  003C                     	ds	1
   593  003D                     main@acYsum:	
   594                           
   595                           ; 2 bytes @ 0x1D
   596  003D                     	ds	2
   597  003F                     main@acXsum:	
   598                           
   599                           ; 2 bytes @ 0x1F
   600  003F                     	ds	2
   601  0041                     main@isSw:	
   602                           
   603                           ; 1 bytes @ 0x21
   604  0041                     	ds	1
   605  0042                     main@tmp16:	
   606                           
   607                           ; 2 bytes @ 0x22
   608  0042                     	ds	2
   609  0044                     main@tmp8:	
   610                           
   611                           ; 1 bytes @ 0x24
   612  0044                     	ds	1
   613                           
   614                           	psect	maintext
   615  000B                     __pmaintext:	
   616 ;;Data sizes: Strings 0, constant 0, data 0, bss 13, persistent 0 stack 0
   617 ;;Auto spaces:   Size  Autos    Used
   618 ;; COMMON          14      5      10
   619 ;; BANK0           80     37      45
   620 ;; BANK1           32      0       0
   621 ;;
   622 ;; Pointer list with targets:
   623 ;; ?___awdiv	int  size(1) Largest target is 0
   624 ;;
   625 ;; AccRead@dat	PTR unsigned char  size(2) Largest target is 256
   626 ;;		 -> RAM(DATA[256]), main@buf(BANK0[6]), 
   627 ;;
   628 ;; AccWrite@dat	PTR unsigned char  size(2) Largest target is 256
   629 ;;		 -> RAM(DATA[256]), 
   630 ;;
   631 ;;
   632 ;; Critical Paths under _main in COMMON
   633 ;;
   634 ;;   None.
   635 ;;
   636 ;; Critical Paths under _ISR in COMMON
   637 ;;
   638 ;;   _ISR->i1_READ_EEPROM
   639 ;;   _ISR->i1_WRITE_EEPROM
   640 ;;
   641 ;; Critical Paths under _main in BANK0
   642 ;;
   643 ;;   _main->_AccRead
   644 ;;   _AccRead->_swI2C_ReadByte
   645 ;;   _AccWrite->_swI2C_WriteByte
   646 ;;   _beep->_delay_x10ms
   647 ;;
   648 ;; Critical Paths under _ISR in BANK0
   649 ;;
   650 ;;   None.
   651 ;;
   652 ;; Critical Paths under _main in BANK1
   653 ;;
   654 ;;   None.
   655 ;;
   656 ;; Critical Paths under _ISR in BANK1
   657 ;;
   658 ;;   None.
   659 ;;
   660 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   661 ;;
   662 ;;
   663 ;;Call Graph Tables:
   664 ;;
   665 ;; ---------------------------------------------------------------------------------
   666 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   667 ;; ---------------------------------------------------------------------------------
   668 ;; (0) _main                                                26    26      0    4177
   669 ;;                                             12 BANK0     25    25      0
   670 ;;                           _sys_init
   671 ;;                          _gpio_init
   672 ;;                         _timer_init
   673 ;;                           _int_init
   674 ;;                         _swI2C_Init
   675 ;;                           _setState
   676 ;;                       _WRITE_EEPROM
   677 ;;                        _READ_EEPROM
   678 ;;                             _beepOn
   679 ;;                               _beep
   680 ;;                           _AccWrite
   681 ;;                            _AccRead
   682 ;;                            ___awdiv
   683 ;;                            _beepOff
   684 ;;                        _delay_x10ms
   685 ;;                              _compe
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (1) _AccRead                                              8     5      3     532
   688 ;;                                              4 BANK0      8     5      3
   689 ;;                        _swI2C_Start
   690 ;;                    _swI2C_WriteByte
   691 ;;                     _swI2C_ReadByte
   692 ;;                         _swI2C_Stop
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (1) _AccWrite                                             7     4      3     300
   695 ;;                                              3 BANK0      7     4      3
   696 ;;                        _swI2C_Start
   697 ;;                    _swI2C_WriteByte
   698 ;;                         _swI2C_Stop
   699 ;; ---------------------------------------------------------------------------------
   700 ;; (2) _swI2C_ReadByte                                       4     4      0     170
   701 ;;                                              0 BANK0      4     4      0
   702 ;; ---------------------------------------------------------------------------------
   703 ;; (2) _swI2C_WriteByte                                      3     3      0     139
   704 ;;                                              0 BANK0      3     3      0
   705 ;; ---------------------------------------------------------------------------------
   706 ;; (2) _swI2C_Stop                                           1     1      0       0
   707 ;;                                              0 BANK0      1     1      0
   708 ;; ---------------------------------------------------------------------------------
   709 ;; (2) _swI2C_Start                                          1     1      0       0
   710 ;;                                              0 BANK0      1     1      0
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (1) _swI2C_Init                                           1     1      0       0
   713 ;;                                              0 BANK0      1     1      0
   714 ;; ---------------------------------------------------------------------------------
   715 ;; (1) _sys_init                                             0     0      0       0
   716 ;; ---------------------------------------------------------------------------------
   717 ;; (1) _beep                                                 2     1      1     130
   718 ;;                                              4 BANK0      2     1      1
   719 ;;                        _delay_x10ms
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (1) ___awdiv                                              8     4      4     445
   722 ;;                                              0 BANK0      8     4      4
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (1) _int_init                                             1     1      0       0
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (1) _timer_init                                           0     0      0       0
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (1) _gpio_init                                            0     0      0       0
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (1) _compe                                                8     6      2     372
   731 ;;                                              0 BANK0      8     6      2
   732 ;; ---------------------------------------------------------------------------------
   733 ;; (1) _setState                                             3     1      2      62
   734 ;;                                              0 BANK0      3     1      2
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (1) _beepOn                                               0     0      0       0
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (1) _beepOff                                              0     0      0       0
   739 ;; ---------------------------------------------------------------------------------
   740 ;; (1) _delay_x10ms                                          4     2      2      68
   741 ;;                                              0 BANK0      4     2      2
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (1) _WRITE_EEPROM                                         2     1      1      62
   744 ;;                                              0 BANK0      2     1      1
   745 ;; ---------------------------------------------------------------------------------
   746 ;; (1) _READ_EEPROM                                          2     2      0      65
   747 ;;                                              0 BANK0      2     2      0
   748 ;; ---------------------------------------------------------------------------------
   749 ;; Estimated maximum stack depth 2
   750 ;; ---------------------------------------------------------------------------------
   751 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   752 ;; ---------------------------------------------------------------------------------
   753 ;; (3) _ISR                                                  4     4      0     317
   754 ;;                                              2 COMMON     3     3      0
   755 ;;                      i1_READ_EEPROM
   756 ;;                     i1_WRITE_EEPROM
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (4) i1_WRITE_EEPROM                                       2     1      1     146
   759 ;;                                              0 COMMON     2     1      1
   760 ;; ---------------------------------------------------------------------------------
   761 ;; (4) i1_READ_EEPROM                                        2     2      0     148
   762 ;;                                              0 COMMON     2     2      0
   763 ;; ---------------------------------------------------------------------------------
   764 ;; Estimated maximum stack depth 4
   765 ;; ---------------------------------------------------------------------------------
   766 ;; Call Graph Graphs:
   767 ;; _main (ROOT)
   768 ;;   _sys_init
   769 ;;   _gpio_init
   770 ;;   _timer_init
   771 ;;   _int_init
   772 ;;   _swI2C_Init
   773 ;;   _setState
   774 ;;   _WRITE_EEPROM
   775 ;;   _READ_EEPROM
   776 ;;   _beepOn
   777 ;;   _beep
   778 ;;     _delay_x10ms
   779 ;;   _AccWrite
   780 ;;     _swI2C_Start
   781 ;;     _swI2C_WriteByte
   782 ;;     _swI2C_Stop
   783 ;;   _AccRead
   784 ;;     _swI2C_Start
   785 ;;     _swI2C_WriteByte
   786 ;;     _swI2C_ReadByte
   787 ;;     _swI2C_Stop
   788 ;;   ___awdiv
   789 ;;   _beepOff
   790 ;;   _delay_x10ms
   791 ;;   _compe
   792 ;;
   793 ;; _ISR (ROOT)
   794 ;;   i1_READ_EEPROM
   795 ;;   i1_WRITE_EEPROM
   796 ;;
   797 ;; Address spaces:
   798 ;;Name               Size   Autos  Total    Cost      Usage
   799 ;;BITCOMMON            E      0       0       0        0.0%
   800 ;;EEDATA             100      0       0       0        0.0%
   801 ;;NULL                 0      0       0       0        0.0%
   802 ;;CODE                 0      0       0       0        0.0%
   803 ;;COMMON               E      5       A       1       71.4%
   804 ;;BITSFR0              0      0       0       1        0.0%
   805 ;;SFR0                 0      0       0       1        0.0%
   806 ;;BITSFR1              0      0       0       2        0.0%
   807 ;;SFR1                 0      0       0       2        0.0%
   808 ;;STACK                0      0       6       2        0.0%
   809 ;;BITBANK0            50      0       0       3        0.0%
   810 ;;BANK0               50     25      2D       4       56.3%
   811 ;;BANK1               20      0       0       5        0.0%
   812 ;;ABS                  0      0      37       6        0.0%
   813 ;;BITBANK1            20      0       0       7        0.0%
   814 ;;DATA                 0      0      3D       8        0.0%
   815                           
   816                           
   817 ;; *************** function _main *****************
   818 ;; Defined at:
   819 ;;		line 243 in file "smartkey.C"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  buf             6   21[BANK0 ] char [6]
   824 ;;  tmp16           2   34[BANK0 ] unsigned int 
   825 ;;  acXsum          2   31[BANK0 ] int 
   826 ;;  acYsum          2   29[BANK0 ] int 
   827 ;;  isWait          2   15[BANK0 ] unsigned int 
   828 ;;  tmp8            1   36[BANK0 ] unsigned char 
   829 ;;  isSw            1   33[BANK0 ] unsigned char 
   830 ;;  mpuOk           1   28[BANK0 ] unsigned char 
   831 ;;  reAlertOn       1   27[BANK0 ] unsigned char 
   832 ;;  vibrateOn       1   20[BANK0 ] unsigned char 
   833 ;;  acXOld          1   19[BANK0 ] char 
   834 ;;  acYOld          1   18[BANK0 ] char 
   835 ;;  isFall          1   17[BANK0 ] unsigned char 
   836 ;;  accSet          1    0        unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;		None               void
   839 ;; Registers used:
   840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   841 ;; Tracked objects:
   842 ;;		On entry : 17F/0
   843 ;;		On exit  : 20/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1
   846 ;;      Params:         0       0       0
   847 ;;      Locals:         0      22       0
   848 ;;      Temps:          0       3       0
   849 ;;      Totals:         0      25       0
   850 ;;Total ram usage:       25 bytes
   851 ;; Hardware stack levels required when called:    4
   852 ;; This function calls:
   853 ;;		_sys_init
   854 ;;		_gpio_init
   855 ;;		_timer_init
   856 ;;		_int_init
   857 ;;		_swI2C_Init
   858 ;;		_setState
   859 ;;		_WRITE_EEPROM
   860 ;;		_READ_EEPROM
   861 ;;		_beepOn
   862 ;;		_beep
   863 ;;		_AccWrite
   864 ;;		_AccRead
   865 ;;		___awdiv
   866 ;;		_beepOff
   867 ;;		_delay_x10ms
   868 ;;		_compe
   869 ;; This function is called by:
   870 ;;		Startup code after reset
   871 ;; This function uses a non-reentrant model
   872 ;;
   873  000B                     _main:	
   874                           
   875                           ;smartkey.C: 251: unsigned char reAlertOn=0,tmp8,isSw=0,isFall=0,mpuOk=0,vibrateOn=0,acc
      +                          Set=0;
   876                           
   877                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   878  000B  01BB               	clrf	main@reAlertOn
   879  000C  01C1               	clrf	main@isSw
   880  000D  01B1               	clrf	main@isFall
   881  000E  01B4               	clrf	main@vibrateOn
   882                           
   883                           ;smartkey.C: 252: unsigned int isWait =0;
   884  000F  01AF               	clrf	main@isWait
   885  0010  01B0               	clrf	main@isWait+1
   886                           
   887                           ;smartkey.C: 253: signed int acYsum=0,acXsum=0;
   888  0011  01BD               	clrf	main@acYsum
   889  0012  01BE               	clrf	main@acYsum+1
   890  0013  01BF               	clrf	main@acXsum
   891  0014  01C0               	clrf	main@acXsum+1
   892                           
   893                           ;smartkey.C: 254: unsigned int tmp16=0;
   894  0015  01C2               	clrf	main@tmp16
   895  0016  01C3               	clrf	main@tmp16+1
   896  0017  0064               	clrwdt	;#
   897                           
   898                           ;smartkey.C: 260: sys_init();
   899  0018  26F5               	fcall	_sys_init
   900                           
   901                           ;smartkey.C: 261: gpio_init();
   902  0019  2674               	fcall	_gpio_init
   903                           
   904                           ;smartkey.C: 262: timer_init();
   905  001A  26B0               	fcall	_timer_init
   906                           
   907                           ;smartkey.C: 263: int_init();
   908  001B  2610               	fcall	_int_init
   909                           
   910                           ;smartkey.C: 266: _delay((unsigned long)((100)*(4000000/4000.0)));
   911  001C  3082               	movlw	130
   912  001D  00AD               	movwf	??_main+1
   913  001E  30DD               	movlw	221
   914  001F  00AC               	movwf	??_main
   915  0020                     u3597:	
   916  0020  0BAC               	decfsz	??_main,f
   917  0021  2820               	goto	u3597
   918  0022  0BAD               	decfsz	??_main+1,f
   919  0023  2820               	goto	u3597
   920  0024  2825               	nop2
   921                           
   922                           ;smartkey.C: 270: PAIE = 1;
   923  0025  158B               	bsf	11,3
   924                           
   925                           ;smartkey.C: 272: RegStatus = 0;
   926  0026  1283               	bcf	3,5	;RP0=0, select bank0
   927  0027  01C9               	clrf	_RegStatus
   928                           
   929                           ;smartkey.C: 274: swI2C_Init();
   930  0028  25F1               	fcall	_swI2C_Init
   931  0029  3000               	movlw	0
   932                           
   933                           ;smartkey.C: 277: setState(0,0);
   934  002A  1283               	bcf	3,5	;RP0=0, select bank0
   935  002B  01A0               	clrf	?_setState
   936  002C  01A1               	clrf	?_setState+1
   937  002D  26E9               	fcall	_setState
   938                           
   939                           ;smartkey.C: 279: WRITE_EEPROM(0xFF,0xAA);
   940  002E  30AA               	movlw	170
   941  002F  00A0               	movwf	?_WRITE_EEPROM
   942  0030  30FF               	movlw	255
   943  0031  262B               	fcall	_WRITE_EEPROM
   944                           
   945                           ;smartkey.C: 280: WRITE_EEPROM(0xFF,0xAA);
   946  0032  30AA               	movlw	170
   947  0033  1283               	bcf	3,5	;RP0=0, select bank0
   948  0034  00A0               	movwf	?_WRITE_EEPROM
   949  0035  30FF               	movlw	255
   950  0036  262B               	fcall	_WRITE_EEPROM
   951                           
   952                           ;smartkey.C: 283: _delay((unsigned long)((200)*(4000000/4000.0)));
   953  0037  3002               	movlw	2
   954  0038  1283               	bcf	3,5	;RP0=0, select bank0
   955  0039  00AE               	movwf	??_main+2
   956  003A  3004               	movlw	4
   957  003B  00AD               	movwf	??_main+1
   958  003C  30BA               	movlw	186
   959  003D  00AC               	movwf	??_main
   960  003E                     u3607:	
   961  003E  0BAC               	decfsz	??_main,f
   962  003F  283E               	goto	u3607
   963  0040  0BAD               	decfsz	??_main+1,f
   964  0041  283E               	goto	u3607
   965  0042  0BAE               	decfsz	??_main+2,f
   966  0043  283E               	goto	u3607
   967  0044  0064               	clrwdt
   968                           
   969                           ;smartkey.C: 285: tmp8= READ_EEPROM(0x08);
   970  0045  3008               	movlw	8
   971  0046  26DC               	fcall	_READ_EEPROM
   972  0047  00C4               	movwf	main@tmp8
   973                           
   974                           ;smartkey.C: 286: if(tmp8==0xff) {WRITE_EEPROM(0x08,0);_delay((unsigned long)((2)*(40000
      +                          00/4000.0)));}
   975  0048  3AFF               	xorlw	255
   976  0049  1D03               	skipz
   977  004A  2858               	goto	l6734
   978  004B  3008               	movlw	8
   979  004C  01A0               	clrf	?_WRITE_EEPROM
   980  004D  262B               	fcall	_WRITE_EEPROM
   981  004E  3003               	movlw	3
   982  004F  1283               	bcf	3,5	;RP0=0, select bank0
   983  0050  00AD               	movwf	??_main+1
   984  0051  3097               	movlw	151
   985  0052  00AC               	movwf	??_main
   986  0053                     u3617:	
   987  0053  0BAC               	decfsz	??_main,f
   988  0054  2853               	goto	u3617
   989  0055  0BAD               	decfsz	??_main+1,f
   990  0056  2853               	goto	u3617
   991  0057  2858               	nop2
   992  0058                     l6734:	
   993                           
   994                           ;smartkey.C: 288: if(tmp8==0xcc){
   995  0058  1283               	bcf	3,5	;RP0=0, select bank0
   996  0059  0844               	movf	main@tmp8,w
   997  005A  3ACC               	xorlw	204
   998  005B  1D03               	skipz
   999  005C  2873               	goto	l6748
  1000  005D  3008               	movlw	8
  1001                           
  1002                           ;smartkey.C: 289: RegStatus &=~(0x20);
  1003  005E  12C9               	bcf	_RegStatus,5
  1004                           
  1005                           ;smartkey.C: 290: setState(3,1800);
  1006  005F  00A0               	movwf	?_setState
  1007  0060  3007               	movlw	7
  1008  0061  00A1               	movwf	?_setState+1
  1009  0062  3003               	movlw	3
  1010  0063  26E9               	fcall	_setState
  1011                           
  1012                           ;smartkey.C: 291: mtOldState = 1;
  1013  0064  01CC               	clrf	_mtOldState
  1014  0065  0ACC               	incf	_mtOldState,f
  1015                           
  1016                           ;smartkey.C: 292: cntTmp = timeTick+50;
  1017  0066  0871               	movf	_timeTick+1,w
  1018  0067  00C6               	movwf	_cntTmp+1
  1019  0068  0870               	movf	_timeTick,w
  1020  0069  00C5               	movwf	_cntTmp
  1021  006A  3032               	movlw	50
  1022  006B  07C5               	addwf	_cntTmp,f
  1023  006C  1803               	skipnc
  1024  006D  0AC6               	incf	_cntTmp+1,f
  1025                           
  1026                           ;smartkey.C: 293: PR2L =12;
  1027  006E  300C               	movlw	12
  1028  006F  1683               	bsf	3,5	;RP0=1, select bank1
  1029  0070  0091               	movwf	17	;volatile
  1030                           
  1031                           ;smartkey.C: 294: beepOn();
  1032  0071  270A               	fcall	_beepOn
  1033                           
  1034                           ;smartkey.C: 295: } else {
  1035  0072  287A               	goto	l6752
  1036  0073                     l6748:	
  1037                           
  1038                           ;smartkey.C: 296: setState(2,400);
  1039  0073  3090               	movlw	144
  1040  0074  00A0               	movwf	?_setState
  1041  0075  3001               	movlw	1
  1042  0076  00A1               	movwf	?_setState+1
  1043  0077  3002               	movlw	2
  1044  0078  26E9               	fcall	_setState
  1045                           
  1046                           ;smartkey.C: 298: mtOldState = 0;
  1047  0079  01CC               	clrf	_mtOldState
  1048  007A                     l6752:	
  1049                           
  1050                           ;smartkey.C: 300: }
  1051                           ;smartkey.C: 303: tmp8 = READ_EEPROM(0x40);
  1052  007A  3040               	movlw	64
  1053  007B  26DC               	fcall	_READ_EEPROM
  1054  007C  00C4               	movwf	main@tmp8
  1055                           
  1056                           ;smartkey.C: 304: if(tmp8==8){
  1057  007D  3A08               	xorlw	8
  1058  007E  1D03               	skipz
  1059  007F  28A4               	goto	l6772
  1060                           
  1061                           ;smartkey.C: 305: tmp8= READ_EEPROM(0x41);
  1062  0080  3041               	movlw	65
  1063  0081  26DC               	fcall	_READ_EEPROM
  1064  0082  00C4               	movwf	main@tmp8
  1065  0083  3019               	movlw	25
  1066                           
  1067                           ;smartkey.C: 306: beep(25,1);
  1068  0084  01A4               	clrf	?_beep
  1069  0085  0AA4               	incf	?_beep,f
  1070  0086  265E               	fcall	_beep
  1071                           
  1072                           ;smartkey.C: 307: if((tmp8==1)||(tmp8==0xff)){
  1073  0087  0344               	decf	main@tmp8,w
  1074  0088  1903               	skipnz
  1075  0089  288E               	goto	l6764
  1076  008A  0844               	movf	main@tmp8,w
  1077  008B  3AFF               	xorlw	255
  1078  008C  1D03               	skipz
  1079  008D  2891               	goto	l6766
  1080  008E                     l6764:	
  1081  008E  3041               	movlw	65
  1082                           
  1083                           ;smartkey.C: 308: WRITE_EEPROM(0x41,0);
  1084  008F  01A0               	clrf	?_WRITE_EEPROM
  1085  0090  2894               	goto	L1
  1086  0091                     l6766:	
  1087                           ;smartkey.C: 309: }
  1088                           
  1089  0091  3041               	movlw	65
  1090                           
  1091                           ;smartkey.C: 310: else {
  1092                           ;smartkey.C: 311: WRITE_EEPROM(0x41,0x1);
  1093  0092  01A0               	clrf	?_WRITE_EEPROM
  1094  0093  0AA0               	incf	?_WRITE_EEPROM,f
  1095  0094                     L1:	
  1096  0094  262B               	fcall	_WRITE_EEPROM
  1097  0095  3040               	movlw	64
  1098                           
  1099                           ;smartkey.C: 313: }
  1100                           ;smartkey.C: 314: WRITE_EEPROM(0x40,0);
  1101  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0097  01A0               	clrf	?_WRITE_EEPROM
  1103  0098  262B               	fcall	_WRITE_EEPROM
  1104                           
  1105                           ;smartkey.C: 316: _delay((unsigned long)((100)*(4000000/4000.0)));
  1106  0099  3082               	movlw	130
  1107  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1108  009B  00AD               	movwf	??_main+1
  1109  009C  30DD               	movlw	221
  1110  009D  00AC               	movwf	??_main
  1111  009E                     u3627:	
  1112  009E  0BAC               	decfsz	??_main,f
  1113  009F  289E               	goto	u3627
  1114  00A0  0BAD               	decfsz	??_main+1,f
  1115  00A1  289E               	goto	u3627
  1116  00A2  28A3               	nop2
  1117                           
  1118                           ;smartkey.C: 317: } else if(tmp8==0xff) WRITE_EEPROM(0x40,0);
  1119  00A3  28AB               	goto	l6776
  1120  00A4                     l6772:	
  1121  00A4  0844               	movf	main@tmp8,w
  1122  00A5  3AFF               	xorlw	255
  1123  00A6  1D03               	skipz
  1124  00A7  28AB               	goto	l6776
  1125  00A8  3040               	movlw	64
  1126  00A9  01A0               	clrf	?_WRITE_EEPROM
  1127  00AA  262B               	fcall	_WRITE_EEPROM
  1128  00AB                     l6776:	
  1129                           
  1130                           ;smartkey.C: 320: tmp8 = READ_EEPROM(0x41);
  1131  00AB  3041               	movlw	65
  1132  00AC  26DC               	fcall	_READ_EEPROM
  1133  00AD  00C4               	movwf	main@tmp8
  1134                           
  1135                           ;smartkey.C: 321: if(tmp8==1){
  1136  00AE  0344               	decf	main@tmp8,w
  1137  00AF  1D03               	skipz
  1138  00B0  28CD               	goto	l6786
  1139                           
  1140                           ;smartkey.C: 322: RC0 =1;RC1 =1;
  1141  00B1  1407               	bsf	7,0
  1142  00B2  1487               	bsf	7,1
  1143  00B3                     l6782:	
  1144                           
  1145                           ;smartkey.C: 324: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1146  00B3  3006               	movlw	6
  1147  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1148  00B5  00AE               	movwf	??_main+2
  1149  00B6  3013               	movlw	19
  1150  00B7  00AD               	movwf	??_main+1
  1151  00B8  30B1               	movlw	177
  1152  00B9  00AC               	movwf	??_main
  1153  00BA                     u3637:	
  1154  00BA  0BAC               	decfsz	??_main,f
  1155  00BB  28BA               	goto	u3637
  1156  00BC  0BAD               	decfsz	??_main+1,f
  1157  00BD  28BA               	goto	u3637
  1158  00BE  0BAE               	decfsz	??_main+2,f
  1159  00BF  28BA               	goto	u3637
  1160  00C0  28C1               	nop2
  1161                           
  1162                           ;smartkey.C: 325: if(timeTick >300) WRITE_EEPROM(0x40,0);
  1163  00C1  3001               	movlw	1
  1164  00C2  0271               	subwf	_timeTick+1,w
  1165  00C3  302D               	movlw	45
  1166  00C4  1903               	skipnz
  1167  00C5  0270               	subwf	_timeTick,w
  1168  00C6  1C03               	skipc
  1169  00C7  28B3               	goto	l6782
  1170  00C8  3040               	movlw	64
  1171  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1172  00CA  01A0               	clrf	?_WRITE_EEPROM
  1173  00CB  262B               	fcall	_WRITE_EEPROM
  1174  00CC  28B3               	goto	l6782
  1175  00CD                     l6786:	
  1176                           
  1177                           ;smartkey.C: 326: }
  1178                           ;smartkey.C: 327: }
  1179                           ;smartkey.C: 330: buf[0] = 0x28;
  1180  00CD  3028               	movlw	40
  1181  00CE  00B5               	movwf	main@buf
  1182                           
  1183                           ;smartkey.C: 331: buf[1] = 0x87;
  1184  00CF  3087               	movlw	-121
  1185  00D0  00B6               	movwf	main@buf+1
  1186                           
  1187                           ;smartkey.C: 332: if(AccWrite(0x6b,(unsigned char)buf,2)==0)
  1188  00D1  3035               	movlw	main@buf& (0+255)
  1189  00D2  00AC               	movwf	??_main
  1190  00D3  01AD               	clrf	??_main+1
  1191  00D4  00A3               	movwf	?_AccWrite
  1192  00D5  082D               	movf	??_main+1,w
  1193  00D6  00A4               	movwf	?_AccWrite+1
  1194  00D7  3002               	movlw	2
  1195  00D8  00A5               	movwf	?_AccWrite+2
  1196  00D9  306B               	movlw	107
  1197  00DA  25C9               	fcall	_AccWrite
  1198  00DB  3800               	iorlw	0
  1199                           
  1200                           ;smartkey.C: 333: mpuOk =1;
  1201  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1202  00DD  1D03               	skipz
  1203  00DE  28E2               	goto	L8
  1204  00DF  01BC               	clrf	main@mpuOk
  1205  00E0  0ABC               	incf	main@mpuOk,f
  1206  00E1  28E3               	goto	l6794
  1207  00E2                     L8:	
  1208                           ;smartkey.C: 334: else
  1209                           ;smartkey.C: 335: mpuOk =0;
  1210                           
  1211  00E2  01BC               	clrf	main@mpuOk
  1212  00E3                     l6794:	
  1213                           
  1214                           ;smartkey.C: 337: _delay((unsigned long)((100)*(4000000/4000.0)));
  1215  00E3  3082               	movlw	130
  1216  00E4  00AD               	movwf	??_main+1
  1217  00E5  30DD               	movlw	221
  1218  00E6  00AC               	movwf	??_main
  1219  00E7                     u3647:	
  1220  00E7  0BAC               	decfsz	??_main,f
  1221  00E8  28E7               	goto	u3647
  1222  00E9  0BAD               	decfsz	??_main+1,f
  1223  00EA  28E7               	goto	u3647
  1224  00EB  28EC               	nop2
  1225                           
  1226                           ;smartkey.C: 339: if(mpuOk ==0){beep(10,2);}
  1227  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1228  00ED  08BC               	movf	main@mpuOk,f
  1229  00EE  1D03               	skipz
  1230  00EF  28F4               	goto	l6800
  1231  00F0  3002               	movlw	2
  1232  00F1  00A4               	movwf	?_beep
  1233  00F2  300A               	movlw	10
  1234  00F3  265E               	fcall	_beep
  1235  00F4                     l6800:	
  1236                           
  1237                           ;smartkey.C: 345: tmp8= READ_EEPROM(0x40);
  1238  00F4  3040               	movlw	64
  1239  00F5  26DC               	fcall	_READ_EEPROM
  1240  00F6  00C4               	movwf	main@tmp8
  1241                           
  1242                           ;smartkey.C: 346: if(tmp8==6 && mpuOk ==1)
  1243  00F7  3A06               	xorlw	6
  1244  00F8  1D03               	skipz
  1245  00F9  29A7               	goto	l6840
  1246  00FA  0B3C               	decfsz	main@mpuOk,w
  1247  00FB  29A7               	goto	l6840
  1248  00FC  3003               	movlw	3
  1249                           
  1250                           ;smartkey.C: 347: {
  1251                           ;smartkey.C: 348: tmp8=0; beep(10,3);
  1252  00FD  01C4               	clrf	main@tmp8
  1253  00FE  00A4               	movwf	?_beep
  1254  00FF  300A               	movlw	10
  1255  0100  265E               	fcall	_beep
  1256                           
  1257                           ;smartkey.C: 349: while((RA2 )&&(tmp8<11))
  1258  0101  293D               	goto	l6818
  1259  0102                     l6810:	
  1260                           
  1261                           ;smartkey.C: 350: {
  1262                           ;smartkey.C: 351: if(AccRead(0x3b,(unsigned char)buf,6)==0){
  1263  0102  3035               	movlw	main@buf& (0+255)
  1264  0103  00AC               	movwf	??_main
  1265  0104  01AD               	clrf	??_main+1
  1266  0105  00A4               	movwf	?_AccRead
  1267  0106  082D               	movf	??_main+1,w
  1268  0107  00A5               	movwf	?_AccRead+1
  1269  0108  3006               	movlw	6
  1270  0109  00A6               	movwf	?_AccRead+2
  1271  010A  303B               	movlw	59
  1272  010B  258E               	fcall	_AccRead
  1273  010C  3800               	iorlw	0
  1274  010D  1D03               	skipz
  1275  010E  292F               	goto	l6816
  1276                           
  1277                           ;smartkey.C: 353: acXsum += buf[0];
  1278  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0110  0835               	movf	main@buf,w
  1280  0111  00AC               	movwf	??_main
  1281  0112  01AD               	clrf	??_main+1
  1282  0113  1BAC               	btfsc	??_main,7
  1283  0114  03AD               	decf	??_main+1,f
  1284  0115  07BF               	addwf	main@acXsum,f
  1285  0116  1803               	skipnc
  1286  0117  0AC0               	incf	main@acXsum+1,f
  1287  0118  082D               	movf	??_main+1,w
  1288  0119  07C0               	addwf	main@acXsum+1,f
  1289                           
  1290                           ;smartkey.C: 354: acYsum += buf[2];
  1291  011A  0837               	movf	main@buf+2,w
  1292  011B  00AC               	movwf	??_main
  1293  011C  01AD               	clrf	??_main+1
  1294  011D  1BAC               	btfsc	??_main,7
  1295  011E  03AD               	decf	??_main+1,f
  1296  011F  07BD               	addwf	main@acYsum,f
  1297  0120  1803               	skipnc
  1298  0121  0ABE               	incf	main@acYsum+1,f
  1299  0122  082D               	movf	??_main+1,w
  1300  0123  07BE               	addwf	main@acYsum+1,f
  1301                           
  1302                           ;smartkey.C: 355: tmp16 = (signed int)tmp16 + buf[4];
  1303  0124  0839               	movf	main@buf+4,w
  1304  0125  00AC               	movwf	??_main
  1305  0126  01AD               	clrf	??_main+1
  1306  0127  1BAC               	btfsc	??_main,7
  1307  0128  03AD               	decf	??_main+1,f
  1308  0129  07C2               	addwf	main@tmp16,f
  1309  012A  1803               	skipnc
  1310  012B  0AC3               	incf	main@tmp16+1,f
  1311  012C  082D               	movf	??_main+1,w
  1312  012D  07C3               	addwf	main@tmp16+1,f
  1313                           
  1314                           ;smartkey.C: 356: tmp8++;
  1315  012E  0AC4               	incf	main@tmp8,f
  1316  012F                     l6816:	
  1317                           
  1318                           ;smartkey.C: 357: }
  1319                           ;smartkey.C: 358: _delay((unsigned long)((500)*(4000000/4000.0)));
  1320  012F  3003               	movlw	3
  1321  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0131  00AE               	movwf	??_main+2
  1323  0132  308A               	movlw	138
  1324  0133  00AD               	movwf	??_main+1
  1325  0134  3056               	movlw	86
  1326  0135  00AC               	movwf	??_main
  1327  0136                     u3657:	
  1328  0136  0BAC               	decfsz	??_main,f
  1329  0137  2936               	goto	u3657
  1330  0138  0BAD               	decfsz	??_main+1,f
  1331  0139  2936               	goto	u3657
  1332  013A  0BAE               	decfsz	??_main+2,f
  1333  013B  2936               	goto	u3657
  1334  013C  293D               	nop2
  1335  013D                     l6818:	
  1336  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1337  013E  1D05               	btfss	5,2
  1338  013F  2944               	goto	l6822
  1339  0140  300B               	movlw	11
  1340  0141  0244               	subwf	main@tmp8,w
  1341  0142  1C03               	skipc
  1342  0143  2902               	goto	l6810
  1343  0144                     l6822:	
  1344                           
  1345                           ;smartkey.C: 360: }
  1346                           ;smartkey.C: 362: if(tmp8==11){
  1347  0144  0844               	movf	main@tmp8,w
  1348  0145  3A0B               	xorlw	11
  1349  0146  1D03               	skipz
  1350  0147  299F               	goto	l6836
  1351                           
  1352                           ;smartkey.C: 363: acXsum =acXsum/10;
  1353  0148  300A               	movlw	10
  1354  0149  00A0               	movwf	?___awdiv
  1355  014A  01A1               	clrf	?___awdiv+1
  1356  014B  0840               	movf	main@acXsum+1,w
  1357  014C  00A3               	movwf	?___awdiv+3
  1358  014D  083F               	movf	main@acXsum,w
  1359  014E  00A2               	movwf	?___awdiv+2
  1360  014F  2488               	fcall	___awdiv
  1361  0150  0821               	movf	?___awdiv+1,w
  1362  0151  00C0               	movwf	main@acXsum+1
  1363  0152  0820               	movf	?___awdiv,w
  1364  0153  00BF               	movwf	main@acXsum
  1365                           
  1366                           ;smartkey.C: 364: acYsum = acYsum/10;
  1367  0154  300A               	movlw	10
  1368  0155  00A0               	movwf	?___awdiv
  1369  0156  01A1               	clrf	?___awdiv+1
  1370  0157  083E               	movf	main@acYsum+1,w
  1371  0158  00A3               	movwf	?___awdiv+3
  1372  0159  083D               	movf	main@acYsum,w
  1373  015A  00A2               	movwf	?___awdiv+2
  1374  015B  2488               	fcall	___awdiv
  1375  015C  0821               	movf	?___awdiv+1,w
  1376  015D  00BE               	movwf	main@acYsum+1
  1377  015E  0820               	movf	?___awdiv,w
  1378  015F  00BD               	movwf	main@acYsum
  1379                           
  1380                           ;smartkey.C: 365: tmp16 = (signed int)tmp16/10;
  1381  0160  300A               	movlw	10
  1382  0161  00A0               	movwf	?___awdiv
  1383  0162  01A1               	clrf	?___awdiv+1
  1384  0163  0843               	movf	main@tmp16+1,w
  1385  0164  00A3               	movwf	?___awdiv+3
  1386  0165  0842               	movf	main@tmp16,w
  1387  0166  00A2               	movwf	?___awdiv+2
  1388  0167  2488               	fcall	___awdiv
  1389  0168  0821               	movf	?___awdiv+1,w
  1390  0169  00C3               	movwf	main@tmp16+1
  1391  016A  0820               	movf	?___awdiv,w
  1392  016B  00C2               	movwf	main@tmp16
  1393                           
  1394                           ;smartkey.C: 367: if(((signed int)tmp16 > (-31)) && ((signed int)tmp16 < 31)){
  1395  016C  0843               	movf	main@tmp16+1,w
  1396  016D  3A80               	xorlw	128
  1397  016E  00FF               	movwf	127
  1398  016F  307F               	movlw	127
  1399  0170  027F               	subwf	127,w
  1400  0171  1D03               	skipz
  1401  0172  2975               	goto	u3065
  1402  0173  30E2               	movlw	226
  1403  0174  0242               	subwf	main@tmp16,w
  1404  0175                     u3065:	
  1405  0175  1C03               	skipc
  1406  0176  2986               	goto	l6832
  1407  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0178  0843               	movf	main@tmp16+1,w
  1409  0179  3A80               	xorlw	128
  1410  017A  00FF               	movwf	127
  1411  017B  3080               	movlw	128
  1412  017C  027F               	subwf	127,w
  1413  017D  1D03               	skipz
  1414  017E  2981               	goto	u3075
  1415  017F  301F               	movlw	31
  1416  0180  0242               	subwf	main@tmp16,w
  1417  0181                     u3075:	
  1418  0181  1803               	skipnc
  1419  0182  2986               	goto	l6832
  1420                           
  1421                           ;smartkey.C: 368: beep(10,2);
  1422  0183  3002               	movlw	2
  1423  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0185  29A0               	goto	L2
  1425  0186                     l6832:	
  1426                           ;smartkey.C: 369: }
  1427                           
  1428                           
  1429                           ;smartkey.C: 370: else
  1430                           ;smartkey.C: 372: {
  1431                           ;smartkey.C: 373: beep(10,3);
  1432  0186  3003               	movlw	3
  1433  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0188  00A4               	movwf	?_beep
  1435  0189  300A               	movlw	10
  1436  018A  265E               	fcall	_beep
  1437                           
  1438                           ;smartkey.C: 374: WRITE_EEPROM(0x10,(unsigned char)acXsum);
  1439  018B  083F               	movf	main@acXsum,w
  1440  018C  00A0               	movwf	?_WRITE_EEPROM
  1441  018D  3010               	movlw	16
  1442  018E  262B               	fcall	_WRITE_EEPROM
  1443                           
  1444                           ;smartkey.C: 375: WRITE_EEPROM(0x11,(unsigned char)acYsum);
  1445  018F  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0190  083D               	movf	main@acYsum,w
  1447  0191  00A0               	movwf	?_WRITE_EEPROM
  1448  0192  3011               	movlw	17
  1449  0193  262B               	fcall	_WRITE_EEPROM
  1450                           
  1451                           ;smartkey.C: 376: _delay((unsigned long)((100)*(4000000/4000.0)));
  1452  0194  3082               	movlw	130
  1453  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0196  00AD               	movwf	??_main+1
  1455  0197  30DD               	movlw	221
  1456  0198  00AC               	movwf	??_main
  1457  0199                     u3667:	
  1458  0199  0BAC               	decfsz	??_main,f
  1459  019A  2999               	goto	u3667
  1460  019B  0BAD               	decfsz	??_main+1,f
  1461  019C  2999               	goto	u3667
  1462  019D  299E               	nop2
  1463  019E  29A3               	goto	l926
  1464  019F                     l6836:	
  1465                           
  1466                           ;smartkey.C: 380: beep(10,2);
  1467  019F  3002               	movlw	2
  1468  01A0                     L2:	
  1469  01A0  00A4               	movwf	?_beep
  1470  01A1  300A               	movlw	10
  1471  01A2  265E               	fcall	_beep
  1472  01A3                     l926:	
  1473  01A3  3040               	movlw	64
  1474                           
  1475                           ;smartkey.C: 381: }
  1476                           ;smartkey.C: 382: WRITE_EEPROM(0x40,0);
  1477  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1478  01A5  01A0               	clrf	?_WRITE_EEPROM
  1479  01A6  262B               	fcall	_WRITE_EEPROM
  1480  01A7                     l6840:	
  1481                           
  1482                           ;smartkey.C: 384: }
  1483                           ;smartkey.C: 386: acXsum = (signed char)READ_EEPROM(0x10);
  1484  01A7  3010               	movlw	16
  1485  01A8  26DC               	fcall	_READ_EEPROM
  1486  01A9  00BF               	movwf	main@acXsum
  1487  01AA  01C0               	clrf	main@acXsum+1
  1488  01AB  1BBF               	btfsc	main@acXsum,7
  1489  01AC  03C0               	decf	main@acXsum+1,f
  1490                           
  1491                           ;smartkey.C: 387: acYsum = (signed char)READ_EEPROM(0x11);
  1492  01AD  3011               	movlw	17
  1493  01AE  26DC               	fcall	_READ_EEPROM
  1494  01AF  00BD               	movwf	main@acYsum
  1495  01B0  01BE               	clrf	main@acYsum+1
  1496  01B1  1BBD               	btfsc	main@acYsum,7
  1497  01B2  03BE               	decf	main@acYsum+1,f
  1498                           
  1499                           ;smartkey.C: 389: timeTick = 0;
  1500  01B3  01F0               	clrf	_timeTick
  1501  01B4  01F1               	clrf	_timeTick+1
  1502  01B5                     l6846:	
  1503                           
  1504                           ;smartkey.C: 398: if(mode_chek == 0)
  1505  01B5  08F3               	movf	_mode_chek,f
  1506  01B6  1903               	btfsc	3,2
  1507                           
  1508                           ;smartkey.C: 399: {
  1509                           ;smartkey.C: 401: if(RegStatus & 0x80)
  1510  01B7  1FC9               	btfss	_RegStatus,7
  1511  01B8  2A86               	goto	l6954
  1512                           
  1513                           ;smartkey.C: 402: {
  1514                           ;smartkey.C: 403: PAIE = 0;
  1515  01B9  118B               	bcf	11,3
  1516                           
  1517                           ;smartkey.C: 406: RegStatus &= (~0x80);
  1518  01BA  13C9               	bcf	_RegStatus,7
  1519                           
  1520                           ;smartkey.C: 418: {
  1521                           ;smartkey.C: 420: if ((RegStatus & 0x40) !=0){
  1522  01BB  1B49               	btfsc	_RegStatus,6
  1523  01BC  2A38               	goto	l6916
  1524  01BD  2A7D               	goto	l6952
  1525  01BE                     l6854:	
  1526                           
  1527                           ;smartkey.C: 426: lostDetect =0;
  1528  01BE  01CB               	clrf	_lostDetect
  1529  01BF                     L4:	
  1530  01BF  3028               	movlw	40
  1531                           
  1532                           ;smartkey.C: 427: timeTick =0;
  1533  01C0  01F0               	clrf	_timeTick
  1534  01C1  01F1               	clrf	_timeTick+1
  1535                           
  1536                           ;smartkey.C: 428: tmp16 = 40;
  1537  01C2  00C2               	movwf	main@tmp16
  1538  01C3  01C3               	clrf	main@tmp16+1
  1539                           
  1540                           ;smartkey.C: 429: break;
  1541  01C4  2A85               	goto	l952
  1542  01C5                     l6858:	
  1543                           
  1544                           ;smartkey.C: 432: if(timeTick >30){
  1545  01C5  3000               	movlw	0
  1546  01C6  0271               	subwf	_timeTick+1,w
  1547  01C7  301F               	movlw	31
  1548  01C8  1903               	skipnz
  1549  01C9  0270               	subwf	_timeTick,w
  1550  01CA  1C03               	skipc
  1551  01CB  2A85               	goto	l952
  1552  01CC  3008               	movlw	8
  1553                           
  1554                           ;smartkey.C: 433: timeTick =0;
  1555  01CD  01F0               	clrf	_timeTick
  1556  01CE  01F1               	clrf	_timeTick+1
  1557                           
  1558                           ;smartkey.C: 435: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1559  01CF  26DC               	fcall	_READ_EEPROM
  1560  01D0  3ACC               	xorlw	204
  1561  01D1  1D03               	skipz
  1562  01D2  29D6               	goto	l6866
  1563  01D3  3008               	movlw	8
  1564  01D4  01A0               	clrf	?_WRITE_EEPROM
  1565  01D5  262B               	fcall	_WRITE_EEPROM
  1566  01D6                     l6866:	
  1567                           
  1568                           ;smartkey.C: 437: if((mtOldState == 3)){
  1569  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1570  01D7  084C               	movf	_mtOldState,w
  1571  01D8  3A03               	xorlw	3
  1572  01D9  1D03               	skipz
  1573  01DA  29E7               	goto	l6876
  1574                           
  1575                           ;smartkey.C: 438: beepOn();TMR2ON = 0; beep(10,1);
  1576  01DB  270A               	fcall	_beepOn
  1577  01DC  300A               	movlw	10
  1578  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1579  01DE  1112               	bcf	18,2
  1580  01DF  01A4               	clrf	?_beep
  1581  01E0  0AA4               	incf	?_beep,f
  1582  01E1  265E               	fcall	_beep
  1583  01E2                     L3:	
  1584                           
  1585                           ;smartkey.C: 439: if(reAlertOn)reAlertOn =0;
  1586  01E2  083B               	movf	main@reAlertOn,w
  1587  01E3  1903               	btfsc	3,2
  1588  01E4  2A85               	goto	l952
  1589  01E5  01BB               	clrf	main@reAlertOn
  1590  01E6  2A85               	goto	l952
  1591  01E7                     l6876:	
  1592                           
  1593                           ;smartkey.C: 441: else if((mtOldState == 0)||(mtOldState == 4)){
  1594  01E7  084C               	movf	_mtOldState,w
  1595  01E8  1903               	btfsc	3,2
  1596  01E9  29EE               	goto	l942
  1597  01EA  084C               	movf	_mtOldState,w
  1598  01EB  3A04               	xorlw	4
  1599  01EC  1D03               	skipz
  1600  01ED  2A0B               	goto	l6890
  1601  01EE                     l942:	
  1602  01EE  30AC               	movlw	172
  1603                           
  1604                           ;smartkey.C: 442: RegStatus |=(0x20);
  1605  01EF  16C9               	bsf	_RegStatus,5
  1606                           
  1607                           ;smartkey.C: 443: setState(1,3500);
  1608  01F0  00A0               	movwf	?_setState
  1609  01F1  300D               	movlw	13
  1610  01F2  00A1               	movwf	?_setState+1
  1611  01F3  3001               	movlw	1
  1612  01F4  26E9               	fcall	_setState
  1613                           
  1614                           ;smartkey.C: 444: if(READ_EEPROM(0x40))WRITE_EEPROM(0x40,0);
  1615  01F5  3040               	movlw	64
  1616  01F6  26DC               	fcall	_READ_EEPROM
  1617  01F7  3A00               	xorlw	0
  1618  01F8  1903               	skipnz
  1619  01F9  29FD               	goto	l6886
  1620  01FA  3040               	movlw	64
  1621  01FB  01A0               	clrf	?_WRITE_EEPROM
  1622  01FC  262B               	fcall	_WRITE_EEPROM
  1623  01FD                     l6886:	
  1624                           
  1625                           ;smartkey.C: 445: tmp16 = timeTick+40;
  1626  01FD  0871               	movf	_timeTick+1,w
  1627  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1628  01FF  00C3               	movwf	main@tmp16+1
  1629  0200  0870               	movf	_timeTick,w
  1630  0201  00C2               	movwf	main@tmp16
  1631  0202  3028               	movlw	40
  1632  0203  07C2               	addwf	main@tmp16,f
  1633  0204  1803               	skipnc
  1634  0205  0AC3               	incf	main@tmp16+1,f
  1635  0206  300A               	movlw	10
  1636                           
  1637                           ;smartkey.C: 446: beep(10,1);
  1638  0207  01A4               	clrf	?_beep
  1639  0208  0AA4               	incf	?_beep,f
  1640  0209  265E               	fcall	_beep
  1641                           
  1642                           ;smartkey.C: 447: }
  1643  020A  2A85               	goto	l952
  1644  020B                     l6890:	
  1645                           
  1646                           ;smartkey.C: 448: else if((mtOldState == 1)){
  1647  020B  0B4C               	decfsz	_mtOldState,w
  1648  020C  2A85               	goto	l952
  1649  020D  29E2               	goto	L3
  1650  020E                     l6896:	
  1651                           ;smartkey.C: 451: }
  1652                           ;smartkey.C: 452: }
  1653                           ;smartkey.C: 453: break;
  1654                           
  1655                           ;smartkey.C: 450: if(reAlertOn)reAlertOn =0;
  1656                           
  1657                           
  1658                           ;smartkey.C: 456: if(timeTick > 200)
  1659  020E  3000               	movlw	0
  1660  020F  0271               	subwf	_timeTick+1,w
  1661  0210  30C9               	movlw	201
  1662  0211  1903               	skipnz
  1663  0212  0270               	subwf	_timeTick,w
  1664  0213  1C03               	skipc
  1665  0214  2A85               	goto	l952
  1666                           
  1667                           ;smartkey.C: 457: {
  1668                           ;smartkey.C: 458: beepOff();
  1669  0215  270F               	fcall	_beepOff
  1670                           
  1671                           ;smartkey.C: 459: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1672  0216  3008               	movlw	8
  1673  0217  26DC               	fcall	_READ_EEPROM
  1674  0218  3ACC               	xorlw	204
  1675  0219  1D03               	skipz
  1676  021A  2A1E               	goto	l6904
  1677  021B  3008               	movlw	8
  1678  021C  01A0               	clrf	?_WRITE_EEPROM
  1679  021D  262B               	fcall	_WRITE_EEPROM
  1680  021E                     l6904:	
  1681  021E  30AC               	movlw	172
  1682                           
  1683                           ;smartkey.C: 460: RegStatus |=(0x20);
  1684  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0220  16C9               	bsf	_RegStatus,5
  1686                           
  1687                           ;smartkey.C: 461: setState(1,3500);
  1688  0221  00A0               	movwf	?_setState
  1689  0222  300D               	movlw	13
  1690  0223  00A1               	movwf	?_setState+1
  1691  0224  3001               	movlw	1
  1692  0225  26E9               	fcall	_setState
  1693                           
  1694                           ;smartkey.C: 463: tmp16 = timeTick+40;
  1695  0226  0871               	movf	_timeTick+1,w
  1696  0227  00C3               	movwf	main@tmp16+1
  1697  0228  0870               	movf	_timeTick,w
  1698  0229  00C2               	movwf	main@tmp16
  1699  022A  3028               	movlw	40
  1700  022B  07C2               	addwf	main@tmp16,f
  1701  022C  1803               	skipnc
  1702  022D  0AC3               	incf	main@tmp16+1,f
  1703  022E  2A85               	goto	l952
  1704  022F                     l6910:	
  1705                           
  1706                           ;smartkey.C: 469: beepOff();
  1707  022F  270F               	fcall	_beepOff
  1708                           
  1709                           ;smartkey.C: 470: setState(2,300);
  1710  0230  302C               	movlw	44
  1711  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0232  00A0               	movwf	?_setState
  1713  0233  3001               	movlw	1
  1714  0234  00A1               	movwf	?_setState+1
  1715  0235  3002               	movlw	2
  1716  0236  26E9               	fcall	_setState
  1717                           
  1718                           ;smartkey.C: 471: break;
  1719  0237  2A85               	goto	l952
  1720  0238                     l6916:	
  1721  0238  0874               	movf	_mtState,w
  1722                           
  1723                           ; Switch size 1, requested type "space"
  1724                           ; Number of cases is 5, Range of values is 0 to 4
  1725                           ; switch strategies available:
  1726                           ; Name         Instructions Cycles
  1727                           ; direct_byte           11     6 (fixed)
  1728                           ; simple_byte           16     9 (average)
  1729                           ; jumptable            260     6 (fixed)
  1730                           ; rangetable             9     6 (fixed)
  1731                           ; spacedrange           16     9 (fixed)
  1732                           ; locatedrange           5     3 (fixed)
  1733                           ;	Chosen strategy is direct_byte
  1734  0239  0084               	movwf	4
  1735  023A  3005               	movlw	5
  1736  023B  0204               	subwf	4,w
  1737  023C  1803               	skipnc
  1738  023D  2A85               	goto	l952
  1739  023E  3007               	movlw	high S7196
  1740  023F  008A               	movwf	10
  1741  0240  3005               	movlw	low S7196
  1742  0241  0704               	addwf	4,w
  1743  0242  0082               	movwf	2
  1744  0243                     l6918:	
  1745                           
  1746                           ;smartkey.C: 488: {
  1747                           ;smartkey.C: 490: if(lostDetect==1 && timeTick< 1500)
  1748  0243  0B4B               	decfsz	_lostDetect,w
  1749  0244  2A6A               	goto	l955
  1750  0245  3005               	movlw	5
  1751  0246  0271               	subwf	_timeTick+1,w
  1752  0247  30DC               	movlw	220
  1753  0248  1903               	skipnz
  1754  0249  0270               	subwf	_timeTick,w
  1755  024A  1803               	skipnc
  1756  024B  2A6A               	goto	l955
  1757                           
  1758                           ;smartkey.C: 491: {
  1759                           ;smartkey.C: 492: if(READ_EEPROM(0x08)==0x00) WRITE_EEPROM(0x08,0xcc);
  1760  024C  3008               	movlw	8
  1761  024D  26DC               	fcall	_READ_EEPROM
  1762  024E  3800               	iorlw	0
  1763  024F  1D03               	skipz
  1764  0250  2A55               	goto	l956
  1765  0251  30CC               	movlw	204
  1766  0252  00A0               	movwf	?_WRITE_EEPROM
  1767  0253  3008               	movlw	8
  1768  0254  262B               	fcall	_WRITE_EEPROM
  1769  0255                     l956:	
  1770                           
  1771                           ;smartkey.C: 494: setState(3,1800);
  1772  0255  3008               	movlw	8
  1773  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0257  00A0               	movwf	?_setState
  1775  0258  3007               	movlw	7
  1776  0259  00A1               	movwf	?_setState+1
  1777  025A  3003               	movlw	3
  1778  025B  26E9               	fcall	_setState
  1779                           
  1780                           ;smartkey.C: 495: cntTmp = timeTick+40;
  1781  025C  0871               	movf	_timeTick+1,w
  1782  025D  00C6               	movwf	_cntTmp+1
  1783  025E  0870               	movf	_timeTick,w
  1784  025F  00C5               	movwf	_cntTmp
  1785  0260  3028               	movlw	40
  1786  0261  07C5               	addwf	_cntTmp,f
  1787  0262  1803               	skipnc
  1788  0263  0AC6               	incf	_cntTmp+1,f
  1789                           
  1790                           ;smartkey.C: 496: PR2L =20;
  1791  0264  3014               	movlw	20
  1792  0265  1683               	bsf	3,5	;RP0=1, select bank1
  1793  0266  0091               	movwf	17	;volatile
  1794                           
  1795                           ;smartkey.C: 497: beepOn();
  1796  0267  270A               	fcall	_beepOn
  1797                           
  1798                           ;smartkey.C: 498: lostDetect =0;
  1799  0268  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0269  29BE               	goto	l6854
  1801  026A                     l955:	
  1802                           ;smartkey.C: 499: }
  1803                           
  1804                           
  1805                           ;smartkey.C: 500: else {
  1806                           ;smartkey.C: 501: lostDetect =1;
  1807  026A  01CB               	clrf	_lostDetect
  1808  026B  0ACB               	incf	_lostDetect,f
  1809  026C  29BF               	goto	L4
  1810  026D                     l6938:	
  1811                           ;smartkey.C: 504: }
  1812                           ;smartkey.C: 505: timeTick =0;
  1813                           
  1814                           
  1815                           ;smartkey.C: 511: {
  1816                           ;smartkey.C: 512: timeTick =0;
  1817  026D  01F0               	clrf	_timeTick
  1818  026E  01F1               	clrf	_timeTick+1
  1819                           
  1820                           ;smartkey.C: 513: beepOn();TMR2ON = 0;
  1821  026F  270A               	fcall	_beepOn
  1822  0270  3002               	movlw	2
  1823  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0272  1112               	bcf	18,2
  1825                           
  1826                           ;smartkey.C: 514: beep(10,2);
  1827  0273  00A4               	movwf	?_beep
  1828  0274  300A               	movlw	10
  1829  0275  265E               	fcall	_beep
  1830                           
  1831                           ;smartkey.C: 515: if(mtOldState == 3){reAlertOn =1;}
  1832  0276  084C               	movf	_mtOldState,w
  1833  0277  3A03               	xorlw	3
  1834  0278  1D03               	skipz
  1835  0279  2A85               	goto	l952
  1836  027A  01BB               	clrf	main@reAlertOn
  1837  027B  0ABB               	incf	main@reAlertOn,f
  1838  027C  2A85               	goto	l952
  1839  027D                     l6952:	
  1840  027D  0874               	movf	_mtState,w
  1841                           
  1842                           ; Switch size 1, requested type "space"
  1843                           ; Number of cases is 2, Range of values is 1 to 2
  1844                           ; switch strategies available:
  1845                           ; Name         Instructions Cycles
  1846                           ; simple_byte            7     4 (average)
  1847                           ; direct_byte           11     9 (fixed)
  1848                           ; jumptable            263     9 (fixed)
  1849                           ;	Chosen strategy is simple_byte
  1850  027E  3A01               	xorlw	1	; case 1
  1851  027F  1903               	skipnz
  1852  0280  2A43               	goto	l6918
  1853  0281  3A03               	xorlw	3	; case 2
  1854  0282  1903               	skipnz
  1855  0283  2A6D               	goto	l6938
  1856  0284  2A85               	goto	l952
  1857  0285                     l952:	
  1858                           
  1859                           ;smartkey.C: 519: }
  1860                           ;smartkey.C: 521: }
  1861                           ;smartkey.C: 523: PAIE = 1;
  1862  0285  158B               	bsf	11,3
  1863  0286                     l6954:	
  1864                           
  1865                           ;smartkey.C: 524: }
  1866                           ;smartkey.C: 526: }
  1867                           ;smartkey.C: 530: {
  1868                           ;smartkey.C: 531: if((timeOut!=0)&&( timeTick >timeOut)){
  1869  0286  0848               	movf	_timeOut+1,w
  1870  0287  0447               	iorwf	_timeOut,w
  1871  0288  1903               	skipnz
  1872  0289  2AFC               	goto	l7030
  1873  028A  0871               	movf	_timeTick+1,w
  1874  028B  0248               	subwf	_timeOut+1,w
  1875  028C  1D03               	skipz
  1876  028D  2A90               	goto	u3275
  1877  028E  0870               	movf	_timeTick,w
  1878  028F  0247               	subwf	_timeOut,w
  1879  0290                     u3275:	
  1880  0290  1C03               	btfss	3,0
  1881  0291  2AEE               	goto	l7028
  1882  0292  2AFC               	goto	l7030
  1883  0293                     l6960:	
  1884                           
  1885                           ;smartkey.C: 542: beepOff();
  1886  0293  270F               	fcall	_beepOff
  1887  0294  302C               	movlw	44
  1888                           
  1889                           ;smartkey.C: 543: RegStatus &=(~0x20);
  1890  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0296  12C9               	bcf	_RegStatus,5
  1892                           
  1893                           ;smartkey.C: 544: setState(2,300);
  1894  0297  00A0               	movwf	?_setState
  1895  0298  3001               	movlw	1
  1896  0299  00A1               	movwf	?_setState+1
  1897  029A  3002               	movlw	2
  1898  029B  26E9               	fcall	_setState
  1899                           
  1900                           ;smartkey.C: 545: break;
  1901  029C  2AFC               	goto	l7030
  1902  029D                     l6966:	
  1903                           
  1904                           ;smartkey.C: 547: beepOff();
  1905  029D  270F               	fcall	_beepOff
  1906                           
  1907                           ;smartkey.C: 548: delay_x10ms(20);
  1908  029E  3014               	movlw	20
  1909  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1910  02A0  00A0               	movwf	?_delay_x10ms
  1911  02A1  01A1               	clrf	?_delay_x10ms+1
  1912  02A2  269D               	fcall	_delay_x10ms
  1913  02A3                     L6:	
  1914                           
  1915                           ;smartkey.C: 549: beepOn();TMR2ON = 0;reAlertOn =0;
  1916  02A3  270A               	fcall	_beepOn
  1917  02A4  301E               	movlw	30
  1918  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1919  02A6  1112               	bcf	18,2
  1920  02A7  01BB               	clrf	main@reAlertOn
  1921  02A8  01A4               	clrf	?_beep
  1922  02A9  0AA4               	incf	?_beep,f
  1923  02AA  265E               	fcall	_beep
  1924  02AB  3000               	movlw	0
  1925                           
  1926                           ;smartkey.C: 551: setState(0,0);
  1927  02AC  01A0               	clrf	?_setState
  1928  02AD  01A1               	clrf	?_setState+1
  1929  02AE                     L5:	
  1930  02AE  26E9               	fcall	_setState
  1931                           
  1932                           ;smartkey.C: 553: tmp16 = timeTick+40;
  1933  02AF  0871               	movf	_timeTick+1,w
  1934  02B0  00C3               	movwf	main@tmp16+1
  1935  02B1  0870               	movf	_timeTick,w
  1936  02B2  00C2               	movwf	main@tmp16
  1937  02B3  3028               	movlw	40
  1938  02B4  07C2               	addwf	main@tmp16,f
  1939  02B5  1803               	skipnc
  1940  02B6  0AC3               	incf	main@tmp16+1,f
  1941                           
  1942                           ;smartkey.C: 554: break;
  1943  02B7  2AFC               	goto	l7030
  1944  02B8                     l6984:	
  1945                           
  1946                           ;smartkey.C: 557: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1947  02B8  3008               	movlw	8
  1948  02B9  26DC               	fcall	_READ_EEPROM
  1949  02BA  3ACC               	xorlw	204
  1950  02BB  1D03               	skipz
  1951  02BC  2AC0               	goto	l6988
  1952  02BD  3008               	movlw	8
  1953  02BE  01A0               	clrf	?_WRITE_EEPROM
  1954  02BF  262B               	fcall	_WRITE_EEPROM
  1955  02C0                     l6988:	
  1956                           
  1957                           ;smartkey.C: 559: if(reAlertOn){
  1958  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1959  02C1  083B               	movf	main@reAlertOn,w
  1960  02C2  1903               	btfsc	3,2
  1961  02C3  2AD7               	goto	l6998
  1962                           
  1963                           ;smartkey.C: 560: setState(4,6000);
  1964  02C4  3070               	movlw	112
  1965  02C5  00A0               	movwf	?_setState
  1966  02C6  3017               	movlw	23
  1967  02C7  00A1               	movwf	?_setState+1
  1968  02C8  3004               	movlw	4
  1969  02C9  26E9               	fcall	_setState
  1970                           
  1971                           ;smartkey.C: 561: cntTmp = timeTick+40;
  1972  02CA  0871               	movf	_timeTick+1,w
  1973  02CB  00C6               	movwf	_cntTmp+1
  1974  02CC  0870               	movf	_timeTick,w
  1975  02CD  00C5               	movwf	_cntTmp
  1976  02CE  3028               	movlw	40
  1977  02CF  07C5               	addwf	_cntTmp,f
  1978  02D0  1803               	skipnc
  1979  02D1  0AC6               	incf	_cntTmp+1,f
  1980                           
  1981                           ;smartkey.C: 562: PR2L =20;
  1982  02D2  3014               	movlw	20
  1983  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  1984  02D4  0091               	movwf	17	;volatile
  1985                           
  1986                           ;smartkey.C: 563: beepOn();
  1987  02D5  270A               	fcall	_beepOn
  1988                           
  1989                           ;smartkey.C: 565: }else if(mtOldState == 0){
  1990  02D6  2AFC               	goto	l7030
  1991  02D7                     l6998:	
  1992  02D7  08CC               	movf	_mtOldState,f
  1993  02D8  1D03               	skipz
  1994  02D9  2AA3               	goto	L6
  1995                           
  1996                           ;smartkey.C: 567: beep(10,5);
  1997  02DA  3005               	movlw	5
  1998  02DB  00A4               	movwf	?_beep
  1999  02DC  300A               	movlw	10
  2000  02DD  265E               	fcall	_beep
  2001  02DE  3040               	movlw	64
  2002                           
  2003                           ;smartkey.C: 568: RegStatus |=(0x20);
  2004  02DF  16C9               	bsf	_RegStatus,5
  2005                           
  2006                           ;smartkey.C: 571: if(READ_EEPROM(0x40))WRITE_EEPROM(0x40,0);
  2007  02E0  26DC               	fcall	_READ_EEPROM
  2008  02E1  3A00               	xorlw	0
  2009  02E2  1903               	skipnz
  2010  02E3  2AE7               	goto	l972
  2011  02E4  3040               	movlw	64
  2012  02E5  01A0               	clrf	?_WRITE_EEPROM
  2013  02E6  262B               	fcall	_WRITE_EEPROM
  2014  02E7                     l972:	
  2015                           
  2016                           ;smartkey.C: 573: setState(1,3500);
  2017  02E7  30AC               	movlw	172
  2018  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2019  02E9  00A0               	movwf	?_setState
  2020  02EA  300D               	movlw	13
  2021  02EB  00A1               	movwf	?_setState+1
  2022  02EC  3001               	movlw	1
  2023  02ED  2AAE               	goto	L5
  2024  02EE                     l7028:	
  2025                           ;smartkey.C: 580: setState(0,0);
  2026                           
  2027                           ;smartkey.C: 579: beep(30,1);
  2028                           
  2029                           ;smartkey.C: 578: reAlertOn =0;
  2030                           
  2031                           ;smartkey.C: 577: beepOn();TMR2ON = 0;
  2032                           
  2033  02EE  0874               	movf	_mtState,w
  2034                           
  2035                           ; Switch size 1, requested type "space"
  2036                           ; Number of cases is 4, Range of values is 1 to 4
  2037                           ; switch strategies available:
  2038                           ; Name         Instructions Cycles
  2039                           ; simple_byte           13     7 (average)
  2040                           ; direct_byte           13     9 (fixed)
  2041                           ; jumptable            263     9 (fixed)
  2042                           ;	Chosen strategy is simple_byte
  2043  02EF  3A01               	xorlw	1	; case 1
  2044  02F0  1903               	skipnz
  2045  02F1  2AFC               	goto	l7030
  2046  02F2  3A03               	xorlw	3	; case 2
  2047  02F3  1903               	skipnz
  2048  02F4  2AB8               	goto	l6984
  2049  02F5  3A01               	xorlw	1	; case 3
  2050  02F6  1903               	skipnz
  2051  02F7  2A93               	goto	l6960
  2052  02F8  3A07               	xorlw	7	; case 4
  2053  02F9  1903               	skipnz
  2054  02FA  2A9D               	goto	l6966
  2055  02FB  2AFC               	goto	l7030
  2056  02FC                     l7030:	
  2057                           
  2058                           ;smartkey.C: 586: }
  2059                           ;smartkey.C: 588: }
  2060                           ;smartkey.C: 590: if((timeTick>tmp16) && (mtState == 1) && mpuOk ==1){
  2061  02FC  0871               	movf	_timeTick+1,w
  2062  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2063  02FE  0243               	subwf	main@tmp16+1,w
  2064  02FF  1D03               	skipz
  2065  0300  2B03               	goto	u3325
  2066  0301  0870               	movf	_timeTick,w
  2067  0302  0242               	subwf	main@tmp16,w
  2068  0303                     u3325:	
  2069  0303  1803               	skipnc
  2070  0304  2B96               	goto	l7108
  2071  0305  0B74               	decfsz	_mtState,w
  2072  0306  2B96               	goto	l7108
  2073  0307  0B3C               	decfsz	main@mpuOk,w
  2074  0308  2B96               	goto	l7108
  2075                           
  2076                           ;smartkey.C: 591: tmp16 = timeTick+40;
  2077  0309  0871               	movf	_timeTick+1,w
  2078  030A  00C3               	movwf	main@tmp16+1
  2079  030B  0870               	movf	_timeTick,w
  2080  030C  00C2               	movwf	main@tmp16
  2081  030D  3028               	movlw	40
  2082  030E  07C2               	addwf	main@tmp16,f
  2083  030F  1803               	skipnc
  2084  0310  0AC3               	incf	main@tmp16+1,f
  2085                           
  2086                           ;smartkey.C: 592: if(AccRead(0x3b,buf,6)==0){
  2087  0311  3035               	movlw	main@buf& (0+255)
  2088  0312  00A4               	movwf	?_AccRead
  2089  0313  3000               	movlw	0
  2090  0314  00A5               	movwf	?_AccRead+1
  2091  0315  3006               	movlw	6
  2092  0316  00A6               	movwf	?_AccRead+2
  2093  0317  303B               	movlw	59
  2094  0318  258E               	fcall	_AccRead
  2095  0319  3800               	iorlw	0
  2096  031A  1D03               	skipz
  2097  031B  2B96               	goto	l7108
  2098                           
  2099                           ;smartkey.C: 594: if(compe(buf[0], (signed char)acXsum,5) && compe(buf[2], (signed char)
      +                          acYsum,5)){
  2100  031C  1283               	bcf	3,5	;RP0=0, select bank0
  2101  031D  083F               	movf	main@acXsum,w
  2102  031E  00A0               	movwf	?_compe
  2103  031F  3005               	movlw	5
  2104  0320  00A1               	movwf	?_compe+1
  2105  0321  0835               	movf	main@buf,w
  2106  0322  24CD               	fcall	_compe
  2107  0323  3A00               	xorlw	0
  2108  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2109  0325  1903               	skipnz
  2110  0326  2B47               	goto	L9
  2111  0327  083D               	movf	main@acYsum,w
  2112  0328  00A0               	movwf	?_compe
  2113  0329  3005               	movlw	5
  2114  032A  00A1               	movwf	?_compe+1
  2115  032B  0837               	movf	main@buf+2,w
  2116  032C  24CD               	fcall	_compe
  2117  032D  3A00               	xorlw	0
  2118                           
  2119                           ;smartkey.C: 597: isSw++;
  2120  032E  1283               	bcf	3,5	;RP0=0, select bank0
  2121  032F  1903               	skipnz
  2122  0330  2B47               	goto	L9
  2123  0331  302D               	movlw	45
  2124  0332  0AC1               	incf	main@isSw,f
  2125                           
  2126                           ;smartkey.C: 598: if(isSw >44){
  2127  0333  0241               	subwf	main@isSw,w
  2128  0334  1C03               	skipc
  2129  0335  2B3A               	goto	l7056
  2130  0336  3002               	movlw	2
  2131                           
  2132                           ;smartkey.C: 599: isSw =0;
  2133  0337  01C1               	clrf	main@isSw
  2134                           
  2135                           ;smartkey.C: 600: vibrateOn=2;
  2136  0338  00B4               	movwf	main@vibrateOn
  2137  0339  2B6D               	goto	L7
  2138  033A                     l7056:	
  2139                           ;smartkey.C: 606: }
  2140                           
  2141                           ;smartkey.C: 604: setState(2,300);
  2142                           
  2143                           ;smartkey.C: 603: RegStatus &=(~0x20);
  2144                           
  2145                           
  2146                           ;smartkey.C: 607: else if(isSw > 25){
  2147  033A  301A               	movlw	26
  2148  033B  0241               	subwf	main@isSw,w
  2149  033C  1803               	btfsc	3,0
  2150                           
  2151                           ;smartkey.C: 608: if(isSw%2==0){
  2152  033D  1841               	btfsc	main@isSw,0
  2153  033E  2B74               	goto	l7086
  2154                           
  2155                           ;smartkey.C: 609: beepOn();TMR2ON = 0; beep(7,1);
  2156  033F  270A               	fcall	_beepOn
  2157  0340  3007               	movlw	7
  2158  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0342  1112               	bcf	18,2
  2160  0343  01A4               	clrf	?_beep
  2161  0344  0AA4               	incf	?_beep,f
  2162  0345  265E               	fcall	_beep
  2163  0346  2B74               	goto	l7086
  2164  0347                     L9:	
  2165                           ;smartkey.C: 614: else{
  2166                           ;smartkey.C: 615: isSw =0;
  2167                           
  2168                           ;smartkey.C: 610: }
  2169                           ;smartkey.C: 611: }
  2170                           ;smartkey.C: 613: }
  2171                           
  2172  0347  01C1               	clrf	main@isSw
  2173                           
  2174                           ;smartkey.C: 618: if(compe(buf[0], acXOld,2) && compe(buf[2], acYOld,2)){
  2175  0348  0833               	movf	main@acXOld,w
  2176  0349  00A0               	movwf	?_compe
  2177  034A  3002               	movlw	2
  2178  034B  00A1               	movwf	?_compe+1
  2179  034C  0835               	movf	main@buf,w
  2180  034D  24CD               	fcall	_compe
  2181  034E  3A00               	xorlw	0
  2182  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0350  1903               	skipnz
  2184  0351  2B75               	goto	L10
  2185  0352  0832               	movf	main@acYOld,w
  2186  0353  00A0               	movwf	?_compe
  2187  0354  3002               	movlw	2
  2188  0355  00A1               	movwf	?_compe+1
  2189  0356  0837               	movf	main@buf+2,w
  2190  0357  24CD               	fcall	_compe
  2191  0358  3A00               	xorlw	0
  2192                           
  2193                           ;smartkey.C: 619: isWait++;
  2194  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2195  035A  1903               	skipnz
  2196  035B  2B75               	goto	L10
  2197  035C  0AAF               	incf	main@isWait,f
  2198  035D  1903               	skipnz
  2199  035E  0AB0               	incf	main@isWait+1,f
  2200                           
  2201                           ;smartkey.C: 620: if(isWait==450){
  2202  035F  0330               	decf	main@isWait+1,w
  2203  0360  30C2               	movlw	194
  2204  0361  1903               	skipnz
  2205  0362  062F               	xorwf	main@isWait,w
  2206  0363  1D03               	skipz
  2207  0364  2B74               	goto	l7086
  2208  0365  3002               	movlw	2
  2209                           
  2210                           ;smartkey.C: 621: isWait = 0;
  2211  0366  01AF               	clrf	main@isWait
  2212  0367  01B0               	clrf	main@isWait+1
  2213                           
  2214                           ;smartkey.C: 622: beep(7,2);
  2215  0368  00A4               	movwf	?_beep
  2216  0369  3007               	movlw	7
  2217  036A  265E               	fcall	_beep
  2218                           
  2219                           ;smartkey.C: 623: vibrateOn=1;
  2220  036B  01B4               	clrf	main@vibrateOn
  2221  036C  0AB4               	incf	main@vibrateOn,f
  2222  036D                     L7:	
  2223  036D  302C               	movlw	44
  2224                           
  2225                           ;smartkey.C: 624: RegStatus &=(~0x20);
  2226  036E  12C9               	bcf	_RegStatus,5
  2227                           
  2228                           ;smartkey.C: 625: setState(2,300);
  2229  036F  00A0               	movwf	?_setState
  2230  0370  3001               	movlw	1
  2231  0371  00A1               	movwf	?_setState+1
  2232  0372  3002               	movlw	2
  2233  0373  26E9               	fcall	_setState
  2234  0374                     l7086:	
  2235                           
  2236                           ;smartkey.C: 626: }
  2237                           ;smartkey.C: 627: }
  2238                           ;smartkey.C: 629: }
  2239                           ;smartkey.C: 631: if( (buf[4] > -31) && (buf[4] < 31)) {
  2240  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0375                     L10:	
  2242  0375  0839               	movf	main@buf+4,w
  2243  0376  3A80               	xorlw	128
  2244  0377  3E9E               	addlw	158
  2245  0378  1C03               	skipc
  2246  0379  2B91               	goto	l7102
  2247  037A  0839               	movf	main@buf+4,w
  2248  037B  3A80               	xorlw	128
  2249  037C  3E61               	addlw	-159
  2250  037D  1803               	skipnc
  2251  037E  2B91               	goto	l7102
  2252  037F  3005               	movlw	5
  2253                           
  2254                           ;smartkey.C: 632: isFall++;
  2255  0380  0AB1               	incf	main@isFall,f
  2256                           
  2257                           ;smartkey.C: 633: if(isFall >4){
  2258  0381  0231               	subwf	main@isFall,w
  2259  0382  1C03               	skipc
  2260  0383  2B92               	goto	l7104
  2261  0384  3002               	movlw	2
  2262                           
  2263                           ;smartkey.C: 634: isFall =0;
  2264  0385  01B1               	clrf	main@isFall
  2265                           
  2266                           ;smartkey.C: 635: beep(7,2);
  2267  0386  00A4               	movwf	?_beep
  2268  0387  3007               	movlw	7
  2269  0388  265E               	fcall	_beep
  2270  0389  302C               	movlw	44
  2271                           
  2272                           ;smartkey.C: 636: RegStatus &=(~0x20);
  2273  038A  12C9               	bcf	_RegStatus,5
  2274                           
  2275                           ;smartkey.C: 637: setState(2,300);
  2276  038B  00A0               	movwf	?_setState
  2277  038C  3001               	movlw	1
  2278  038D  00A1               	movwf	?_setState+1
  2279  038E  3002               	movlw	2
  2280  038F  26E9               	fcall	_setState
  2281  0390  2B92               	goto	l7104
  2282  0391                     l7102:	
  2283                           
  2284                           ;smartkey.C: 640: else{
  2285                           ;smartkey.C: 641: isFall=0;
  2286  0391  01B1               	clrf	main@isFall
  2287  0392                     l7104:	
  2288                           
  2289                           ;smartkey.C: 642: }
  2290                           ;smartkey.C: 644: acYOld = buf[2];acXOld = buf[0];
  2291  0392  0837               	movf	main@buf+2,w
  2292  0393  00B2               	movwf	main@acYOld
  2293  0394  0835               	movf	main@buf,w
  2294  0395  00B3               	movwf	main@acXOld
  2295  0396                     l7108:	
  2296                           
  2297                           ;smartkey.C: 645: }
  2298                           ;smartkey.C: 647: }
  2299                           ;smartkey.C: 650: if((timeTick>tmp16) && (mtState == 0 ) && mpuOk ==1){
  2300  0396  0871               	movf	_timeTick+1,w
  2301  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0398  0243               	subwf	main@tmp16+1,w
  2303  0399  1D03               	skipz
  2304  039A  2B9D               	goto	u3475
  2305  039B  0870               	movf	_timeTick,w
  2306  039C  0242               	subwf	main@tmp16,w
  2307  039D                     u3475:	
  2308  039D  1803               	skipnc
  2309  039E  2BF9               	goto	l7156
  2310  039F  08F4               	movf	_mtState,f
  2311  03A0  1D03               	skipz
  2312  03A1  2BF9               	goto	l7156
  2313  03A2  0B3C               	decfsz	main@mpuOk,w
  2314  03A3  2BF9               	goto	l7156
  2315                           
  2316                           ;smartkey.C: 652: if(timeTick >65000) timeTick =0;
  2317  03A4  30FD               	movlw	253
  2318  03A5  0271               	subwf	_timeTick+1,w
  2319  03A6  30E9               	movlw	233
  2320  03A7  1903               	skipnz
  2321  03A8  0270               	subwf	_timeTick,w
  2322  03A9  1C03               	skipc
  2323  03AA  2BAD               	goto	l7118
  2324  03AB  01F0               	clrf	_timeTick
  2325  03AC  01F1               	clrf	_timeTick+1
  2326  03AD                     l7118:	
  2327                           
  2328                           ;smartkey.C: 653: tmp16 = timeTick+40;
  2329  03AD  0871               	movf	_timeTick+1,w
  2330  03AE  00C3               	movwf	main@tmp16+1
  2331  03AF  0870               	movf	_timeTick,w
  2332  03B0  00C2               	movwf	main@tmp16
  2333  03B1  3028               	movlw	40
  2334  03B2  07C2               	addwf	main@tmp16,f
  2335  03B3  1803               	skipnc
  2336  03B4  0AC3               	incf	main@tmp16+1,f
  2337                           
  2338                           ;smartkey.C: 655: if(AccRead(0x3b,buf,6)==0){
  2339  03B5  3035               	movlw	main@buf& (0+255)
  2340  03B6  00A4               	movwf	?_AccRead
  2341  03B7  3000               	movlw	0
  2342  03B8  00A5               	movwf	?_AccRead+1
  2343  03B9  3006               	movlw	6
  2344  03BA  00A6               	movwf	?_AccRead+2
  2345  03BB  303B               	movlw	59
  2346  03BC  258E               	fcall	_AccRead
  2347  03BD  3800               	iorlw	0
  2348                           
  2349                           ;smartkey.C: 657: if(vibrateOn==1){
  2350  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2351  03BF  1D03               	skipz
  2352  03C0  2BFA               	goto	L11
  2353  03C1  0B34               	decfsz	main@vibrateOn,w
  2354  03C2  2BD9               	goto	l7140
  2355                           
  2356                           ;smartkey.C: 658: if(compe(buf[0],acXOld ,2) && compe(buf[2],acYOld ,2)){
  2357  03C3  0833               	movf	main@acXOld,w
  2358  03C4  00A0               	movwf	?_compe
  2359  03C5  3002               	movlw	2
  2360  03C6  00A1               	movwf	?_compe+1
  2361  03C7  0835               	movf	main@buf,w
  2362  03C8  24CD               	fcall	_compe
  2363  03C9  3A00               	xorlw	0
  2364  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2365  03CB  1903               	skipnz
  2366  03CC  2BF1               	goto	L12
  2367  03CD  0832               	movf	main@acYOld,w
  2368  03CE  00A0               	movwf	?_compe
  2369  03CF  3002               	movlw	2
  2370  03D0  00A1               	movwf	?_compe+1
  2371  03D1  0837               	movf	main@buf+2,w
  2372  03D2  24CD               	fcall	_compe
  2373  03D3  3A00               	xorlw	0
  2374  03D4  1903               	skipnz
  2375  03D5  2BF0               	goto	l7148
  2376  03D6                     l7130:	
  2377                           
  2378                           ;smartkey.C: 660: isSw=0;
  2379  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2380  03D7  01C1               	clrf	main@isSw
  2381                           
  2382                           ;smartkey.C: 663: }
  2383  03D8  2BF9               	goto	l7156
  2384  03D9                     l7140:	
  2385                           ;smartkey.C: 668: {
  2386                           ;smartkey.C: 669: beepOn();TMR2ON = 0; beep(7,3);
  2387                           
  2388                           ;smartkey.C: 664: else{
  2389                           ;smartkey.C: 665: isSw++;
  2390                           
  2391                           
  2392                           ;smartkey.C: 673: else if(vibrateOn==2){
  2393  03D9  0834               	movf	main@vibrateOn,w
  2394  03DA  3A02               	xorlw	2
  2395  03DB  1D03               	skipz
  2396  03DC  2BF9               	goto	l7156
  2397                           
  2398                           ;smartkey.C: 674: if(compe(buf[0],(signed char)acXsum ,5) && compe(buf[2],(signed char)a
      +                          cYsum ,5)){
  2399  03DD  083F               	movf	main@acXsum,w
  2400  03DE  00A0               	movwf	?_compe
  2401  03DF  3005               	movlw	5
  2402  03E0  00A1               	movwf	?_compe+1
  2403  03E1  0835               	movf	main@buf,w
  2404  03E2  24CD               	fcall	_compe
  2405  03E3  3A00               	xorlw	0
  2406  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2407  03E5  1903               	skipnz
  2408  03E6  2BF1               	goto	L12
  2409  03E7  083D               	movf	main@acYsum,w
  2410  03E8  00A0               	movwf	?_compe
  2411  03E9  3005               	movlw	5
  2412  03EA  00A1               	movwf	?_compe+1
  2413  03EB  0837               	movf	main@buf+2,w
  2414  03EC  24CD               	fcall	_compe
  2415  03ED  3A00               	xorlw	0
  2416  03EE  1D03               	btfss	3,2
  2417  03EF  2BD6               	goto	l7130
  2418  03F0                     l7148:	
  2419                           
  2420                           ;smartkey.C: 680: else{
  2421                           ;smartkey.C: 681: isSw++;
  2422  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2423  03F1                     L12:	
  2424  03F1  0AC1               	incf	main@isSw,f
  2425                           
  2426                           ;smartkey.C: 684: {
  2427                           ;smartkey.C: 685: beepOn();TMR2ON = 0; beep(7,3);
  2428  03F2  270A               	fcall	_beepOn
  2429  03F3  3003               	movlw	3
  2430  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2431  03F5  1112               	bcf	18,2
  2432  03F6  00A4               	movwf	?_beep
  2433  03F7  3007               	movlw	7
  2434  03F8  265E               	fcall	_beep
  2435  03F9                     l7156:	
  2436                           
  2437                           ;smartkey.C: 686: }
  2438                           ;smartkey.C: 687: }
  2439                           ;smartkey.C: 688: }
  2440                           ;smartkey.C: 690: }
  2441                           ;smartkey.C: 693: }
  2442                           ;smartkey.C: 695: if(RegStatus & 0x20) {RC0 =1;RC1 =1;}
  2443  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2444  03FA                     L11:	
  2445  03FA  1EC9               	btfss	_RegStatus,5
  2446  03FB  2BFF               	goto	l997
  2447  03FC  1407               	bsf	7,0
  2448  03FD  1487               	bsf	7,1
  2449  03FE  29B5               	goto	l6846
  2450  03FF                     l997:	
  2451                           
  2452                           ;smartkey.C: 696: else {RC0 =0;RC1 =0;}
  2453  03FF  1007               	bcf	7,0
  2454  0400  1087               	bcf	7,1
  2455  0401  29B5               	goto	l6846
  2456  0402                     __end_of_main:	
  2457                           
  2458                           	psect	swtext1
  2459  0705                     __pswtext1:	
  2460  0705                     S7196:	
  2461  0705  2A85               	ljmp	l952
  2462  0706  29BE               	ljmp	l6854
  2463  0707  29C5               	ljmp	l6858
  2464  0708  2A0E               	ljmp	l6896
  2465  0709  2A2F               	ljmp	l6910
  2466                           
  2467                           	psect	text861
  2468  058E                     __ptext861:	
  2469 ;; =============== function _main ends ============
  2470                           
  2471                           
  2472 ;; *************** function _AccRead *****************
  2473 ;; Defined at:
  2474 ;;		line 31 in file "mpu6x.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  rAdd            1    wreg     unsigned char 
  2477 ;;  dat             2    4[BANK0 ] PTR unsigned char 
  2478 ;;		 -> RAM(256), main@buf(6), 
  2479 ;;  len             1    6[BANK0 ] unsigned char 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  rAdd            1   10[BANK0 ] unsigned char 
  2482 ;;  i               1   11[BANK0 ] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      unsigned char 
  2485 ;; Registers used:
  2486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 20/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1
  2492 ;;      Params:         0       3       0
  2493 ;;      Locals:         0       2       0
  2494 ;;      Temps:          0       3       0
  2495 ;;      Totals:         0       8       0
  2496 ;;Total ram usage:        8 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    3
  2499 ;; This function calls:
  2500 ;;		_swI2C_Start
  2501 ;;		_swI2C_WriteByte
  2502 ;;		_swI2C_ReadByte
  2503 ;;		_swI2C_Stop
  2504 ;; This function is called by:
  2505 ;;		_main
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508  058E                     _AccRead:	
  2509                           
  2510                           ; Regs used in _AccRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2511                           ;AccRead@rAdd stored from wreg
  2512  058E  00AA               	movwf	AccRead@rAdd
  2513                           
  2514                           ;mpu6x.c: 32: unsigned char i;
  2515                           ;mpu6x.c: 34: swI2C_Start();
  2516  058F  268A               	fcall	_swI2C_Start
  2517                           
  2518                           ;mpu6x.c: 36: if(swI2C_WriteByte(0x68<<1)== 0 )
  2519  0590  30D0               	movlw	208
  2520  0591  2551               	fcall	_swI2C_WriteByte
  2521  0592  3800               	iorlw	0
  2522  0593  1D03               	skipz
  2523  0594  3401               	retlw	1
  2524                           
  2525                           ;mpu6x.c: 37: {
  2526                           ;mpu6x.c: 38: if(swI2C_WriteByte(rAdd)==0 )
  2527  0595  082A               	movf	AccRead@rAdd,w
  2528  0596  2551               	fcall	_swI2C_WriteByte
  2529  0597  3800               	iorlw	0
  2530  0598  1D03               	skipz
  2531  0599  3402               	retlw	2
  2532                           
  2533                           ;mpu6x.c: 39: {
  2534                           ;mpu6x.c: 40: swI2C_Start();
  2535  059A  268A               	fcall	_swI2C_Start
  2536                           
  2537                           ;mpu6x.c: 41: if(swI2C_WriteByte((0x68<<1)|1)== 0 ){
  2538  059B  30D1               	movlw	209
  2539  059C  2551               	fcall	_swI2C_WriteByte
  2540  059D  3800               	iorlw	0
  2541  059E  1D03               	skipz
  2542  059F  3401               	retlw	1
  2543                           
  2544                           ;mpu6x.c: 43: for(i=0; i<(len-1);i++){
  2545  05A0  01AB               	clrf	AccRead@i
  2546  05A1                     l6676:	
  2547  05A1  0826               	movf	AccRead@len,w
  2548  05A2  3EFF               	addlw	255
  2549  05A3  00A7               	movwf	??_AccRead
  2550  05A4  30FF               	movlw	255
  2551  05A5  1803               	skipnc
  2552  05A6  3000               	movlw	0
  2553  05A7  00A8               	movwf	??_AccRead+1
  2554  05A8  3A80               	xorlw	128
  2555  05A9  3C80               	sublw	128
  2556  05AA  1D03               	skipz
  2557  05AB  2DAE               	goto	u2895
  2558  05AC  0827               	movf	??_AccRead,w
  2559  05AD  022B               	subwf	AccRead@i,w
  2560  05AE                     u2895:	
  2561                           
  2562                           ;mpu6x.c: 44: dat[i]=swI2C_ReadByte(1);
  2563  05AE  3001               	movlw	1
  2564  05AF  1803               	btfsc	3,0
  2565  05B0  2DB5               	goto	L13
  2566  05B1  2512               	fcall	_swI2C_ReadByte
  2567  05B2  25B9               	fcall	PL2	;call to abstracted procedure
  2568  05B3  0AAB               	incf	AccRead@i,f
  2569  05B4  2DA1               	goto	l6676
  2570  05B5                     L13:	
  2571                           ;mpu6x.c: 45: }
  2572                           ;mpu6x.c: 46: dat[i]=swI2C_ReadByte(1);
  2573                           
  2574  05B5  2512               	fcall	_swI2C_ReadByte
  2575  05B6  25B9               	fcall	PL2	;call to abstracted procedure
  2576                           
  2577                           ;mpu6x.c: 47: swI2C_Stop();
  2578  05B7  26CF               	fcall	_swI2C_Stop
  2579                           
  2580                           ;mpu6x.c: 48: return 0;
  2581  05B8  3400               	retlw	0
  2582  05B9                     __end_of_AccRead:	
  2583                           ;mpu6x.c: 54: else
  2584                           ;mpu6x.c: 55: return 2;
  2585                           
  2586                           ;mpu6x.c: 51: else
  2587                           ;mpu6x.c: 52: return 1;
  2588                           
  2589  05B9                     PL2:	
  2590  05B9  00A7               	movwf	??_AccRead
  2591  05BA  082B               	movf	AccRead@i,w
  2592  05BB  0724               	addwf	AccRead@dat,w
  2593  05BC  00A8               	movwf	??_AccRead+1
  2594  05BD  0825               	movf	AccRead@dat+1,w
  2595  05BE  1803               	skipnc
  2596  05BF  3E01               	addlw	1
  2597  05C0  00A9               	movwf	??_AccRead+2
  2598  05C1  0828               	movf	??_AccRead+1,w
  2599  05C2  0084               	movwf	4
  2600  05C3  1383               	bcf	3,7
  2601  05C4  1829               	btfsc	??_AccRead+2,0
  2602  05C5  1783               	bsf	3,7
  2603  05C6  0827               	movf	??_AccRead,w
  2604  05C7  0080               	movwf	0
  2605  05C8  0008               	return
  2606                           
  2607                           	psect	text862
  2608  05C9                     __ptext862:	
  2609 ;; =============== function _AccRead ends ============
  2610                           
  2611                           
  2612 ;; *************** function _AccWrite *****************
  2613 ;; Defined at:
  2614 ;;		line 4 in file "mpu6x.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  rAdd            1    wreg     unsigned char 
  2617 ;;  dat             2    3[BANK0 ] PTR unsigned char 
  2618 ;;		 -> RAM(256), 
  2619 ;;  len             1    5[BANK0 ] unsigned char 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  rAdd            1    8[BANK0 ] unsigned char 
  2622 ;;  i               1    9[BANK0 ] unsigned char 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      unsigned char 
  2625 ;; Registers used:
  2626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 20/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1
  2632 ;;      Params:         0       3       0
  2633 ;;      Locals:         0       2       0
  2634 ;;      Temps:          0       2       0
  2635 ;;      Totals:         0       7       0
  2636 ;;Total ram usage:        7 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    3
  2639 ;; This function calls:
  2640 ;;		_swI2C_Start
  2641 ;;		_swI2C_WriteByte
  2642 ;;		_swI2C_Stop
  2643 ;; This function is called by:
  2644 ;;		_main
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647  05C9                     _AccWrite:	
  2648                           
  2649                           ; Regs used in _AccWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2650                           ;AccWrite@rAdd stored from wreg
  2651  05C9  00A8               	movwf	AccWrite@rAdd
  2652                           
  2653                           ;mpu6x.c: 5: unsigned char i;
  2654                           ;mpu6x.c: 6: swI2C_Start();
  2655  05CA  268A               	fcall	_swI2C_Start
  2656                           
  2657                           ;mpu6x.c: 8: if(swI2C_WriteByte(0x68<<1)== 0 )
  2658  05CB  30D0               	movlw	208
  2659  05CC  2551               	fcall	_swI2C_WriteByte
  2660  05CD  3800               	iorlw	0
  2661  05CE  1D03               	skipz
  2662  05CF  3401               	retlw	1
  2663                           
  2664                           ;mpu6x.c: 9: {
  2665                           ;mpu6x.c: 10: if(swI2C_WriteByte(rAdd)==0 )
  2666  05D0  0828               	movf	AccWrite@rAdd,w
  2667  05D1  2551               	fcall	_swI2C_WriteByte
  2668  05D2  3800               	iorlw	0
  2669  05D3  1D03               	skipz
  2670  05D4  3402               	retlw	2
  2671                           
  2672                           ;mpu6x.c: 11: {
  2673                           ;mpu6x.c: 12: for(i=0; i<len;i++){
  2674  05D5  01A9               	clrf	AccWrite@i
  2675  05D6                     l6646:	
  2676  05D6  0825               	movf	AccWrite@len,w
  2677  05D7  0229               	subwf	AccWrite@i,w
  2678  05D8  1803               	btfsc	3,0
  2679  05D9  2DEF               	goto	l6648
  2680                           
  2681                           ;mpu6x.c: 13: if(swI2C_WriteByte(dat[i])==1 ){
  2682  05DA  0829               	movf	AccWrite@i,w
  2683  05DB  0723               	addwf	AccWrite@dat,w
  2684  05DC  00A6               	movwf	??_AccWrite
  2685  05DD  0824               	movf	AccWrite@dat+1,w
  2686  05DE  1803               	skipnc
  2687  05DF  3E01               	addlw	1
  2688  05E0  00A7               	movwf	??_AccWrite+1
  2689  05E1  0826               	movf	??_AccWrite,w
  2690  05E2  0084               	movwf	4
  2691  05E3  1783               	bsf	3,7
  2692  05E4  1C27               	btfss	??_AccWrite+1,0
  2693  05E5  1383               	bcf	3,7
  2694  05E6  0800               	movf	0,w
  2695  05E7  2551               	fcall	_swI2C_WriteByte
  2696  05E8  3A01               	xorlw	1
  2697  05E9  1D03               	skipz
  2698  05EA  2DED               	goto	l6644
  2699                           
  2700                           ;mpu6x.c: 14: swI2C_Stop();
  2701  05EB  26CF               	fcall	_swI2C_Stop
  2702                           
  2703                           ;mpu6x.c: 15: return 3;
  2704  05EC  3403               	retlw	3
  2705  05ED                     l6644:	
  2706  05ED  0AA9               	incf	AccWrite@i,f
  2707  05EE  2DD6               	goto	l6646
  2708  05EF                     l6648:	
  2709                           
  2710                           ;mpu6x.c: 16: }
  2711                           ;mpu6x.c: 17: }
  2712                           ;mpu6x.c: 18: swI2C_Stop();
  2713  05EF  26CF               	fcall	_swI2C_Stop
  2714                           
  2715                           ;mpu6x.c: 19: return 0;
  2716  05F0  3400               	retlw	0
  2717  05F1                     __end_of_AccWrite:	
  2718                           ;mpu6x.c: 24: else
  2719                           ;mpu6x.c: 25: return 1;
  2720                           
  2721                           ;mpu6x.c: 21: else
  2722                           ;mpu6x.c: 22: return 2;
  2723                           
  2724                           
  2725                           	psect	text863
  2726  0512                     __ptext863:	
  2727 ;; =============== function _AccWrite ends ============
  2728                           
  2729                           
  2730 ;; *************** function _swI2C_ReadByte *****************
  2731 ;; Defined at:
  2732 ;;		line 112 in file "SWI2C.C"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  Ack             1    wreg     unsigned char 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  Ack             1    1[BANK0 ] unsigned char 
  2737 ;;  i               1    3[BANK0 ] unsigned char 
  2738 ;;  dat             1    2[BANK0 ] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      unsigned char 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 20/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMMON   BANK0   BANK1
  2748 ;;      Params:         0       0       0
  2749 ;;      Locals:         0       3       0
  2750 ;;      Temps:          0       1       0
  2751 ;;      Totals:         0       4       0
  2752 ;;Total ram usage:        4 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    2
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_AccRead
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761  0512                     _swI2C_ReadByte:	
  2762                           
  2763                           ; Regs used in _swI2C_ReadByte: [wreg+status,2+status,0]
  2764                           ;swI2C_ReadByte@Ack stored from wreg
  2765  0512  1283               	bcf	3,5	;RP0=0, select bank0
  2766  0513  00A1               	movwf	swI2C_ReadByte@Ack
  2767  0514  01A2               	clrf	swI2C_ReadByte@dat
  2768                           
  2769                           ;SWI2C.C: 115: RA7 = 0;
  2770  0515  1385               	bcf	5,7
  2771                           
  2772                           ;SWI2C.C: 116: TRISA |=0x40;;
  2773  0516  1683               	bsf	3,5	;RP0=1, select bank1
  2774  0517  1705               	bsf	5,6	;volatile
  2775                           
  2776                           ;SWI2C.C: 117: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2777  0518  3005               	movlw	5
  2778  0519  1283               	bcf	3,5	;RP0=0, select bank0
  2779  051A  00A0               	movwf	??_swI2C_ReadByte
  2780  051B                     u3677:	
  2781  051B  0BA0               	decfsz	??_swI2C_ReadByte,f
  2782  051C  2D1B               	goto	u3677
  2783                           
  2784                           ;SWI2C.C: 118: for(i=0;i<8;i++)
  2785  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2786  051E  01A3               	clrf	swI2C_ReadByte@i
  2787  051F                     l2604:	
  2788  051F  3005               	movlw	5
  2789                           
  2790                           ;SWI2C.C: 119: {
  2791                           ;SWI2C.C: 120: RA7 = 1;
  2792  0520  1785               	bsf	5,7
  2793                           
  2794                           ;SWI2C.C: 121: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2795  0521  00A0               	movwf	??_swI2C_ReadByte
  2796  0522                     u3687:	
  2797  0522  0BA0               	decfsz	??_swI2C_ReadByte,f
  2798  0523  2D22               	goto	u3687
  2799                           
  2800                           ;SWI2C.C: 122: dat = dat<<1 |(RA6 & 1 );
  2801  0524  3000               	movlw	0
  2802  0525  1283               	bcf	3,5	;RP0=0, select bank0
  2803  0526  1B05               	btfsc	5,6
  2804  0527  3001               	movlw	1
  2805  0528  3901               	andlw	1
  2806  0529  00A0               	movwf	??_swI2C_ReadByte
  2807  052A  1003               	clrc
  2808  052B  0D22               	rlf	swI2C_ReadByte@dat,w
  2809  052C  0420               	iorwf	??_swI2C_ReadByte,w
  2810  052D  00A2               	movwf	swI2C_ReadByte@dat
  2811  052E  3005               	movlw	5
  2812                           
  2813                           ;SWI2C.C: 125: RA7 = 0;
  2814  052F  1385               	bcf	5,7
  2815                           
  2816                           ;SWI2C.C: 126: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2817  0530  00A0               	movwf	??_swI2C_ReadByte
  2818  0531                     u3697:	
  2819  0531  0BA0               	decfsz	??_swI2C_ReadByte,f
  2820  0532  2D31               	goto	u3697
  2821  0533  3008               	movlw	8
  2822  0534  1283               	bcf	3,5	;RP0=0, select bank0
  2823  0535  0AA3               	incf	swI2C_ReadByte@i,f
  2824  0536  0223               	subwf	swI2C_ReadByte@i,w
  2825  0537  1C03               	skipc
  2826  0538  2D1F               	goto	l2604
  2827                           
  2828                           ;SWI2C.C: 127: }
  2829                           ;SWI2C.C: 129: TRISA &=0xbf;;
  2830  0539  1683               	bsf	3,5	;RP0=1, select bank1
  2831  053A  1305               	bcf	5,6	;volatile
  2832                           
  2833                           ;SWI2C.C: 131: RA6 = (Ack) ? 0 : 1;
  2834  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2835  053C  08A1               	movf	swI2C_ReadByte@Ack,f
  2836  053D  1283               	bcf	3,5	;RP0=0, select bank0
  2837  053E  1D03               	btfss	3,2
  2838  053F  2D42               	goto	L14
  2839  0540  1705               	bsf	5,6
  2840  0541  2D43               	goto	u2814
  2841  0542                     L14:	
  2842  0542  1305               	bcf	5,6
  2843  0543                     u2814:	
  2844  0543  3005               	movlw	5
  2845                           
  2846                           ;SWI2C.C: 132: RA7 = 1;
  2847  0544  1785               	bsf	5,7
  2848                           
  2849                           ;SWI2C.C: 133: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2850  0545  00A0               	movwf	??_swI2C_ReadByte
  2851  0546                     u3707:	
  2852  0546  0BA0               	decfsz	??_swI2C_ReadByte,f
  2853  0547  2D46               	goto	u3707
  2854  0548  3005               	movlw	5
  2855                           
  2856                           ;SWI2C.C: 134: RA7 = 0;
  2857  0549  1283               	bcf	3,5	;RP0=0, select bank0
  2858  054A  1385               	bcf	5,7
  2859                           
  2860                           ;SWI2C.C: 135: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2861  054B  00A0               	movwf	??_swI2C_ReadByte
  2862  054C                     u3717:	
  2863  054C  0BA0               	decfsz	??_swI2C_ReadByte,f
  2864  054D  2D4C               	goto	u3717
  2865                           
  2866                           ;SWI2C.C: 136: return dat;
  2867  054E  1283               	bcf	3,5	;RP0=0, select bank0
  2868  054F  0822               	movf	swI2C_ReadByte@dat,w
  2869  0550  0008               	return
  2870  0551                     __end_of_swI2C_ReadByte:	
  2871                           
  2872                           	psect	text864
  2873  0551                     __ptext864:	
  2874 ;; =============== function _swI2C_ReadByte ends ============
  2875                           
  2876                           
  2877 ;; *************** function _swI2C_WriteByte *****************
  2878 ;; Defined at:
  2879 ;;		line 86 in file "SWI2C.C"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  dat             1    wreg     unsigned char 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  dat             1    1[BANK0 ] unsigned char 
  2884 ;;  i               1    2[BANK0 ] unsigned char 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      unsigned char 
  2887 ;; Registers used:
  2888 ;;		wreg, status,2, status,0
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 20/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1
  2894 ;;      Params:         0       0       0
  2895 ;;      Locals:         0       2       0
  2896 ;;      Temps:          0       1       0
  2897 ;;      Totals:         0       3       0
  2898 ;;Total ram usage:        3 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    2
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_AccWrite
  2905 ;;		_AccRead
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908  0551                     _swI2C_WriteByte:	
  2909                           
  2910                           ; Regs used in _swI2C_WriteByte: [wreg+status,2+status,0]
  2911                           ;swI2C_WriteByte@dat stored from wreg
  2912  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0552  00A1               	movwf	swI2C_WriteByte@dat
  2914                           
  2915                           ;SWI2C.C: 89: TRISA &=0xbf;;
  2916  0553  1683               	bsf	3,5	;RP0=1, select bank1
  2917  0554  1305               	bcf	5,6	;volatile
  2918                           
  2919                           ;SWI2C.C: 90: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2920  0555  3005               	movlw	5
  2921  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0557  00A0               	movwf	??_swI2C_WriteByte
  2923  0558                     u3727:	
  2924  0558  0BA0               	decfsz	??_swI2C_WriteByte,f
  2925  0559  2D58               	goto	u3727
  2926                           
  2927                           ;SWI2C.C: 91: for(i=0;i<8;i++)
  2928  055A  1283               	bcf	3,5	;RP0=0, select bank0
  2929  055B  01A2               	clrf	swI2C_WriteByte@i
  2930  055C                     l2599:	
  2931                           
  2932                           ;SWI2C.C: 92: {
  2933                           ;SWI2C.C: 93: RA6 = (dat&0x80) ? 1:0;
  2934  055C  1FA1               	btfss	swI2C_WriteByte@dat,7
  2935  055D  2D61               	goto	u2760
  2936  055E  1283               	bcf	3,5	;RP0=0, select bank0
  2937  055F  1705               	bsf	5,6
  2938  0560  2D63               	goto	u2774
  2939  0561                     u2760:	
  2940  0561  1283               	bcf	3,5	;RP0=0, select bank0
  2941  0562  1305               	bcf	5,6
  2942  0563                     u2774:	
  2943  0563  3005               	movlw	5
  2944                           
  2945                           ;SWI2C.C: 94: dat<<=1;
  2946  0564  1003               	clrc
  2947  0565  0DA1               	rlf	swI2C_WriteByte@dat,f
  2948                           
  2949                           ;SWI2C.C: 95: RA7 = 1;
  2950  0566  1785               	bsf	5,7
  2951                           
  2952                           ;SWI2C.C: 96: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2953  0567  00A0               	movwf	??_swI2C_WriteByte
  2954  0568                     u3737:	
  2955  0568  0BA0               	decfsz	??_swI2C_WriteByte,f
  2956  0569  2D68               	goto	u3737
  2957  056A  3005               	movlw	5
  2958                           
  2959                           ;SWI2C.C: 97: RA7 = 0;
  2960  056B  1283               	bcf	3,5	;RP0=0, select bank0
  2961  056C  1385               	bcf	5,7
  2962                           
  2963                           ;SWI2C.C: 98: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2964  056D  00A0               	movwf	??_swI2C_WriteByte
  2965  056E                     u3747:	
  2966  056E  0BA0               	decfsz	??_swI2C_WriteByte,f
  2967  056F  2D6E               	goto	u3747
  2968  0570  3008               	movlw	8
  2969  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2970  0572  0AA2               	incf	swI2C_WriteByte@i,f
  2971  0573  0222               	subwf	swI2C_WriteByte@i,w
  2972  0574  1C03               	skipc
  2973  0575  2D5C               	goto	l2599
  2974                           
  2975                           ;SWI2C.C: 99: }
  2976                           ;SWI2C.C: 101: TRISA |=0x40;;
  2977  0576  1683               	bsf	3,5	;RP0=1, select bank1
  2978  0577  1705               	bsf	5,6	;volatile
  2979                           
  2980                           ;SWI2C.C: 102: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2981  0578  3005               	movlw	5
  2982  0579  1283               	bcf	3,5	;RP0=0, select bank0
  2983  057A  00A0               	movwf	??_swI2C_WriteByte
  2984  057B                     u3757:	
  2985  057B  0BA0               	decfsz	??_swI2C_WriteByte,f
  2986  057C  2D7B               	goto	u3757
  2987  057D  3005               	movlw	5
  2988                           
  2989                           ;SWI2C.C: 103: RA7 = 1;
  2990  057E  1283               	bcf	3,5	;RP0=0, select bank0
  2991  057F  1785               	bsf	5,7
  2992                           
  2993                           ;SWI2C.C: 104: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2994  0580  00A0               	movwf	??_swI2C_WriteByte
  2995  0581                     u3767:	
  2996  0581  0BA0               	decfsz	??_swI2C_WriteByte,f
  2997  0582  2D81               	goto	u3767
  2998                           
  2999                           ;SWI2C.C: 105: i= RA6;
  3000  0583  3000               	movlw	0
  3001  0584  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0585  1B05               	btfsc	5,6
  3003  0586  3001               	movlw	1
  3004  0587  00A2               	movwf	swI2C_WriteByte@i
  3005                           
  3006                           ;SWI2C.C: 106: RA7 = 0;
  3007  0588  1385               	bcf	5,7
  3008                           
  3009                           ;SWI2C.C: 107: TRISA &=0xbf;;
  3010  0589  1683               	bsf	3,5	;RP0=1, select bank1
  3011  058A  1305               	bcf	5,6	;volatile
  3012                           
  3013                           ;SWI2C.C: 108: return i;
  3014  058B  1283               	bcf	3,5	;RP0=0, select bank0
  3015  058C  0822               	movf	swI2C_WriteByte@i,w
  3016  058D  0008               	return
  3017  058E                     __end_of_swI2C_WriteByte:	
  3018                           
  3019                           	psect	text865
  3020  06CF                     __ptext865:	
  3021 ;; =============== function _swI2C_WriteByte ends ============
  3022                           
  3023                           
  3024 ;; *************** function _swI2C_Stop *****************
  3025 ;; Defined at:
  3026 ;;		line 35 in file "SWI2C.C"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;		None
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;		None               void
  3033 ;; Registers used:
  3034 ;;		wreg
  3035 ;; Tracked objects:
  3036 ;;		On entry : 20/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1
  3040 ;;      Params:         0       0       0
  3041 ;;      Locals:         0       0       0
  3042 ;;      Temps:          0       1       0
  3043 ;;      Totals:         0       1       0
  3044 ;;Total ram usage:        1 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    2
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_AccWrite
  3051 ;;		_AccRead
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054  06CF                     _swI2C_Stop:	
  3055  06CF  3005               	movlw	5
  3056                           
  3057                           ;SWI2C.C: 37: RA6 = 0;
  3058                           
  3059                           ; Regs used in _swI2C_Stop: [wreg]
  3060  06D0  1305               	bcf	5,6
  3061                           
  3062                           ;SWI2C.C: 38: RA7 = 1;
  3063  06D1  1785               	bsf	5,7
  3064                           
  3065                           ;SWI2C.C: 39: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3066  06D2  00A0               	movwf	??_swI2C_Stop
  3067  06D3                     u3777:	
  3068  06D3  0BA0               	decfsz	??_swI2C_Stop,f
  3069  06D4  2ED3               	goto	u3777
  3070  06D5  3005               	movlw	5
  3071                           
  3072                           ;SWI2C.C: 40: RA6 = 1;
  3073  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  3074  06D7  1705               	bsf	5,6
  3075                           
  3076                           ;SWI2C.C: 41: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3077  06D8  00A0               	movwf	??_swI2C_Stop
  3078  06D9                     u3787:	
  3079  06D9  0BA0               	decfsz	??_swI2C_Stop,f
  3080  06DA  2ED9               	goto	u3787
  3081  06DB  0008               	return
  3082  06DC                     __end_of_swI2C_Stop:	
  3083                           
  3084                           	psect	text866
  3085  068A                     __ptext866:	
  3086 ;; =============== function _swI2C_Stop ends ============
  3087                           
  3088                           
  3089 ;; *************** function _swI2C_Start *****************
  3090 ;; Defined at:
  3091 ;;		line 22 in file "SWI2C.C"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;		None
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;		None
  3096 ;; Return value:  Size  Location     Type
  3097 ;;		None               void
  3098 ;; Registers used:
  3099 ;;		wreg
  3100 ;; Tracked objects:
  3101 ;;		On entry : 20/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMMON   BANK0   BANK1
  3105 ;;      Params:         0       0       0
  3106 ;;      Locals:         0       0       0
  3107 ;;      Temps:          0       1       0
  3108 ;;      Totals:         0       1       0
  3109 ;;Total ram usage:        1 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; Hardware stack levels required when called:    2
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_AccWrite
  3116 ;;		_AccRead
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119  068A                     _swI2C_Start:	
  3120  068A  3005               	movlw	5
  3121                           
  3122                           ;SWI2C.C: 24: RA7 = 1;
  3123                           
  3124                           ; Regs used in _swI2C_Start: [wreg]
  3125  068B  1785               	bsf	5,7
  3126                           
  3127                           ;SWI2C.C: 26: RA6 = 1;
  3128  068C  1705               	bsf	5,6
  3129                           
  3130                           ;SWI2C.C: 27: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3131  068D  00A0               	movwf	??_swI2C_Start
  3132  068E                     u3797:	
  3133  068E  0BA0               	decfsz	??_swI2C_Start,f
  3134  068F  2E8E               	goto	u3797
  3135  0690  3005               	movlw	5
  3136                           
  3137                           ;SWI2C.C: 28: RA6 = 0;
  3138  0691  1283               	bcf	3,5	;RP0=0, select bank0
  3139  0692  1305               	bcf	5,6
  3140                           
  3141                           ;SWI2C.C: 29: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3142  0693  00A0               	movwf	??_swI2C_Start
  3143  0694                     u3807:	
  3144  0694  0BA0               	decfsz	??_swI2C_Start,f
  3145  0695  2E94               	goto	u3807
  3146  0696  3005               	movlw	5
  3147                           
  3148                           ;SWI2C.C: 30: RA7 = 0;
  3149  0697  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0698  1385               	bcf	5,7
  3151                           
  3152                           ;SWI2C.C: 31: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3153  0699  00A0               	movwf	??_swI2C_Start
  3154  069A                     u3817:	
  3155  069A  0BA0               	decfsz	??_swI2C_Start,f
  3156  069B  2E9A               	goto	u3817
  3157  069C  0008               	return
  3158  069D                     __end_of_swI2C_Start:	
  3159                           
  3160                           	psect	text867
  3161  05F1                     __ptext867:	
  3162 ;; =============== function _swI2C_Start ends ============
  3163                           
  3164                           
  3165 ;; *************** function _swI2C_Init *****************
  3166 ;; Defined at:
  3167 ;;		line 8 in file "SWI2C.C"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;		None               void
  3174 ;; Registers used:
  3175 ;;		wreg
  3176 ;; Tracked objects:
  3177 ;;		On entry : 20/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1
  3181 ;;      Params:         0       0       0
  3182 ;;      Locals:         0       0       0
  3183 ;;      Temps:          0       1       0
  3184 ;;      Totals:         0       1       0
  3185 ;;Total ram usage:        1 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    2
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_main
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194  05F1                     _swI2C_Init:	
  3195                           
  3196                           ;SWI2C.C: 10: TRISA &=0xbf;;
  3197                           
  3198                           ; Regs used in _swI2C_Init: [wreg]
  3199  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  3200  05F2  1305               	bcf	5,6	;volatile
  3201                           
  3202                           ;SWI2C.C: 11: TRISA &=0x7f;;
  3203  05F3  1385               	bcf	5,7	;volatile
  3204                           
  3205                           ;SWI2C.C: 12: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3206  05F4  3005               	movlw	5
  3207  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3208  05F6  00A0               	movwf	??_swI2C_Init
  3209  05F7                     u3827:	
  3210  05F7  0BA0               	decfsz	??_swI2C_Init,f
  3211  05F8  2DF7               	goto	u3827
  3212  05F9  3005               	movlw	5
  3213                           
  3214                           ;SWI2C.C: 13: RA7 = 1;
  3215  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3216  05FB  1785               	bsf	5,7
  3217  05FC  1705               	bsf	5,6
  3218                           
  3219                           ;SWI2C.C: 15: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3220  05FD  00A0               	movwf	??_swI2C_Init
  3221  05FE                     u3837:	
  3222  05FE  0BA0               	decfsz	??_swI2C_Init,f
  3223  05FF  2DFE               	goto	u3837
  3224                           
  3225                           ;SWI2C.C: 16: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3226  0600  3005               	movlw	5
  3227  0601  1283               	bcf	3,5	;RP0=0, select bank0
  3228  0602  00A0               	movwf	??_swI2C_Init
  3229  0603                     u3847:	
  3230  0603  0BA0               	decfsz	??_swI2C_Init,f
  3231  0604  2E03               	goto	u3847
  3232                           
  3233                           ;SWI2C.C: 17: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3234  0605  3005               	movlw	5
  3235  0606  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0607  00A0               	movwf	??_swI2C_Init
  3237  0608                     u3857:	
  3238  0608  0BA0               	decfsz	??_swI2C_Init,f
  3239  0609  2E08               	goto	u3857
  3240                           
  3241                           ;SWI2C.C: 18: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3242  060A  3005               	movlw	5
  3243  060B  1283               	bcf	3,5	;RP0=0, select bank0
  3244  060C  00A0               	movwf	??_swI2C_Init
  3245  060D                     u3867:	
  3246  060D  0BA0               	decfsz	??_swI2C_Init,f
  3247  060E  2E0D               	goto	u3867
  3248  060F  0008               	return
  3249  0610                     __end_of_swI2C_Init:	
  3250                           
  3251                           	psect	text868
  3252  06F5                     __ptext868:	
  3253 ;; =============== function _swI2C_Init ends ============
  3254                           
  3255                           
  3256 ;; *************** function _sys_init *****************
  3257 ;; Defined at:
  3258 ;;		line 3 in file "sysinit.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;		None
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;		None
  3263 ;; Return value:  Size  Location     Type
  3264 ;;		None               void
  3265 ;; Registers used:
  3266 ;;		wreg
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 20/20
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMMON   BANK0   BANK1
  3272 ;;      Params:         0       0       0
  3273 ;;      Locals:         0       0       0
  3274 ;;      Temps:          0       0       0
  3275 ;;      Totals:         0       0       0
  3276 ;;Total ram usage:        0 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; Hardware stack levels required when called:    2
  3279 ;; This function calls:
  3280 ;;		Nothing
  3281 ;; This function is called by:
  3282 ;;		_main
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285  06F5                     _sys_init:	
  3286                           
  3287                           ;sysinit.c: 21: OSCCON = 0B01010001;
  3288                           
  3289                           ; Regs used in _sys_init: [wreg]
  3290  06F5  3051               	movlw	81
  3291  06F6  1683               	bsf	3,5	;RP0=1, select bank1
  3292  06F7  008F               	movwf	15	;volatile
  3293                           
  3294                           ;sysinit.c: 22: _nop();
  3295  06F8  0000               	nop
  3296  06F9                     l1788:	
  3297                           ;sysinit.c: 28: while(HTS==0);
  3298                           
  3299  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  3300  06FA  190F               	btfsc	15,2
  3301  06FB  0008               	return
  3302  06FC  2EF9               	goto	l1788
  3303  06FD                     __end_of_sys_init:	
  3304                           
  3305                           	psect	text869
  3306  065E                     __ptext869:	
  3307 ;; =============== function _sys_init ends ============
  3308                           
  3309                           
  3310 ;; *************** function _beep *****************
  3311 ;; Defined at:
  3312 ;;		line 176 in file "smartkey.C"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  delay           1    wreg     unsigned char 
  3315 ;;  rep             1    4[BANK0 ] unsigned char 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  delay           1    5[BANK0 ] unsigned char 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;		None               void
  3320 ;; Registers used:
  3321 ;;		wreg, status,2, status,0, pclath, cstack
  3322 ;; Tracked objects:
  3323 ;;		On entry : 20/0
  3324 ;;		On exit  : 20/0
  3325 ;;		Unchanged: FFFDF/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1
  3327 ;;      Params:         0       1       0
  3328 ;;      Locals:         0       1       0
  3329 ;;      Temps:          0       0       0
  3330 ;;      Totals:         0       2       0
  3331 ;;Total ram usage:        2 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    3
  3334 ;; This function calls:
  3335 ;;		_delay_x10ms
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340  065E                     _beep:	
  3341                           
  3342                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  3343                           ;beep@delay stored from wreg
  3344  065E  00A5               	movwf	beep@delay
  3345  065F                     l6546:	
  3346                           ;smartkey.C: 177: {
  3347                           ;smartkey.C: 178: while(rep--){
  3348                           
  3349  065F  03A4               	decf	beep@rep,f
  3350  0660  0824               	movf	beep@rep,w
  3351  0661  3AFF               	xorlw	255
  3352  0662  1903               	btfsc	3,2
  3353  0663  0008               	return
  3354  0664  300C               	movlw	12
  3355                           
  3356                           ;smartkey.C: 179: TMR2ON = 1;
  3357  0665  1512               	bsf	18,2
  3358                           
  3359                           ;smartkey.C: 180: PR2L = 12;
  3360  0666  1683               	bsf	3,5	;RP0=1, select bank1
  3361  0667  0091               	movwf	17	;volatile
  3362                           
  3363                           ;smartkey.C: 181: delay_x10ms(delay);
  3364  0668  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0669  0825               	movf	beep@delay,w
  3366  066A  00A0               	movwf	?_delay_x10ms
  3367  066B  01A1               	clrf	?_delay_x10ms+1
  3368  066C  269D               	fcall	_delay_x10ms
  3369  066D  3014               	movlw	20
  3370                           
  3371                           ;smartkey.C: 183: TMR2ON = 0;RA3 =0;
  3372  066E  1112               	bcf	18,2
  3373  066F  1185               	bcf	5,3
  3374                           
  3375                           ;smartkey.C: 184: delay_x10ms(20);
  3376  0670  00A0               	movwf	?_delay_x10ms
  3377  0671  01A1               	clrf	?_delay_x10ms+1
  3378  0672  269D               	fcall	_delay_x10ms
  3379  0673  2E5F               	goto	l6546
  3380  0674                     __end_of_beep:	
  3381                           
  3382                           	psect	text870
  3383  0488                     __ptext870:	
  3384 ;; =============== function _beep ends ============
  3385                           
  3386                           
  3387 ;; *************** function ___awdiv *****************
  3388 ;; Defined at:
  3389 ;;		line 5 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\awdiv.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  divisor         2    0[BANK0 ] int 
  3392 ;;  dividend        2    2[BANK0 ] int 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  quotient        2    6[BANK0 ] int 
  3395 ;;  sign            1    5[BANK0 ] unsigned char 
  3396 ;;  counter         1    4[BANK0 ] unsigned char 
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  2    0[BANK0 ] int 
  3399 ;; Registers used:
  3400 ;;		wreg, status,2, status,0
  3401 ;; Tracked objects:
  3402 ;;		On entry : 20/0
  3403 ;;		On exit  : 20/0
  3404 ;;		Unchanged: FFFDF/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1
  3406 ;;      Params:         0       4       0
  3407 ;;      Locals:         0       4       0
  3408 ;;      Temps:          0       0       0
  3409 ;;      Totals:         0       8       0
  3410 ;;Total ram usage:        8 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    2
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		_main
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419  0488                     ___awdiv:	
  3420                           
  3421                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3422  0488  01A5               	clrf	___awdiv@sign
  3423  0489  1FA1               	btfss	___awdiv@divisor+1,7
  3424  048A  2C92               	goto	l6498
  3425  048B  09A0               	comf	___awdiv@divisor,f
  3426  048C  09A1               	comf	___awdiv@divisor+1,f
  3427  048D  0AA0               	incf	___awdiv@divisor,f
  3428  048E  1903               	skipnz
  3429  048F  0AA1               	incf	___awdiv@divisor+1,f
  3430  0490  01A5               	clrf	___awdiv@sign
  3431  0491  0AA5               	incf	___awdiv@sign,f
  3432  0492                     l6498:	
  3433  0492  1FA3               	btfss	___awdiv@dividend+1,7
  3434  0493  2C9B               	goto	l6504
  3435  0494  09A2               	comf	___awdiv@dividend,f
  3436  0495  09A3               	comf	___awdiv@dividend+1,f
  3437  0496  0AA2               	incf	___awdiv@dividend,f
  3438  0497  1903               	skipnz
  3439  0498  0AA3               	incf	___awdiv@dividend+1,f
  3440  0499  3001               	movlw	1
  3441  049A  06A5               	xorwf	___awdiv@sign,f
  3442  049B                     l6504:	
  3443  049B  01A6               	clrf	___awdiv@quotient
  3444  049C  01A7               	clrf	___awdiv@quotient+1
  3445  049D  0821               	movf	___awdiv@divisor+1,w
  3446  049E  0420               	iorwf	___awdiv@divisor,w
  3447  049F  1903               	skipnz
  3448  04A0  2CC0               	goto	l6526
  3449  04A1  01A4               	clrf	___awdiv@counter
  3450  04A2                     L15:	
  3451  04A2  0AA4               	incf	___awdiv@counter,f
  3452  04A3  1BA1               	btfsc	___awdiv@divisor+1,7
  3453  04A4  2CA9               	goto	l6514
  3454  04A5  1003               	clrc
  3455  04A6  0DA0               	rlf	___awdiv@divisor,f
  3456  04A7  0DA1               	rlf	___awdiv@divisor+1,f
  3457  04A8  2CA2               	goto	L15
  3458  04A9                     l6514:	
  3459  04A9  1003               	clrc
  3460  04AA  0DA6               	rlf	___awdiv@quotient,f
  3461  04AB  0DA7               	rlf	___awdiv@quotient+1,f
  3462  04AC  0821               	movf	___awdiv@divisor+1,w
  3463  04AD  0223               	subwf	___awdiv@dividend+1,w
  3464  04AE  1D03               	skipz
  3465  04AF  2CB2               	goto	u2715
  3466  04B0  0820               	movf	___awdiv@divisor,w
  3467  04B1  0222               	subwf	___awdiv@dividend,w
  3468  04B2                     u2715:	
  3469  04B2  1C03               	skipc
  3470  04B3  2CBC               	goto	L16
  3471  04B4  0820               	movf	___awdiv@divisor,w
  3472  04B5  02A2               	subwf	___awdiv@dividend,f
  3473  04B6  0821               	movf	___awdiv@divisor+1,w
  3474  04B7  1C03               	skipc
  3475  04B8  03A3               	decf	___awdiv@dividend+1,f
  3476  04B9  02A3               	subwf	___awdiv@dividend+1,f
  3477  04BA  1426               	bsf	___awdiv@quotient,0
  3478  04BB  1003               	clrc
  3479  04BC                     L16:	
  3480  04BC  0CA1               	rrf	___awdiv@divisor+1,f
  3481  04BD  0CA0               	rrf	___awdiv@divisor,f
  3482  04BE  0BA4               	decfsz	___awdiv@counter,f
  3483  04BF  2CA9               	goto	l6514
  3484  04C0                     l6526:	
  3485  04C0  0825               	movf	___awdiv@sign,w
  3486  04C1  1903               	btfsc	3,2
  3487  04C2  2CC8               	goto	l6530
  3488  04C3  09A6               	comf	___awdiv@quotient,f
  3489  04C4  09A7               	comf	___awdiv@quotient+1,f
  3490  04C5  0AA6               	incf	___awdiv@quotient,f
  3491  04C6  1903               	skipnz
  3492  04C7  0AA7               	incf	___awdiv@quotient+1,f
  3493  04C8                     l6530:	
  3494  04C8  0827               	movf	___awdiv@quotient+1,w
  3495  04C9  00A1               	movwf	?___awdiv+1
  3496  04CA  0826               	movf	___awdiv@quotient,w
  3497  04CB  00A0               	movwf	?___awdiv
  3498  04CC  0008               	return
  3499  04CD                     __end_of___awdiv:	
  3500                           
  3501                           	psect	text871
  3502  0610                     __ptext871:	
  3503 ;; =============== function ___awdiv ends ============
  3504                           
  3505                           
  3506 ;; *************** function _int_init *****************
  3507 ;; Defined at:
  3508 ;;		line 83 in file "sysinit.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  tmp             1    0        unsigned char 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;		None               void
  3515 ;; Registers used:
  3516 ;;		wreg, status,2
  3517 ;; Tracked objects:
  3518 ;;		On entry : 20/0
  3519 ;;		On exit  : 20/0
  3520 ;;		Unchanged: FFFDF/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1
  3522 ;;      Params:         0       0       0
  3523 ;;      Locals:         0       0       0
  3524 ;;      Temps:          0       0       0
  3525 ;;      Totals:         0       0       0
  3526 ;;Total ram usage:        0 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    2
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_main
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535  0610                     _int_init:	
  3536                           
  3537                           ;sysinit.c: 88: INTCON = 0B00000000;
  3538                           
  3539                           ; Regs used in _int_init: [wreg+status,2]
  3540  0610  018B               	clrf	11	;volatile
  3541                           
  3542                           ;sysinit.c: 89: PIE1 = 0B00000000;
  3543  0611  1683               	bsf	3,5	;RP0=1, select bank1
  3544  0612  018C               	clrf	12	;volatile
  3545                           
  3546                           ;sysinit.c: 90: PIR1 = 0B00000000;
  3547  0613  1283               	bcf	3,5	;RP0=0, select bank0
  3548  0614  018C               	clrf	12	;volatile
  3549                           
  3550                           ;sysinit.c: 92: IOCA5 = 1;
  3551  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3552  0616  1696               	bsf	22,5
  3553                           
  3554                           ;sysinit.c: 93: tmp = PORTA;
  3555  0617  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0618  0805               	movf	5,w	;volatile
  3557                           
  3558                           ;sysinit.c: 94: PAIF = 0;
  3559  0619  100B               	bcf	11,0
  3560                           
  3561                           ;sysinit.c: 95: PAIE = 0;
  3562  061A  118B               	bcf	11,3
  3563                           
  3564                           ;sysinit.c: 98: INTEDG = 0;
  3565  061B  1683               	bsf	3,5	;RP0=1, select bank1
  3566  061C  1301               	bcf	1,6
  3567                           
  3568                           ;sysinit.c: 99: INTF = 0;
  3569  061D  108B               	bcf	11,1
  3570                           
  3571                           ;sysinit.c: 100: INTE = 1;
  3572  061E  160B               	bsf	11,4
  3573                           
  3574                           ;sysinit.c: 102: TMR2IF = 0;
  3575  061F  1283               	bcf	3,5	;RP0=0, select bank0
  3576  0620  108C               	bcf	12,1
  3577                           
  3578                           ;sysinit.c: 103: TMR2IE = 1;
  3579  0621  1683               	bsf	3,5	;RP0=1, select bank1
  3580  0622  148C               	bsf	12,1
  3581                           
  3582                           ;sysinit.c: 104: TMR2ON = 0;
  3583  0623  1283               	bcf	3,5	;RP0=0, select bank0
  3584  0624  1112               	bcf	18,2
  3585                           
  3586                           ;sysinit.c: 110: T0IF = 0;
  3587  0625  110B               	bcf	11,2
  3588                           
  3589                           ;sysinit.c: 111: T0IE = 1;
  3590  0626  168B               	bsf	11,5
  3591                           
  3592                           ;sysinit.c: 112: T0ON = 1;
  3593  0627  159F               	bsf	31,3
  3594                           
  3595                           ;sysinit.c: 114: PEIE = 1;
  3596  0628  170B               	bsf	11,6
  3597                           
  3598                           ;sysinit.c: 116: GIE = 1;
  3599  0629  178B               	bsf	11,7
  3600  062A  0008               	return
  3601  062B                     __end_of_int_init:	
  3602                           
  3603                           	psect	text872
  3604  06B0                     __ptext872:	
  3605 ;; =============== function _int_init ends ============
  3606                           
  3607                           
  3608 ;; *************** function _timer_init *****************
  3609 ;; Defined at:
  3610 ;;		line 51 in file "sysinit.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;		None               void
  3617 ;; Registers used:
  3618 ;;		wreg, status,2
  3619 ;; Tracked objects:
  3620 ;;		On entry : 20/0
  3621 ;;		On exit  : 20/0
  3622 ;;		Unchanged: FFFDF/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1
  3624 ;;      Params:         0       0       0
  3625 ;;      Locals:         0       0       0
  3626 ;;      Temps:          0       0       0
  3627 ;;      Totals:         0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    2
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_main
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637  06B0                     _timer_init:	
  3638                           
  3639                           ;sysinit.c: 60: T0CON0 = 0B00000000;
  3640                           
  3641                           ; Regs used in _timer_init: [wreg+status,2]
  3642  06B0  019F               	clrf	31	;volatile
  3643                           
  3644                           ;sysinit.c: 61: OPTION = 0B00000111;
  3645  06B1  3007               	movlw	7
  3646  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  3647  06B3  0081               	movwf	1	;volatile
  3648                           
  3649                           ;sysinit.c: 62: TMR0 = 179;
  3650  06B4  30B3               	movlw	179
  3651  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  3652  06B6  0081               	movwf	1	;volatile
  3653                           
  3654                           ;sysinit.c: 64: TMR2H = 0;
  3655  06B7  0193               	clrf	19	;volatile
  3656                           
  3657                           ;sysinit.c: 65: TMR2L = 0;
  3658  06B8  0191               	clrf	17	;volatile
  3659                           
  3660                           ;sysinit.c: 66: PR2H = 0;
  3661  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  3662  06BA  0192               	clrf	18	;volatile
  3663                           
  3664                           ;sysinit.c: 67: PR2L =0;
  3665  06BB  0191               	clrf	17	;volatile
  3666                           
  3667                           ;sysinit.c: 68: T2CON0 = 0B00101001;
  3668  06BC  3029               	movlw	41
  3669  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  3670  06BE  0092               	movwf	18	;volatile
  3671  06BF  0008               	return
  3672  06C0                     __end_of_timer_init:	
  3673                           
  3674                           	psect	text873
  3675  0674                     __ptext873:	
  3676 ;; =============== function _timer_init ends ============
  3677                           
  3678                           
  3679 ;; *************** function _gpio_init *****************
  3680 ;; Defined at:
  3681 ;;		line 32 in file "sysinit.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;		None               void
  3688 ;; Registers used:
  3689 ;;		wreg, status,2
  3690 ;; Tracked objects:
  3691 ;;		On entry : 20/20
  3692 ;;		On exit  : 20/0
  3693 ;;		Unchanged: FFFDF/0
  3694 ;; Data sizes:     COMMON   BANK0   BANK1
  3695 ;;      Params:         0       0       0
  3696 ;;      Locals:         0       0       0
  3697 ;;      Temps:          0       0       0
  3698 ;;      Totals:         0       0       0
  3699 ;;Total ram usage:        0 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; Hardware stack levels required when called:    2
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_main
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708  0674                     _gpio_init:	
  3709                           
  3710                           ;sysinit.c: 34: PORTA = 0B00000000;
  3711                           
  3712                           ; Regs used in _gpio_init: [wreg+status,2]
  3713  0674  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0675  0185               	clrf	5	;volatile
  3715                           
  3716                           ;sysinit.c: 35: TRISA = 0B00110111;
  3717  0676  3037               	movlw	55
  3718  0677  1683               	bsf	3,5	;RP0=1, select bank1
  3719  0678  0085               	movwf	5	;volatile
  3720                           
  3721                           ;sysinit.c: 36: WPUA = 0B11000000;
  3722  0679  30C0               	movlw	192
  3723  067A  0095               	movwf	21	;volatile
  3724                           
  3725                           ;sysinit.c: 38: PORTC = 0B00000000;
  3726  067B  1283               	bcf	3,5	;RP0=0, select bank0
  3727  067C  0187               	clrf	7	;volatile
  3728                           
  3729                           ;sysinit.c: 39: TRISC = 0B11111100;
  3730  067D  30FC               	movlw	252
  3731  067E  1683               	bsf	3,5	;RP0=1, select bank1
  3732  067F  0087               	movwf	7	;volatile
  3733                           
  3734                           ;sysinit.c: 40: WPUC = 0B00000000;
  3735  0680  0193               	clrf	19	;volatile
  3736                           
  3737                           ;sysinit.c: 42: PSRCA = 0B11111111;
  3738  0681  30FF               	movlw	255
  3739  0682  0088               	movwf	8	;volatile
  3740                           
  3741                           ;sysinit.c: 43: PSRCC = 0B11111111;
  3742  0683  0094               	movwf	20	;volatile
  3743                           
  3744                           ;sysinit.c: 44: PSINKA = 0B11111111;
  3745  0684  0097               	movwf	23	;volatile
  3746                           
  3747                           ;sysinit.c: 45: PSINKC = 0B11111111;
  3748  0685  009F               	movwf	31	;volatile
  3749                           
  3750                           ;sysinit.c: 47: MSCON = 0B00110000;
  3751  0686  3030               	movlw	48
  3752  0687  1283               	bcf	3,5	;RP0=0, select bank0
  3753  0688  009B               	movwf	27	;volatile
  3754  0689  0008               	return
  3755  068A                     __end_of_gpio_init:	
  3756                           
  3757                           	psect	text874
  3758  04CD                     __ptext874:	
  3759 ;; =============== function _gpio_init ends ============
  3760                           
  3761                           
  3762 ;; *************** function _compe *****************
  3763 ;; Defined at:
  3764 ;;		line 226 in file "smartkey.C"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  a               1    wreg     char 
  3767 ;;  b               1    0[BANK0 ] char 
  3768 ;;  dt              1    1[BANK0 ] char 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  a               1    7[BANK0 ] char 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      unsigned char 
  3773 ;; Registers used:
  3774 ;;		wreg
  3775 ;; Tracked objects:
  3776 ;;		On entry : 20/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: FFE00/0
  3779 ;; Data sizes:     COMMON   BANK0   BANK1
  3780 ;;      Params:         0       2       0
  3781 ;;      Locals:         0       1       0
  3782 ;;      Temps:          0       5       0
  3783 ;;      Totals:         0       8       0
  3784 ;;Total ram usage:        8 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:    2
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_main
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793  04CD                     _compe:	
  3794                           
  3795                           ; Regs used in _compe: [wreg]
  3796                           ;compe@a stored from wreg
  3797  04CD  00A7               	movwf	compe@a
  3798                           
  3799                           ;smartkey.C: 228: if(a>b){
  3800  04CE  0820               	movf	compe@b,w
  3801  04CF  3A80               	xorlw	128
  3802  04D0  00A2               	movwf	??_compe
  3803  04D1  0827               	movf	compe@a,w
  3804  04D2  3A80               	xorlw	128
  3805  04D3  02A2               	subwf	??_compe,f
  3806  04D4  1803               	skipnc
  3807  04D5  2CF9               	goto	l6416
  3808                           
  3809                           ;smartkey.C: 229: if((a-b)<=dt) return 1;
  3810  04D6  0820               	movf	compe@b,w
  3811  04D7  0227               	subwf	compe@a,w
  3812  04D8  00A2               	movwf	??_compe
  3813  04D9  01A3               	clrf	??_compe+1
  3814  04DA  1C03               	skipc
  3815  04DB  03A3               	decf	??_compe+1,f
  3816  04DC  1BA7               	btfsc	compe@a,7
  3817  04DD  03A3               	decf	??_compe+1,f
  3818  04DE  1BA0               	btfsc	compe@b,7
  3819  04DF  0AA3               	incf	??_compe+1,f
  3820  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  3821  04E1  2506               	fcall	PL3	;call to abstracted procedure
  3822  04E2  1D03               	skipz
  3823  04E3  2CE6               	goto	u2625
  3824  04E4  0822               	movf	??_compe,w
  3825  04E5  0224               	subwf	??_compe+2,w
  3826  04E6                     u2625:	
  3827  04E6  1C03               	skipc
  3828  04E7  3400               	retlw	0
  3829  04E8  3401               	retlw	1
  3830  04E9                     L17:	
  3831                           ;smartkey.C: 233: if((b-a)<=dt) return 1;
  3832                           
  3833  04E9  0220               	subwf	compe@b,w
  3834  04EA  00A2               	movwf	??_compe
  3835  04EB  01A3               	clrf	??_compe+1
  3836  04EC  1C03               	skipc
  3837  04ED  03A3               	decf	??_compe+1,f
  3838  04EE  1BA0               	btfsc	compe@b,7
  3839  04EF  03A3               	decf	??_compe+1,f
  3840  04F0  1BA7               	btfsc	compe@a,7
  3841  04F1  0AA3               	incf	??_compe+1,f
  3842  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  3843  04F3  2506               	fcall	PL3	;call to abstracted procedure
  3844  04F4  1D03               	skipz
  3845  04F5  2CE6               	goto	u2625
  3846  04F6  0822               	movf	??_compe,w
  3847  04F7  0224               	subwf	??_compe+2,w
  3848  04F8  2CE6               	goto	u2625
  3849  04F9                     l6416:	
  3850                           ;smartkey.C: 230: else return 0;
  3851                           
  3852                           
  3853                           ;smartkey.C: 232: else if(a<b){
  3854  04F9  0827               	movf	compe@a,w
  3855  04FA  3A80               	xorlw	128
  3856  04FB  00A2               	movwf	??_compe
  3857  04FC  0820               	movf	compe@b,w
  3858  04FD  3A80               	xorlw	128
  3859  04FE  02A2               	subwf	??_compe,f
  3860                           
  3861                           ;smartkey.C: 236: else if(a==b){
  3862  04FF  0827               	movf	compe@a,w
  3863  0500  1C03               	btfss	3,0
  3864  0501  2CE9               	goto	L17
  3865  0502  0620               	xorwf	compe@b,w
  3866  0503  1903               	btfsc	3,2
  3867  0504  3401               	retlw	1
  3868  0505  3400               	retlw	0
  3869  0506                     __end_of_compe:	
  3870  0506                     PL3:	
  3871  0506  0821               	movf	compe@dt,w
  3872  0507  00A4               	movwf	??_compe+2
  3873  0508  01A5               	clrf	??_compe+3
  3874  0509  1BA4               	btfsc	??_compe+2,7
  3875  050A  03A5               	decf	??_compe+3,f
  3876  050B  0825               	movf	??_compe+3,w
  3877  050C  3A80               	xorlw	128
  3878  050D  00A6               	movwf	??_compe+4
  3879  050E  0823               	movf	??_compe+1,w
  3880  050F  3A80               	xorlw	128
  3881  0510  0226               	subwf	??_compe+4,w
  3882  0511  0008               	return
  3883                           
  3884                           	psect	text875
  3885  06E9                     __ptext875:	
  3886 ;; =============== function _compe ends ============
  3887                           
  3888                           
  3889 ;; *************** function _setState *****************
  3890 ;; Defined at:
  3891 ;;		line 220 in file "smartkey.C"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  stt             1    wreg     unsigned char 
  3894 ;;  _tOut           2    0[BANK0 ] unsigned int 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  stt             1    2[BANK0 ] unsigned char 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;		None               void
  3899 ;; Registers used:
  3900 ;;		wreg, status,2
  3901 ;; Tracked objects:
  3902 ;;		On entry : 20/0
  3903 ;;		On exit  : 20/0
  3904 ;;		Unchanged: FFFDF/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1
  3906 ;;      Params:         0       2       0
  3907 ;;      Locals:         0       1       0
  3908 ;;      Temps:          0       0       0
  3909 ;;      Totals:         0       3       0
  3910 ;;Total ram usage:        3 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; Hardware stack levels required when called:    2
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_main
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919  06E9                     _setState:	
  3920                           
  3921                           ; Regs used in _setState: [wreg+status,2]
  3922                           ;setState@stt stored from wreg
  3923  06E9  00A2               	movwf	setState@stt
  3924                           
  3925                           ;smartkey.C: 221: mtOldState = mtState;
  3926  06EA  0874               	movf	_mtState,w
  3927  06EB  00CC               	movwf	_mtOldState
  3928                           
  3929                           ;smartkey.C: 222: mtState = stt;
  3930  06EC  0822               	movf	setState@stt,w
  3931  06ED  00F4               	movwf	_mtState
  3932                           
  3933                           ;smartkey.C: 223: timeTick =0;
  3934  06EE  01F0               	clrf	_timeTick
  3935  06EF  01F1               	clrf	_timeTick+1
  3936                           
  3937                           ;smartkey.C: 224: timeOut = _tOut;
  3938  06F0  0821               	movf	setState@_tOut+1,w
  3939  06F1  00C8               	movwf	_timeOut+1
  3940  06F2  0820               	movf	setState@_tOut,w
  3941  06F3  00C7               	movwf	_timeOut
  3942  06F4  0008               	return
  3943  06F5                     __end_of_setState:	
  3944                           
  3945                           	psect	text876
  3946  070A                     __ptext876:	
  3947 ;; =============== function _setState ends ============
  3948                           
  3949                           
  3950 ;; *************** function _beepOn *****************
  3951 ;; Defined at:
  3952 ;;		line 172 in file "smartkey.C"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;		None               void
  3959 ;; Registers used:
  3960 ;;		None
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/20
  3963 ;;		On exit  : 20/20
  3964 ;;		Unchanged: FFFDF/0
  3965 ;; Data sizes:     COMMON   BANK0   BANK1
  3966 ;;      Params:         0       0       0
  3967 ;;      Locals:         0       0       0
  3968 ;;      Temps:          0       0       0
  3969 ;;      Totals:         0       0       0
  3970 ;;Total ram usage:        0 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    2
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_main
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979  070A                     _beepOn:	
  3980                           
  3981                           ;smartkey.C: 173: TMR2ON = 1;
  3982                           
  3983                           ; Regs used in _beepOn: []
  3984  070A  1283               	bcf	3,5	;RP0=0, select bank0
  3985  070B  1512               	bsf	18,2
  3986                           
  3987                           ;smartkey.C: 174: TRISA &= 0xf7;
  3988  070C  1683               	bsf	3,5	;RP0=1, select bank1
  3989  070D  1185               	bcf	5,3	;volatile
  3990  070E  0008               	return
  3991  070F                     __end_of_beepOn:	
  3992                           
  3993                           	psect	text877
  3994  070F                     __ptext877:	
  3995 ;; =============== function _beepOn ends ============
  3996                           
  3997                           
  3998 ;; *************** function _beepOff *****************
  3999 ;; Defined at:
  4000 ;;		line 169 in file "smartkey.C"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;		None
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;		None               void
  4007 ;; Registers used:
  4008 ;;		None
  4009 ;; Tracked objects:
  4010 ;;		On entry : 20/0
  4011 ;;		On exit  : 20/20
  4012 ;;		Unchanged: FFFDF/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1
  4014 ;;      Params:         0       0       0
  4015 ;;      Locals:         0       0       0
  4016 ;;      Temps:          0       0       0
  4017 ;;      Totals:         0       0       0
  4018 ;;Total ram usage:        0 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    2
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_main
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027  070F                     _beepOff:	
  4028                           
  4029                           ;smartkey.C: 170: TMR2ON = 0;RA3 =0;TRISA |= 0x08;
  4030                           
  4031                           ; Regs used in _beepOff: []
  4032  070F  1112               	bcf	18,2
  4033  0710  1185               	bcf	5,3
  4034  0711  1683               	bsf	3,5	;RP0=1, select bank1
  4035  0712  1585               	bsf	5,3	;volatile
  4036  0713  0008               	return
  4037  0714                     __end_of_beepOff:	
  4038                           
  4039                           	psect	text878
  4040  069D                     __ptext878:	
  4041 ;; =============== function _beepOff ends ============
  4042                           
  4043                           
  4044 ;; *************** function _delay_x10ms *****************
  4045 ;; Defined at:
  4046 ;;		line 164 in file "smartkey.C"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  t               2    0[BANK0 ] unsigned int 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  set             2    2[BANK0 ] unsigned int 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;		None               void
  4053 ;; Registers used:
  4054 ;;		wreg
  4055 ;; Tracked objects:
  4056 ;;		On entry : 20/0
  4057 ;;		On exit  : 20/0
  4058 ;;		Unchanged: FFFDF/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1
  4060 ;;      Params:         0       2       0
  4061 ;;      Locals:         0       2       0
  4062 ;;      Temps:          0       0       0
  4063 ;;      Totals:         0       4       0
  4064 ;;Total ram usage:        4 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    2
  4067 ;; This function calls:
  4068 ;;		Nothing
  4069 ;; This function is called by:
  4070 ;;		_beep
  4071 ;;		_main
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074  069D                     _delay_x10ms:	
  4075                           
  4076                           ;smartkey.C: 165: unsigned int set = t + timeTick;
  4077                           
  4078                           ; Regs used in _delay_x10ms: [wreg]
  4079  069D  0821               	movf	delay_x10ms@t+1,w
  4080  069E  00A3               	movwf	delay_x10ms@set+1
  4081  069F  0820               	movf	delay_x10ms@t,w
  4082  06A0  00A2               	movwf	delay_x10ms@set
  4083  06A1  0870               	movf	_timeTick,w
  4084  06A2  07A2               	addwf	delay_x10ms@set,f
  4085  06A3  1803               	skipnc
  4086  06A4  0AA3               	incf	delay_x10ms@set+1,f
  4087  06A5  0871               	movf	_timeTick+1,w
  4088  06A6  07A3               	addwf	delay_x10ms@set+1,f
  4089  06A7                     l6390:	
  4090                           ;smartkey.C: 166: while(timeTick < set);
  4091                           
  4092  06A7  0823               	movf	delay_x10ms@set+1,w
  4093  06A8  0271               	subwf	_timeTick+1,w
  4094  06A9  1D03               	skipz
  4095  06AA  2EAD               	goto	u2595
  4096  06AB  0822               	movf	delay_x10ms@set,w
  4097  06AC  0270               	subwf	_timeTick,w
  4098  06AD                     u2595:	
  4099  06AD  1803               	btfsc	3,0
  4100  06AE  0008               	return
  4101  06AF  2EA7               	goto	l6390
  4102  06B0                     __end_of_delay_x10ms:	
  4103                           
  4104                           	psect	text879
  4105  062B                     __ptext879:	
  4106 ;; =============== function _delay_x10ms ends ============
  4107                           
  4108                           
  4109 ;; *************** function _WRITE_EEPROM *****************
  4110 ;; Defined at:
  4111 ;;		line 205 in file "smartkey.C"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  EEAddr          1    wreg     unsigned char 
  4114 ;;  EEData          1    0[BANK0 ] unsigned char 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  EEAddr          1    1[BANK0 ] unsigned char 
  4117 ;; Return value:  Size  Location     Type
  4118 ;;		None               void
  4119 ;; Registers used:
  4120 ;;		wreg
  4121 ;; Tracked objects:
  4122 ;;		On entry : 20/0
  4123 ;;		On exit  : 20/20
  4124 ;;		Unchanged: FFE00/0
  4125 ;; Data sizes:     COMMON   BANK0   BANK1
  4126 ;;      Params:         0       1       0
  4127 ;;      Locals:         0       1       0
  4128 ;;      Temps:          0       0       0
  4129 ;;      Totals:         0       2       0
  4130 ;;Total ram usage:        2 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    2
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_main
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139  062B                     _WRITE_EEPROM:	
  4140                           
  4141                           ; Regs used in _WRITE_EEPROM: [wreg]
  4142                           ;WRITE_EEPROM@EEAddr stored from wreg
  4143  062B  00A1               	movwf	WRITE_EEPROM@EEAddr
  4144                           
  4145                           ;smartkey.C: 206: GIE = 0;
  4146  062C  138B               	bcf	11,7
  4147  062D                     l874:	
  4148                           ;smartkey.C: 207: while(GIE) asm("clrwdt");
  4149                           
  4150  062D  1F8B               	btfss	11,7
  4151  062E  2E31               	goto	l6382
  4152  062F  0064               	clrwdt	;#
  4153  0630  2E2D               	goto	l874
  4154  0631                     l6382:	
  4155                           
  4156                           ;smartkey.C: 208: EEADR = EEAddr;
  4157  0631  1283               	bcf	3,5	;RP0=0, select bank0
  4158  0632  0821               	movf	WRITE_EEPROM@EEAddr,w
  4159  0633  1683               	bsf	3,5	;RP0=1, select bank1
  4160  0634  009B               	movwf	27	;volatile
  4161                           
  4162                           ;smartkey.C: 209: EEDAT = EEData;
  4163  0635  1283               	bcf	3,5	;RP0=0, select bank0
  4164  0636  0820               	movf	WRITE_EEPROM@EEData,w
  4165  0637  1683               	bsf	3,5	;RP0=1, select bank1
  4166  0638  009A               	movwf	26	;volatile
  4167  0639  3034               	movlw	52
  4168                           
  4169                           ;smartkey.C: 210: EEIF = 0;
  4170  063A  1283               	bcf	3,5	;RP0=0, select bank0
  4171  063B  138C               	bcf	12,7
  4172                           
  4173                           ;smartkey.C: 211: EECON1 = 0x34;
  4174  063C  1683               	bsf	3,5	;RP0=1, select bank1
  4175  063D  009C               	movwf	28	;volatile
  4176                           
  4177                           ;smartkey.C: 212: WR = 1;
  4178  063E  141D               	bsf	29,0
  4179  063F                     l877:	
  4180                           ;smartkey.C: 213: while(WR) asm("clrwdt");
  4181                           
  4182  063F  1683               	bsf	3,5	;RP0=1, select bank1
  4183  0640  1C1D               	btfss	29,0
  4184  0641  2E44               	goto	l879
  4185  0642  0064               	clrwdt	;#
  4186  0643  2E3F               	goto	l877
  4187  0644                     l879:	
  4188                           
  4189                           ;smartkey.C: 215: GIE = 1;
  4190  0644  178B               	bsf	11,7
  4191  0645  0008               	return
  4192  0646                     __end_of_WRITE_EEPROM:	
  4193                           
  4194                           	psect	text880
  4195  06DC                     __ptext880:	
  4196 ;; =============== function _WRITE_EEPROM ends ============
  4197                           
  4198                           
  4199 ;; *************** function _READ_EEPROM *****************
  4200 ;; Defined at:
  4201 ;;		line 194 in file "smartkey.C"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  EEAddr          1    wreg     unsigned char 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  EEAddr          1    0[BANK0 ] unsigned char 
  4206 ;;  ReEepromData    1    1[BANK0 ] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      unsigned char 
  4209 ;; Registers used:
  4210 ;;		wreg
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/20
  4213 ;;		On exit  : 20/0
  4214 ;;		Unchanged: FFFDF/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1
  4216 ;;      Params:         0       0       0
  4217 ;;      Locals:         0       2       0
  4218 ;;      Temps:          0       0       0
  4219 ;;      Totals:         0       2       0
  4220 ;;Total ram usage:        2 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    2
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_main
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229  06DC                     _READ_EEPROM:	
  4230                           
  4231                           ; Regs used in _READ_EEPROM: [wreg]
  4232                           ;READ_EEPROM@EEAddr stored from wreg
  4233  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  4234  06DD  00A0               	movwf	READ_EEPROM@EEAddr
  4235                           
  4236                           ;smartkey.C: 195: unsigned char ReEepromData;
  4237                           ;smartkey.C: 197: EEADR = EEAddr;
  4238  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  4239  06DF  009B               	movwf	27	;volatile
  4240                           
  4241                           ;smartkey.C: 198: RD = 1;
  4242  06E0  141C               	bsf	28,0
  4243                           
  4244                           ;smartkey.C: 199: ReEepromData = EEDAT;
  4245  06E1  081A               	movf	26,w	;volatile
  4246  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  4247  06E3  00A1               	movwf	READ_EEPROM@ReEepromData
  4248                           
  4249                           ;smartkey.C: 200: RD = 0;
  4250  06E4  1683               	bsf	3,5	;RP0=1, select bank1
  4251  06E5  101C               	bcf	28,0
  4252                           
  4253                           ;smartkey.C: 201: return ReEepromData;
  4254  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  4255  06E7  0821               	movf	READ_EEPROM@ReEepromData,w
  4256  06E8  0008               	return
  4257  06E9                     __end_of_READ_EEPROM:	
  4258                           
  4259                           	psect	text881
  4260  0402                     __ptext881:	
  4261 ;; =============== function _READ_EEPROM ends ============
  4262                           
  4263                           
  4264 ;; *************** function _ISR *****************
  4265 ;; Defined at:
  4266 ;;		line 38 in file "smartkey.C"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;  tmp             1    4[COMMON] unsigned char 
  4271 ;;  tmp             1    0        unsigned char 
  4272 ;; Return value:  Size  Location     Type
  4273 ;;		None               void
  4274 ;; Registers used:
  4275 ;;		wreg, status,2, status,0, pclath, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: FFE00/0
  4280 ;; Data sizes:     COMMON   BANK0   BANK1
  4281 ;;      Params:         0       0       0
  4282 ;;      Locals:         1       0       0
  4283 ;;      Temps:          2       0       0
  4284 ;;      Totals:         3       0       0
  4285 ;;Total ram usage:        3 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:    1
  4288 ;; This function calls:
  4289 ;;		i1_READ_EEPROM
  4290 ;;		i1_WRITE_EEPROM
  4291 ;; This function is called by:
  4292 ;;		Interrupt level 1
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295  0402                     _ISR:	
  4296                           
  4297                           ;smartkey.C: 42: if(PAIE&&PAIF){
  4298  0402  198B               	btfsc	11,3
  4299  0403  1C0B               	btfss	11,0
  4300  0404  2C13               	goto	i1l5460
  4301                           
  4302                           ;smartkey.C: 44: tmp = PORTA;
  4303  0405  1283               	bcf	3,5	;RP0=0, select bank0
  4304  0406  0805               	movf	5,w	;volatile
  4305                           
  4306                           ;smartkey.C: 45: PAIF = 0;
  4307  0407  100B               	bcf	11,0
  4308                           
  4309                           ;smartkey.C: 47: if(RA5){
  4310  0408  1E85               	btfss	5,5
  4311  0409  2C12               	goto	i1l5458
  4312                           
  4313                           ;smartkey.C: 49: if(mode_chek == 0){
  4314  040A  08F3               	movf	_mode_chek,f
  4315  040B  1D03               	skipz
  4316  040C  2C13               	goto	i1l5460
  4317                           
  4318                           ;smartkey.C: 50: cntCyc = 0;
  4319  040D  01F2               	clrf	_cntCyc
  4320                           
  4321                           ;smartkey.C: 51: cntOff = 0;
  4322  040E  01CA               	clrf	_cntOff
  4323                           
  4324                           ;smartkey.C: 53: mode_chek = 1;
  4325  040F  01F3               	clrf	_mode_chek
  4326  0410  0AF3               	incf	_mode_chek,f
  4327  0411  2C13               	goto	i1l5460
  4328  0412                     i1l5458:	
  4329                           
  4330                           ;smartkey.C: 58: else{
  4331                           ;smartkey.C: 59: cntOff = 0;
  4332  0412  01CA               	clrf	_cntOff
  4333  0413                     i1l5460:	
  4334                           
  4335                           ;smartkey.C: 61: }
  4336                           ;smartkey.C: 63: }
  4337                           ;smartkey.C: 66: if(INTE&&INTF){
  4338  0413  1A0B               	btfsc	11,4
  4339  0414  1C8B               	btfss	11,1
  4340  0415  2C29               	goto	i1l829
  4341                           
  4342                           ;smartkey.C: 67: unsigned char tmp;
  4343                           ;smartkey.C: 68: INTF = 0;
  4344  0416  108B               	bcf	11,1
  4345                           
  4346                           ;smartkey.C: 70: if( RA2==0){
  4347  0417  1283               	bcf	3,5	;RP0=0, select bank0
  4348  0418  1905               	btfsc	5,2
  4349  0419  2C29               	goto	i1l829
  4350                           
  4351                           ;smartkey.C: 72: if(timeTick <0x20){
  4352  041A  3000               	movlw	0
  4353  041B  0271               	subwf	_timeTick+1,w
  4354  041C  3020               	movlw	32
  4355  041D  1903               	skipnz
  4356  041E  0270               	subwf	_timeTick,w
  4357  041F  1803               	skipnc
  4358  0420  2C28               	goto	i1l831
  4359                           
  4360                           ;smartkey.C: 73: tmp = READ_EEPROM(0x40);
  4361  0421  3040               	movlw	64
  4362  0422  26FD               	fcall	i1_READ_EEPROM
  4363  0423  00F9               	movwf	ISR@tmp_1138
  4364                           
  4365                           ;smartkey.C: 74: WRITE_EEPROM(0x40,tmp+1);
  4366  0424  0A79               	incf	ISR@tmp_1138,w
  4367  0425  00F5               	movwf	?i1_WRITE_EEPROM
  4368  0426  3040               	movlw	64
  4369  0427  2646               	fcall	i1_WRITE_EEPROM
  4370  0428                     i1l831:	
  4371  0428  2C28               	goto	i1l831
  4372  0429                     i1l829:	
  4373                           
  4374                           ;smartkey.C: 83: }
  4375                           ;smartkey.C: 85: }
  4376                           ;smartkey.C: 88: if (T0IE && T0IF) {
  4377  0429  1A8B               	btfsc	11,5
  4378  042A  1D0B               	btfss	11,2
  4379  042B  2C78               	goto	i1l5518
  4380  042C  30B3               	movlw	179
  4381                           
  4382                           ;smartkey.C: 89: T0IF = 0;
  4383  042D  110B               	bcf	11,2
  4384                           
  4385                           ;smartkey.C: 90: TMR0 = 179;
  4386  042E  1283               	bcf	3,5	;RP0=0, select bank0
  4387  042F  0081               	movwf	1	;volatile
  4388                           
  4389                           ;smartkey.C: 96: if( mode_chek == 1){
  4390  0430  0B73               	decfsz	_mode_chek,w
  4391  0431  2C4A               	goto	i1l5498
  4392                           
  4393                           ;smartkey.C: 98: cntCyc++;
  4394  0432  0AF2               	incf	_cntCyc,f
  4395                           
  4396                           ;smartkey.C: 100: if(RA5==0){
  4397  0433  1A85               	btfsc	5,5
  4398  0434  2C4A               	goto	i1l5498
  4399  0435  3010               	movlw	16
  4400                           
  4401                           ;smartkey.C: 102: cntOff++;
  4402  0436  0ACA               	incf	_cntOff,f
  4403                           
  4404                           ;smartkey.C: 105: if(cntOff > 15){
  4405  0437  024A               	subwf	_cntOff,w
  4406  0438  1C03               	skipc
  4407  0439  2C4A               	goto	i1l5498
  4408  043A  3010               	movlw	16
  4409                           
  4410                           ;smartkey.C: 107: mode_chek = 0;
  4411  043B  01F3               	clrf	_mode_chek
  4412                           
  4413                           ;smartkey.C: 109: if((cntCyc>15) &&(cntCyc<50)) {
  4414  043C  0272               	subwf	_cntCyc,w
  4415  043D  3032               	movlw	50
  4416  043E  1C03               	skipc
  4417  043F  2C46               	goto	L19
  4418  0440  0272               	subwf	_cntCyc,w
  4419  0441  1803               	skipnc
  4420  0442  2C45               	goto	i1l5494
  4421                           
  4422                           ;smartkey.C: 110: RegStatus |= (0x40);
  4423  0443  1749               	bsf	_RegStatus,6
  4424                           
  4425                           ;smartkey.C: 111: } else if (cntCyc>=50){
  4426  0444  2C49               	goto	i1l840
  4427  0445                     i1l5494:	
  4428  0445  3032               	movlw	50
  4429  0446                     L19:	
  4430  0446  0272               	subwf	_cntCyc,w
  4431  0447  1803               	btfsc	3,0
  4432                           
  4433                           ;smartkey.C: 112: RegStatus &= ~(0x40);
  4434  0448  1349               	bcf	_RegStatus,6
  4435  0449                     i1l840:	
  4436                           
  4437                           ;smartkey.C: 113: }
  4438                           ;smartkey.C: 116: RegStatus |= 0x80;
  4439  0449  17C9               	bsf	_RegStatus,7
  4440  044A                     i1l5498:	
  4441                           
  4442                           ;smartkey.C: 117: }
  4443                           ;smartkey.C: 119: }
  4444                           ;smartkey.C: 129: }
  4445                           ;smartkey.C: 132: timeTick++;
  4446  044A  0AF0               	incf	_timeTick,f
  4447  044B  1903               	skipnz
  4448  044C  0AF1               	incf	_timeTick+1,f
  4449                           
  4450                           ;smartkey.C: 134: if((mtState == 4)||(mtState == 3)){
  4451  044D  0874               	movf	_mtState,w
  4452  044E  3A04               	xorlw	4
  4453  044F  1903               	skipnz
  4454  0450  2C55               	goto	i1l5504
  4455  0451  0874               	movf	_mtState,w
  4456  0452  3A03               	xorlw	3
  4457  0453  1D03               	skipz
  4458  0454  2C78               	goto	i1l5518
  4459  0455                     i1l5504:	
  4460                           
  4461                           ;smartkey.C: 136: if(timeTick > cntTmp){
  4462  0455  0871               	movf	_timeTick+1,w
  4463  0456  0246               	subwf	_cntTmp+1,w
  4464  0457  1D03               	skipz
  4465  0458  2C5B               	goto	u148_25
  4466  0459  0870               	movf	_timeTick,w
  4467  045A  0245               	subwf	_cntTmp,w
  4468  045B                     u148_25:	
  4469  045B  1803               	skipnc
  4470  045C  2C78               	goto	i1l5518
  4471                           
  4472                           ;smartkey.C: 137: cntTmp = timeTick+45;
  4473  045D  0871               	movf	_timeTick+1,w
  4474  045E  00C6               	movwf	_cntTmp+1
  4475  045F  0870               	movf	_timeTick,w
  4476  0460  00C5               	movwf	_cntTmp
  4477  0461  302D               	movlw	45
  4478  0462  07C5               	addwf	_cntTmp,f
  4479  0463  1803               	skipnc
  4480  0464  0AC6               	incf	_cntTmp+1,f
  4481                           
  4482                           ;smartkey.C: 138: if(cntTmp<=timeOut)
  4483  0465  0846               	movf	_cntTmp+1,w
  4484  0466  0248               	subwf	_timeOut+1,w
  4485  0467  1D03               	skipz
  4486  0468  2C6B               	goto	u149_25
  4487  0469  0845               	movf	_cntTmp,w
  4488  046A  0247               	subwf	_timeOut,w
  4489  046B                     u149_25:	
  4490                           
  4491                           ;smartkey.C: 139: {
  4492                           ;smartkey.C: 140: TMR2IE = 0;
  4493  046B  1683               	bsf	3,5	;RP0=1, select bank1
  4494  046C  1C03               	skipc
  4495  046D  2C79               	goto	L20
  4496  046E  108C               	bcf	12,1
  4497                           
  4498                           ;smartkey.C: 142: if (PR2L == 20)
  4499  046F  0811               	movf	17,w	;volatile
  4500  0470  3A14               	xorlw	20
  4501  0471  1D03               	skipz
  4502  0472  2C75               	goto	i1l5514
  4503                           
  4504                           ;smartkey.C: 143: PR2L = 25;
  4505  0473  3019               	movlw	25
  4506  0474  2C76               	goto	L18
  4507  0475                     i1l5514:	
  4508                           
  4509                           ;smartkey.C: 144: else
  4510                           ;smartkey.C: 145: PR2L = 20;
  4511  0475  3014               	movlw	20
  4512  0476                     L18:	
  4513  0476  0091               	movwf	17	;volatile
  4514                           
  4515                           ;smartkey.C: 146: TMR2IE = 1;
  4516  0477  148C               	bsf	12,1
  4517  0478                     i1l5518:	
  4518                           
  4519                           ;smartkey.C: 147: }
  4520                           ;smartkey.C: 148: }
  4521                           ;smartkey.C: 149: }
  4522                           ;smartkey.C: 152: }
  4523                           ;smartkey.C: 155: if(TMR2IE&&TMR2IF)
  4524  0478  1683               	bsf	3,5	;RP0=1, select bank1
  4525  0479                     L20:	
  4526  0479  1C8C               	btfss	12,1
  4527  047A  2C81               	goto	i1l850
  4528  047B  1283               	bcf	3,5	;RP0=0, select bank0
  4529  047C  1C8C               	btfss	12,1
  4530  047D  2C81               	goto	i1l850
  4531  047E  3008               	movlw	8
  4532                           
  4533                           ;smartkey.C: 156: {
  4534                           ;smartkey.C: 157: TMR2IF = 0;
  4535  047F  108C               	bcf	12,1
  4536                           
  4537                           ;smartkey.C: 158: RA3 =~ RA3;
  4538  0480  0685               	xorwf	5,f
  4539  0481                     i1l850:	
  4540  0481  0878               	movf	??_ISR+1,w
  4541  0482  008A               	movwf	10
  4542  0483  0E77               	swapf	??_ISR^(0+-128),w
  4543  0484  0083               	movwf	3
  4544  0485  0EFE               	swapf	126,f
  4545  0486  0E7E               	swapf	126,w
  4546  0487  0009               	retfie
  4547  0488                     __end_of_ISR:	
  4548                           
  4549                           	psect	intentry
  4550  0004                     __pintentry:	
  4551                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4552                           
  4553  0004                     interrupt_function:	
  4554  007E                     saved_w	set	btemp
  4555  0004  00FE               	movwf	btemp
  4556  0005  0E03               	swapf	3,w
  4557  0006  00F7               	movwf	??_ISR
  4558  0007  080A               	movf	10,w
  4559  0008  00F8               	movwf	??_ISR+1
  4560  0009  2C02               	ljmp	_ISR
  4561                           
  4562                           	psect	text882
  4563  0646                     __ptext882:	
  4564 ;; =============== function _ISR ends ============
  4565                           
  4566                           
  4567 ;; *************** function i1_WRITE_EEPROM *****************
  4568 ;; Defined at:
  4569 ;;		line 205 in file "smartkey.C"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  WRITE_EEPROM    1    wreg     unsigned char 
  4572 ;;  WRITE_EEPROM    1    0[COMMON] unsigned char 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  WRITE_EEPROM    1    1[COMMON] unsigned char 
  4575 ;; Return value:  Size  Location     Type
  4576 ;;		None               void
  4577 ;; Registers used:
  4578 ;;		wreg
  4579 ;; Tracked objects:
  4580 ;;		On entry : 20/20
  4581 ;;		On exit  : 20/20
  4582 ;;		Unchanged: FFE00/0
  4583 ;; Data sizes:     COMMON   BANK0   BANK1
  4584 ;;      Params:         1       0       0
  4585 ;;      Locals:         1       0       0
  4586 ;;      Temps:          0       0       0
  4587 ;;      Totals:         2       0       0
  4588 ;;Total ram usage:        2 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; This function calls:
  4591 ;;		Nothing
  4592 ;; This function is called by:
  4593 ;;		_ISR
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596  0646                     i1_WRITE_EEPROM:	
  4597                           
  4598                           ; Regs used in i1_WRITE_EEPROM: [wreg]
  4599                           ;i1WRITE_EEPROM@EEAddr stored from wreg
  4600  0646  00F6               	movwf	i1WRITE_EEPROM@EEAddr
  4601                           
  4602                           ;smartkey.C: 206: GIE = 0;
  4603  0647  138B               	bcf	11,7
  4604  0648                     i1l874:	
  4605                           ;smartkey.C: 207: while(GIE) asm("clrwdt");
  4606                           
  4607  0648  1F8B               	btfss	11,7
  4608  0649  2E4C               	goto	i1l5698
  4609  064A  0064               	clrwdt	;#
  4610  064B  2E48               	goto	i1l874
  4611  064C                     i1l5698:	
  4612                           
  4613                           ;smartkey.C: 208: EEADR = EEAddr;
  4614  064C  0876               	movf	i1WRITE_EEPROM@EEAddr,w
  4615  064D  1683               	bsf	3,5	;RP0=1, select bank1
  4616  064E  009B               	movwf	27	;volatile
  4617                           
  4618                           ;smartkey.C: 209: EEDAT = EEData;
  4619  064F  0875               	movf	i1WRITE_EEPROM@EEData,w
  4620  0650  009A               	movwf	26	;volatile
  4621  0651  3034               	movlw	52
  4622                           
  4623                           ;smartkey.C: 210: EEIF = 0;
  4624  0652  1283               	bcf	3,5	;RP0=0, select bank0
  4625  0653  138C               	bcf	12,7
  4626                           
  4627                           ;smartkey.C: 211: EECON1 = 0x34;
  4628  0654  1683               	bsf	3,5	;RP0=1, select bank1
  4629  0655  009C               	movwf	28	;volatile
  4630                           
  4631                           ;smartkey.C: 212: WR = 1;
  4632  0656  141D               	bsf	29,0
  4633  0657                     i1l877:	
  4634                           ;smartkey.C: 213: while(WR) asm("clrwdt");
  4635                           
  4636  0657  1683               	bsf	3,5	;RP0=1, select bank1
  4637  0658  1C1D               	btfss	29,0
  4638  0659  2E5C               	goto	i1l879
  4639  065A  0064               	clrwdt	;#
  4640  065B  2E57               	goto	i1l877
  4641  065C                     i1l879:	
  4642                           
  4643                           ;smartkey.C: 215: GIE = 1;
  4644  065C  178B               	bsf	11,7
  4645  065D  0008               	return
  4646  065E                     __end_ofi1_WRITE_EEPROM:	
  4647                           
  4648                           	psect	text883
  4649  06FD                     __ptext883:	
  4650 ;; =============== function i1_WRITE_EEPROM ends ============
  4651                           
  4652                           
  4653 ;; *************** function i1_READ_EEPROM *****************
  4654 ;; Defined at:
  4655 ;;		line 194 in file "smartkey.C"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  READ_EEPROM     1    wreg     unsigned char 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  READ_EEPROM     1    0[COMMON] unsigned char 
  4660 ;;  READ_EEPROM     1    1[COMMON] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      unsigned char 
  4663 ;; Registers used:
  4664 ;;		wreg
  4665 ;; Tracked objects:
  4666 ;;		On entry : 20/0
  4667 ;;		On exit  : 20/20
  4668 ;;		Unchanged: FFFDF/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1
  4670 ;;      Params:         0       0       0
  4671 ;;      Locals:         2       0       0
  4672 ;;      Temps:          0       0       0
  4673 ;;      Totals:         2       0       0
  4674 ;;Total ram usage:        2 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; This function calls:
  4677 ;;		Nothing
  4678 ;; This function is called by:
  4679 ;;		_ISR
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682  06FD                     i1_READ_EEPROM:	
  4683                           
  4684                           ; Regs used in i1_READ_EEPROM: [wreg]
  4685                           ;i1READ_EEPROM@EEAddr stored from wreg
  4686  06FD  00F5               	movwf	i1READ_EEPROM@EEAddr
  4687                           
  4688                           ;smartkey.C: 195: unsigned char ReEepromData;
  4689                           ;smartkey.C: 197: EEADR = EEAddr;
  4690  06FE  1683               	bsf	3,5	;RP0=1, select bank1
  4691  06FF  009B               	movwf	27	;volatile
  4692                           
  4693                           ;smartkey.C: 198: RD = 1;
  4694  0700  141C               	bsf	28,0
  4695                           
  4696                           ;smartkey.C: 199: ReEepromData = EEDAT;
  4697  0701  081A               	movf	26,w	;volatile
  4698  0702  00F6               	movwf	i1READ_EEPROM@ReEepromData
  4699                           
  4700                           ;smartkey.C: 200: RD = 0;
  4701  0703  101C               	bcf	28,0
  4702                           
  4703                           ;smartkey.C: 201: return ReEepromData;
  4704  0704  0008               	return
  4705  0705                     __end_ofi1_READ_EEPROM:	
  4706                           
  4707                           	psect	text884
  4708  0000                     __ptext884:	
  4709 ;; =============== function i1_READ_EEPROM ends ============
  4710                           
  4711  007E                     btemp	set	126	;btemp
  4712  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Mar 19 12:09:08 2020

                        pc 0002                         _RD 04E0                         _WR 04E8  
             ___awdiv@sign 0025      __size_of_WRITE_EEPROM 001B                         fsr 0004  
                      _C1R 08CA                        _C2R 08D2                        l862 0000  
                      l942 01EE                        l926 01A3                        l871 0000  
                      l880 0000                        l856 0000                        l952 0285  
                      l874 062D                        l859 0000                        l883 0000  
                      l955 026A                        l868 0000                        l972 02E7  
                      l956 0255                        l877 063F                        l879 0644  
                      _GIE 005F                        l997 03FF                        _RA2 002A  
                      _RA3 002B                        _RC0 0038                        _RC1 0039  
                      _RA5 002D                        _RA6 002E                        _RA7 002F  
             ?_swI2C_Start 0075                        _HTS 047A                        _ISR 0402  
                      _SR0 0CF6                        _SR1 0CF7                        _VR0 08C0  
                      _VR1 08C1                        _VR2 08C2                        _VR3 08C3  
                      _VRR 08C5                        fsr0 0004                        indf 0000  
           _swI2C_ReadByte 0512                       S7196 0705                       ?_ISR 0075  
                     _C1OE 08CD                       _C2OE 08D5                       l1800 0000  
                     _C1ON 08CF                       l2601 0000                       l2604 051F  
                     _C2ON 08D7                       l2606 0000                       l4238 0000  
                     l2590 0000                       l1791 0000                       l2593 0000  
                     l1794 0000                       l7002 0000                       l2587 0000  
                     l1788 06F9                       l7100 0000                       l7020 0000  
                     l7004 0000                       l1797 0000                       l7102 0391  
                     l7014 0000                       l7030 02FC                       l2599 055C  
                     l6400 0000                       l7120 0000                       l7104 0392  
                     l7016 0000                       l6402 0000                       l7130 03D6  
                     l7122 0000                       l7114 0000                       l7106 0000  
                     l7050 0000                       l7034 0000                       l7018 0000  
                     l7140 03D9                       l7052 0000                       l7036 0000  
                     l7108 0396                       l7028 02EE                       l6502 0000  
                     l7150 0000                       l7134 0000                       l7126 0000  
                     l7118 03AD                       l7062 0000                       l7054 0000  
                     l7046 0000                       l7038 0000                       l6416 04F9  
                     l6440 0000                       l6520 0000                       l6504 049B  
                     l7152 0000                       l7136 0000                       l7080 0000  
                     l7064 0000                       l7056 033A                       l6442 0000  
                     l6450 0000                       l6530 04C8                       l6514 04A9  
                     l6506 0000                       l6610 0000                       l6602 0000  
                     l7154 0000                       l7138 0000                       l7082 0000  
                     l7074 0000                       l6372 0000                       l6380 0000  
                     l6444 0000                       l6452 0000                       l6460 0000  
                     l6524 0000                       l6516 0000                       l6540 0000  
                     l6620 0000                       l6604 0000                       l7148 03F0  
                     l7156 03F9                       l7092 0000                       l7068 0000  
                     l6700 0000                       l6374 0000                       l6382 0631  
                     l6390 06A7                       l6446 0000                       l6454 0000  
                     l6470 0000                       l6462 0000                       l6526 04C0  
                     l6542 0000                       l6534 0000                       l6550 0000  
                     l6622 0000                       l6614 0000                       l6606 0000  
                     l6630 0000                       l7078 0000                       l7086 0374  
                     l6710 0000                       l6702 0000                       l6376 0000  
                     l6384 0000                       l6392 0000                       l6448 0000  
                     l6456 0000                       l6480 0000                       l6472 0000  
                     l6464 0000                       l6528 0000                       l6544 0000  
                     l6536 0000                       l6552 0000                       l6560 0000  
                     l6624 0000                       l6616 0000                       l6608 0000  
                     l6640 0000                       l7096 0000                       l6800 00F4  
                     l6720 0000                       l6712 0000                       l6704 0000  
                     l6386 0000                       l6394 0000                       l6482 0000  
                     l6474 0000                       l6466 0000                       l6458 0000  
                     l6490 0000                       l6538 0000                       l6546 065F  
                     l6554 0000                       l6562 0000                       l6570 0000  
                     l6626 0000                       l6618 0000                       l6650 0000  
                     l7098 0000                       l6810 0102                       l6802 0000  
                     l6722 0000                       l6714 0000                       l6706 0000  
                     l6388 0000                       l6396 0000                       l6484 0000  
                     l6476 0000                       l6468 0000                       l6492 0000  
                     l6548 0000                       l6556 0000                       l6564 0000  
                     l6572 0000                       l6580 0000                       l6644 05ED  
                     l6900 0000                       l6740 0000                       l6732 0000  
                     l6724 0000                       l6716 0000                       l6708 0000  
                     l6398 0000                       l6486 0000                       l6478 0000  
                     l6558 0000                       l6566 0000                       l6590 0000  
                     l6574 0000                       l6646 05D6                       l6910 022F  
                     l6822 0144                       l6814 0000                       l6806 0000  
                     l6750 0000                       l6742 0000                       l6734 0058  
                     l6726 0000                       l6718 0000                       l6488 0000  
                     l6496 0000                       l6568 0000                       l6592 0000  
                     l6584 0000                       l6576 0000                       l6648 05EF  
                     l6680 0000                       l6664 0000                       l6920 0000  
                     l6912 0000                       l6904 021E                       l6832 0186  
                     l6816 012F                       l6808 0000                       l6840 01A7  
                     l6760 0000                       l6752 007A                       l6744 0000  
                     l6728 0000                       l6498 0492                       l6594 0000  
                     l6586 0000                       l6578 0000                       l6682 0000  
                     l6674 0000                       l6930 0000                       l6906 0000  
                     l6842 0000                       l6834 0000                       l6826 0000  
                     l6818 013D                       l6770 0000                       l6754 0000  
                     l6746 0000                       l6738 0000                       l6596 0000  
                     l6588 0000                       l6676 05A1                       l6940 0000  
                     l6932 0000                       l6908 0000                       l6916 0238  
                     l6844 0000                       l6836 019F                       l6764 008E  
                     l6772 00A4                       l6748 0073                       l6598 0000  
                     l6942 0000                       l6926 0000                       l6918 0243  
                     l6870 0000                       l6862 0000                       l6854 01BE  
                     l6846 01B5                       l6838 0000                       l6782 00B3  
                     l6766 0091                       l6758 0000                       l6960 0293  
                     l6944 0000                       l6928 0000                       l6880 0000  
                     l6872 0000                       l6952 027D                       l6776 00AB  
                     l6768 0000                       l6970 0000                       l6962 0000  
                     l6946 0000                       l6938 026D                       l6882 0000  
                     l6890 020B                       l6866 01D6                       l6858 01C5  
                     l6954 0286                       l6794 00E3                       l6786 00CD  
                     l6778 0000                       l6972 0000                       l6964 0000  
                     l6892 0000                       l6876 01E7                       l6796 0000  
                     l6788 0000                       l6990 0000                       l6982 0000  
                     l6974 0000                       l6966 029D                       l6886 01FD  
                     l6878 0000                       l6992 0000                       l6984 02B8  
                     l6976 0000                       l6968 0000                       l6896 020E  
                     l6888 0000                       l6994 0000                       l6978 0000  
                     l6996 0000                       l6988 02C0                       l6998 02D7  
                     _EEIF 0067                       _ANS0 08F0                       _ANS1 08F1  
                     _ANS2 08F2                       _ANS3 08F3                       _ANS4 08F4  
                     _ANS5 08F5                       _ANS6 08F6                       _ANS7 08F7  
                     _ANS8 08F8                       _ANS9 08F9                       _T0IE 005D  
                     _T0IF 005A                       _T0ON 00FB                       _IOCB 0116  
                     u3065 0175                       u3075 0181                       _PAIE 005B  
                     _PAIF 0058                       u3325 0303                       _PIE1 008C  
                     u2625 04E6                       u2715 04B2                       u3275 0290  
                     u2814 0543                       u3607 003E                       u2760 0561  
                     u3617 0053                       u2595 06AD                       u3707 0546  
                     u3475 039D                       u3627 009E                       _PEIE 005E  
                     u3717 054C                       u3637 00BA                       _INTE 005C  
                     u2774 0563                       _INTF 0059                       u3807 0694  
                     u3727 0558                       u3647 00E7                       u3817 069A  
                     u3737 0568                       u3657 0136                       u3827 05F7  
                     u3747 056E                       u3667 0199                       _PR2H 0092  
                     u3837 05FE                       u3757 057B                       u3677 051B  
                     u3597 0020                       u3847 0603                       u3767 0581  
                     u3687 0522                       u2895 05AE                       _PR2L 0091  
                     u3857 0608                       u3777 06D3                       u3697 0531  
                     _PIR1 000C                       u3867 060D                       u3787 06D9  
                     u3797 068E                       _TMR0 0001                       _STRA 0CE8  
                     _STRB 0CE9                       _STRC 0CEA                       _STRD 0CEB  
                     _WREN 0C62                       _WPUA 0095                       _WPUB 0115  
                     _WPUC 0093               ?_READ_EEPROM 0075                       _beep 065E  
          __end_of_AccRead 05B9                       _main 000B                       btemp 007E  
                     start 000A               _WRITE_EEPROM 062B                      ??_ISR 0077  
                    _C1CH0 08C8                      _C1CH1 08C9                      _C2CH0 08D0  
                    _C2CH1 08D1                      ?_beep 0024                      _C1SEN 0CF5  
                    _C2REN 0CF4                      _C1POL 08CC                      _C2POL 08D4  
                    _C1OUT 08CE                      _C2OUT 08D6                      ?_main 0075  
          __end_of___awdiv 04CD                      _EEADR 009B                      _EEDAT 009A  
                    _ANS10 08FA                      _ANS11 08FB                      _EEPGD 0C67  
   __end_of_swI2C_ReadByte 0551                      _ANSEL 011E               AccWrite@rAdd 0028  
          ___awdiv@divisor 0020                      _IOCA5 04B5                      _IOCB4 08B4  
                    _IOCB5 08B5                      _IOCB6 08B6                      _IOCB7 08B7  
                    _T1GSS 08D9                      i1l831 0428                      i1l840 0449  
                    i1l850 0481                      i1l829 0429                      i1l871 0000  
                    i1l880 0000                      i1l874 0648                      i1l877 0657  
                    i1l879 065C            ___awdiv@counter 0024                      _MSCON 001B  
          __end_of_beepOff 0714                      _VP6EN 08C4                      _TMR2H 0013  
                    _TMR2L 0011                      _PSRCA 0088                      _PSRCC 0094  
                    _PORTA 0005                      _PORTC 0007                      _SRCON 019E  
                    _PULSR 0CF2                      _PULSS 0CF3                      _TRISA 0085  
                    _TRISC 0087                      _VRCON 0118                      _WPUB4 08AC  
                    _WPUB5 08AD                      _WPUB6 08AE                      _WPUB7 08AF  
                    _compe 04CD           __end_of_AccWrite 05F1                      pclath 000A  
                    status 0003                      wtemp0 007E            _swI2C_WriteByte 0551  
     __size_of_delay_x10ms 0013             i1_WRITE_EEPROM 0646               __end_of_beep 0674  
             __end_of_main 0402                     ??_beep 0025                     ??_main 002C  
          ?_swI2C_ReadByte 0075              main@reAlertOn 003B                     _C1VREN 08C7  
                   _C2VREN 08C6                     _C2SYNC 08D8                     ?_compe 0020  
                ??_AccRead 0027                     _EEADRH 010F                     _EEDATH 010E  
                   _EECON1 009C           ___awdiv@dividend 0022                     _ANSELH 011F  
                   _MC1OUT 08DF                     _MC2OUT 08DE                     _T0CON0 001F  
                   _T2CON0 0012                     i1l5500 0000                     i1l5510 0000  
                   i1l5504 0455                     i1l5514 0475                     i1l5450 0000  
                   i1l5442 0000                     i1l5700 0000                     i1l5524 0000  
                   i1l5460 0413                     i1l5702 0000                     i1l5518 0478  
                   i1l5470 0000                     i1l5480 0000                     i1l5456 0000  
                   i1l5448 0000                     i1l5458 0412                     i1l5484 0000  
                   i1l5476 0000                     i1l5494 0445                     i1l5478 0000  
                   i1l5488 0000                     i1l5690 0000                     i1l5498 044A  
                   _INTEDG 040E                     i1l5692 0000                     i1l5688 0000  
                   i1l5696 0000                     i1l5698 064C                     _INTCON 000B  
                   u148_25 045B                     u149_25 046B                     _OSCCON 008F  
                   _TMR2IE 0461                     _TMR2IF 0061                     _PSINKA 0097  
                   _PSINKC 009F                     _OPTION 0081                     _TMR2ON 0092  
   __end_ofi1_WRITE_EEPROM 065E            swI2C_ReadByte@i 0023                     _beepOn 070A  
                ??___awdiv 0024                     _cntCyc 0072                     _cntOff 004A  
                   _cntTmp 0045                  ??_beepOff 0020           ___awdiv@quotient 0026  
         __end_of_int_init 062B                     compe@a 0027                     compe@b 0020  
   __size_ofi1_READ_EEPROM 0008           __end_of_setState 06F5              main@vibrateOn 0034  
                   saved_w 007E       __size_of_swI2C_Start 0013    __end_of_swI2C_WriteByte 058E  
         __end_of_sys_init 06FD       i1WRITE_EEPROM@EEAddr 0076       i1WRITE_EEPROM@EEData 0075  
     __size_of_READ_EEPROM 000D            ?i1_WRITE_EEPROM 0075             __pcstackCOMMON 0075  
            __end_of_compe 0506                  ?_AccWrite 0023                ISR@tmp_1138 0079  
                  ??_compe 0022                 __pbssBANK0 0045         __size_of_gpio_init 0016  
  READ_EEPROM@ReEepromData 0021              i1_READ_EEPROM 06FD                 __pmaintext 000B  
                  ?_beepOn 0075                 __pintentry 0004  i1READ_EEPROM@ReEepromData 0076  
                  _CM1CON0 0119                    _CM2CON0 011A                    _CM2CON1 011B  
               ??_AccWrite 0026                    _AccRead 058E                    _PSTRCON 019D  
               _swI2C_Init 05F1                    _STRSYNC 0CEC                 _swI2C_Stop 06CF  
         ?_swI2C_WriteByte 0075             ?i1_READ_EEPROM 0075                  AccWrite@i 0029  
                ?_int_init 0075                setState@stt 0022                  ?_setState 0020  
               _mtOldState 004C                    ___awdiv 0488           ??_swI2C_ReadByte 0020  
          __size_of_beepOn 0005                    _beepOff 070F                    beep@rep 0024  
        __end_of_gpio_init 068A                  ?_sys_init 0075               __size_of_ISR 0086  
                  _mtState 0074                    _timeOut 0047                    compe@dt 0021  
                  main@buf 0035       end_of_initialization 06CD                 _lostDetect 004B  
            ??_delay_x10ms 0022                 ??_int_init 0020                 ??_setState 0022  
              AccRead@rAdd 002A                 _timer_init 06B0                 ??_sys_init 0020  
              ?_swI2C_Init 0075            ??i1_READ_EEPROM 0075                ?_swI2C_Stop 0075  
               main@acXOld 0033                 main@acYOld 0032           ??i1_WRITE_EEPROM 0076  
               main@acXsum 003F                 main@acYsum 003D                 main@isFall 0031  
       WRITE_EEPROM@EEAddr 0021         WRITE_EEPROM@EEData 0020                 main@isWait 002F  
      __end_of_delay_x10ms 06B0                AccWrite@dat 0023                AccWrite@len 0025  
           __end_of_beepOn 070F              ??_swI2C_Start 0020          __size_of_AccWrite 0028  
      start_initialization 06C0                __end_of_ISR 0488              setState@_tOut 0020  
                _RegStatus 0049              ??_READ_EEPROM 0020              ?_WRITE_EEPROM 0020  
                 ??_beepOn 0020          READ_EEPROM@EEAddr 0020        __size_of_swI2C_Init 001F  
      __size_of_swI2C_Stop 000D                ?_timer_init 0075                __pbssCOMMON 0070  
            __pcstackBANK0 0020                   ?_AccRead 0024        __end_of_swI2C_Start 069D  
              _delay_x10ms 069D             ??_WRITE_EEPROM 0021          __size_of_int_init 001B  
      __end_of_READ_EEPROM 06E9           swI2C_WriteByte@i 0022                   ?___awdiv 0020  
        __size_of_setState 000C                  __ptext860 0000                  __ptext861 058E  
                __ptext870 0488                  __ptext862 05C9                  __ptext871 0610  
                __ptext863 0512                  __ptext880 06DC                  __ptext872 06B0  
                __ptext864 0551                  __ptext881 0402                  __ptext873 0674  
                __ptext865 06CF                  __ptext882 0646                  __ptext874 04CD  
                __ptext866 068A                  __ptext883 06FD                  __ptext875 06E9  
                __ptext867 05F1                  __ptext884 0000                  __ptext876 070A  
                __ptext868 06F5                  __ptext877 070F                  __ptext869 065E  
                __ptext878 069D                  __ptext879 062B                  beep@delay 0025  
                 ?_beepOff 0075                   AccRead@i 002B         swI2C_WriteByte@dat 0021  
                __pswtext1 0705          __size_of_sys_init 0008                  _gpio_init 0674  
           __size_of_compe 0039                  _mode_chek 0073          interrupt_function 0004  
      __size_of_timer_init 0010   __size_of_swI2C_WriteByte 003D                 AccRead@dat 0024  
               AccRead@len 0026               delay_x10ms@t 0020                   _AccWrite 05C9  
              _swI2C_Start 068A                  main@tmp16 0042                  main@mpuOk 003C  
               ?_gpio_init 0075               ??_swI2C_Init 0020           __size_of_AccRead 002B  
             ??_swI2C_Stop 0020                _READ_EEPROM 06DC          swI2C_ReadByte@Ack 0021  
        swI2C_ReadByte@dat 0022           __size_of___awdiv 0045           __size_of_beepOff 0005  
       __end_of_swI2C_Init 0610         __end_of_swI2C_Stop 06DC       __end_of_WRITE_EEPROM 0646  
  __size_of_swI2C_ReadByte 003F      __end_ofi1_READ_EEPROM 0705              __size_of_beep 0016  
            __size_of_main 03F7                   _int_init 0610                   _setState 06E9  
                 _timeTick 0070                   main@isSw 0041                   main@tmp8 0044  
        ??_swI2C_WriteByte 0020               ??_timer_init 0020                   _sys_init 06F5  
              ??_gpio_init 0020                   intlevel1 0000               ?_delay_x10ms 0020  
       __end_of_timer_init 06C0    __size_ofi1_WRITE_EEPROM 0018        i1READ_EEPROM@EEAddr 0075  
           delay_x10ms@set 0022  
