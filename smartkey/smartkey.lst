

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Mar 19 17:12:46 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text860,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	text861,local,class=CODE,delta=2
    13                           	psect	text862,local,class=CODE,delta=2
    14                           	psect	text863,local,class=CODE,delta=2
    15                           	psect	text864,local,class=CODE,delta=2
    16                           	psect	text865,local,class=CODE,delta=2
    17                           	psect	text866,local,class=CODE,delta=2
    18                           	psect	text867,local,class=CODE,delta=2
    19                           	psect	text868,local,class=CODE,delta=2
    20                           	psect	text869,local,class=CODE,delta=2
    21                           	psect	text870,local,class=CODE,delta=2
    22                           	psect	text871,local,class=CODE,delta=2
    23                           	psect	text872,local,class=CODE,delta=2
    24                           	psect	text873,local,class=CODE,delta=2
    25                           	psect	text874,local,class=CODE,delta=2
    26                           	psect	text875,local,class=CODE,delta=2
    27                           	psect	text876,local,class=CODE,delta=2
    28                           	psect	text877,local,class=CODE,delta=2
    29                           	psect	text878,local,class=CODE,delta=2
    30                           	psect	text879,local,class=CODE,delta=2
    31                           	psect	text880,local,class=CODE,delta=2
    32                           	psect	text881,local,class=CODE,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text882,local,class=CODE,delta=2
    35                           	psect	text883,local,class=CODE,delta=2
    36                           	psect	text884,local,class=CODE,delta=2
    37                           	psect	pa_nodes,global,class=CODE,delta=2
    38                           	dabs	1,0x11E,1
    39                           	dabs	1,0x11F,1
    40                           	dabs	1,0x119,1
    41                           	dabs	1,0x11A,1
    42                           	dabs	1,0x11B,1
    43                           	dabs	1,0x10F,1
    44                           	dabs	1,0x10E,1
    45                           	dabs	1,0x116,1
    46                           	dabs	1,0x19D,1
    47                           	dabs	1,0x19E,1
    48                           	dabs	1,0x118,1
    49                           	dabs	1,0x115,1
    50                           	dabs	1,0x11E,1
    51                           	dabs	1,0x11E,1
    52                           	dabs	1,0x11F,1
    53                           	dabs	1,0x11F,1
    54                           	dabs	1,0x11E,1
    55                           	dabs	1,0x11E,1
    56                           	dabs	1,0x11E,1
    57                           	dabs	1,0x11E,1
    58                           	dabs	1,0x11E,1
    59                           	dabs	1,0x11E,1
    60                           	dabs	1,0x11F,1
    61                           	dabs	1,0x11F,1
    62                           	dabs	1,0x119,1
    63                           	dabs	1,0x119,1
    64                           	dabs	1,0x119,1
    65                           	dabs	1,0x119,1
    66                           	dabs	1,0x119,1
    67                           	dabs	1,0x119,1
    68                           	dabs	1,0x119,1
    69                           	dabs	1,0x19E,1
    70                           	dabs	1,0x118,1
    71                           	dabs	1,0x11A,1
    72                           	dabs	1,0x11A,1
    73                           	dabs	1,0x11A,1
    74                           	dabs	1,0x11A,1
    75                           	dabs	1,0x11A,1
    76                           	dabs	1,0x11A,1
    77                           	dabs	1,0x11A,1
    78                           	dabs	1,0x19E,1
    79                           	dabs	1,0x11B,1
    80                           	dabs	1,0x118,1
    81                           	dabs	1,0x18C,1
    82                           	dabs	1,0x116,1
    83                           	dabs	1,0x116,1
    84                           	dabs	1,0x116,1
    85                           	dabs	1,0x116,1
    86                           	dabs	1,0x11B,1
    87                           	dabs	1,0x11B,1
    88                           	dabs	1,0x19E,1
    89                           	dabs	1,0x19E,1
    90                           	dabs	1,0x19E,1
    91                           	dabs	1,0x19E,1
    92                           	dabs	1,0x19D,1
    93                           	dabs	1,0x19D,1
    94                           	dabs	1,0x19D,1
    95                           	dabs	1,0x19D,1
    96                           	dabs	1,0x19D,1
    97                           	dabs	1,0x11B,1
    98                           	dabs	1,0x118,1
    99                           	dabs	1,0x118,1
   100                           	dabs	1,0x118,1
   101                           	dabs	1,0x118,1
   102                           	dabs	1,0x118,1
   103                           	dabs	1,0x118,1
   104                           	dabs	1,0x115,1
   105                           	dabs	1,0x115,1
   106                           	dabs	1,0x115,1
   107                           	dabs	1,0x115,1
   108                           	dabs	1,0x18C,1
   109                           	dabs	1,0x7E,2
   110  000A                     
   111                           	psect	text860
   112  0000                     __ptext860:	
   113  011E                     _ANSEL	set	286	;_ANSEL
   114  011F                     _ANSELH	set	287	;_ANSELH
   115  0119                     _CM1CON0	set	281	;_CM1CON0
   116  011A                     _CM2CON0	set	282	;_CM2CON0
   117  011B                     _CM2CON1	set	283	;_CM2CON1
   118  010F                     _EEADRH	set	271	;_EEADRH
   119  010E                     _EEDATH	set	270	;_EEDATH
   120  0116                     _IOCB	set	278	;_IOCB
   121  019D                     _PSTRCON	set	413	;_PSTRCON
   122  019E                     _SRCON	set	414	;_SRCON
   123  0118                     _VRCON	set	280	;_VRCON
   124  0115                     _WPUB	set	277	;_WPUB
   125  08F0                     _ANS0	set	2288	;_ANS0
   126  08F1                     _ANS1	set	2289	;_ANS1
   127  08FA                     _ANS10	set	2298	;_ANS10
   128  08FB                     _ANS11	set	2299	;_ANS11
   129  08F2                     _ANS2	set	2290	;_ANS2
   130  08F3                     _ANS3	set	2291	;_ANS3
   131  08F4                     _ANS4	set	2292	;_ANS4
   132  08F5                     _ANS5	set	2293	;_ANS5
   133  08F6                     _ANS6	set	2294	;_ANS6
   134  08F7                     _ANS7	set	2295	;_ANS7
   135  08F8                     _ANS8	set	2296	;_ANS8
   136  08F9                     _ANS9	set	2297	;_ANS9
   137  08C8                     _C1CH0	set	2248	;_C1CH0
   138  08C9                     _C1CH1	set	2249	;_C1CH1
   139  08CD                     _C1OE	set	2253	;_C1OE
   140  08CF                     _C1ON	set	2255	;_C1ON
   141  08CE                     _C1OUT	set	2254	;_C1OUT
   142  08CC                     _C1POL	set	2252	;_C1POL
   143  08CA                     _C1R	set	2250	;_C1R
   144  0CF5                     _C1SEN	set	3317	;_C1SEN
   145  08C7                     _C1VREN	set	2247	;_C1VREN
   146  08D0                     _C2CH0	set	2256	;_C2CH0
   147  08D1                     _C2CH1	set	2257	;_C2CH1
   148  08D5                     _C2OE	set	2261	;_C2OE
   149  08D7                     _C2ON	set	2263	;_C2ON
   150  08D6                     _C2OUT	set	2262	;_C2OUT
   151  08D4                     _C2POL	set	2260	;_C2POL
   152  08D2                     _C2R	set	2258	;_C2R
   153  0CF4                     _C2REN	set	3316	;_C2REN
   154  08D8                     _C2SYNC	set	2264	;_C2SYNC
   155  08C6                     _C2VREN	set	2246	;_C2VREN
   156  0C67                     _EEPGD	set	3175	;_EEPGD
   157  08B4                     _IOCB4	set	2228	;_IOCB4
   158  08B5                     _IOCB5	set	2229	;_IOCB5
   159  08B6                     _IOCB6	set	2230	;_IOCB6
   160  08B7                     _IOCB7	set	2231	;_IOCB7
   161  08DF                     _MC1OUT	set	2271	;_MC1OUT
   162  08DE                     _MC2OUT	set	2270	;_MC2OUT
   163  0CF2                     _PULSR	set	3314	;_PULSR
   164  0CF3                     _PULSS	set	3315	;_PULSS
   165  0CF6                     _SR0	set	3318	;_SR0
   166  0CF7                     _SR1	set	3319	;_SR1
   167  0CE8                     _STRA	set	3304	;_STRA
   168  0CE9                     _STRB	set	3305	;_STRB
   169  0CEA                     _STRC	set	3306	;_STRC
   170  0CEB                     _STRD	set	3307	;_STRD
   171  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   172  08D9                     _T1GSS	set	2265	;_T1GSS
   173  08C4                     _VP6EN	set	2244	;_VP6EN
   174  08C0                     _VR0	set	2240	;_VR0
   175  08C1                     _VR1	set	2241	;_VR1
   176  08C2                     _VR2	set	2242	;_VR2
   177  08C3                     _VR3	set	2243	;_VR3
   178  08C5                     _VRR	set	2245	;_VRR
   179  08AC                     _WPUB4	set	2220	;_WPUB4
   180  08AD                     _WPUB5	set	2221	;_WPUB5
   181  08AE                     _WPUB6	set	2222	;_WPUB6
   182  08AF                     _WPUB7	set	2223	;_WPUB7
   183  0C62                     _WREN	set	3170	;_WREN
   184  000B                     _INTCON	set	11
   185  001B                     _MSCON	set	27
   186  000C                     _PIR1	set	12
   187  0005                     _PORTA	set	5
   188  0007                     _PORTC	set	7
   189  001F                     _T0CON0	set	31
   190  0012                     _T2CON0	set	18
   191  0001                     _TMR0	set	1
   192  0013                     _TMR2H	set	19
   193  0011                     _TMR2L	set	17
   194  0067                     _EEIF	set	103
   195  005F                     _GIE	set	95
   196  005C                     _INTE	set	92
   197  0059                     _INTF	set	89
   198  005B                     _PAIE	set	91
   199  0058                     _PAIF	set	88
   200  005E                     _PEIE	set	94
   201  002A                     _RA2	set	42
   202  002B                     _RA3	set	43
   203  002D                     _RA5	set	45
   204  002E                     _RA6	set	46
   205  002F                     _RA7	set	47
   206  0038                     _RC0	set	56
   207  0039                     _RC1	set	57
   208  005D                     _T0IE	set	93
   209  005A                     _T0IF	set	90
   210  00FB                     _T0ON	set	251
   211  0061                     _TMR2IF	set	97
   212  0092                     _TMR2ON	set	146
   213  009B                     _EEADR	set	155
   214  009C                     _EECON1	set	156
   215  009A                     _EEDAT	set	154
   216  0081                     _OPTION	set	129
   217  008F                     _OSCCON	set	143
   218  008C                     _PIE1	set	140
   219  0092                     _PR2H	set	146
   220  0091                     _PR2L	set	145
   221  0097                     _PSINKA	set	151
   222  009F                     _PSINKC	set	159
   223  0088                     _PSRCA	set	136
   224  0094                     _PSRCC	set	148
   225  0085                     _TRISA	set	133
   226  0087                     _TRISC	set	135
   227  0095                     _WPUA	set	149
   228  0093                     _WPUC	set	147
   229  047A                     _HTS	set	1146
   230  040E                     _INTEDG	set	1038
   231  04B5                     _IOCA5	set	1205
   232  04E0                     _RD	set	1248
   233  0461                     _TMR2IE	set	1121
   234  04E8                     _WR	set	1256
   235                           
   236                           	psect	cinit
   237  0699                     start_initialization:	
   238                           
   239                           ; Clear objects allocated to COMMON
   240  0699  01F0               	clrf	__pbssCOMMON& (0+127)
   241  069A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   242  069B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   243  069C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   244  069D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   245                           
   246                           ; Clear objects allocated to BANK0
   247  069E  01C5               	clrf	__pbssBANK0& (0+127)
   248  069F  01C6               	clrf	(__pbssBANK0+1)& (0+127)
   249  06A0  01C7               	clrf	(__pbssBANK0+2)& (0+127)
   250  06A1  01C8               	clrf	(__pbssBANK0+3)& (0+127)
   251  06A2  01C9               	clrf	(__pbssBANK0+4)& (0+127)
   252  06A3  01CA               	clrf	(__pbssBANK0+5)& (0+127)
   253  06A4  01CB               	clrf	(__pbssBANK0+6)& (0+127)
   254  06A5  01CC               	clrf	(__pbssBANK0+7)& (0+127)
   255  06A6                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  06A6  0183               	clrf	3
   259  06A7  280B               	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMMON
   262  0070                     __pbssCOMMON:	
   263  0070                     _timeTick:	
   264  0070                     	ds	2
   265  0072                     _cntCyc:	
   266  0072                     	ds	1
   267  0073                     _mode_chek:	
   268  0073                     	ds	1
   269  0074                     _mtState:	
   270  0074                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273  0045                     __pbssBANK0:	
   274  0045                     _cntTmp:	
   275  0045                     	ds	2
   276  0047                     _timeOut:	
   277  0047                     	ds	2
   278  0049                     _RegStatus:	
   279  0049                     	ds	1
   280  004A                     _cntOff:	
   281  004A                     	ds	1
   282  004B                     _lostDetect:	
   283  004B                     	ds	1
   284  004C                     _mtOldState:	
   285  004C                     	ds	1
   286                           
   287                           	psect	cstackCOMMON
   288  0075                     __pcstackCOMMON:	
   289  0075                     ?_sys_init:	
   290  0075                     ?_gpio_init:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0075                     ?_timer_init:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0075                     ?_int_init:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0075                     ?_swI2C_Init:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0075                     ?_ISR:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0075                     ?_beepOff:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0075                     ?_beepOn:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0075                     ?_main:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0075                     ?_swI2C_Start:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0075                     ?_swI2C_Stop:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0075                     ??i1_READ_EEPROM:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0075                     ?i1_WRITE_EEPROM:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0075                     ?_READ_EEPROM:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0075                     ?_swI2C_WriteByte:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0075                     ?_swI2C_ReadByte:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0075                     ?i1_READ_EEPROM:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0075                     i1READ_EEPROM@EEAddr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0075                     i1WRITE_EEPROM@EEData:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346  0075                     	ds	1
   347  0076                     ??i1_WRITE_EEPROM:	
   348  0076                     i1READ_EEPROM@ReEepromData:	
   349                           ; 0 bytes @ 0x1
   350                           
   351  0076                     i1WRITE_EEPROM@EEAddr:	
   352                           ; 1 bytes @ 0x1
   353                           
   354                           
   355                           ; 1 bytes @ 0x1
   356  0076                     	ds	1
   357  0077                     ??_ISR:	
   358                           
   359                           ; 0 bytes @ 0x2
   360  0077                     	ds	2
   361  0079                     ISR@tmp_1138:	
   362                           
   363                           ; 1 bytes @ 0x4
   364  0079                     	ds	1
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:	
   368  0020                     ??_READ_EEPROM:	
   369  0020                     ?_WRITE_EEPROM:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0020                     ??_sys_init:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0020                     ??_gpio_init:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0020                     ??_timer_init:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0020                     ??_int_init:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_swI2C_Init:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ?_delay_x10ms:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ??_beepOff:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_beepOn:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ?_setState:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_swI2C_Start:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ??_swI2C_Stop:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ??_swI2C_WriteByte:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ??_swI2C_ReadByte:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0020                     ?_compe:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0020                     ?___awdiv:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0020                     READ_EEPROM@EEAddr:	
   418                           ; 2 bytes @ 0x0
   419                           
   420  0020                     WRITE_EEPROM@EEData:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0020                     compe@b:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0020                     delay_x10ms@t:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0020                     setState@_tOut:	
   430                           ; 2 bytes @ 0x0
   431                           
   432  0020                     ___awdiv@divisor:	
   433                           ; 2 bytes @ 0x0
   434                           
   435                           
   436                           ; 2 bytes @ 0x0
   437  0020                     	ds	1
   438  0021                     ??_WRITE_EEPROM:	
   439  0021                     READ_EEPROM@ReEepromData:	
   440                           ; 0 bytes @ 0x1
   441                           
   442  0021                     WRITE_EEPROM@EEAddr:	
   443                           ; 1 bytes @ 0x1
   444                           
   445  0021                     compe@dt:	
   446                           ; 1 bytes @ 0x1
   447                           
   448  0021                     swI2C_WriteByte@dat:	
   449                           ; 1 bytes @ 0x1
   450                           
   451  0021                     swI2C_ReadByte@Ack:	
   452                           ; 1 bytes @ 0x1
   453                           
   454                           
   455                           ; 1 bytes @ 0x1
   456  0021                     	ds	1
   457  0022                     ??_delay_x10ms:	
   458  0022                     ??_setState:	
   459                           ; 0 bytes @ 0x2
   460                           
   461  0022                     ??_compe:	
   462                           ; 0 bytes @ 0x2
   463                           
   464  0022                     setState@stt:	
   465                           ; 0 bytes @ 0x2
   466                           
   467  0022                     swI2C_WriteByte@i:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0022                     swI2C_ReadByte@dat:	
   471                           ; 1 bytes @ 0x2
   472                           
   473  0022                     delay_x10ms@set:	
   474                           ; 1 bytes @ 0x2
   475                           
   476  0022                     ___awdiv@dividend:	
   477                           ; 2 bytes @ 0x2
   478                           
   479                           
   480                           ; 2 bytes @ 0x2
   481  0022                     	ds	1
   482  0023                     ?_AccWrite:	
   483  0023                     swI2C_ReadByte@i:	
   484                           ; 1 bytes @ 0x3
   485                           
   486  0023                     AccWrite@dat:	
   487                           ; 1 bytes @ 0x3
   488                           
   489                           
   490                           ; 2 bytes @ 0x3
   491  0023                     	ds	1
   492  0024                     ?_beep:	
   493  0024                     ??___awdiv:	
   494                           ; 0 bytes @ 0x4
   495                           
   496  0024                     ?_AccRead:	
   497                           ; 0 bytes @ 0x4
   498                           
   499  0024                     beep@rep:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  0024                     ___awdiv@counter:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0024                     AccRead@dat:	
   506                           ; 1 bytes @ 0x4
   507                           
   508                           
   509                           ; 2 bytes @ 0x4
   510  0024                     	ds	1
   511  0025                     ??_beep:	
   512  0025                     beep@delay:	
   513                           ; 0 bytes @ 0x5
   514                           
   515  0025                     AccWrite@len:	
   516                           ; 1 bytes @ 0x5
   517                           
   518  0025                     ___awdiv@sign:	
   519                           ; 1 bytes @ 0x5
   520                           
   521                           
   522                           ; 1 bytes @ 0x5
   523  0025                     	ds	1
   524  0026                     ??_AccWrite:	
   525  0026                     AccRead@len:	
   526                           ; 0 bytes @ 0x6
   527                           
   528  0026                     ___awdiv@quotient:	
   529                           ; 1 bytes @ 0x6
   530                           
   531                           
   532                           ; 2 bytes @ 0x6
   533  0026                     	ds	1
   534  0027                     ??_AccRead:	
   535  0027                     compe@a:	
   536                           ; 0 bytes @ 0x7
   537                           
   538                           
   539                           ; 1 bytes @ 0x7
   540  0027                     	ds	1
   541  0028                     AccWrite@rAdd:	
   542                           
   543                           ; 1 bytes @ 0x8
   544  0028                     	ds	1
   545  0029                     AccWrite@i:	
   546                           
   547                           ; 1 bytes @ 0x9
   548  0029                     	ds	1
   549  002A                     AccRead@rAdd:	
   550                           
   551                           ; 1 bytes @ 0xA
   552  002A                     	ds	1
   553  002B                     AccRead@i:	
   554                           
   555                           ; 1 bytes @ 0xB
   556  002B                     	ds	1
   557  002C                     ??_main:	
   558                           
   559                           ; 0 bytes @ 0xC
   560  002C                     	ds	3
   561  002F                     main@isWait:	
   562                           
   563                           ; 2 bytes @ 0xF
   564  002F                     	ds	2
   565  0031                     main@vibrateOn:	
   566                           
   567                           ; 1 bytes @ 0x11
   568  0031                     	ds	1
   569  0032                     main@isFall:	
   570                           
   571                           ; 1 bytes @ 0x12
   572  0032                     	ds	1
   573  0033                     main@acYOld:	
   574                           
   575                           ; 1 bytes @ 0x13
   576  0033                     	ds	1
   577  0034                     main@acXOld:	
   578                           
   579                           ; 1 bytes @ 0x14
   580  0034                     	ds	1
   581  0035                     main@mpuOk:	
   582                           
   583                           ; 1 bytes @ 0x15
   584  0035                     	ds	1
   585  0036                     main@acYsum:	
   586                           
   587                           ; 2 bytes @ 0x16
   588  0036                     	ds	2
   589  0038                     main@acXsum:	
   590                           
   591                           ; 2 bytes @ 0x18
   592  0038                     	ds	2
   593  003A                     main@buf:	
   594                           
   595                           ; 6 bytes @ 0x1A
   596  003A                     	ds	6
   597  0040                     main@reAlertOn:	
   598                           
   599                           ; 1 bytes @ 0x20
   600  0040                     	ds	1
   601  0041                     main@isSw:	
   602                           
   603                           ; 1 bytes @ 0x21
   604  0041                     	ds	1
   605  0042                     main@tmp16:	
   606                           
   607                           ; 2 bytes @ 0x22
   608  0042                     	ds	2
   609  0044                     main@tmp8:	
   610                           
   611                           ; 1 bytes @ 0x24
   612  0044                     	ds	1
   613                           
   614                           	psect	maintext
   615  000B                     __pmaintext:	
   616 ;;Data sizes: Strings 0, constant 0, data 0, bss 13, persistent 0 stack 0
   617 ;;Auto spaces:   Size  Autos    Used
   618 ;; COMMON          14      5      10
   619 ;; BANK0           80     37      45
   620 ;; BANK1           32      0       0
   621 ;;
   622 ;; Pointer list with targets:
   623 ;; ?___awdiv	int  size(1) Largest target is 0
   624 ;;
   625 ;; AccRead@dat	PTR unsigned char  size(2) Largest target is 256
   626 ;;		 -> RAM(DATA[256]), main@buf(BANK0[6]), 
   627 ;;
   628 ;; AccWrite@dat	PTR unsigned char  size(2) Largest target is 256
   629 ;;		 -> RAM(DATA[256]), 
   630 ;;
   631 ;;
   632 ;; Critical Paths under _main in COMMON
   633 ;;
   634 ;;   None.
   635 ;;
   636 ;; Critical Paths under _ISR in COMMON
   637 ;;
   638 ;;   _ISR->i1_READ_EEPROM
   639 ;;   _ISR->i1_WRITE_EEPROM
   640 ;;
   641 ;; Critical Paths under _main in BANK0
   642 ;;
   643 ;;   _main->_AccRead
   644 ;;   _AccRead->_swI2C_ReadByte
   645 ;;   _AccWrite->_swI2C_WriteByte
   646 ;;   _beep->_delay_x10ms
   647 ;;
   648 ;; Critical Paths under _ISR in BANK0
   649 ;;
   650 ;;   None.
   651 ;;
   652 ;; Critical Paths under _main in BANK1
   653 ;;
   654 ;;   None.
   655 ;;
   656 ;; Critical Paths under _ISR in BANK1
   657 ;;
   658 ;;   None.
   659 ;;
   660 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   661 ;;
   662 ;;
   663 ;;Call Graph Tables:
   664 ;;
   665 ;; ---------------------------------------------------------------------------------
   666 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   667 ;; ---------------------------------------------------------------------------------
   668 ;; (0) _main                                                26    26      0    4071
   669 ;;                                             12 BANK0     25    25      0
   670 ;;                           _sys_init
   671 ;;                          _gpio_init
   672 ;;                         _timer_init
   673 ;;                           _int_init
   674 ;;                         _swI2C_Init
   675 ;;                           _setState
   676 ;;                       _WRITE_EEPROM
   677 ;;                        _READ_EEPROM
   678 ;;                             _beepOn
   679 ;;                               _beep
   680 ;;                           _AccWrite
   681 ;;                            _AccRead
   682 ;;                            ___awdiv
   683 ;;                            _beepOff
   684 ;;                        _delay_x10ms
   685 ;;                              _compe
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (1) _AccRead                                              8     5      3     532
   688 ;;                                              4 BANK0      8     5      3
   689 ;;                        _swI2C_Start
   690 ;;                    _swI2C_WriteByte
   691 ;;                     _swI2C_ReadByte
   692 ;;                         _swI2C_Stop
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (1) _AccWrite                                             7     4      3     300
   695 ;;                                              3 BANK0      7     4      3
   696 ;;                        _swI2C_Start
   697 ;;                    _swI2C_WriteByte
   698 ;;                         _swI2C_Stop
   699 ;; ---------------------------------------------------------------------------------
   700 ;; (2) _swI2C_ReadByte                                       4     4      0     170
   701 ;;                                              0 BANK0      4     4      0
   702 ;; ---------------------------------------------------------------------------------
   703 ;; (2) _swI2C_WriteByte                                      3     3      0     139
   704 ;;                                              0 BANK0      3     3      0
   705 ;; ---------------------------------------------------------------------------------
   706 ;; (2) _swI2C_Stop                                           1     1      0       0
   707 ;;                                              0 BANK0      1     1      0
   708 ;; ---------------------------------------------------------------------------------
   709 ;; (2) _swI2C_Start                                          1     1      0       0
   710 ;;                                              0 BANK0      1     1      0
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (1) _swI2C_Init                                           1     1      0       0
   713 ;;                                              0 BANK0      1     1      0
   714 ;; ---------------------------------------------------------------------------------
   715 ;; (1) _sys_init                                             0     0      0       0
   716 ;; ---------------------------------------------------------------------------------
   717 ;; (1) _beep                                                 2     1      1     130
   718 ;;                                              4 BANK0      2     1      1
   719 ;;                        _delay_x10ms
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (1) ___awdiv                                              8     4      4     445
   722 ;;                                              0 BANK0      8     4      4
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (1) _int_init                                             1     1      0       0
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (1) _timer_init                                           0     0      0       0
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (1) _gpio_init                                            0     0      0       0
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (1) _compe                                                8     6      2     372
   731 ;;                                              0 BANK0      8     6      2
   732 ;; ---------------------------------------------------------------------------------
   733 ;; (1) _setState                                             3     1      2      62
   734 ;;                                              0 BANK0      3     1      2
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (1) _beepOn                                               0     0      0       0
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (1) _beepOff                                              0     0      0       0
   739 ;; ---------------------------------------------------------------------------------
   740 ;; (1) _delay_x10ms                                          4     2      2      68
   741 ;;                                              0 BANK0      4     2      2
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (1) _WRITE_EEPROM                                         2     1      1      62
   744 ;;                                              0 BANK0      2     1      1
   745 ;; ---------------------------------------------------------------------------------
   746 ;; (1) _READ_EEPROM                                          2     2      0      65
   747 ;;                                              0 BANK0      2     2      0
   748 ;; ---------------------------------------------------------------------------------
   749 ;; Estimated maximum stack depth 2
   750 ;; ---------------------------------------------------------------------------------
   751 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   752 ;; ---------------------------------------------------------------------------------
   753 ;; (3) _ISR                                                  4     4      0     317
   754 ;;                                              2 COMMON     3     3      0
   755 ;;                      i1_READ_EEPROM
   756 ;;                     i1_WRITE_EEPROM
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (4) i1_WRITE_EEPROM                                       2     1      1     146
   759 ;;                                              0 COMMON     2     1      1
   760 ;; ---------------------------------------------------------------------------------
   761 ;; (4) i1_READ_EEPROM                                        2     2      0     148
   762 ;;                                              0 COMMON     2     2      0
   763 ;; ---------------------------------------------------------------------------------
   764 ;; Estimated maximum stack depth 4
   765 ;; ---------------------------------------------------------------------------------
   766 ;; Call Graph Graphs:
   767 ;; _main (ROOT)
   768 ;;   _sys_init
   769 ;;   _gpio_init
   770 ;;   _timer_init
   771 ;;   _int_init
   772 ;;   _swI2C_Init
   773 ;;   _setState
   774 ;;   _WRITE_EEPROM
   775 ;;   _READ_EEPROM
   776 ;;   _beepOn
   777 ;;   _beep
   778 ;;     _delay_x10ms
   779 ;;   _AccWrite
   780 ;;     _swI2C_Start
   781 ;;     _swI2C_WriteByte
   782 ;;     _swI2C_Stop
   783 ;;   _AccRead
   784 ;;     _swI2C_Start
   785 ;;     _swI2C_WriteByte
   786 ;;     _swI2C_ReadByte
   787 ;;     _swI2C_Stop
   788 ;;   ___awdiv
   789 ;;   _beepOff
   790 ;;   _delay_x10ms
   791 ;;   _compe
   792 ;;
   793 ;; _ISR (ROOT)
   794 ;;   i1_READ_EEPROM
   795 ;;   i1_WRITE_EEPROM
   796 ;;
   797 ;; Address spaces:
   798 ;;Name               Size   Autos  Total    Cost      Usage
   799 ;;BITCOMMON            E      0       0       0        0.0%
   800 ;;EEDATA             100      0       0       0        0.0%
   801 ;;NULL                 0      0       0       0        0.0%
   802 ;;CODE                 0      0       0       0        0.0%
   803 ;;COMMON               E      5       A       1       71.4%
   804 ;;BITSFR0              0      0       0       1        0.0%
   805 ;;SFR0                 0      0       0       1        0.0%
   806 ;;BITSFR1              0      0       0       2        0.0%
   807 ;;SFR1                 0      0       0       2        0.0%
   808 ;;STACK                0      0       6       2        0.0%
   809 ;;BITBANK0            50      0       0       3        0.0%
   810 ;;BANK0               50     25      2D       4       56.3%
   811 ;;BANK1               20      0       0       5        0.0%
   812 ;;ABS                  0      0      37       6        0.0%
   813 ;;BITBANK1            20      0       0       7        0.0%
   814 ;;DATA                 0      0      3D       8        0.0%
   815                           
   816                           
   817 ;; *************** function _main *****************
   818 ;; Defined at:
   819 ;;		line 243 in file "smartkey.C"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  buf             6   26[BANK0 ] char [6]
   824 ;;  tmp16           2   34[BANK0 ] unsigned int 
   825 ;;  acXsum          2   24[BANK0 ] int 
   826 ;;  acYsum          2   22[BANK0 ] int 
   827 ;;  isWait          2   15[BANK0 ] unsigned int 
   828 ;;  tmp8            1   36[BANK0 ] unsigned char 
   829 ;;  isSw            1   33[BANK0 ] unsigned char 
   830 ;;  reAlertOn       1   32[BANK0 ] unsigned char 
   831 ;;  mpuOk           1   21[BANK0 ] unsigned char 
   832 ;;  acXOld          1   20[BANK0 ] char 
   833 ;;  acYOld          1   19[BANK0 ] char 
   834 ;;  isFall          1   18[BANK0 ] unsigned char 
   835 ;;  vibrateOn       1   17[BANK0 ] unsigned char 
   836 ;;  accSet          1    0        unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;		None               void
   839 ;; Registers used:
   840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   841 ;; Tracked objects:
   842 ;;		On entry : 17F/0
   843 ;;		On exit  : 20/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1
   846 ;;      Params:         0       0       0
   847 ;;      Locals:         0      22       0
   848 ;;      Temps:          0       3       0
   849 ;;      Totals:         0      25       0
   850 ;;Total ram usage:       25 bytes
   851 ;; Hardware stack levels required when called:    4
   852 ;; This function calls:
   853 ;;		_sys_init
   854 ;;		_gpio_init
   855 ;;		_timer_init
   856 ;;		_int_init
   857 ;;		_swI2C_Init
   858 ;;		_setState
   859 ;;		_WRITE_EEPROM
   860 ;;		_READ_EEPROM
   861 ;;		_beepOn
   862 ;;		_beep
   863 ;;		_AccWrite
   864 ;;		_AccRead
   865 ;;		___awdiv
   866 ;;		_beepOff
   867 ;;		_delay_x10ms
   868 ;;		_compe
   869 ;; This function is called by:
   870 ;;		Startup code after reset
   871 ;; This function uses a non-reentrant model
   872 ;;
   873  000B                     _main:	
   874                           
   875                           ;smartkey.C: 251: unsigned char reAlertOn=0,tmp8,isSw=0,isFall=0,mpuOk=0,vibrateOn=0,acc
      +                          Set=0;
   876                           
   877                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   878  000B  01C0               	clrf	main@reAlertOn
   879  000C  01C1               	clrf	main@isSw
   880  000D  01B2               	clrf	main@isFall
   881  000E  01B1               	clrf	main@vibrateOn
   882                           
   883                           ;smartkey.C: 252: unsigned int isWait =0;
   884  000F  01AF               	clrf	main@isWait
   885  0010  01B0               	clrf	main@isWait+1
   886                           
   887                           ;smartkey.C: 253: signed int acYsum=0,acXsum=0;
   888  0011  01B6               	clrf	main@acYsum
   889  0012  01B7               	clrf	main@acYsum+1
   890  0013  01B8               	clrf	main@acXsum
   891  0014  01B9               	clrf	main@acXsum+1
   892                           
   893                           ;smartkey.C: 254: unsigned int tmp16=0;
   894  0015  01C2               	clrf	main@tmp16
   895  0016  01C3               	clrf	main@tmp16+1
   896  0017  0064               	clrwdt	;#
   897                           
   898                           ;smartkey.C: 260: sys_init();
   899  0018  26CE               	fcall	_sys_init
   900                           
   901                           ;smartkey.C: 261: gpio_init();
   902  0019  264D               	fcall	_gpio_init
   903                           
   904                           ;smartkey.C: 262: timer_init();
   905  001A  2689               	fcall	_timer_init
   906                           
   907                           ;smartkey.C: 263: int_init();
   908  001B  25E9               	fcall	_int_init
   909                           
   910                           ;smartkey.C: 266: _delay((unsigned long)((100)*(4000000/4000.0)));
   911  001C  3082               	movlw	130
   912  001D  00AD               	movwf	??_main+1
   913  001E  30DD               	movlw	221
   914  001F  00AC               	movwf	??_main
   915  0020                     u3477:	
   916  0020  0BAC               	decfsz	??_main,f
   917  0021  2820               	goto	u3477
   918  0022  0BAD               	decfsz	??_main+1,f
   919  0023  2820               	goto	u3477
   920  0024  2825               	nop2
   921                           
   922                           ;smartkey.C: 270: PAIE = 1;
   923  0025  158B               	bsf	11,3
   924                           
   925                           ;smartkey.C: 272: RegStatus = 0;
   926  0026  1283               	bcf	3,5	;RP0=0, select bank0
   927  0027  01C9               	clrf	_RegStatus
   928                           
   929                           ;smartkey.C: 274: swI2C_Init();
   930  0028  25CA               	fcall	_swI2C_Init
   931  0029  3000               	movlw	0
   932                           
   933                           ;smartkey.C: 277: setState(0,0);
   934  002A  1283               	bcf	3,5	;RP0=0, select bank0
   935  002B  01A0               	clrf	?_setState
   936  002C  01A1               	clrf	?_setState+1
   937  002D  26C2               	fcall	_setState
   938                           
   939                           ;smartkey.C: 279: WRITE_EEPROM(0xFF,0xAA);
   940  002E  30AA               	movlw	170
   941  002F  00A0               	movwf	?_WRITE_EEPROM
   942  0030  30FF               	movlw	255
   943  0031  2604               	fcall	_WRITE_EEPROM
   944                           
   945                           ;smartkey.C: 280: WRITE_EEPROM(0xFF,0xAA);
   946  0032  30AA               	movlw	170
   947  0033  1283               	bcf	3,5	;RP0=0, select bank0
   948  0034  00A0               	movwf	?_WRITE_EEPROM
   949  0035  30FF               	movlw	255
   950  0036  2604               	fcall	_WRITE_EEPROM
   951                           
   952                           ;smartkey.C: 283: _delay((unsigned long)((200)*(4000000/4000.0)));
   953  0037  3002               	movlw	2
   954  0038  1283               	bcf	3,5	;RP0=0, select bank0
   955  0039  00AE               	movwf	??_main+2
   956  003A  3004               	movlw	4
   957  003B  00AD               	movwf	??_main+1
   958  003C  30BA               	movlw	186
   959  003D  00AC               	movwf	??_main
   960  003E                     u3487:	
   961  003E  0BAC               	decfsz	??_main,f
   962  003F  283E               	goto	u3487
   963  0040  0BAD               	decfsz	??_main+1,f
   964  0041  283E               	goto	u3487
   965  0042  0BAE               	decfsz	??_main+2,f
   966  0043  283E               	goto	u3487
   967  0044  0064               	clrwdt
   968                           
   969                           ;smartkey.C: 285: tmp8= READ_EEPROM(0x08);
   970  0045  3008               	movlw	8
   971  0046  26B5               	fcall	_READ_EEPROM
   972  0047  00C4               	movwf	main@tmp8
   973                           
   974                           ;smartkey.C: 286: if(tmp8==0xff) {WRITE_EEPROM(0x08,0);_delay((unsigned long)((2)*(40000
      +                          00/4000.0)));}
   975  0048  3AFF               	xorlw	255
   976  0049  1D03               	skipz
   977  004A  2858               	goto	l6697
   978  004B  3008               	movlw	8
   979  004C  01A0               	clrf	?_WRITE_EEPROM
   980  004D  2604               	fcall	_WRITE_EEPROM
   981  004E  3003               	movlw	3
   982  004F  1283               	bcf	3,5	;RP0=0, select bank0
   983  0050  00AD               	movwf	??_main+1
   984  0051  3097               	movlw	151
   985  0052  00AC               	movwf	??_main
   986  0053                     u3497:	
   987  0053  0BAC               	decfsz	??_main,f
   988  0054  2853               	goto	u3497
   989  0055  0BAD               	decfsz	??_main+1,f
   990  0056  2853               	goto	u3497
   991  0057  2858               	nop2
   992  0058                     l6697:	
   993                           
   994                           ;smartkey.C: 288: if(tmp8==0xcc){
   995  0058  1283               	bcf	3,5	;RP0=0, select bank0
   996  0059  0844               	movf	main@tmp8,w
   997  005A  3ACC               	xorlw	204
   998  005B  1D03               	skipz
   999  005C  2873               	goto	l6711
  1000  005D  3008               	movlw	8
  1001                           
  1002                           ;smartkey.C: 289: RegStatus &=~(0x20);
  1003  005E  12C9               	bcf	_RegStatus,5
  1004                           
  1005                           ;smartkey.C: 290: setState(3,1800);
  1006  005F  00A0               	movwf	?_setState
  1007  0060  3007               	movlw	7
  1008  0061  00A1               	movwf	?_setState+1
  1009  0062  3003               	movlw	3
  1010  0063  26C2               	fcall	_setState
  1011                           
  1012                           ;smartkey.C: 291: mtOldState = 1;
  1013  0064  01CC               	clrf	_mtOldState
  1014  0065  0ACC               	incf	_mtOldState,f
  1015                           
  1016                           ;smartkey.C: 292: cntTmp = timeTick+50;
  1017  0066  0871               	movf	_timeTick+1,w
  1018  0067  00C6               	movwf	_cntTmp+1
  1019  0068  0870               	movf	_timeTick,w
  1020  0069  00C5               	movwf	_cntTmp
  1021  006A  3032               	movlw	50
  1022  006B  07C5               	addwf	_cntTmp,f
  1023  006C  1803               	skipnc
  1024  006D  0AC6               	incf	_cntTmp+1,f
  1025                           
  1026                           ;smartkey.C: 293: PR2L =12;
  1027  006E  300C               	movlw	12
  1028  006F  1683               	bsf	3,5	;RP0=1, select bank1
  1029  0070  0091               	movwf	17	;volatile
  1030                           
  1031                           ;smartkey.C: 294: beepOn();
  1032  0071  26E3               	fcall	_beepOn
  1033                           
  1034                           ;smartkey.C: 295: } else {
  1035  0072  287A               	goto	l6715
  1036  0073                     l6711:	
  1037                           
  1038                           ;smartkey.C: 296: setState(2,400);
  1039  0073  3090               	movlw	144
  1040  0074  00A0               	movwf	?_setState
  1041  0075  3001               	movlw	1
  1042  0076  00A1               	movwf	?_setState+1
  1043  0077  3002               	movlw	2
  1044  0078  26C2               	fcall	_setState
  1045                           
  1046                           ;smartkey.C: 298: mtOldState = 0;
  1047  0079  01CC               	clrf	_mtOldState
  1048  007A                     l6715:	
  1049                           
  1050                           ;smartkey.C: 300: }
  1051                           ;smartkey.C: 303: tmp8 = READ_EEPROM(0x40);
  1052  007A  3040               	movlw	64
  1053  007B  26B5               	fcall	_READ_EEPROM
  1054  007C  00C4               	movwf	main@tmp8
  1055                           
  1056                           ;smartkey.C: 304: if(tmp8==8){
  1057  007D  3A08               	xorlw	8
  1058  007E  1D03               	skipz
  1059  007F  28A4               	goto	l6735
  1060                           
  1061                           ;smartkey.C: 305: tmp8= READ_EEPROM(0x41);
  1062  0080  3041               	movlw	65
  1063  0081  26B5               	fcall	_READ_EEPROM
  1064  0082  00C4               	movwf	main@tmp8
  1065  0083  301E               	movlw	30
  1066                           
  1067                           ;smartkey.C: 306: beep(30,1);
  1068  0084  01A4               	clrf	?_beep
  1069  0085  0AA4               	incf	?_beep,f
  1070  0086  2637               	fcall	_beep
  1071                           
  1072                           ;smartkey.C: 307: if((tmp8==1)||(tmp8==0xff)){
  1073  0087  0344               	decf	main@tmp8,w
  1074  0088  1903               	skipnz
  1075  0089  288E               	goto	l6727
  1076  008A  0844               	movf	main@tmp8,w
  1077  008B  3AFF               	xorlw	255
  1078  008C  1D03               	skipz
  1079  008D  2891               	goto	l6729
  1080  008E                     l6727:	
  1081  008E  3041               	movlw	65
  1082                           
  1083                           ;smartkey.C: 308: WRITE_EEPROM(0x41,0);
  1084  008F  01A0               	clrf	?_WRITE_EEPROM
  1085  0090  2894               	goto	L1
  1086  0091                     l6729:	
  1087                           ;smartkey.C: 309: }
  1088                           
  1089  0091  3041               	movlw	65
  1090                           
  1091                           ;smartkey.C: 310: else {
  1092                           ;smartkey.C: 311: WRITE_EEPROM(0x41,0x1);
  1093  0092  01A0               	clrf	?_WRITE_EEPROM
  1094  0093  0AA0               	incf	?_WRITE_EEPROM,f
  1095  0094                     L1:	
  1096  0094  2604               	fcall	_WRITE_EEPROM
  1097  0095  3040               	movlw	64
  1098                           
  1099                           ;smartkey.C: 313: }
  1100                           ;smartkey.C: 314: WRITE_EEPROM(0x40,0);
  1101  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0097  01A0               	clrf	?_WRITE_EEPROM
  1103  0098  2604               	fcall	_WRITE_EEPROM
  1104                           
  1105                           ;smartkey.C: 316: _delay((unsigned long)((100)*(4000000/4000.0)));
  1106  0099  3082               	movlw	130
  1107  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1108  009B  00AD               	movwf	??_main+1
  1109  009C  30DD               	movlw	221
  1110  009D  00AC               	movwf	??_main
  1111  009E                     u3507:	
  1112  009E  0BAC               	decfsz	??_main,f
  1113  009F  289E               	goto	u3507
  1114  00A0  0BAD               	decfsz	??_main+1,f
  1115  00A1  289E               	goto	u3507
  1116  00A2  28A3               	nop2
  1117                           
  1118                           ;smartkey.C: 317: } else if(tmp8==0xff) WRITE_EEPROM(0x40,0);
  1119  00A3  28AB               	goto	l6739
  1120  00A4                     l6735:	
  1121  00A4  0844               	movf	main@tmp8,w
  1122  00A5  3AFF               	xorlw	255
  1123  00A6  1D03               	skipz
  1124  00A7  28AB               	goto	l6739
  1125  00A8  3040               	movlw	64
  1126  00A9  01A0               	clrf	?_WRITE_EEPROM
  1127  00AA  2604               	fcall	_WRITE_EEPROM
  1128  00AB                     l6739:	
  1129                           
  1130                           ;smartkey.C: 320: tmp8 = READ_EEPROM(0x41);
  1131  00AB  3041               	movlw	65
  1132  00AC  26B5               	fcall	_READ_EEPROM
  1133  00AD  00C4               	movwf	main@tmp8
  1134                           
  1135                           ;smartkey.C: 321: if(tmp8==1){
  1136  00AE  0344               	decf	main@tmp8,w
  1137  00AF  1D03               	skipz
  1138  00B0  28CD               	goto	l6749
  1139                           
  1140                           ;smartkey.C: 322: RC0 =1;RC1 =1;
  1141  00B1  1407               	bsf	7,0
  1142  00B2  1487               	bsf	7,1
  1143  00B3                     l6745:	
  1144                           
  1145                           ;smartkey.C: 324: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1146  00B3  3006               	movlw	6
  1147  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1148  00B5  00AE               	movwf	??_main+2
  1149  00B6  3013               	movlw	19
  1150  00B7  00AD               	movwf	??_main+1
  1151  00B8  30B1               	movlw	177
  1152  00B9  00AC               	movwf	??_main
  1153  00BA                     u3517:	
  1154  00BA  0BAC               	decfsz	??_main,f
  1155  00BB  28BA               	goto	u3517
  1156  00BC  0BAD               	decfsz	??_main+1,f
  1157  00BD  28BA               	goto	u3517
  1158  00BE  0BAE               	decfsz	??_main+2,f
  1159  00BF  28BA               	goto	u3517
  1160  00C0  28C1               	nop2
  1161                           
  1162                           ;smartkey.C: 325: if(timeTick >300) WRITE_EEPROM(0x40,0);
  1163  00C1  3001               	movlw	1
  1164  00C2  0271               	subwf	_timeTick+1,w
  1165  00C3  302D               	movlw	45
  1166  00C4  1903               	skipnz
  1167  00C5  0270               	subwf	_timeTick,w
  1168  00C6  1C03               	skipc
  1169  00C7  28B3               	goto	l6745
  1170  00C8  3040               	movlw	64
  1171  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1172  00CA  01A0               	clrf	?_WRITE_EEPROM
  1173  00CB  2604               	fcall	_WRITE_EEPROM
  1174  00CC  28B3               	goto	l6745
  1175  00CD                     l6749:	
  1176                           
  1177                           ;smartkey.C: 326: }
  1178                           ;smartkey.C: 327: }
  1179                           ;smartkey.C: 330: buf[0] = 0x08;
  1180  00CD  3008               	movlw	8
  1181  00CE  00BA               	movwf	main@buf
  1182                           
  1183                           ;smartkey.C: 331: buf[1] = 0x4d;
  1184  00CF  304D               	movlw	77
  1185  00D0  00BB               	movwf	main@buf+1
  1186                           
  1187                           ;smartkey.C: 333: if(AccWrite(0x10,(unsigned char)buf,2)==0) {
  1188  00D1  303A               	movlw	main@buf& (0+255)
  1189  00D2  00AC               	movwf	??_main
  1190  00D3  01AD               	clrf	??_main+1
  1191  00D4  00A3               	movwf	?_AccWrite
  1192  00D5  082D               	movf	??_main+1,w
  1193  00D6  00A4               	movwf	?_AccWrite+1
  1194  00D7  3002               	movlw	2
  1195  00D8  00A5               	movwf	?_AccWrite+2
  1196  00D9  3010               	movlw	16
  1197  00DA  25A2               	fcall	_AccWrite
  1198  00DB  3800               	iorlw	0
  1199                           
  1200                           ;smartkey.C: 334: mpuOk =1;
  1201  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1202  00DD  1D03               	skipz
  1203  00DE  28E2               	goto	L8
  1204  00DF  01B5               	clrf	main@mpuOk
  1205  00E0  0AB5               	incf	main@mpuOk,f
  1206                           
  1207                           ;smartkey.C: 335: }
  1208  00E1  28E7               	goto	l6759
  1209  00E2                     L8:	
  1210                           ;smartkey.C: 336: else {
  1211                           ;smartkey.C: 337: mpuOk =0;
  1212                           
  1213  00E2  3002               	movlw	2
  1214  00E3  01B5               	clrf	main@mpuOk
  1215                           
  1216                           ;smartkey.C: 338: beep(10,2);
  1217  00E4  00A4               	movwf	?_beep
  1218  00E5  300A               	movlw	10
  1219  00E6  2637               	fcall	_beep
  1220  00E7                     l6759:	
  1221                           
  1222                           ;smartkey.C: 339: }
  1223                           ;smartkey.C: 345: tmp8= READ_EEPROM(0x40);
  1224  00E7  3040               	movlw	64
  1225  00E8  26B5               	fcall	_READ_EEPROM
  1226  00E9  00C4               	movwf	main@tmp8
  1227                           
  1228                           ;smartkey.C: 346: if(tmp8==6 && mpuOk ==1)
  1229  00EA  3A06               	xorlw	6
  1230  00EB  1D03               	skipz
  1231  00EC  299A               	goto	l6799
  1232  00ED  0B35               	decfsz	main@mpuOk,w
  1233  00EE  299A               	goto	l6799
  1234  00EF  3003               	movlw	3
  1235                           
  1236                           ;smartkey.C: 347: {
  1237                           ;smartkey.C: 348: tmp8=0; beep(10,3);
  1238  00F0  01C4               	clrf	main@tmp8
  1239  00F1  00A4               	movwf	?_beep
  1240  00F2  300A               	movlw	10
  1241  00F3  2637               	fcall	_beep
  1242                           
  1243                           ;smartkey.C: 349: while((RA2 )&&(tmp8<11))
  1244  00F4  2930               	goto	l6777
  1245  00F5                     l6769:	
  1246                           
  1247                           ;smartkey.C: 350: {
  1248                           ;smartkey.C: 351: if(AccRead(0x02,(unsigned char)buf,6)==0){
  1249  00F5  303A               	movlw	main@buf& (0+255)
  1250  00F6  00AC               	movwf	??_main
  1251  00F7  01AD               	clrf	??_main+1
  1252  00F8  00A4               	movwf	?_AccRead
  1253  00F9  082D               	movf	??_main+1,w
  1254  00FA  00A5               	movwf	?_AccRead+1
  1255  00FB  3006               	movlw	6
  1256  00FC  00A6               	movwf	?_AccRead+2
  1257  00FD  3002               	movlw	2
  1258  00FE  2567               	fcall	_AccRead
  1259  00FF  3800               	iorlw	0
  1260  0100  1D03               	skipz
  1261  0101  2922               	goto	l6775
  1262                           
  1263                           ;smartkey.C: 353: acXsum += buf[1];
  1264  0102  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0103  083B               	movf	main@buf+1,w
  1266  0104  00AC               	movwf	??_main
  1267  0105  01AD               	clrf	??_main+1
  1268  0106  1BAC               	btfsc	??_main,7
  1269  0107  03AD               	decf	??_main+1,f
  1270  0108  07B8               	addwf	main@acXsum,f
  1271  0109  1803               	skipnc
  1272  010A  0AB9               	incf	main@acXsum+1,f
  1273  010B  082D               	movf	??_main+1,w
  1274  010C  07B9               	addwf	main@acXsum+1,f
  1275                           
  1276                           ;smartkey.C: 354: acYsum += buf[3];
  1277  010D  083D               	movf	main@buf+3,w
  1278  010E  00AC               	movwf	??_main
  1279  010F  01AD               	clrf	??_main+1
  1280  0110  1BAC               	btfsc	??_main,7
  1281  0111  03AD               	decf	??_main+1,f
  1282  0112  07B6               	addwf	main@acYsum,f
  1283  0113  1803               	skipnc
  1284  0114  0AB7               	incf	main@acYsum+1,f
  1285  0115  082D               	movf	??_main+1,w
  1286  0116  07B7               	addwf	main@acYsum+1,f
  1287                           
  1288                           ;smartkey.C: 355: tmp16 = (signed int)tmp16 + buf[5];
  1289  0117  083F               	movf	main@buf+5,w
  1290  0118  00AC               	movwf	??_main
  1291  0119  01AD               	clrf	??_main+1
  1292  011A  1BAC               	btfsc	??_main,7
  1293  011B  03AD               	decf	??_main+1,f
  1294  011C  07C2               	addwf	main@tmp16,f
  1295  011D  1803               	skipnc
  1296  011E  0AC3               	incf	main@tmp16+1,f
  1297  011F  082D               	movf	??_main+1,w
  1298  0120  07C3               	addwf	main@tmp16+1,f
  1299                           
  1300                           ;smartkey.C: 356: tmp8++;
  1301  0121  0AC4               	incf	main@tmp8,f
  1302  0122                     l6775:	
  1303                           
  1304                           ;smartkey.C: 357: }
  1305                           ;smartkey.C: 358: _delay((unsigned long)((500)*(4000000/4000.0)));
  1306  0122  3003               	movlw	3
  1307  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0124  00AE               	movwf	??_main+2
  1309  0125  308A               	movlw	138
  1310  0126  00AD               	movwf	??_main+1
  1311  0127  3056               	movlw	86
  1312  0128  00AC               	movwf	??_main
  1313  0129                     u3527:	
  1314  0129  0BAC               	decfsz	??_main,f
  1315  012A  2929               	goto	u3527
  1316  012B  0BAD               	decfsz	??_main+1,f
  1317  012C  2929               	goto	u3527
  1318  012D  0BAE               	decfsz	??_main+2,f
  1319  012E  2929               	goto	u3527
  1320  012F  2930               	nop2
  1321  0130                     l6777:	
  1322  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0131  1D05               	btfss	5,2
  1324  0132  2937               	goto	l6781
  1325  0133  300B               	movlw	11
  1326  0134  0244               	subwf	main@tmp8,w
  1327  0135  1C03               	skipc
  1328  0136  28F5               	goto	l6769
  1329  0137                     l6781:	
  1330                           
  1331                           ;smartkey.C: 360: }
  1332                           ;smartkey.C: 362: if(tmp8==11){
  1333  0137  0844               	movf	main@tmp8,w
  1334  0138  3A0B               	xorlw	11
  1335  0139  1D03               	skipz
  1336  013A  2992               	goto	l6795
  1337                           
  1338                           ;smartkey.C: 363: acXsum =acXsum/10;
  1339  013B  300A               	movlw	10
  1340  013C  00A0               	movwf	?___awdiv
  1341  013D  01A1               	clrf	?___awdiv+1
  1342  013E  0839               	movf	main@acXsum+1,w
  1343  013F  00A3               	movwf	?___awdiv+3
  1344  0140  0838               	movf	main@acXsum,w
  1345  0141  00A2               	movwf	?___awdiv+2
  1346  0142  2461               	fcall	___awdiv
  1347  0143  0821               	movf	?___awdiv+1,w
  1348  0144  00B9               	movwf	main@acXsum+1
  1349  0145  0820               	movf	?___awdiv,w
  1350  0146  00B8               	movwf	main@acXsum
  1351                           
  1352                           ;smartkey.C: 364: acYsum = acYsum/10;
  1353  0147  300A               	movlw	10
  1354  0148  00A0               	movwf	?___awdiv
  1355  0149  01A1               	clrf	?___awdiv+1
  1356  014A  0837               	movf	main@acYsum+1,w
  1357  014B  00A3               	movwf	?___awdiv+3
  1358  014C  0836               	movf	main@acYsum,w
  1359  014D  00A2               	movwf	?___awdiv+2
  1360  014E  2461               	fcall	___awdiv
  1361  014F  0821               	movf	?___awdiv+1,w
  1362  0150  00B7               	movwf	main@acYsum+1
  1363  0151  0820               	movf	?___awdiv,w
  1364  0152  00B6               	movwf	main@acYsum
  1365                           
  1366                           ;smartkey.C: 365: tmp16 = (signed int)tmp16/10;
  1367  0153  300A               	movlw	10
  1368  0154  00A0               	movwf	?___awdiv
  1369  0155  01A1               	clrf	?___awdiv+1
  1370  0156  0843               	movf	main@tmp16+1,w
  1371  0157  00A3               	movwf	?___awdiv+3
  1372  0158  0842               	movf	main@tmp16,w
  1373  0159  00A2               	movwf	?___awdiv+2
  1374  015A  2461               	fcall	___awdiv
  1375  015B  0821               	movf	?___awdiv+1,w
  1376  015C  00C3               	movwf	main@tmp16+1
  1377  015D  0820               	movf	?___awdiv,w
  1378  015E  00C2               	movwf	main@tmp16
  1379                           
  1380                           ;smartkey.C: 367: if(((signed int)tmp16 > (-31)) && ((signed int)tmp16 < 31)){
  1381  015F  0843               	movf	main@tmp16+1,w
  1382  0160  3A80               	xorlw	128
  1383  0161  00FF               	movwf	127
  1384  0162  307F               	movlw	127
  1385  0163  027F               	subwf	127,w
  1386  0164  1D03               	skipz
  1387  0165  2968               	goto	u2975
  1388  0166  30E2               	movlw	226
  1389  0167  0242               	subwf	main@tmp16,w
  1390  0168                     u2975:	
  1391  0168  1C03               	skipc
  1392  0169  2979               	goto	l6791
  1393  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1394  016B  0843               	movf	main@tmp16+1,w
  1395  016C  3A80               	xorlw	128
  1396  016D  00FF               	movwf	127
  1397  016E  3080               	movlw	128
  1398  016F  027F               	subwf	127,w
  1399  0170  1D03               	skipz
  1400  0171  2974               	goto	u2985
  1401  0172  301F               	movlw	31
  1402  0173  0242               	subwf	main@tmp16,w
  1403  0174                     u2985:	
  1404  0174  1803               	skipnc
  1405  0175  2979               	goto	l6791
  1406                           
  1407                           ;smartkey.C: 368: beep(10,2);
  1408  0176  3002               	movlw	2
  1409  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0178  2993               	goto	L2
  1411  0179                     l6791:	
  1412                           ;smartkey.C: 369: }
  1413                           
  1414                           
  1415                           ;smartkey.C: 370: else
  1416                           ;smartkey.C: 372: {
  1417                           ;smartkey.C: 373: beep(10,3);
  1418  0179  3003               	movlw	3
  1419  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1420  017B  00A4               	movwf	?_beep
  1421  017C  300A               	movlw	10
  1422  017D  2637               	fcall	_beep
  1423                           
  1424                           ;smartkey.C: 374: WRITE_EEPROM(0x10,(unsigned char)acXsum);
  1425  017E  0838               	movf	main@acXsum,w
  1426  017F  00A0               	movwf	?_WRITE_EEPROM
  1427  0180  3010               	movlw	16
  1428  0181  2604               	fcall	_WRITE_EEPROM
  1429                           
  1430                           ;smartkey.C: 375: WRITE_EEPROM(0x11,(unsigned char)acYsum);
  1431  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0183  0836               	movf	main@acYsum,w
  1433  0184  00A0               	movwf	?_WRITE_EEPROM
  1434  0185  3011               	movlw	17
  1435  0186  2604               	fcall	_WRITE_EEPROM
  1436                           
  1437                           ;smartkey.C: 376: _delay((unsigned long)((100)*(4000000/4000.0)));
  1438  0187  3082               	movlw	130
  1439  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1440  0189  00AD               	movwf	??_main+1
  1441  018A  30DD               	movlw	221
  1442  018B  00AC               	movwf	??_main
  1443  018C                     u3537:	
  1444  018C  0BAC               	decfsz	??_main,f
  1445  018D  298C               	goto	u3537
  1446  018E  0BAD               	decfsz	??_main+1,f
  1447  018F  298C               	goto	u3537
  1448  0190  2991               	nop2
  1449  0191  2996               	goto	l925
  1450  0192                     l6795:	
  1451                           
  1452                           ;smartkey.C: 380: beep(10,2);
  1453  0192  3002               	movlw	2
  1454  0193                     L2:	
  1455  0193  00A4               	movwf	?_beep
  1456  0194  300A               	movlw	10
  1457  0195  2637               	fcall	_beep
  1458  0196                     l925:	
  1459  0196  3040               	movlw	64
  1460                           
  1461                           ;smartkey.C: 381: }
  1462                           ;smartkey.C: 382: WRITE_EEPROM(0x40,0);
  1463  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1464  0198  01A0               	clrf	?_WRITE_EEPROM
  1465  0199  2604               	fcall	_WRITE_EEPROM
  1466  019A                     l6799:	
  1467                           
  1468                           ;smartkey.C: 384: }
  1469                           ;smartkey.C: 386: acXsum = (signed char)READ_EEPROM(0x10);
  1470  019A  3010               	movlw	16
  1471  019B  26B5               	fcall	_READ_EEPROM
  1472  019C  00B8               	movwf	main@acXsum
  1473  019D  01B9               	clrf	main@acXsum+1
  1474  019E  1BB8               	btfsc	main@acXsum,7
  1475  019F  03B9               	decf	main@acXsum+1,f
  1476                           
  1477                           ;smartkey.C: 387: acYsum = (signed char)READ_EEPROM(0x11);
  1478  01A0  3011               	movlw	17
  1479  01A1  26B5               	fcall	_READ_EEPROM
  1480  01A2  00B6               	movwf	main@acYsum
  1481  01A3  01B7               	clrf	main@acYsum+1
  1482  01A4  1BB6               	btfsc	main@acYsum,7
  1483  01A5  03B7               	decf	main@acYsum+1,f
  1484                           
  1485                           ;smartkey.C: 389: timeTick = 0;
  1486  01A6  01F0               	clrf	_timeTick
  1487  01A7  01F1               	clrf	_timeTick+1
  1488  01A8                     l6805:	
  1489                           
  1490                           ;smartkey.C: 398: if(mode_chek == 0)
  1491  01A8  08F3               	movf	_mode_chek,f
  1492  01A9  1903               	btfsc	3,2
  1493                           
  1494                           ;smartkey.C: 399: {
  1495                           ;smartkey.C: 401: if(RegStatus & 0x80)
  1496  01AA  1FC9               	btfss	_RegStatus,7
  1497  01AB  2A79               	goto	l6913
  1498                           
  1499                           ;smartkey.C: 402: {
  1500                           ;smartkey.C: 403: PAIE = 0;
  1501  01AC  118B               	bcf	11,3
  1502                           
  1503                           ;smartkey.C: 406: RegStatus &= (~0x80);
  1504  01AD  13C9               	bcf	_RegStatus,7
  1505                           
  1506                           ;smartkey.C: 418: {
  1507                           ;smartkey.C: 420: if ((RegStatus & 0x40) !=0){
  1508  01AE  1B49               	btfsc	_RegStatus,6
  1509  01AF  2A2B               	goto	l6875
  1510  01B0  2A70               	goto	l6911
  1511  01B1                     l6813:	
  1512                           
  1513                           ;smartkey.C: 426: lostDetect =0;
  1514  01B1  01CB               	clrf	_lostDetect
  1515  01B2                     L4:	
  1516  01B2  3028               	movlw	40
  1517                           
  1518                           ;smartkey.C: 427: timeTick =0;
  1519  01B3  01F0               	clrf	_timeTick
  1520  01B4  01F1               	clrf	_timeTick+1
  1521                           
  1522                           ;smartkey.C: 428: tmp16 = 40;
  1523  01B5  00C2               	movwf	main@tmp16
  1524  01B6  01C3               	clrf	main@tmp16+1
  1525                           
  1526                           ;smartkey.C: 429: break;
  1527  01B7  2A78               	goto	l951
  1528  01B8                     l6817:	
  1529                           
  1530                           ;smartkey.C: 432: if(timeTick >30){
  1531  01B8  3000               	movlw	0
  1532  01B9  0271               	subwf	_timeTick+1,w
  1533  01BA  301F               	movlw	31
  1534  01BB  1903               	skipnz
  1535  01BC  0270               	subwf	_timeTick,w
  1536  01BD  1C03               	skipc
  1537  01BE  2A78               	goto	l951
  1538  01BF  3008               	movlw	8
  1539                           
  1540                           ;smartkey.C: 433: timeTick =0;
  1541  01C0  01F0               	clrf	_timeTick
  1542  01C1  01F1               	clrf	_timeTick+1
  1543                           
  1544                           ;smartkey.C: 435: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1545  01C2  26B5               	fcall	_READ_EEPROM
  1546  01C3  3ACC               	xorlw	204
  1547  01C4  1D03               	skipz
  1548  01C5  29C9               	goto	l6825
  1549  01C6  3008               	movlw	8
  1550  01C7  01A0               	clrf	?_WRITE_EEPROM
  1551  01C8  2604               	fcall	_WRITE_EEPROM
  1552  01C9                     l6825:	
  1553                           
  1554                           ;smartkey.C: 437: if((mtOldState == 3)){
  1555  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1556  01CA  084C               	movf	_mtOldState,w
  1557  01CB  3A03               	xorlw	3
  1558  01CC  1D03               	skipz
  1559  01CD  29DA               	goto	l6835
  1560                           
  1561                           ;smartkey.C: 438: beepOn();TMR2ON = 0; beep(10,1);
  1562  01CE  26E3               	fcall	_beepOn
  1563  01CF  300A               	movlw	10
  1564  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1565  01D1  1112               	bcf	18,2
  1566  01D2  01A4               	clrf	?_beep
  1567  01D3  0AA4               	incf	?_beep,f
  1568  01D4  2637               	fcall	_beep
  1569  01D5                     L3:	
  1570                           
  1571                           ;smartkey.C: 439: if(reAlertOn)reAlertOn =0;
  1572  01D5  0840               	movf	main@reAlertOn,w
  1573  01D6  1903               	btfsc	3,2
  1574  01D7  2A78               	goto	l951
  1575  01D8  01C0               	clrf	main@reAlertOn
  1576  01D9  2A78               	goto	l951
  1577  01DA                     l6835:	
  1578                           
  1579                           ;smartkey.C: 441: else if((mtOldState == 0)||(mtOldState == 4)){
  1580  01DA  084C               	movf	_mtOldState,w
  1581  01DB  1903               	btfsc	3,2
  1582  01DC  29E1               	goto	l941
  1583  01DD  084C               	movf	_mtOldState,w
  1584  01DE  3A04               	xorlw	4
  1585  01DF  1D03               	skipz
  1586  01E0  29FE               	goto	l6849
  1587  01E1                     l941:	
  1588  01E1  30AC               	movlw	172
  1589                           
  1590                           ;smartkey.C: 442: RegStatus |=(0x20);
  1591  01E2  16C9               	bsf	_RegStatus,5
  1592                           
  1593                           ;smartkey.C: 443: setState(1,3500);
  1594  01E3  00A0               	movwf	?_setState
  1595  01E4  300D               	movlw	13
  1596  01E5  00A1               	movwf	?_setState+1
  1597  01E6  3001               	movlw	1
  1598  01E7  26C2               	fcall	_setState
  1599                           
  1600                           ;smartkey.C: 444: if(READ_EEPROM(0x40))WRITE_EEPROM(0x40,0);
  1601  01E8  3040               	movlw	64
  1602  01E9  26B5               	fcall	_READ_EEPROM
  1603  01EA  3A00               	xorlw	0
  1604  01EB  1903               	skipnz
  1605  01EC  29F0               	goto	l6845
  1606  01ED  3040               	movlw	64
  1607  01EE  01A0               	clrf	?_WRITE_EEPROM
  1608  01EF  2604               	fcall	_WRITE_EEPROM
  1609  01F0                     l6845:	
  1610                           
  1611                           ;smartkey.C: 445: tmp16 = timeTick+40;
  1612  01F0  0871               	movf	_timeTick+1,w
  1613  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1614  01F2  00C3               	movwf	main@tmp16+1
  1615  01F3  0870               	movf	_timeTick,w
  1616  01F4  00C2               	movwf	main@tmp16
  1617  01F5  3028               	movlw	40
  1618  01F6  07C2               	addwf	main@tmp16,f
  1619  01F7  1803               	skipnc
  1620  01F8  0AC3               	incf	main@tmp16+1,f
  1621  01F9  300A               	movlw	10
  1622                           
  1623                           ;smartkey.C: 446: beep(10,1);
  1624  01FA  01A4               	clrf	?_beep
  1625  01FB  0AA4               	incf	?_beep,f
  1626  01FC  2637               	fcall	_beep
  1627                           
  1628                           ;smartkey.C: 447: }
  1629  01FD  2A78               	goto	l951
  1630  01FE                     l6849:	
  1631                           
  1632                           ;smartkey.C: 448: else if((mtOldState == 1)){
  1633  01FE  0B4C               	decfsz	_mtOldState,w
  1634  01FF  2A78               	goto	l951
  1635  0200  29D5               	goto	L3
  1636  0201                     l6855:	
  1637                           ;smartkey.C: 451: }
  1638                           ;smartkey.C: 452: }
  1639                           ;smartkey.C: 453: break;
  1640                           
  1641                           ;smartkey.C: 450: if(reAlertOn)reAlertOn =0;
  1642                           
  1643                           
  1644                           ;smartkey.C: 456: if(timeTick > 200)
  1645  0201  3000               	movlw	0
  1646  0202  0271               	subwf	_timeTick+1,w
  1647  0203  30C9               	movlw	201
  1648  0204  1903               	skipnz
  1649  0205  0270               	subwf	_timeTick,w
  1650  0206  1C03               	skipc
  1651  0207  2A78               	goto	l951
  1652                           
  1653                           ;smartkey.C: 457: {
  1654                           ;smartkey.C: 458: beepOff();
  1655  0208  26E8               	fcall	_beepOff
  1656                           
  1657                           ;smartkey.C: 459: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1658  0209  3008               	movlw	8
  1659  020A  26B5               	fcall	_READ_EEPROM
  1660  020B  3ACC               	xorlw	204
  1661  020C  1D03               	skipz
  1662  020D  2A11               	goto	l6863
  1663  020E  3008               	movlw	8
  1664  020F  01A0               	clrf	?_WRITE_EEPROM
  1665  0210  2604               	fcall	_WRITE_EEPROM
  1666  0211                     l6863:	
  1667  0211  30AC               	movlw	172
  1668                           
  1669                           ;smartkey.C: 460: RegStatus |=(0x20);
  1670  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0213  16C9               	bsf	_RegStatus,5
  1672                           
  1673                           ;smartkey.C: 461: setState(1,3500);
  1674  0214  00A0               	movwf	?_setState
  1675  0215  300D               	movlw	13
  1676  0216  00A1               	movwf	?_setState+1
  1677  0217  3001               	movlw	1
  1678  0218  26C2               	fcall	_setState
  1679                           
  1680                           ;smartkey.C: 463: tmp16 = timeTick+40;
  1681  0219  0871               	movf	_timeTick+1,w
  1682  021A  00C3               	movwf	main@tmp16+1
  1683  021B  0870               	movf	_timeTick,w
  1684  021C  00C2               	movwf	main@tmp16
  1685  021D  3028               	movlw	40
  1686  021E  07C2               	addwf	main@tmp16,f
  1687  021F  1803               	skipnc
  1688  0220  0AC3               	incf	main@tmp16+1,f
  1689  0221  2A78               	goto	l951
  1690  0222                     l6869:	
  1691                           
  1692                           ;smartkey.C: 469: beepOff();
  1693  0222  26E8               	fcall	_beepOff
  1694                           
  1695                           ;smartkey.C: 470: setState(2,300);
  1696  0223  302C               	movlw	44
  1697  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0225  00A0               	movwf	?_setState
  1699  0226  3001               	movlw	1
  1700  0227  00A1               	movwf	?_setState+1
  1701  0228  3002               	movlw	2
  1702  0229  26C2               	fcall	_setState
  1703                           
  1704                           ;smartkey.C: 471: break;
  1705  022A  2A78               	goto	l951
  1706  022B                     l6875:	
  1707  022B  0874               	movf	_mtState,w
  1708                           
  1709                           ; Switch size 1, requested type "space"
  1710                           ; Number of cases is 5, Range of values is 0 to 4
  1711                           ; switch strategies available:
  1712                           ; Name         Instructions Cycles
  1713                           ; direct_byte           11     6 (fixed)
  1714                           ; simple_byte           16     9 (average)
  1715                           ; jumptable            260     6 (fixed)
  1716                           ; rangetable             9     6 (fixed)
  1717                           ; spacedrange           16     9 (fixed)
  1718                           ; locatedrange           5     3 (fixed)
  1719                           ;	Chosen strategy is direct_byte
  1720  022C  0084               	movwf	4
  1721  022D  3005               	movlw	5
  1722  022E  0204               	subwf	4,w
  1723  022F  1803               	skipnc
  1724  0230  2A78               	goto	l951
  1725  0231  3006               	movlw	high S7143
  1726  0232  008A               	movwf	10
  1727  0233  30DE               	movlw	low S7143
  1728  0234  0704               	addwf	4,w
  1729  0235  0082               	movwf	2
  1730  0236                     l6877:	
  1731                           
  1732                           ;smartkey.C: 488: {
  1733                           ;smartkey.C: 490: if(lostDetect==1 && timeTick< 1500)
  1734  0236  0B4B               	decfsz	_lostDetect,w
  1735  0237  2A5D               	goto	l954
  1736  0238  3005               	movlw	5
  1737  0239  0271               	subwf	_timeTick+1,w
  1738  023A  30DC               	movlw	220
  1739  023B  1903               	skipnz
  1740  023C  0270               	subwf	_timeTick,w
  1741  023D  1803               	skipnc
  1742  023E  2A5D               	goto	l954
  1743                           
  1744                           ;smartkey.C: 491: {
  1745                           ;smartkey.C: 492: if(READ_EEPROM(0x08)==0x00) WRITE_EEPROM(0x08,0xcc);
  1746  023F  3008               	movlw	8
  1747  0240  26B5               	fcall	_READ_EEPROM
  1748  0241  3800               	iorlw	0
  1749  0242  1D03               	skipz
  1750  0243  2A48               	goto	l955
  1751  0244  30CC               	movlw	204
  1752  0245  00A0               	movwf	?_WRITE_EEPROM
  1753  0246  3008               	movlw	8
  1754  0247  2604               	fcall	_WRITE_EEPROM
  1755  0248                     l955:	
  1756                           
  1757                           ;smartkey.C: 494: setState(3,1800);
  1758  0248  3008               	movlw	8
  1759  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1760  024A  00A0               	movwf	?_setState
  1761  024B  3007               	movlw	7
  1762  024C  00A1               	movwf	?_setState+1
  1763  024D  3003               	movlw	3
  1764  024E  26C2               	fcall	_setState
  1765                           
  1766                           ;smartkey.C: 495: cntTmp = timeTick+40;
  1767  024F  0871               	movf	_timeTick+1,w
  1768  0250  00C6               	movwf	_cntTmp+1
  1769  0251  0870               	movf	_timeTick,w
  1770  0252  00C5               	movwf	_cntTmp
  1771  0253  3028               	movlw	40
  1772  0254  07C5               	addwf	_cntTmp,f
  1773  0255  1803               	skipnc
  1774  0256  0AC6               	incf	_cntTmp+1,f
  1775                           
  1776                           ;smartkey.C: 496: PR2L =20;
  1777  0257  3014               	movlw	20
  1778  0258  1683               	bsf	3,5	;RP0=1, select bank1
  1779  0259  0091               	movwf	17	;volatile
  1780                           
  1781                           ;smartkey.C: 497: beepOn();
  1782  025A  26E3               	fcall	_beepOn
  1783                           
  1784                           ;smartkey.C: 498: lostDetect =0;
  1785  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1786  025C  29B1               	goto	l6813
  1787  025D                     l954:	
  1788                           ;smartkey.C: 499: }
  1789                           
  1790                           
  1791                           ;smartkey.C: 500: else {
  1792                           ;smartkey.C: 501: lostDetect =1;
  1793  025D  01CB               	clrf	_lostDetect
  1794  025E  0ACB               	incf	_lostDetect,f
  1795  025F  29B2               	goto	L4
  1796  0260                     l6897:	
  1797                           ;smartkey.C: 504: }
  1798                           ;smartkey.C: 505: timeTick =0;
  1799                           
  1800                           
  1801                           ;smartkey.C: 511: {
  1802                           ;smartkey.C: 512: timeTick =0;
  1803  0260  01F0               	clrf	_timeTick
  1804  0261  01F1               	clrf	_timeTick+1
  1805                           
  1806                           ;smartkey.C: 513: beepOn();TMR2ON = 0;
  1807  0262  26E3               	fcall	_beepOn
  1808  0263  3002               	movlw	2
  1809  0264  1283               	bcf	3,5	;RP0=0, select bank0
  1810  0265  1112               	bcf	18,2
  1811                           
  1812                           ;smartkey.C: 514: beep(10,2);
  1813  0266  00A4               	movwf	?_beep
  1814  0267  300A               	movlw	10
  1815  0268  2637               	fcall	_beep
  1816                           
  1817                           ;smartkey.C: 515: if(mtOldState == 3){reAlertOn =1;}
  1818  0269  084C               	movf	_mtOldState,w
  1819  026A  3A03               	xorlw	3
  1820  026B  1D03               	skipz
  1821  026C  2A78               	goto	l951
  1822  026D  01C0               	clrf	main@reAlertOn
  1823  026E  0AC0               	incf	main@reAlertOn,f
  1824  026F  2A78               	goto	l951
  1825  0270                     l6911:	
  1826  0270  0874               	movf	_mtState,w
  1827                           
  1828                           ; Switch size 1, requested type "space"
  1829                           ; Number of cases is 2, Range of values is 1 to 2
  1830                           ; switch strategies available:
  1831                           ; Name         Instructions Cycles
  1832                           ; simple_byte            7     4 (average)
  1833                           ; direct_byte           11     9 (fixed)
  1834                           ; jumptable            263     9 (fixed)
  1835                           ;	Chosen strategy is simple_byte
  1836  0271  3A01               	xorlw	1	; case 1
  1837  0272  1903               	skipnz
  1838  0273  2A36               	goto	l6877
  1839  0274  3A03               	xorlw	3	; case 2
  1840  0275  1903               	skipnz
  1841  0276  2A60               	goto	l6897
  1842  0277  2A78               	goto	l951
  1843  0278                     l951:	
  1844                           
  1845                           ;smartkey.C: 519: }
  1846                           ;smartkey.C: 521: }
  1847                           ;smartkey.C: 523: PAIE = 1;
  1848  0278  158B               	bsf	11,3
  1849  0279                     l6913:	
  1850                           
  1851                           ;smartkey.C: 524: }
  1852                           ;smartkey.C: 526: }
  1853                           ;smartkey.C: 530: {
  1854                           ;smartkey.C: 531: if((timeOut!=0)&&( timeTick >timeOut)){
  1855  0279  0848               	movf	_timeOut+1,w
  1856  027A  0447               	iorwf	_timeOut,w
  1857  027B  1903               	skipnz
  1858  027C  2AEF               	goto	l6989
  1859  027D  0871               	movf	_timeTick+1,w
  1860  027E  0248               	subwf	_timeOut+1,w
  1861  027F  1D03               	skipz
  1862  0280  2A83               	goto	u3185
  1863  0281  0870               	movf	_timeTick,w
  1864  0282  0247               	subwf	_timeOut,w
  1865  0283                     u3185:	
  1866  0283  1C03               	btfss	3,0
  1867  0284  2AE1               	goto	l6987
  1868  0285  2AEF               	goto	l6989
  1869  0286                     l6919:	
  1870                           
  1871                           ;smartkey.C: 542: beepOff();
  1872  0286  26E8               	fcall	_beepOff
  1873  0287  302C               	movlw	44
  1874                           
  1875                           ;smartkey.C: 543: RegStatus &=(~0x20);
  1876  0288  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0289  12C9               	bcf	_RegStatus,5
  1878                           
  1879                           ;smartkey.C: 544: setState(2,300);
  1880  028A  00A0               	movwf	?_setState
  1881  028B  3001               	movlw	1
  1882  028C  00A1               	movwf	?_setState+1
  1883  028D  3002               	movlw	2
  1884  028E  26C2               	fcall	_setState
  1885                           
  1886                           ;smartkey.C: 545: break;
  1887  028F  2AEF               	goto	l6989
  1888  0290                     l6925:	
  1889                           
  1890                           ;smartkey.C: 547: beepOff();
  1891  0290  26E8               	fcall	_beepOff
  1892                           
  1893                           ;smartkey.C: 548: delay_x10ms(20);
  1894  0291  3014               	movlw	20
  1895  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1896  0293  00A0               	movwf	?_delay_x10ms
  1897  0294  01A1               	clrf	?_delay_x10ms+1
  1898  0295  2676               	fcall	_delay_x10ms
  1899  0296                     L6:	
  1900                           
  1901                           ;smartkey.C: 549: beepOn();TMR2ON = 0;reAlertOn =0;
  1902  0296  26E3               	fcall	_beepOn
  1903  0297  301E               	movlw	30
  1904  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1905  0299  1112               	bcf	18,2
  1906  029A  01C0               	clrf	main@reAlertOn
  1907  029B  01A4               	clrf	?_beep
  1908  029C  0AA4               	incf	?_beep,f
  1909  029D  2637               	fcall	_beep
  1910  029E  3000               	movlw	0
  1911                           
  1912                           ;smartkey.C: 551: setState(0,0);
  1913  029F  01A0               	clrf	?_setState
  1914  02A0  01A1               	clrf	?_setState+1
  1915  02A1                     L5:	
  1916  02A1  26C2               	fcall	_setState
  1917                           
  1918                           ;smartkey.C: 553: tmp16 = timeTick+40;
  1919  02A2  0871               	movf	_timeTick+1,w
  1920  02A3  00C3               	movwf	main@tmp16+1
  1921  02A4  0870               	movf	_timeTick,w
  1922  02A5  00C2               	movwf	main@tmp16
  1923  02A6  3028               	movlw	40
  1924  02A7  07C2               	addwf	main@tmp16,f
  1925  02A8  1803               	skipnc
  1926  02A9  0AC3               	incf	main@tmp16+1,f
  1927                           
  1928                           ;smartkey.C: 554: break;
  1929  02AA  2AEF               	goto	l6989
  1930  02AB                     l6943:	
  1931                           
  1932                           ;smartkey.C: 557: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1933  02AB  3008               	movlw	8
  1934  02AC  26B5               	fcall	_READ_EEPROM
  1935  02AD  3ACC               	xorlw	204
  1936  02AE  1D03               	skipz
  1937  02AF  2AB3               	goto	l6947
  1938  02B0  3008               	movlw	8
  1939  02B1  01A0               	clrf	?_WRITE_EEPROM
  1940  02B2  2604               	fcall	_WRITE_EEPROM
  1941  02B3                     l6947:	
  1942                           
  1943                           ;smartkey.C: 559: if(reAlertOn){
  1944  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1945  02B4  0840               	movf	main@reAlertOn,w
  1946  02B5  1903               	btfsc	3,2
  1947  02B6  2ACA               	goto	l6957
  1948                           
  1949                           ;smartkey.C: 560: setState(4,6000);
  1950  02B7  3070               	movlw	112
  1951  02B8  00A0               	movwf	?_setState
  1952  02B9  3017               	movlw	23
  1953  02BA  00A1               	movwf	?_setState+1
  1954  02BB  3004               	movlw	4
  1955  02BC  26C2               	fcall	_setState
  1956                           
  1957                           ;smartkey.C: 561: cntTmp = timeTick+40;
  1958  02BD  0871               	movf	_timeTick+1,w
  1959  02BE  00C6               	movwf	_cntTmp+1
  1960  02BF  0870               	movf	_timeTick,w
  1961  02C0  00C5               	movwf	_cntTmp
  1962  02C1  3028               	movlw	40
  1963  02C2  07C5               	addwf	_cntTmp,f
  1964  02C3  1803               	skipnc
  1965  02C4  0AC6               	incf	_cntTmp+1,f
  1966                           
  1967                           ;smartkey.C: 562: PR2L =20;
  1968  02C5  3014               	movlw	20
  1969  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  1970  02C7  0091               	movwf	17	;volatile
  1971                           
  1972                           ;smartkey.C: 563: beepOn();
  1973  02C8  26E3               	fcall	_beepOn
  1974                           
  1975                           ;smartkey.C: 565: }else if(mtOldState == 0){
  1976  02C9  2AEF               	goto	l6989
  1977  02CA                     l6957:	
  1978  02CA  08CC               	movf	_mtOldState,f
  1979  02CB  1D03               	skipz
  1980  02CC  2A96               	goto	L6
  1981                           
  1982                           ;smartkey.C: 567: beep(10,5);
  1983  02CD  3005               	movlw	5
  1984  02CE  00A4               	movwf	?_beep
  1985  02CF  300A               	movlw	10
  1986  02D0  2637               	fcall	_beep
  1987  02D1  3040               	movlw	64
  1988                           
  1989                           ;smartkey.C: 568: RegStatus |=(0x20);
  1990  02D2  16C9               	bsf	_RegStatus,5
  1991                           
  1992                           ;smartkey.C: 571: if(READ_EEPROM(0x40))WRITE_EEPROM(0x40,0);
  1993  02D3  26B5               	fcall	_READ_EEPROM
  1994  02D4  3A00               	xorlw	0
  1995  02D5  1903               	skipnz
  1996  02D6  2ADA               	goto	l971
  1997  02D7  3040               	movlw	64
  1998  02D8  01A0               	clrf	?_WRITE_EEPROM
  1999  02D9  2604               	fcall	_WRITE_EEPROM
  2000  02DA                     l971:	
  2001                           
  2002                           ;smartkey.C: 573: setState(1,3500);
  2003  02DA  30AC               	movlw	172
  2004  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2005  02DC  00A0               	movwf	?_setState
  2006  02DD  300D               	movlw	13
  2007  02DE  00A1               	movwf	?_setState+1
  2008  02DF  3001               	movlw	1
  2009  02E0  2AA1               	goto	L5
  2010  02E1                     l6987:	
  2011                           ;smartkey.C: 580: setState(0,0);
  2012                           
  2013                           ;smartkey.C: 579: beep(30,1);
  2014                           
  2015                           ;smartkey.C: 578: reAlertOn =0;
  2016                           
  2017                           ;smartkey.C: 577: beepOn();TMR2ON = 0;
  2018                           
  2019  02E1  0874               	movf	_mtState,w
  2020                           
  2021                           ; Switch size 1, requested type "space"
  2022                           ; Number of cases is 4, Range of values is 1 to 4
  2023                           ; switch strategies available:
  2024                           ; Name         Instructions Cycles
  2025                           ; simple_byte           13     7 (average)
  2026                           ; direct_byte           13     9 (fixed)
  2027                           ; jumptable            263     9 (fixed)
  2028                           ;	Chosen strategy is simple_byte
  2029  02E2  3A01               	xorlw	1	; case 1
  2030  02E3  1903               	skipnz
  2031  02E4  2AEF               	goto	l6989
  2032  02E5  3A03               	xorlw	3	; case 2
  2033  02E6  1903               	skipnz
  2034  02E7  2AAB               	goto	l6943
  2035  02E8  3A01               	xorlw	1	; case 3
  2036  02E9  1903               	skipnz
  2037  02EA  2A86               	goto	l6919
  2038  02EB  3A07               	xorlw	7	; case 4
  2039  02EC  1903               	skipnz
  2040  02ED  2A90               	goto	l6925
  2041  02EE  2AEF               	goto	l6989
  2042  02EF                     l6989:	
  2043                           
  2044                           ;smartkey.C: 586: }
  2045                           ;smartkey.C: 588: }
  2046                           ;smartkey.C: 590: if((timeTick>tmp16) && (mtState == 1) && mpuOk ==1){
  2047  02EF  0871               	movf	_timeTick+1,w
  2048  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2049  02F1  0243               	subwf	main@tmp16+1,w
  2050  02F2  1D03               	skipz
  2051  02F3  2AF6               	goto	u3235
  2052  02F4  0870               	movf	_timeTick,w
  2053  02F5  0242               	subwf	main@tmp16,w
  2054  02F6                     u3235:	
  2055  02F6  1803               	skipnc
  2056  02F7  2B87               	goto	l7071
  2057  02F8  0B74               	decfsz	_mtState,w
  2058  02F9  2B87               	goto	l7071
  2059  02FA  0B35               	decfsz	main@mpuOk,w
  2060  02FB  2B87               	goto	l7071
  2061                           
  2062                           ;smartkey.C: 591: tmp16 = timeTick+40;
  2063  02FC  0871               	movf	_timeTick+1,w
  2064  02FD  00C3               	movwf	main@tmp16+1
  2065  02FE  0870               	movf	_timeTick,w
  2066  02FF  00C2               	movwf	main@tmp16
  2067  0300  3028               	movlw	40
  2068  0301  07C2               	addwf	main@tmp16,f
  2069  0302  1803               	skipnc
  2070  0303  0AC3               	incf	main@tmp16+1,f
  2071                           
  2072                           ;smartkey.C: 592: if(AccRead(0x02,buf,6)==0){
  2073  0304  303A               	movlw	main@buf& (0+255)
  2074  0305  00A4               	movwf	?_AccRead
  2075  0306  3000               	movlw	0
  2076  0307  00A5               	movwf	?_AccRead+1
  2077  0308  3006               	movlw	6
  2078  0309  00A6               	movwf	?_AccRead+2
  2079  030A  3002               	movlw	2
  2080  030B  2567               	fcall	_AccRead
  2081  030C  3800               	iorlw	0
  2082  030D  1D03               	skipz
  2083  030E  2B87               	goto	l7071
  2084                           
  2085                           ;smartkey.C: 594: if(compe(buf[1], (signed char)acXsum,5) && compe(buf[3], (signed char)
      +                          acYsum,5)){
  2086  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0310  0838               	movf	main@acXsum,w
  2088  0311  00A0               	movwf	?_compe
  2089  0312  3005               	movlw	5
  2090  0313  00A1               	movwf	?_compe+1
  2091  0314  083B               	movf	main@buf+1,w
  2092  0315  24A6               	fcall	_compe
  2093  0316  3A00               	xorlw	0
  2094  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0318  1903               	skipnz
  2096  0319  2B38               	goto	L9
  2097  031A  0836               	movf	main@acYsum,w
  2098  031B  00A0               	movwf	?_compe
  2099  031C  3005               	movlw	5
  2100  031D  00A1               	movwf	?_compe+1
  2101  031E  083D               	movf	main@buf+3,w
  2102  031F  24A6               	fcall	_compe
  2103  0320  3A00               	xorlw	0
  2104                           
  2105                           ;smartkey.C: 597: isSw++;
  2106  0321  1283               	bcf	3,5	;RP0=0, select bank0
  2107  0322  1903               	skipnz
  2108  0323  2B38               	goto	L9
  2109  0324  302D               	movlw	45
  2110  0325  0AC1               	incf	main@isSw,f
  2111                           
  2112                           ;smartkey.C: 598: if(isSw >44){
  2113  0326  0241               	subwf	main@isSw,w
  2114  0327  1C03               	skipc
  2115  0328  2B2B               	goto	l7019
  2116                           
  2117                           ;smartkey.C: 599: isSw =0;
  2118  0329  01C1               	clrf	main@isSw
  2119  032A  2B5C               	goto	L7
  2120  032B                     l7019:	
  2121                           ;smartkey.C: 606: }
  2122                           
  2123                           ;smartkey.C: 604: setState(2,300);
  2124                           
  2125                           ;smartkey.C: 603: RegStatus &=(~0x20);
  2126                           
  2127                           ;smartkey.C: 600: vibrateOn=1;
  2128                           
  2129                           
  2130                           ;smartkey.C: 607: else if(isSw > 25){
  2131  032B  301A               	movlw	26
  2132  032C  0241               	subwf	main@isSw,w
  2133  032D  1803               	btfsc	3,0
  2134                           
  2135                           ;smartkey.C: 608: if(isSw%2==0){
  2136  032E  1841               	btfsc	main@isSw,0
  2137  032F  2B65               	goto	l7049
  2138                           
  2139                           ;smartkey.C: 609: beepOn();TMR2ON = 0; beep(7,1);
  2140  0330  26E3               	fcall	_beepOn
  2141  0331  3007               	movlw	7
  2142  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2143  0333  1112               	bcf	18,2
  2144  0334  01A4               	clrf	?_beep
  2145  0335  0AA4               	incf	?_beep,f
  2146  0336  2637               	fcall	_beep
  2147  0337  2B65               	goto	l7049
  2148  0338                     L9:	
  2149                           ;smartkey.C: 614: else{
  2150                           ;smartkey.C: 615: isSw =0;
  2151                           
  2152                           ;smartkey.C: 610: }
  2153                           ;smartkey.C: 611: }
  2154                           ;smartkey.C: 613: }
  2155                           
  2156  0338  01C1               	clrf	main@isSw
  2157                           
  2158                           ;smartkey.C: 618: if(compe(buf[1], acXOld,2) && compe(buf[3], acYOld,2)){
  2159  0339  0834               	movf	main@acXOld,w
  2160  033A  00A0               	movwf	?_compe
  2161  033B  3002               	movlw	2
  2162  033C  00A1               	movwf	?_compe+1
  2163  033D  083B               	movf	main@buf+1,w
  2164  033E  24A6               	fcall	_compe
  2165  033F  3A00               	xorlw	0
  2166  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2167  0341  1903               	skipnz
  2168  0342  2B66               	goto	L10
  2169  0343  0833               	movf	main@acYOld,w
  2170  0344  00A0               	movwf	?_compe
  2171  0345  3002               	movlw	2
  2172  0346  00A1               	movwf	?_compe+1
  2173  0347  083D               	movf	main@buf+3,w
  2174  0348  24A6               	fcall	_compe
  2175  0349  3A00               	xorlw	0
  2176                           
  2177                           ;smartkey.C: 619: isWait++;
  2178  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2179  034B  1903               	skipnz
  2180  034C  2B66               	goto	L10
  2181  034D  0AAF               	incf	main@isWait,f
  2182  034E  1903               	skipnz
  2183  034F  0AB0               	incf	main@isWait+1,f
  2184                           
  2185                           ;smartkey.C: 620: if(isWait==450){
  2186  0350  0330               	decf	main@isWait+1,w
  2187  0351  30C2               	movlw	194
  2188  0352  1903               	skipnz
  2189  0353  062F               	xorwf	main@isWait,w
  2190  0354  1D03               	skipz
  2191  0355  2B65               	goto	l7049
  2192  0356  3002               	movlw	2
  2193                           
  2194                           ;smartkey.C: 621: isWait = 0;
  2195  0357  01AF               	clrf	main@isWait
  2196  0358  01B0               	clrf	main@isWait+1
  2197                           
  2198                           ;smartkey.C: 622: beep(7,2);
  2199  0359  00A4               	movwf	?_beep
  2200  035A  3007               	movlw	7
  2201  035B  2637               	fcall	_beep
  2202  035C                     L7:	
  2203  035C  302C               	movlw	44
  2204                           
  2205                           ;smartkey.C: 623: vibrateOn=1;
  2206  035D  01B1               	clrf	main@vibrateOn
  2207  035E  0AB1               	incf	main@vibrateOn,f
  2208                           
  2209                           ;smartkey.C: 624: RegStatus &=(~0x20);
  2210  035F  12C9               	bcf	_RegStatus,5
  2211                           
  2212                           ;smartkey.C: 625: setState(2,300);
  2213  0360  00A0               	movwf	?_setState
  2214  0361  3001               	movlw	1
  2215  0362  00A1               	movwf	?_setState+1
  2216  0363  3002               	movlw	2
  2217  0364  26C2               	fcall	_setState
  2218  0365                     l7049:	
  2219                           
  2220                           ;smartkey.C: 626: }
  2221                           ;smartkey.C: 627: }
  2222                           ;smartkey.C: 629: }
  2223                           ;smartkey.C: 631: if( (buf[5] > -31) && (buf[5] < 31)) {
  2224  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0366                     L10:	
  2226  0366  083F               	movf	main@buf+5,w
  2227  0367  3A80               	xorlw	128
  2228  0368  3E9E               	addlw	158
  2229  0369  1C03               	skipc
  2230  036A  2B82               	goto	l7065
  2231  036B  083F               	movf	main@buf+5,w
  2232  036C  3A80               	xorlw	128
  2233  036D  3E61               	addlw	-159
  2234  036E  1803               	skipnc
  2235  036F  2B82               	goto	l7065
  2236  0370  3005               	movlw	5
  2237                           
  2238                           ;smartkey.C: 632: isFall++;
  2239  0371  0AB2               	incf	main@isFall,f
  2240                           
  2241                           ;smartkey.C: 633: if(isFall >4){
  2242  0372  0232               	subwf	main@isFall,w
  2243  0373  1C03               	skipc
  2244  0374  2B83               	goto	l7067
  2245  0375  3002               	movlw	2
  2246                           
  2247                           ;smartkey.C: 634: isFall =0;
  2248  0376  01B2               	clrf	main@isFall
  2249                           
  2250                           ;smartkey.C: 635: beep(7,2);
  2251  0377  00A4               	movwf	?_beep
  2252  0378  3007               	movlw	7
  2253  0379  2637               	fcall	_beep
  2254  037A  302C               	movlw	44
  2255                           
  2256                           ;smartkey.C: 636: RegStatus &=(~0x20);
  2257  037B  12C9               	bcf	_RegStatus,5
  2258                           
  2259                           ;smartkey.C: 637: setState(2,300);
  2260  037C  00A0               	movwf	?_setState
  2261  037D  3001               	movlw	1
  2262  037E  00A1               	movwf	?_setState+1
  2263  037F  3002               	movlw	2
  2264  0380  26C2               	fcall	_setState
  2265  0381  2B83               	goto	l7067
  2266  0382                     l7065:	
  2267                           
  2268                           ;smartkey.C: 640: else{
  2269                           ;smartkey.C: 641: isFall=0;
  2270  0382  01B2               	clrf	main@isFall
  2271  0383                     l7067:	
  2272                           
  2273                           ;smartkey.C: 642: }
  2274                           ;smartkey.C: 644: acYOld = buf[3];acXOld = buf[1];
  2275  0383  083D               	movf	main@buf+3,w
  2276  0384  00B3               	movwf	main@acYOld
  2277  0385  083B               	movf	main@buf+1,w
  2278  0386  00B4               	movwf	main@acXOld
  2279  0387                     l7071:	
  2280                           
  2281                           ;smartkey.C: 645: }
  2282                           ;smartkey.C: 647: }
  2283                           ;smartkey.C: 650: if((timeTick>tmp16) && (mtState == 0 ) && mpuOk ==1){
  2284  0387  0871               	movf	_timeTick+1,w
  2285  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0389  0243               	subwf	main@tmp16+1,w
  2287  038A  1D03               	skipz
  2288  038B  2B8E               	goto	u3385
  2289  038C  0870               	movf	_timeTick,w
  2290  038D  0242               	subwf	main@tmp16,w
  2291  038E                     u3385:	
  2292  038E  1803               	skipnc
  2293  038F  2BD2               	goto	l7103
  2294  0390  08F4               	movf	_mtState,f
  2295  0391  1D03               	skipz
  2296  0392  2BD2               	goto	l7103
  2297  0393  0B35               	decfsz	main@mpuOk,w
  2298  0394  2BD2               	goto	l7103
  2299                           
  2300                           ;smartkey.C: 652: if(timeTick >65000) timeTick =0;
  2301  0395  30FD               	movlw	253
  2302  0396  0271               	subwf	_timeTick+1,w
  2303  0397  30E9               	movlw	233
  2304  0398  1903               	skipnz
  2305  0399  0270               	subwf	_timeTick,w
  2306  039A  1C03               	skipc
  2307  039B  2B9E               	goto	l7081
  2308  039C  01F0               	clrf	_timeTick
  2309  039D  01F1               	clrf	_timeTick+1
  2310  039E                     l7081:	
  2311                           
  2312                           ;smartkey.C: 653: tmp16 = timeTick+40;
  2313  039E  0871               	movf	_timeTick+1,w
  2314  039F  00C3               	movwf	main@tmp16+1
  2315  03A0  0870               	movf	_timeTick,w
  2316  03A1  00C2               	movwf	main@tmp16
  2317  03A2  3028               	movlw	40
  2318  03A3  07C2               	addwf	main@tmp16,f
  2319  03A4  1803               	skipnc
  2320  03A5  0AC3               	incf	main@tmp16+1,f
  2321                           
  2322                           ;smartkey.C: 655: if(AccRead(0x02,buf,6)==0){
  2323  03A6  303A               	movlw	main@buf& (0+255)
  2324  03A7  00A4               	movwf	?_AccRead
  2325  03A8  3000               	movlw	0
  2326  03A9  00A5               	movwf	?_AccRead+1
  2327  03AA  3006               	movlw	6
  2328  03AB  00A6               	movwf	?_AccRead+2
  2329  03AC  3002               	movlw	2
  2330  03AD  2567               	fcall	_AccRead
  2331  03AE  3800               	iorlw	0
  2332                           
  2333                           ;smartkey.C: 657: if(vibrateOn==1){
  2334  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2335  03B0  1D03               	skipz
  2336  03B1  2BD3               	goto	L11
  2337  03B2  0B31               	decfsz	main@vibrateOn,w
  2338  03B3  2BD2               	goto	l7103
  2339                           
  2340                           ;smartkey.C: 658: if(compe(buf[1],acXOld ,3) && compe(buf[3],acYOld ,3)){
  2341  03B4  0834               	movf	main@acXOld,w
  2342  03B5  00A0               	movwf	?_compe
  2343  03B6  3003               	movlw	3
  2344  03B7  00A1               	movwf	?_compe+1
  2345  03B8  083B               	movf	main@buf+1,w
  2346  03B9  24A6               	fcall	_compe
  2347  03BA  3A00               	xorlw	0
  2348  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2349  03BC  1903               	skipnz
  2350  03BD  2BCA               	goto	L12
  2351  03BE  0833               	movf	main@acYOld,w
  2352  03BF  00A0               	movwf	?_compe
  2353  03C0  3003               	movlw	3
  2354  03C1  00A1               	movwf	?_compe+1
  2355  03C2  083D               	movf	main@buf+3,w
  2356  03C3  24A6               	fcall	_compe
  2357  03C4  3A00               	xorlw	0
  2358                           
  2359                           ;smartkey.C: 660: isSw=0;
  2360  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2361  03C6  1903               	skipnz
  2362  03C7  2BCA               	goto	L12
  2363  03C8  01C1               	clrf	main@isSw
  2364                           
  2365                           ;smartkey.C: 663: }
  2366  03C9  2BD2               	goto	l7103
  2367  03CA                     L12:	
  2368                           ;smartkey.C: 664: else{
  2369                           ;smartkey.C: 665: isSw++;
  2370                           
  2371  03CA  0AC1               	incf	main@isSw,f
  2372                           
  2373                           ;smartkey.C: 668: {
  2374                           ;smartkey.C: 669: beepOn();TMR2ON = 0; beep(7,3);
  2375  03CB  26E3               	fcall	_beepOn
  2376  03CC  3003               	movlw	3
  2377  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2378  03CE  1112               	bcf	18,2
  2379  03CF  00A4               	movwf	?_beep
  2380  03D0  3007               	movlw	7
  2381  03D1  2637               	fcall	_beep
  2382  03D2                     l7103:	
  2383                           
  2384                           ;smartkey.C: 670: }
  2385                           ;smartkey.C: 671: }
  2386                           ;smartkey.C: 672: }
  2387                           ;smartkey.C: 674: }
  2388                           ;smartkey.C: 677: }
  2389                           ;smartkey.C: 679: if(RegStatus & 0x20) {RC0 =1;RC1 =1;}
  2390  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2391  03D3                     L11:	
  2392  03D3  1EC9               	btfss	_RegStatus,5
  2393  03D4  2BD8               	goto	l992
  2394  03D5  1407               	bsf	7,0
  2395  03D6  1487               	bsf	7,1
  2396  03D7  29A8               	goto	l6805
  2397  03D8                     l992:	
  2398                           
  2399                           ;smartkey.C: 680: else {RC0 =0;RC1 =0;}
  2400  03D8  1007               	bcf	7,0
  2401  03D9  1087               	bcf	7,1
  2402  03DA  29A8               	goto	l6805
  2403  03DB                     __end_of_main:	
  2404                           
  2405                           	psect	swtext1
  2406  06DE                     __pswtext1:	
  2407  06DE                     S7143:	
  2408  06DE  2A78               	ljmp	l951
  2409  06DF  29B1               	ljmp	l6813
  2410  06E0  29B8               	ljmp	l6817
  2411  06E1  2A01               	ljmp	l6855
  2412  06E2  2A22               	ljmp	l6869
  2413                           
  2414                           	psect	text861
  2415  0567                     __ptext861:	
  2416 ;; =============== function _main ends ============
  2417                           
  2418                           
  2419 ;; *************** function _AccRead *****************
  2420 ;; Defined at:
  2421 ;;		line 31 in file "mpu6x.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  rAdd            1    wreg     unsigned char 
  2424 ;;  dat             2    4[BANK0 ] PTR unsigned char 
  2425 ;;		 -> RAM(256), main@buf(6), 
  2426 ;;  len             1    6[BANK0 ] unsigned char 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  rAdd            1   10[BANK0 ] unsigned char 
  2429 ;;  i               1   11[BANK0 ] unsigned char 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      unsigned char 
  2432 ;; Registers used:
  2433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 20/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMMON   BANK0   BANK1
  2439 ;;      Params:         0       3       0
  2440 ;;      Locals:         0       2       0
  2441 ;;      Temps:          0       3       0
  2442 ;;      Totals:         0       8       0
  2443 ;;Total ram usage:        8 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    3
  2446 ;; This function calls:
  2447 ;;		_swI2C_Start
  2448 ;;		_swI2C_WriteByte
  2449 ;;		_swI2C_ReadByte
  2450 ;;		_swI2C_Stop
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455  0567                     _AccRead:	
  2456                           
  2457                           ; Regs used in _AccRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2458                           ;AccRead@rAdd stored from wreg
  2459  0567  00AA               	movwf	AccRead@rAdd
  2460                           
  2461                           ;mpu6x.c: 32: unsigned char i;
  2462                           ;mpu6x.c: 34: swI2C_Start();
  2463  0568  2663               	fcall	_swI2C_Start
  2464                           
  2465                           ;mpu6x.c: 36: if(swI2C_WriteByte(0x18<<1)== 0 )
  2466  0569  3030               	movlw	48
  2467  056A  252A               	fcall	_swI2C_WriteByte
  2468  056B  3800               	iorlw	0
  2469  056C  1D03               	skipz
  2470  056D  3401               	retlw	1
  2471                           
  2472                           ;mpu6x.c: 37: {
  2473                           ;mpu6x.c: 38: if(swI2C_WriteByte(rAdd)==0 )
  2474  056E  082A               	movf	AccRead@rAdd,w
  2475  056F  252A               	fcall	_swI2C_WriteByte
  2476  0570  3800               	iorlw	0
  2477  0571  1D03               	skipz
  2478  0572  3402               	retlw	2
  2479                           
  2480                           ;mpu6x.c: 39: {
  2481                           ;mpu6x.c: 40: swI2C_Start();
  2482  0573  2663               	fcall	_swI2C_Start
  2483                           
  2484                           ;mpu6x.c: 41: if(swI2C_WriteByte((0x18<<1)|1)== 0 ){
  2485  0574  3031               	movlw	49
  2486  0575  252A               	fcall	_swI2C_WriteByte
  2487  0576  3800               	iorlw	0
  2488  0577  1D03               	skipz
  2489  0578  3401               	retlw	1
  2490                           
  2491                           ;mpu6x.c: 43: for(i=0; i<(len-1);i++){
  2492  0579  01AB               	clrf	AccRead@i
  2493  057A                     l6639:	
  2494  057A  0826               	movf	AccRead@len,w
  2495  057B  3EFF               	addlw	255
  2496  057C  00A7               	movwf	??_AccRead
  2497  057D  30FF               	movlw	255
  2498  057E  1803               	skipnc
  2499  057F  3000               	movlw	0
  2500  0580  00A8               	movwf	??_AccRead+1
  2501  0581  3A80               	xorlw	128
  2502  0582  3C80               	sublw	128
  2503  0583  1D03               	skipz
  2504  0584  2D87               	goto	u2815
  2505  0585  0827               	movf	??_AccRead,w
  2506  0586  022B               	subwf	AccRead@i,w
  2507  0587                     u2815:	
  2508                           
  2509                           ;mpu6x.c: 44: dat[i]=swI2C_ReadByte(1);
  2510  0587  3001               	movlw	1
  2511  0588  1803               	btfsc	3,0
  2512  0589  2D8E               	goto	L13
  2513  058A  24EB               	fcall	_swI2C_ReadByte
  2514  058B  2592               	fcall	PL2	;call to abstracted procedure
  2515  058C  0AAB               	incf	AccRead@i,f
  2516  058D  2D7A               	goto	l6639
  2517  058E                     L13:	
  2518                           ;mpu6x.c: 45: }
  2519                           ;mpu6x.c: 46: dat[i]=swI2C_ReadByte(1);
  2520                           
  2521  058E  24EB               	fcall	_swI2C_ReadByte
  2522  058F  2592               	fcall	PL2	;call to abstracted procedure
  2523                           
  2524                           ;mpu6x.c: 47: swI2C_Stop();
  2525  0590  26A8               	fcall	_swI2C_Stop
  2526                           
  2527                           ;mpu6x.c: 48: return 0;
  2528  0591  3400               	retlw	0
  2529  0592                     __end_of_AccRead:	
  2530                           ;mpu6x.c: 54: else
  2531                           ;mpu6x.c: 55: return 2;
  2532                           
  2533                           ;mpu6x.c: 51: else
  2534                           ;mpu6x.c: 52: return 1;
  2535                           
  2536  0592                     PL2:	
  2537  0592  00A7               	movwf	??_AccRead
  2538  0593  082B               	movf	AccRead@i,w
  2539  0594  0724               	addwf	AccRead@dat,w
  2540  0595  00A8               	movwf	??_AccRead+1
  2541  0596  0825               	movf	AccRead@dat+1,w
  2542  0597  1803               	skipnc
  2543  0598  3E01               	addlw	1
  2544  0599  00A9               	movwf	??_AccRead+2
  2545  059A  0828               	movf	??_AccRead+1,w
  2546  059B  0084               	movwf	4
  2547  059C  1383               	bcf	3,7
  2548  059D  1829               	btfsc	??_AccRead+2,0
  2549  059E  1783               	bsf	3,7
  2550  059F  0827               	movf	??_AccRead,w
  2551  05A0  0080               	movwf	0
  2552  05A1  0008               	return
  2553                           
  2554                           	psect	text862
  2555  05A2                     __ptext862:	
  2556 ;; =============== function _AccRead ends ============
  2557                           
  2558                           
  2559 ;; *************** function _AccWrite *****************
  2560 ;; Defined at:
  2561 ;;		line 4 in file "mpu6x.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  rAdd            1    wreg     unsigned char 
  2564 ;;  dat             2    3[BANK0 ] PTR unsigned char 
  2565 ;;		 -> RAM(256), 
  2566 ;;  len             1    5[BANK0 ] unsigned char 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  rAdd            1    8[BANK0 ] unsigned char 
  2569 ;;  i               1    9[BANK0 ] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      unsigned char 
  2572 ;; Registers used:
  2573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 20/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1
  2579 ;;      Params:         0       3       0
  2580 ;;      Locals:         0       2       0
  2581 ;;      Temps:          0       2       0
  2582 ;;      Totals:         0       7       0
  2583 ;;Total ram usage:        7 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    3
  2586 ;; This function calls:
  2587 ;;		_swI2C_Start
  2588 ;;		_swI2C_WriteByte
  2589 ;;		_swI2C_Stop
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594  05A2                     _AccWrite:	
  2595                           
  2596                           ; Regs used in _AccWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2597                           ;AccWrite@rAdd stored from wreg
  2598  05A2  00A8               	movwf	AccWrite@rAdd
  2599                           
  2600                           ;mpu6x.c: 5: unsigned char i;
  2601                           ;mpu6x.c: 6: swI2C_Start();
  2602  05A3  2663               	fcall	_swI2C_Start
  2603                           
  2604                           ;mpu6x.c: 8: if(swI2C_WriteByte(0x18<<1)== 0 )
  2605  05A4  3030               	movlw	48
  2606  05A5  252A               	fcall	_swI2C_WriteByte
  2607  05A6  3800               	iorlw	0
  2608  05A7  1D03               	skipz
  2609  05A8  3401               	retlw	1
  2610                           
  2611                           ;mpu6x.c: 9: {
  2612                           ;mpu6x.c: 10: if(swI2C_WriteByte(rAdd)==0 )
  2613  05A9  0828               	movf	AccWrite@rAdd,w
  2614  05AA  252A               	fcall	_swI2C_WriteByte
  2615  05AB  3800               	iorlw	0
  2616  05AC  1D03               	skipz
  2617  05AD  3402               	retlw	2
  2618                           
  2619                           ;mpu6x.c: 11: {
  2620                           ;mpu6x.c: 12: for(i=0; i<len;i++){
  2621  05AE  01A9               	clrf	AccWrite@i
  2622  05AF                     l6609:	
  2623  05AF  0825               	movf	AccWrite@len,w
  2624  05B0  0229               	subwf	AccWrite@i,w
  2625  05B1  1803               	btfsc	3,0
  2626  05B2  2DC8               	goto	l6611
  2627                           
  2628                           ;mpu6x.c: 13: if(swI2C_WriteByte(dat[i])==1 ){
  2629  05B3  0829               	movf	AccWrite@i,w
  2630  05B4  0723               	addwf	AccWrite@dat,w
  2631  05B5  00A6               	movwf	??_AccWrite
  2632  05B6  0824               	movf	AccWrite@dat+1,w
  2633  05B7  1803               	skipnc
  2634  05B8  3E01               	addlw	1
  2635  05B9  00A7               	movwf	??_AccWrite+1
  2636  05BA  0826               	movf	??_AccWrite,w
  2637  05BB  0084               	movwf	4
  2638  05BC  1783               	bsf	3,7
  2639  05BD  1C27               	btfss	??_AccWrite+1,0
  2640  05BE  1383               	bcf	3,7
  2641  05BF  0800               	movf	0,w
  2642  05C0  252A               	fcall	_swI2C_WriteByte
  2643  05C1  3A01               	xorlw	1
  2644  05C2  1D03               	skipz
  2645  05C3  2DC6               	goto	l6607
  2646                           
  2647                           ;mpu6x.c: 14: swI2C_Stop();
  2648  05C4  26A8               	fcall	_swI2C_Stop
  2649                           
  2650                           ;mpu6x.c: 15: return 3;
  2651  05C5  3403               	retlw	3
  2652  05C6                     l6607:	
  2653  05C6  0AA9               	incf	AccWrite@i,f
  2654  05C7  2DAF               	goto	l6609
  2655  05C8                     l6611:	
  2656                           
  2657                           ;mpu6x.c: 16: }
  2658                           ;mpu6x.c: 17: }
  2659                           ;mpu6x.c: 18: swI2C_Stop();
  2660  05C8  26A8               	fcall	_swI2C_Stop
  2661                           
  2662                           ;mpu6x.c: 19: return 0;
  2663  05C9  3400               	retlw	0
  2664  05CA                     __end_of_AccWrite:	
  2665                           ;mpu6x.c: 24: else
  2666                           ;mpu6x.c: 25: return 1;
  2667                           
  2668                           ;mpu6x.c: 21: else
  2669                           ;mpu6x.c: 22: return 2;
  2670                           
  2671                           
  2672                           	psect	text863
  2673  04EB                     __ptext863:	
  2674 ;; =============== function _AccWrite ends ============
  2675                           
  2676                           
  2677 ;; *************** function _swI2C_ReadByte *****************
  2678 ;; Defined at:
  2679 ;;		line 112 in file "SWI2C.C"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  Ack             1    wreg     unsigned char 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  Ack             1    1[BANK0 ] unsigned char 
  2684 ;;  i               1    3[BANK0 ] unsigned char 
  2685 ;;  dat             1    2[BANK0 ] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      unsigned char 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 20/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1
  2695 ;;      Params:         0       0       0
  2696 ;;      Locals:         0       3       0
  2697 ;;      Temps:          0       1       0
  2698 ;;      Totals:         0       4       0
  2699 ;;Total ram usage:        4 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    2
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_AccRead
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708  04EB                     _swI2C_ReadByte:	
  2709                           
  2710                           ; Regs used in _swI2C_ReadByte: [wreg+status,2+status,0]
  2711                           ;swI2C_ReadByte@Ack stored from wreg
  2712  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2713  04EC  00A1               	movwf	swI2C_ReadByte@Ack
  2714  04ED  01A2               	clrf	swI2C_ReadByte@dat
  2715                           
  2716                           ;SWI2C.C: 115: RA7 = 0;
  2717  04EE  1385               	bcf	5,7
  2718                           
  2719                           ;SWI2C.C: 116: TRISA |=0x40;;
  2720  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2721  04F0  1705               	bsf	5,6	;volatile
  2722                           
  2723                           ;SWI2C.C: 117: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2724  04F1  3005               	movlw	5
  2725  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2726  04F3  00A0               	movwf	??_swI2C_ReadByte
  2727  04F4                     u3547:	
  2728  04F4  0BA0               	decfsz	??_swI2C_ReadByte,f
  2729  04F5  2CF4               	goto	u3547
  2730                           
  2731                           ;SWI2C.C: 118: for(i=0;i<8;i++)
  2732  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2733  04F7  01A3               	clrf	swI2C_ReadByte@i
  2734  04F8                     l2599:	
  2735  04F8  3005               	movlw	5
  2736                           
  2737                           ;SWI2C.C: 119: {
  2738                           ;SWI2C.C: 120: RA7 = 1;
  2739  04F9  1785               	bsf	5,7
  2740                           
  2741                           ;SWI2C.C: 121: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2742  04FA  00A0               	movwf	??_swI2C_ReadByte
  2743  04FB                     u3557:	
  2744  04FB  0BA0               	decfsz	??_swI2C_ReadByte,f
  2745  04FC  2CFB               	goto	u3557
  2746                           
  2747                           ;SWI2C.C: 122: dat = dat<<1 |(RA6 & 1 );
  2748  04FD  3000               	movlw	0
  2749  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2750  04FF  1B05               	btfsc	5,6
  2751  0500  3001               	movlw	1
  2752  0501  3901               	andlw	1
  2753  0502  00A0               	movwf	??_swI2C_ReadByte
  2754  0503  1003               	clrc
  2755  0504  0D22               	rlf	swI2C_ReadByte@dat,w
  2756  0505  0420               	iorwf	??_swI2C_ReadByte,w
  2757  0506  00A2               	movwf	swI2C_ReadByte@dat
  2758  0507  3005               	movlw	5
  2759                           
  2760                           ;SWI2C.C: 125: RA7 = 0;
  2761  0508  1385               	bcf	5,7
  2762                           
  2763                           ;SWI2C.C: 126: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2764  0509  00A0               	movwf	??_swI2C_ReadByte
  2765  050A                     u3567:	
  2766  050A  0BA0               	decfsz	??_swI2C_ReadByte,f
  2767  050B  2D0A               	goto	u3567
  2768  050C  3008               	movlw	8
  2769  050D  1283               	bcf	3,5	;RP0=0, select bank0
  2770  050E  0AA3               	incf	swI2C_ReadByte@i,f
  2771  050F  0223               	subwf	swI2C_ReadByte@i,w
  2772  0510  1C03               	skipc
  2773  0511  2CF8               	goto	l2599
  2774                           
  2775                           ;SWI2C.C: 127: }
  2776                           ;SWI2C.C: 129: TRISA &=0xbf;;
  2777  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2778  0513  1305               	bcf	5,6	;volatile
  2779                           
  2780                           ;SWI2C.C: 131: RA6 = (Ack) ? 0 : 1;
  2781  0514  1283               	bcf	3,5	;RP0=0, select bank0
  2782  0515  08A1               	movf	swI2C_ReadByte@Ack,f
  2783  0516  1283               	bcf	3,5	;RP0=0, select bank0
  2784  0517  1D03               	btfss	3,2
  2785  0518  2D1B               	goto	L14
  2786  0519  1705               	bsf	5,6
  2787  051A  2D1C               	goto	u2734
  2788  051B                     L14:	
  2789  051B  1305               	bcf	5,6
  2790  051C                     u2734:	
  2791  051C  3005               	movlw	5
  2792                           
  2793                           ;SWI2C.C: 132: RA7 = 1;
  2794  051D  1785               	bsf	5,7
  2795                           
  2796                           ;SWI2C.C: 133: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2797  051E  00A0               	movwf	??_swI2C_ReadByte
  2798  051F                     u3577:	
  2799  051F  0BA0               	decfsz	??_swI2C_ReadByte,f
  2800  0520  2D1F               	goto	u3577
  2801  0521  3005               	movlw	5
  2802                           
  2803                           ;SWI2C.C: 134: RA7 = 0;
  2804  0522  1283               	bcf	3,5	;RP0=0, select bank0
  2805  0523  1385               	bcf	5,7
  2806                           
  2807                           ;SWI2C.C: 135: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2808  0524  00A0               	movwf	??_swI2C_ReadByte
  2809  0525                     u3587:	
  2810  0525  0BA0               	decfsz	??_swI2C_ReadByte,f
  2811  0526  2D25               	goto	u3587
  2812                           
  2813                           ;SWI2C.C: 136: return dat;
  2814  0527  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0528  0822               	movf	swI2C_ReadByte@dat,w
  2816  0529  0008               	return
  2817  052A                     __end_of_swI2C_ReadByte:	
  2818                           
  2819                           	psect	text864
  2820  052A                     __ptext864:	
  2821 ;; =============== function _swI2C_ReadByte ends ============
  2822                           
  2823                           
  2824 ;; *************** function _swI2C_WriteByte *****************
  2825 ;; Defined at:
  2826 ;;		line 86 in file "SWI2C.C"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  dat             1    wreg     unsigned char 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  dat             1    1[BANK0 ] unsigned char 
  2831 ;;  i               1    2[BANK0 ] unsigned char 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      unsigned char 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 20/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1
  2841 ;;      Params:         0       0       0
  2842 ;;      Locals:         0       2       0
  2843 ;;      Temps:          0       1       0
  2844 ;;      Totals:         0       3       0
  2845 ;;Total ram usage:        3 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    2
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_AccWrite
  2852 ;;		_AccRead
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855  052A                     _swI2C_WriteByte:	
  2856                           
  2857                           ; Regs used in _swI2C_WriteByte: [wreg+status,2+status,0]
  2858                           ;swI2C_WriteByte@dat stored from wreg
  2859  052A  1283               	bcf	3,5	;RP0=0, select bank0
  2860  052B  00A1               	movwf	swI2C_WriteByte@dat
  2861                           
  2862                           ;SWI2C.C: 89: TRISA &=0xbf;;
  2863  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2864  052D  1305               	bcf	5,6	;volatile
  2865                           
  2866                           ;SWI2C.C: 90: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2867  052E  3005               	movlw	5
  2868  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2869  0530  00A0               	movwf	??_swI2C_WriteByte
  2870  0531                     u3597:	
  2871  0531  0BA0               	decfsz	??_swI2C_WriteByte,f
  2872  0532  2D31               	goto	u3597
  2873                           
  2874                           ;SWI2C.C: 91: for(i=0;i<8;i++)
  2875  0533  1283               	bcf	3,5	;RP0=0, select bank0
  2876  0534  01A2               	clrf	swI2C_WriteByte@i
  2877  0535                     l2594:	
  2878                           
  2879                           ;SWI2C.C: 92: {
  2880                           ;SWI2C.C: 93: RA6 = (dat&0x80) ? 1:0;
  2881  0535  1FA1               	btfss	swI2C_WriteByte@dat,7
  2882  0536  2D3A               	goto	u2680
  2883  0537  1283               	bcf	3,5	;RP0=0, select bank0
  2884  0538  1705               	bsf	5,6
  2885  0539  2D3C               	goto	u2694
  2886  053A                     u2680:	
  2887  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2888  053B  1305               	bcf	5,6
  2889  053C                     u2694:	
  2890  053C  3005               	movlw	5
  2891                           
  2892                           ;SWI2C.C: 94: dat<<=1;
  2893  053D  1003               	clrc
  2894  053E  0DA1               	rlf	swI2C_WriteByte@dat,f
  2895                           
  2896                           ;SWI2C.C: 95: RA7 = 1;
  2897  053F  1785               	bsf	5,7
  2898                           
  2899                           ;SWI2C.C: 96: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2900  0540  00A0               	movwf	??_swI2C_WriteByte
  2901  0541                     u3607:	
  2902  0541  0BA0               	decfsz	??_swI2C_WriteByte,f
  2903  0542  2D41               	goto	u3607
  2904  0543  3005               	movlw	5
  2905                           
  2906                           ;SWI2C.C: 97: RA7 = 0;
  2907  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2908  0545  1385               	bcf	5,7
  2909                           
  2910                           ;SWI2C.C: 98: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2911  0546  00A0               	movwf	??_swI2C_WriteByte
  2912  0547                     u3617:	
  2913  0547  0BA0               	decfsz	??_swI2C_WriteByte,f
  2914  0548  2D47               	goto	u3617
  2915  0549  3008               	movlw	8
  2916  054A  1283               	bcf	3,5	;RP0=0, select bank0
  2917  054B  0AA2               	incf	swI2C_WriteByte@i,f
  2918  054C  0222               	subwf	swI2C_WriteByte@i,w
  2919  054D  1C03               	skipc
  2920  054E  2D35               	goto	l2594
  2921                           
  2922                           ;SWI2C.C: 99: }
  2923                           ;SWI2C.C: 101: TRISA |=0x40;;
  2924  054F  1683               	bsf	3,5	;RP0=1, select bank1
  2925  0550  1705               	bsf	5,6	;volatile
  2926                           
  2927                           ;SWI2C.C: 102: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2928  0551  3005               	movlw	5
  2929  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2930  0553  00A0               	movwf	??_swI2C_WriteByte
  2931  0554                     u3627:	
  2932  0554  0BA0               	decfsz	??_swI2C_WriteByte,f
  2933  0555  2D54               	goto	u3627
  2934  0556  3005               	movlw	5
  2935                           
  2936                           ;SWI2C.C: 103: RA7 = 1;
  2937  0557  1283               	bcf	3,5	;RP0=0, select bank0
  2938  0558  1785               	bsf	5,7
  2939                           
  2940                           ;SWI2C.C: 104: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2941  0559  00A0               	movwf	??_swI2C_WriteByte
  2942  055A                     u3637:	
  2943  055A  0BA0               	decfsz	??_swI2C_WriteByte,f
  2944  055B  2D5A               	goto	u3637
  2945                           
  2946                           ;SWI2C.C: 105: i= RA6;
  2947  055C  3000               	movlw	0
  2948  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2949  055E  1B05               	btfsc	5,6
  2950  055F  3001               	movlw	1
  2951  0560  00A2               	movwf	swI2C_WriteByte@i
  2952                           
  2953                           ;SWI2C.C: 106: RA7 = 0;
  2954  0561  1385               	bcf	5,7
  2955                           
  2956                           ;SWI2C.C: 107: TRISA &=0xbf;;
  2957  0562  1683               	bsf	3,5	;RP0=1, select bank1
  2958  0563  1305               	bcf	5,6	;volatile
  2959                           
  2960                           ;SWI2C.C: 108: return i;
  2961  0564  1283               	bcf	3,5	;RP0=0, select bank0
  2962  0565  0822               	movf	swI2C_WriteByte@i,w
  2963  0566  0008               	return
  2964  0567                     __end_of_swI2C_WriteByte:	
  2965                           
  2966                           	psect	text865
  2967  06A8                     __ptext865:	
  2968 ;; =============== function _swI2C_WriteByte ends ============
  2969                           
  2970                           
  2971 ;; *************** function _swI2C_Stop *****************
  2972 ;; Defined at:
  2973 ;;		line 35 in file "SWI2C.C"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;		None
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;		None
  2978 ;; Return value:  Size  Location     Type
  2979 ;;		None               void
  2980 ;; Registers used:
  2981 ;;		wreg
  2982 ;; Tracked objects:
  2983 ;;		On entry : 20/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1
  2987 ;;      Params:         0       0       0
  2988 ;;      Locals:         0       0       0
  2989 ;;      Temps:          0       1       0
  2990 ;;      Totals:         0       1       0
  2991 ;;Total ram usage:        1 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    2
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_AccWrite
  2998 ;;		_AccRead
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001  06A8                     _swI2C_Stop:	
  3002  06A8  3005               	movlw	5
  3003                           
  3004                           ;SWI2C.C: 37: RA6 = 0;
  3005                           
  3006                           ; Regs used in _swI2C_Stop: [wreg]
  3007  06A9  1305               	bcf	5,6
  3008                           
  3009                           ;SWI2C.C: 38: RA7 = 1;
  3010  06AA  1785               	bsf	5,7
  3011                           
  3012                           ;SWI2C.C: 39: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3013  06AB  00A0               	movwf	??_swI2C_Stop
  3014  06AC                     u3647:	
  3015  06AC  0BA0               	decfsz	??_swI2C_Stop,f
  3016  06AD  2EAC               	goto	u3647
  3017  06AE  3005               	movlw	5
  3018                           
  3019                           ;SWI2C.C: 40: RA6 = 1;
  3020  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  3021  06B0  1705               	bsf	5,6
  3022                           
  3023                           ;SWI2C.C: 41: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3024  06B1  00A0               	movwf	??_swI2C_Stop
  3025  06B2                     u3657:	
  3026  06B2  0BA0               	decfsz	??_swI2C_Stop,f
  3027  06B3  2EB2               	goto	u3657
  3028  06B4  0008               	return
  3029  06B5                     __end_of_swI2C_Stop:	
  3030                           
  3031                           	psect	text866
  3032  0663                     __ptext866:	
  3033 ;; =============== function _swI2C_Stop ends ============
  3034                           
  3035                           
  3036 ;; *************** function _swI2C_Start *****************
  3037 ;; Defined at:
  3038 ;;		line 22 in file "SWI2C.C"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;		None               void
  3045 ;; Registers used:
  3046 ;;		wreg
  3047 ;; Tracked objects:
  3048 ;;		On entry : 20/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1
  3052 ;;      Params:         0       0       0
  3053 ;;      Locals:         0       0       0
  3054 ;;      Temps:          0       1       0
  3055 ;;      Totals:         0       1       0
  3056 ;;Total ram usage:        1 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    2
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_AccWrite
  3063 ;;		_AccRead
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066  0663                     _swI2C_Start:	
  3067  0663  3005               	movlw	5
  3068                           
  3069                           ;SWI2C.C: 24: RA7 = 1;
  3070                           
  3071                           ; Regs used in _swI2C_Start: [wreg]
  3072  0664  1785               	bsf	5,7
  3073                           
  3074                           ;SWI2C.C: 26: RA6 = 1;
  3075  0665  1705               	bsf	5,6
  3076                           
  3077                           ;SWI2C.C: 27: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3078  0666  00A0               	movwf	??_swI2C_Start
  3079  0667                     u3667:	
  3080  0667  0BA0               	decfsz	??_swI2C_Start,f
  3081  0668  2E67               	goto	u3667
  3082  0669  3005               	movlw	5
  3083                           
  3084                           ;SWI2C.C: 28: RA6 = 0;
  3085  066A  1283               	bcf	3,5	;RP0=0, select bank0
  3086  066B  1305               	bcf	5,6
  3087                           
  3088                           ;SWI2C.C: 29: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3089  066C  00A0               	movwf	??_swI2C_Start
  3090  066D                     u3677:	
  3091  066D  0BA0               	decfsz	??_swI2C_Start,f
  3092  066E  2E6D               	goto	u3677
  3093  066F  3005               	movlw	5
  3094                           
  3095                           ;SWI2C.C: 30: RA7 = 0;
  3096  0670  1283               	bcf	3,5	;RP0=0, select bank0
  3097  0671  1385               	bcf	5,7
  3098                           
  3099                           ;SWI2C.C: 31: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3100  0672  00A0               	movwf	??_swI2C_Start
  3101  0673                     u3687:	
  3102  0673  0BA0               	decfsz	??_swI2C_Start,f
  3103  0674  2E73               	goto	u3687
  3104  0675  0008               	return
  3105  0676                     __end_of_swI2C_Start:	
  3106                           
  3107                           	psect	text867
  3108  05CA                     __ptext867:	
  3109 ;; =============== function _swI2C_Start ends ============
  3110                           
  3111                           
  3112 ;; *************** function _swI2C_Init *****************
  3113 ;; Defined at:
  3114 ;;		line 8 in file "SWI2C.C"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;		None               void
  3121 ;; Registers used:
  3122 ;;		wreg
  3123 ;; Tracked objects:
  3124 ;;		On entry : 20/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMMON   BANK0   BANK1
  3128 ;;      Params:         0       0       0
  3129 ;;      Locals:         0       0       0
  3130 ;;      Temps:          0       1       0
  3131 ;;      Totals:         0       1       0
  3132 ;;Total ram usage:        1 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:    2
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_main
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141  05CA                     _swI2C_Init:	
  3142                           
  3143                           ;SWI2C.C: 10: TRISA &=0xbf;;
  3144                           
  3145                           ; Regs used in _swI2C_Init: [wreg]
  3146  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  3147  05CB  1305               	bcf	5,6	;volatile
  3148                           
  3149                           ;SWI2C.C: 11: TRISA &=0x7f;;
  3150  05CC  1385               	bcf	5,7	;volatile
  3151                           
  3152                           ;SWI2C.C: 12: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3153  05CD  3005               	movlw	5
  3154  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3155  05CF  00A0               	movwf	??_swI2C_Init
  3156  05D0                     u3697:	
  3157  05D0  0BA0               	decfsz	??_swI2C_Init,f
  3158  05D1  2DD0               	goto	u3697
  3159  05D2  3005               	movlw	5
  3160                           
  3161                           ;SWI2C.C: 13: RA7 = 1;
  3162  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  3163  05D4  1785               	bsf	5,7
  3164  05D5  1705               	bsf	5,6
  3165                           
  3166                           ;SWI2C.C: 15: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3167  05D6  00A0               	movwf	??_swI2C_Init
  3168  05D7                     u3707:	
  3169  05D7  0BA0               	decfsz	??_swI2C_Init,f
  3170  05D8  2DD7               	goto	u3707
  3171                           
  3172                           ;SWI2C.C: 16: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3173  05D9  3005               	movlw	5
  3174  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3175  05DB  00A0               	movwf	??_swI2C_Init
  3176  05DC                     u3717:	
  3177  05DC  0BA0               	decfsz	??_swI2C_Init,f
  3178  05DD  2DDC               	goto	u3717
  3179                           
  3180                           ;SWI2C.C: 17: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3181  05DE  3005               	movlw	5
  3182  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  3183  05E0  00A0               	movwf	??_swI2C_Init
  3184  05E1                     u3727:	
  3185  05E1  0BA0               	decfsz	??_swI2C_Init,f
  3186  05E2  2DE1               	goto	u3727
  3187                           
  3188                           ;SWI2C.C: 18: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3189  05E3  3005               	movlw	5
  3190  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  3191  05E5  00A0               	movwf	??_swI2C_Init
  3192  05E6                     u3737:	
  3193  05E6  0BA0               	decfsz	??_swI2C_Init,f
  3194  05E7  2DE6               	goto	u3737
  3195  05E8  0008               	return
  3196  05E9                     __end_of_swI2C_Init:	
  3197                           
  3198                           	psect	text868
  3199  06CE                     __ptext868:	
  3200 ;; =============== function _swI2C_Init ends ============
  3201                           
  3202                           
  3203 ;; *************** function _sys_init *****************
  3204 ;; Defined at:
  3205 ;;		line 3 in file "sysinit.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;		None
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;		None
  3210 ;; Return value:  Size  Location     Type
  3211 ;;		None               void
  3212 ;; Registers used:
  3213 ;;		wreg
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 20/20
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMMON   BANK0   BANK1
  3219 ;;      Params:         0       0       0
  3220 ;;      Locals:         0       0       0
  3221 ;;      Temps:          0       0       0
  3222 ;;      Totals:         0       0       0
  3223 ;;Total ram usage:        0 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    2
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_main
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232  06CE                     _sys_init:	
  3233                           
  3234                           ;sysinit.c: 21: OSCCON = 0B01010001;
  3235                           
  3236                           ; Regs used in _sys_init: [wreg]
  3237  06CE  3051               	movlw	81
  3238  06CF  1683               	bsf	3,5	;RP0=1, select bank1
  3239  06D0  008F               	movwf	15	;volatile
  3240                           
  3241                           ;sysinit.c: 22: _nop();
  3242  06D1  0000               	nop
  3243  06D2                     l1783:	
  3244                           ;sysinit.c: 28: while(HTS==0);
  3245                           
  3246  06D2  1683               	bsf	3,5	;RP0=1, select bank1
  3247  06D3  190F               	btfsc	15,2
  3248  06D4  0008               	return
  3249  06D5  2ED2               	goto	l1783
  3250  06D6                     __end_of_sys_init:	
  3251                           
  3252                           	psect	text869
  3253  0637                     __ptext869:	
  3254 ;; =============== function _sys_init ends ============
  3255                           
  3256                           
  3257 ;; *************** function _beep *****************
  3258 ;; Defined at:
  3259 ;;		line 176 in file "smartkey.C"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  delay           1    wreg     unsigned char 
  3262 ;;  rep             1    4[BANK0 ] unsigned char 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  delay           1    5[BANK0 ] unsigned char 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;		None               void
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0, pclath, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 20/0
  3271 ;;		On exit  : 20/0
  3272 ;;		Unchanged: FFFDF/0
  3273 ;; Data sizes:     COMMON   BANK0   BANK1
  3274 ;;      Params:         0       1       0
  3275 ;;      Locals:         0       1       0
  3276 ;;      Temps:          0       0       0
  3277 ;;      Totals:         0       2       0
  3278 ;;Total ram usage:        2 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:    3
  3281 ;; This function calls:
  3282 ;;		_delay_x10ms
  3283 ;; This function is called by:
  3284 ;;		_main
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287  0637                     _beep:	
  3288                           
  3289                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  3290                           ;beep@delay stored from wreg
  3291  0637  00A5               	movwf	beep@delay
  3292  0638                     l6509:	
  3293                           ;smartkey.C: 177: {
  3294                           ;smartkey.C: 178: while(rep--){
  3295                           
  3296  0638  03A4               	decf	beep@rep,f
  3297  0639  0824               	movf	beep@rep,w
  3298  063A  3AFF               	xorlw	255
  3299  063B  1903               	btfsc	3,2
  3300  063C  0008               	return
  3301  063D  300C               	movlw	12
  3302                           
  3303                           ;smartkey.C: 179: TMR2ON = 1;
  3304  063E  1512               	bsf	18,2
  3305                           
  3306                           ;smartkey.C: 180: PR2L = 12;
  3307  063F  1683               	bsf	3,5	;RP0=1, select bank1
  3308  0640  0091               	movwf	17	;volatile
  3309                           
  3310                           ;smartkey.C: 181: delay_x10ms(delay);
  3311  0641  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0642  0825               	movf	beep@delay,w
  3313  0643  00A0               	movwf	?_delay_x10ms
  3314  0644  01A1               	clrf	?_delay_x10ms+1
  3315  0645  2676               	fcall	_delay_x10ms
  3316  0646  3014               	movlw	20
  3317                           
  3318                           ;smartkey.C: 183: TMR2ON = 0;RA3 =0;
  3319  0647  1112               	bcf	18,2
  3320  0648  1185               	bcf	5,3
  3321                           
  3322                           ;smartkey.C: 184: delay_x10ms(20);
  3323  0649  00A0               	movwf	?_delay_x10ms
  3324  064A  01A1               	clrf	?_delay_x10ms+1
  3325  064B  2676               	fcall	_delay_x10ms
  3326  064C  2E38               	goto	l6509
  3327  064D                     __end_of_beep:	
  3328                           
  3329                           	psect	text870
  3330  0461                     __ptext870:	
  3331 ;; =============== function _beep ends ============
  3332                           
  3333                           
  3334 ;; *************** function ___awdiv *****************
  3335 ;; Defined at:
  3336 ;;		line 5 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\awdiv.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  divisor         2    0[BANK0 ] int 
  3339 ;;  dividend        2    2[BANK0 ] int 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  quotient        2    6[BANK0 ] int 
  3342 ;;  sign            1    5[BANK0 ] unsigned char 
  3343 ;;  counter         1    4[BANK0 ] unsigned char 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  2    0[BANK0 ] int 
  3346 ;; Registers used:
  3347 ;;		wreg, status,2, status,0
  3348 ;; Tracked objects:
  3349 ;;		On entry : 20/0
  3350 ;;		On exit  : 20/0
  3351 ;;		Unchanged: FFFDF/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1
  3353 ;;      Params:         0       4       0
  3354 ;;      Locals:         0       4       0
  3355 ;;      Temps:          0       0       0
  3356 ;;      Totals:         0       8       0
  3357 ;;Total ram usage:        8 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    2
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_main
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366  0461                     ___awdiv:	
  3367                           
  3368                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3369  0461  01A5               	clrf	___awdiv@sign
  3370  0462  1FA1               	btfss	___awdiv@divisor+1,7
  3371  0463  2C6B               	goto	l6461
  3372  0464  09A0               	comf	___awdiv@divisor,f
  3373  0465  09A1               	comf	___awdiv@divisor+1,f
  3374  0466  0AA0               	incf	___awdiv@divisor,f
  3375  0467  1903               	skipnz
  3376  0468  0AA1               	incf	___awdiv@divisor+1,f
  3377  0469  01A5               	clrf	___awdiv@sign
  3378  046A  0AA5               	incf	___awdiv@sign,f
  3379  046B                     l6461:	
  3380  046B  1FA3               	btfss	___awdiv@dividend+1,7
  3381  046C  2C74               	goto	l6467
  3382  046D  09A2               	comf	___awdiv@dividend,f
  3383  046E  09A3               	comf	___awdiv@dividend+1,f
  3384  046F  0AA2               	incf	___awdiv@dividend,f
  3385  0470  1903               	skipnz
  3386  0471  0AA3               	incf	___awdiv@dividend+1,f
  3387  0472  3001               	movlw	1
  3388  0473  06A5               	xorwf	___awdiv@sign,f
  3389  0474                     l6467:	
  3390  0474  01A6               	clrf	___awdiv@quotient
  3391  0475  01A7               	clrf	___awdiv@quotient+1
  3392  0476  0821               	movf	___awdiv@divisor+1,w
  3393  0477  0420               	iorwf	___awdiv@divisor,w
  3394  0478  1903               	skipnz
  3395  0479  2C99               	goto	l6489
  3396  047A  01A4               	clrf	___awdiv@counter
  3397  047B                     L15:	
  3398  047B  0AA4               	incf	___awdiv@counter,f
  3399  047C  1BA1               	btfsc	___awdiv@divisor+1,7
  3400  047D  2C82               	goto	l6477
  3401  047E  1003               	clrc
  3402  047F  0DA0               	rlf	___awdiv@divisor,f
  3403  0480  0DA1               	rlf	___awdiv@divisor+1,f
  3404  0481  2C7B               	goto	L15
  3405  0482                     l6477:	
  3406  0482  1003               	clrc
  3407  0483  0DA6               	rlf	___awdiv@quotient,f
  3408  0484  0DA7               	rlf	___awdiv@quotient+1,f
  3409  0485  0821               	movf	___awdiv@divisor+1,w
  3410  0486  0223               	subwf	___awdiv@dividend+1,w
  3411  0487  1D03               	skipz
  3412  0488  2C8B               	goto	u2635
  3413  0489  0820               	movf	___awdiv@divisor,w
  3414  048A  0222               	subwf	___awdiv@dividend,w
  3415  048B                     u2635:	
  3416  048B  1C03               	skipc
  3417  048C  2C95               	goto	L16
  3418  048D  0820               	movf	___awdiv@divisor,w
  3419  048E  02A2               	subwf	___awdiv@dividend,f
  3420  048F  0821               	movf	___awdiv@divisor+1,w
  3421  0490  1C03               	skipc
  3422  0491  03A3               	decf	___awdiv@dividend+1,f
  3423  0492  02A3               	subwf	___awdiv@dividend+1,f
  3424  0493  1426               	bsf	___awdiv@quotient,0
  3425  0494  1003               	clrc
  3426  0495                     L16:	
  3427  0495  0CA1               	rrf	___awdiv@divisor+1,f
  3428  0496  0CA0               	rrf	___awdiv@divisor,f
  3429  0497  0BA4               	decfsz	___awdiv@counter,f
  3430  0498  2C82               	goto	l6477
  3431  0499                     l6489:	
  3432  0499  0825               	movf	___awdiv@sign,w
  3433  049A  1903               	btfsc	3,2
  3434  049B  2CA1               	goto	l6493
  3435  049C  09A6               	comf	___awdiv@quotient,f
  3436  049D  09A7               	comf	___awdiv@quotient+1,f
  3437  049E  0AA6               	incf	___awdiv@quotient,f
  3438  049F  1903               	skipnz
  3439  04A0  0AA7               	incf	___awdiv@quotient+1,f
  3440  04A1                     l6493:	
  3441  04A1  0827               	movf	___awdiv@quotient+1,w
  3442  04A2  00A1               	movwf	?___awdiv+1
  3443  04A3  0826               	movf	___awdiv@quotient,w
  3444  04A4  00A0               	movwf	?___awdiv
  3445  04A5  0008               	return
  3446  04A6                     __end_of___awdiv:	
  3447                           
  3448                           	psect	text871
  3449  05E9                     __ptext871:	
  3450 ;; =============== function ___awdiv ends ============
  3451                           
  3452                           
  3453 ;; *************** function _int_init *****************
  3454 ;; Defined at:
  3455 ;;		line 83 in file "sysinit.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;		None
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  tmp             1    0        unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;		None               void
  3462 ;; Registers used:
  3463 ;;		wreg, status,2
  3464 ;; Tracked objects:
  3465 ;;		On entry : 20/0
  3466 ;;		On exit  : 20/0
  3467 ;;		Unchanged: FFFDF/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1
  3469 ;;      Params:         0       0       0
  3470 ;;      Locals:         0       0       0
  3471 ;;      Temps:          0       0       0
  3472 ;;      Totals:         0       0       0
  3473 ;;Total ram usage:        0 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    2
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_main
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482  05E9                     _int_init:	
  3483                           
  3484                           ;sysinit.c: 88: INTCON = 0B00000000;
  3485                           
  3486                           ; Regs used in _int_init: [wreg+status,2]
  3487  05E9  018B               	clrf	11	;volatile
  3488                           
  3489                           ;sysinit.c: 89: PIE1 = 0B00000000;
  3490  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  3491  05EB  018C               	clrf	12	;volatile
  3492                           
  3493                           ;sysinit.c: 90: PIR1 = 0B00000000;
  3494  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  3495  05ED  018C               	clrf	12	;volatile
  3496                           
  3497                           ;sysinit.c: 92: IOCA5 = 1;
  3498  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  3499  05EF  1696               	bsf	22,5
  3500                           
  3501                           ;sysinit.c: 93: tmp = PORTA;
  3502  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  3503  05F1  0805               	movf	5,w	;volatile
  3504                           
  3505                           ;sysinit.c: 94: PAIF = 0;
  3506  05F2  100B               	bcf	11,0
  3507                           
  3508                           ;sysinit.c: 95: PAIE = 0;
  3509  05F3  118B               	bcf	11,3
  3510                           
  3511                           ;sysinit.c: 98: INTEDG = 0;
  3512  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3513  05F5  1301               	bcf	1,6
  3514                           
  3515                           ;sysinit.c: 99: INTF = 0;
  3516  05F6  108B               	bcf	11,1
  3517                           
  3518                           ;sysinit.c: 100: INTE = 1;
  3519  05F7  160B               	bsf	11,4
  3520                           
  3521                           ;sysinit.c: 102: TMR2IF = 0;
  3522  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3523  05F9  108C               	bcf	12,1
  3524                           
  3525                           ;sysinit.c: 103: TMR2IE = 1;
  3526  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3527  05FB  148C               	bsf	12,1
  3528                           
  3529                           ;sysinit.c: 104: TMR2ON = 0;
  3530  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  3531  05FD  1112               	bcf	18,2
  3532                           
  3533                           ;sysinit.c: 110: T0IF = 0;
  3534  05FE  110B               	bcf	11,2
  3535                           
  3536                           ;sysinit.c: 111: T0IE = 1;
  3537  05FF  168B               	bsf	11,5
  3538                           
  3539                           ;sysinit.c: 112: T0ON = 1;
  3540  0600  159F               	bsf	31,3
  3541                           
  3542                           ;sysinit.c: 114: PEIE = 1;
  3543  0601  170B               	bsf	11,6
  3544                           
  3545                           ;sysinit.c: 116: GIE = 1;
  3546  0602  178B               	bsf	11,7
  3547  0603  0008               	return
  3548  0604                     __end_of_int_init:	
  3549                           
  3550                           	psect	text872
  3551  0689                     __ptext872:	
  3552 ;; =============== function _int_init ends ============
  3553                           
  3554                           
  3555 ;; *************** function _timer_init *****************
  3556 ;; Defined at:
  3557 ;;		line 51 in file "sysinit.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;		None
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;		None
  3562 ;; Return value:  Size  Location     Type
  3563 ;;		None               void
  3564 ;; Registers used:
  3565 ;;		wreg, status,2
  3566 ;; Tracked objects:
  3567 ;;		On entry : 20/0
  3568 ;;		On exit  : 20/0
  3569 ;;		Unchanged: FFFDF/0
  3570 ;; Data sizes:     COMMON   BANK0   BANK1
  3571 ;;      Params:         0       0       0
  3572 ;;      Locals:         0       0       0
  3573 ;;      Temps:          0       0       0
  3574 ;;      Totals:         0       0       0
  3575 ;;Total ram usage:        0 bytes
  3576 ;; Hardware stack levels used:    1
  3577 ;; Hardware stack levels required when called:    2
  3578 ;; This function calls:
  3579 ;;		Nothing
  3580 ;; This function is called by:
  3581 ;;		_main
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584  0689                     _timer_init:	
  3585                           
  3586                           ;sysinit.c: 60: T0CON0 = 0B00000000;
  3587                           
  3588                           ; Regs used in _timer_init: [wreg+status,2]
  3589  0689  019F               	clrf	31	;volatile
  3590                           
  3591                           ;sysinit.c: 61: OPTION = 0B00000111;
  3592  068A  3007               	movlw	7
  3593  068B  1683               	bsf	3,5	;RP0=1, select bank1
  3594  068C  0081               	movwf	1	;volatile
  3595                           
  3596                           ;sysinit.c: 62: TMR0 = 179;
  3597  068D  30B3               	movlw	179
  3598  068E  1283               	bcf	3,5	;RP0=0, select bank0
  3599  068F  0081               	movwf	1	;volatile
  3600                           
  3601                           ;sysinit.c: 64: TMR2H = 0;
  3602  0690  0193               	clrf	19	;volatile
  3603                           
  3604                           ;sysinit.c: 65: TMR2L = 0;
  3605  0691  0191               	clrf	17	;volatile
  3606                           
  3607                           ;sysinit.c: 66: PR2H = 0;
  3608  0692  1683               	bsf	3,5	;RP0=1, select bank1
  3609  0693  0192               	clrf	18	;volatile
  3610                           
  3611                           ;sysinit.c: 67: PR2L =0;
  3612  0694  0191               	clrf	17	;volatile
  3613                           
  3614                           ;sysinit.c: 68: T2CON0 = 0B00101001;
  3615  0695  3029               	movlw	41
  3616  0696  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0697  0092               	movwf	18	;volatile
  3618  0698  0008               	return
  3619  0699                     __end_of_timer_init:	
  3620                           
  3621                           	psect	text873
  3622  064D                     __ptext873:	
  3623 ;; =============== function _timer_init ends ============
  3624                           
  3625                           
  3626 ;; *************** function _gpio_init *****************
  3627 ;; Defined at:
  3628 ;;		line 32 in file "sysinit.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;		None               void
  3635 ;; Registers used:
  3636 ;;		wreg, status,2
  3637 ;; Tracked objects:
  3638 ;;		On entry : 20/20
  3639 ;;		On exit  : 20/0
  3640 ;;		Unchanged: FFFDF/0
  3641 ;; Data sizes:     COMMON   BANK0   BANK1
  3642 ;;      Params:         0       0       0
  3643 ;;      Locals:         0       0       0
  3644 ;;      Temps:          0       0       0
  3645 ;;      Totals:         0       0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    2
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655  064D                     _gpio_init:	
  3656                           
  3657                           ;sysinit.c: 34: PORTA = 0B00000000;
  3658                           
  3659                           ; Regs used in _gpio_init: [wreg+status,2]
  3660  064D  1283               	bcf	3,5	;RP0=0, select bank0
  3661  064E  0185               	clrf	5	;volatile
  3662                           
  3663                           ;sysinit.c: 35: TRISA = 0B00110111;
  3664  064F  3037               	movlw	55
  3665  0650  1683               	bsf	3,5	;RP0=1, select bank1
  3666  0651  0085               	movwf	5	;volatile
  3667                           
  3668                           ;sysinit.c: 36: WPUA = 0B11000000;
  3669  0652  30C0               	movlw	192
  3670  0653  0095               	movwf	21	;volatile
  3671                           
  3672                           ;sysinit.c: 38: PORTC = 0B00000000;
  3673  0654  1283               	bcf	3,5	;RP0=0, select bank0
  3674  0655  0187               	clrf	7	;volatile
  3675                           
  3676                           ;sysinit.c: 39: TRISC = 0B11111100;
  3677  0656  30FC               	movlw	252
  3678  0657  1683               	bsf	3,5	;RP0=1, select bank1
  3679  0658  0087               	movwf	7	;volatile
  3680                           
  3681                           ;sysinit.c: 40: WPUC = 0B00000000;
  3682  0659  0193               	clrf	19	;volatile
  3683                           
  3684                           ;sysinit.c: 42: PSRCA = 0B11111111;
  3685  065A  30FF               	movlw	255
  3686  065B  0088               	movwf	8	;volatile
  3687                           
  3688                           ;sysinit.c: 43: PSRCC = 0B11111111;
  3689  065C  0094               	movwf	20	;volatile
  3690                           
  3691                           ;sysinit.c: 44: PSINKA = 0B11111111;
  3692  065D  0097               	movwf	23	;volatile
  3693                           
  3694                           ;sysinit.c: 45: PSINKC = 0B11111111;
  3695  065E  009F               	movwf	31	;volatile
  3696                           
  3697                           ;sysinit.c: 47: MSCON = 0B00110000;
  3698  065F  3030               	movlw	48
  3699  0660  1283               	bcf	3,5	;RP0=0, select bank0
  3700  0661  009B               	movwf	27	;volatile
  3701  0662  0008               	return
  3702  0663                     __end_of_gpio_init:	
  3703                           
  3704                           	psect	text874
  3705  04A6                     __ptext874:	
  3706 ;; =============== function _gpio_init ends ============
  3707                           
  3708                           
  3709 ;; *************** function _compe *****************
  3710 ;; Defined at:
  3711 ;;		line 226 in file "smartkey.C"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  a               1    wreg     char 
  3714 ;;  b               1    0[BANK0 ] char 
  3715 ;;  dt              1    1[BANK0 ] char 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  a               1    7[BANK0 ] char 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      unsigned char 
  3720 ;; Registers used:
  3721 ;;		wreg
  3722 ;; Tracked objects:
  3723 ;;		On entry : 20/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: FFE00/0
  3726 ;; Data sizes:     COMMON   BANK0   BANK1
  3727 ;;      Params:         0       2       0
  3728 ;;      Locals:         0       1       0
  3729 ;;      Temps:          0       5       0
  3730 ;;      Totals:         0       8       0
  3731 ;;Total ram usage:        8 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    2
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_main
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740  04A6                     _compe:	
  3741                           
  3742                           ; Regs used in _compe: [wreg]
  3743                           ;compe@a stored from wreg
  3744  04A6  00A7               	movwf	compe@a
  3745                           
  3746                           ;smartkey.C: 228: if(a>b){
  3747  04A7  0820               	movf	compe@b,w
  3748  04A8  3A80               	xorlw	128
  3749  04A9  00A2               	movwf	??_compe
  3750  04AA  0827               	movf	compe@a,w
  3751  04AB  3A80               	xorlw	128
  3752  04AC  02A2               	subwf	??_compe,f
  3753  04AD  1803               	skipnc
  3754  04AE  2CD2               	goto	l6379
  3755                           
  3756                           ;smartkey.C: 229: if((a-b)<=dt) return 1;
  3757  04AF  0820               	movf	compe@b,w
  3758  04B0  0227               	subwf	compe@a,w
  3759  04B1  00A2               	movwf	??_compe
  3760  04B2  01A3               	clrf	??_compe+1
  3761  04B3  1C03               	skipc
  3762  04B4  03A3               	decf	??_compe+1,f
  3763  04B5  1BA7               	btfsc	compe@a,7
  3764  04B6  03A3               	decf	??_compe+1,f
  3765  04B7  1BA0               	btfsc	compe@b,7
  3766  04B8  0AA3               	incf	??_compe+1,f
  3767  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3768  04BA  24DF               	fcall	PL3	;call to abstracted procedure
  3769  04BB  1D03               	skipz
  3770  04BC  2CBF               	goto	u2545
  3771  04BD  0822               	movf	??_compe,w
  3772  04BE  0224               	subwf	??_compe+2,w
  3773  04BF                     u2545:	
  3774  04BF  1C03               	skipc
  3775  04C0  3400               	retlw	0
  3776  04C1  3401               	retlw	1
  3777  04C2                     L17:	
  3778                           ;smartkey.C: 233: if((b-a)<=dt) return 1;
  3779                           
  3780  04C2  0220               	subwf	compe@b,w
  3781  04C3  00A2               	movwf	??_compe
  3782  04C4  01A3               	clrf	??_compe+1
  3783  04C5  1C03               	skipc
  3784  04C6  03A3               	decf	??_compe+1,f
  3785  04C7  1BA0               	btfsc	compe@b,7
  3786  04C8  03A3               	decf	??_compe+1,f
  3787  04C9  1BA7               	btfsc	compe@a,7
  3788  04CA  0AA3               	incf	??_compe+1,f
  3789  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  3790  04CC  24DF               	fcall	PL3	;call to abstracted procedure
  3791  04CD  1D03               	skipz
  3792  04CE  2CBF               	goto	u2545
  3793  04CF  0822               	movf	??_compe,w
  3794  04D0  0224               	subwf	??_compe+2,w
  3795  04D1  2CBF               	goto	u2545
  3796  04D2                     l6379:	
  3797                           ;smartkey.C: 230: else return 0;
  3798                           
  3799                           
  3800                           ;smartkey.C: 232: else if(a<b){
  3801  04D2  0827               	movf	compe@a,w
  3802  04D3  3A80               	xorlw	128
  3803  04D4  00A2               	movwf	??_compe
  3804  04D5  0820               	movf	compe@b,w
  3805  04D6  3A80               	xorlw	128
  3806  04D7  02A2               	subwf	??_compe,f
  3807                           
  3808                           ;smartkey.C: 236: else if(a==b){
  3809  04D8  0827               	movf	compe@a,w
  3810  04D9  1C03               	btfss	3,0
  3811  04DA  2CC2               	goto	L17
  3812  04DB  0620               	xorwf	compe@b,w
  3813  04DC  1903               	btfsc	3,2
  3814  04DD  3401               	retlw	1
  3815  04DE  3400               	retlw	0
  3816  04DF                     __end_of_compe:	
  3817  04DF                     PL3:	
  3818  04DF  0821               	movf	compe@dt,w
  3819  04E0  00A4               	movwf	??_compe+2
  3820  04E1  01A5               	clrf	??_compe+3
  3821  04E2  1BA4               	btfsc	??_compe+2,7
  3822  04E3  03A5               	decf	??_compe+3,f
  3823  04E4  0825               	movf	??_compe+3,w
  3824  04E5  3A80               	xorlw	128
  3825  04E6  00A6               	movwf	??_compe+4
  3826  04E7  0823               	movf	??_compe+1,w
  3827  04E8  3A80               	xorlw	128
  3828  04E9  0226               	subwf	??_compe+4,w
  3829  04EA  0008               	return
  3830                           
  3831                           	psect	text875
  3832  06C2                     __ptext875:	
  3833 ;; =============== function _compe ends ============
  3834                           
  3835                           
  3836 ;; *************** function _setState *****************
  3837 ;; Defined at:
  3838 ;;		line 220 in file "smartkey.C"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  stt             1    wreg     unsigned char 
  3841 ;;  _tOut           2    0[BANK0 ] unsigned int 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  stt             1    2[BANK0 ] unsigned char 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;		None               void
  3846 ;; Registers used:
  3847 ;;		wreg, status,2
  3848 ;; Tracked objects:
  3849 ;;		On entry : 20/0
  3850 ;;		On exit  : 20/0
  3851 ;;		Unchanged: FFFDF/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1
  3853 ;;      Params:         0       2       0
  3854 ;;      Locals:         0       1       0
  3855 ;;      Temps:          0       0       0
  3856 ;;      Totals:         0       3       0
  3857 ;;Total ram usage:        3 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:    2
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_main
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866  06C2                     _setState:	
  3867                           
  3868                           ; Regs used in _setState: [wreg+status,2]
  3869                           ;setState@stt stored from wreg
  3870  06C2  00A2               	movwf	setState@stt
  3871                           
  3872                           ;smartkey.C: 221: mtOldState = mtState;
  3873  06C3  0874               	movf	_mtState,w
  3874  06C4  00CC               	movwf	_mtOldState
  3875                           
  3876                           ;smartkey.C: 222: mtState = stt;
  3877  06C5  0822               	movf	setState@stt,w
  3878  06C6  00F4               	movwf	_mtState
  3879                           
  3880                           ;smartkey.C: 223: timeTick =0;
  3881  06C7  01F0               	clrf	_timeTick
  3882  06C8  01F1               	clrf	_timeTick+1
  3883                           
  3884                           ;smartkey.C: 224: timeOut = _tOut;
  3885  06C9  0821               	movf	setState@_tOut+1,w
  3886  06CA  00C8               	movwf	_timeOut+1
  3887  06CB  0820               	movf	setState@_tOut,w
  3888  06CC  00C7               	movwf	_timeOut
  3889  06CD  0008               	return
  3890  06CE                     __end_of_setState:	
  3891                           
  3892                           	psect	text876
  3893  06E3                     __ptext876:	
  3894 ;; =============== function _setState ends ============
  3895                           
  3896                           
  3897 ;; *************** function _beepOn *****************
  3898 ;; Defined at:
  3899 ;;		line 172 in file "smartkey.C"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;		None
  3904 ;; Return value:  Size  Location     Type
  3905 ;;		None               void
  3906 ;; Registers used:
  3907 ;;		None
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/20
  3910 ;;		On exit  : 20/20
  3911 ;;		Unchanged: FFFDF/0
  3912 ;; Data sizes:     COMMON   BANK0   BANK1
  3913 ;;      Params:         0       0       0
  3914 ;;      Locals:         0       0       0
  3915 ;;      Temps:          0       0       0
  3916 ;;      Totals:         0       0       0
  3917 ;;Total ram usage:        0 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:    2
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_main
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926  06E3                     _beepOn:	
  3927                           
  3928                           ;smartkey.C: 173: TMR2ON = 1;
  3929                           
  3930                           ; Regs used in _beepOn: []
  3931  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  3932  06E4  1512               	bsf	18,2
  3933                           
  3934                           ;smartkey.C: 174: TRISA &= 0xf7;
  3935  06E5  1683               	bsf	3,5	;RP0=1, select bank1
  3936  06E6  1185               	bcf	5,3	;volatile
  3937  06E7  0008               	return
  3938  06E8                     __end_of_beepOn:	
  3939                           
  3940                           	psect	text877
  3941  06E8                     __ptext877:	
  3942 ;; =============== function _beepOn ends ============
  3943                           
  3944                           
  3945 ;; *************** function _beepOff *****************
  3946 ;; Defined at:
  3947 ;;		line 169 in file "smartkey.C"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;		None
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;		None               void
  3954 ;; Registers used:
  3955 ;;		None
  3956 ;; Tracked objects:
  3957 ;;		On entry : 20/0
  3958 ;;		On exit  : 20/20
  3959 ;;		Unchanged: FFFDF/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1
  3961 ;;      Params:         0       0       0
  3962 ;;      Locals:         0       0       0
  3963 ;;      Temps:          0       0       0
  3964 ;;      Totals:         0       0       0
  3965 ;;Total ram usage:        0 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    2
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_main
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974  06E8                     _beepOff:	
  3975                           
  3976                           ;smartkey.C: 170: TMR2ON = 0;RA3 =0;TRISA |= 0x08;
  3977                           
  3978                           ; Regs used in _beepOff: []
  3979  06E8  1112               	bcf	18,2
  3980  06E9  1185               	bcf	5,3
  3981  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  3982  06EB  1585               	bsf	5,3	;volatile
  3983  06EC  0008               	return
  3984  06ED                     __end_of_beepOff:	
  3985                           
  3986                           	psect	text878
  3987  0676                     __ptext878:	
  3988 ;; =============== function _beepOff ends ============
  3989                           
  3990                           
  3991 ;; *************** function _delay_x10ms *****************
  3992 ;; Defined at:
  3993 ;;		line 164 in file "smartkey.C"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  t               2    0[BANK0 ] unsigned int 
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;  set             2    2[BANK0 ] unsigned int 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;		None               void
  4000 ;; Registers used:
  4001 ;;		wreg
  4002 ;; Tracked objects:
  4003 ;;		On entry : 20/0
  4004 ;;		On exit  : 20/0
  4005 ;;		Unchanged: FFFDF/0
  4006 ;; Data sizes:     COMMON   BANK0   BANK1
  4007 ;;      Params:         0       2       0
  4008 ;;      Locals:         0       2       0
  4009 ;;      Temps:          0       0       0
  4010 ;;      Totals:         0       4       0
  4011 ;;Total ram usage:        4 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:    2
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_beep
  4018 ;;		_main
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021  0676                     _delay_x10ms:	
  4022                           
  4023                           ;smartkey.C: 165: unsigned int set = t + timeTick;
  4024                           
  4025                           ; Regs used in _delay_x10ms: [wreg]
  4026  0676  0821               	movf	delay_x10ms@t+1,w
  4027  0677  00A3               	movwf	delay_x10ms@set+1
  4028  0678  0820               	movf	delay_x10ms@t,w
  4029  0679  00A2               	movwf	delay_x10ms@set
  4030  067A  0870               	movf	_timeTick,w
  4031  067B  07A2               	addwf	delay_x10ms@set,f
  4032  067C  1803               	skipnc
  4033  067D  0AA3               	incf	delay_x10ms@set+1,f
  4034  067E  0871               	movf	_timeTick+1,w
  4035  067F  07A3               	addwf	delay_x10ms@set+1,f
  4036  0680                     l6353:	
  4037                           ;smartkey.C: 166: while(timeTick < set);
  4038                           
  4039  0680  0823               	movf	delay_x10ms@set+1,w
  4040  0681  0271               	subwf	_timeTick+1,w
  4041  0682  1D03               	skipz
  4042  0683  2E86               	goto	u2515
  4043  0684  0822               	movf	delay_x10ms@set,w
  4044  0685  0270               	subwf	_timeTick,w
  4045  0686                     u2515:	
  4046  0686  1803               	btfsc	3,0
  4047  0687  0008               	return
  4048  0688  2E80               	goto	l6353
  4049  0689                     __end_of_delay_x10ms:	
  4050                           
  4051                           	psect	text879
  4052  0604                     __ptext879:	
  4053 ;; =============== function _delay_x10ms ends ============
  4054                           
  4055                           
  4056 ;; *************** function _WRITE_EEPROM *****************
  4057 ;; Defined at:
  4058 ;;		line 205 in file "smartkey.C"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  EEAddr          1    wreg     unsigned char 
  4061 ;;  EEData          1    0[BANK0 ] unsigned char 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  EEAddr          1    1[BANK0 ] unsigned char 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;		None               void
  4066 ;; Registers used:
  4067 ;;		wreg
  4068 ;; Tracked objects:
  4069 ;;		On entry : 20/0
  4070 ;;		On exit  : 20/20
  4071 ;;		Unchanged: FFE00/0
  4072 ;; Data sizes:     COMMON   BANK0   BANK1
  4073 ;;      Params:         0       1       0
  4074 ;;      Locals:         0       1       0
  4075 ;;      Temps:          0       0       0
  4076 ;;      Totals:         0       2       0
  4077 ;;Total ram usage:        2 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:    2
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_main
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086  0604                     _WRITE_EEPROM:	
  4087                           
  4088                           ; Regs used in _WRITE_EEPROM: [wreg]
  4089                           ;WRITE_EEPROM@EEAddr stored from wreg
  4090  0604  00A1               	movwf	WRITE_EEPROM@EEAddr
  4091                           
  4092                           ;smartkey.C: 206: GIE = 0;
  4093  0605  138B               	bcf	11,7
  4094  0606                     l874:	
  4095                           ;smartkey.C: 207: while(GIE) asm("clrwdt");
  4096                           
  4097  0606  1F8B               	btfss	11,7
  4098  0607  2E0A               	goto	l6345
  4099  0608  0064               	clrwdt	;#
  4100  0609  2E06               	goto	l874
  4101  060A                     l6345:	
  4102                           
  4103                           ;smartkey.C: 208: EEADR = EEAddr;
  4104  060A  1283               	bcf	3,5	;RP0=0, select bank0
  4105  060B  0821               	movf	WRITE_EEPROM@EEAddr,w
  4106  060C  1683               	bsf	3,5	;RP0=1, select bank1
  4107  060D  009B               	movwf	27	;volatile
  4108                           
  4109                           ;smartkey.C: 209: EEDAT = EEData;
  4110  060E  1283               	bcf	3,5	;RP0=0, select bank0
  4111  060F  0820               	movf	WRITE_EEPROM@EEData,w
  4112  0610  1683               	bsf	3,5	;RP0=1, select bank1
  4113  0611  009A               	movwf	26	;volatile
  4114  0612  3034               	movlw	52
  4115                           
  4116                           ;smartkey.C: 210: EEIF = 0;
  4117  0613  1283               	bcf	3,5	;RP0=0, select bank0
  4118  0614  138C               	bcf	12,7
  4119                           
  4120                           ;smartkey.C: 211: EECON1 = 0x34;
  4121  0615  1683               	bsf	3,5	;RP0=1, select bank1
  4122  0616  009C               	movwf	28	;volatile
  4123                           
  4124                           ;smartkey.C: 212: WR = 1;
  4125  0617  141D               	bsf	29,0
  4126  0618                     l877:	
  4127                           ;smartkey.C: 213: while(WR) asm("clrwdt");
  4128                           
  4129  0618  1683               	bsf	3,5	;RP0=1, select bank1
  4130  0619  1C1D               	btfss	29,0
  4131  061A  2E1D               	goto	l879
  4132  061B  0064               	clrwdt	;#
  4133  061C  2E18               	goto	l877
  4134  061D                     l879:	
  4135                           
  4136                           ;smartkey.C: 215: GIE = 1;
  4137  061D  178B               	bsf	11,7
  4138  061E  0008               	return
  4139  061F                     __end_of_WRITE_EEPROM:	
  4140                           
  4141                           	psect	text880
  4142  06B5                     __ptext880:	
  4143 ;; =============== function _WRITE_EEPROM ends ============
  4144                           
  4145                           
  4146 ;; *************** function _READ_EEPROM *****************
  4147 ;; Defined at:
  4148 ;;		line 194 in file "smartkey.C"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  EEAddr          1    wreg     unsigned char 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  EEAddr          1    0[BANK0 ] unsigned char 
  4153 ;;  ReEepromData    1    1[BANK0 ] unsigned char 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      unsigned char 
  4156 ;; Registers used:
  4157 ;;		wreg
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/20
  4160 ;;		On exit  : 20/0
  4161 ;;		Unchanged: FFFDF/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1
  4163 ;;      Params:         0       0       0
  4164 ;;      Locals:         0       2       0
  4165 ;;      Temps:          0       0       0
  4166 ;;      Totals:         0       2       0
  4167 ;;Total ram usage:        2 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    2
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_main
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176  06B5                     _READ_EEPROM:	
  4177                           
  4178                           ; Regs used in _READ_EEPROM: [wreg]
  4179                           ;READ_EEPROM@EEAddr stored from wreg
  4180  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  4181  06B6  00A0               	movwf	READ_EEPROM@EEAddr
  4182                           
  4183                           ;smartkey.C: 195: unsigned char ReEepromData;
  4184                           ;smartkey.C: 197: EEADR = EEAddr;
  4185  06B7  1683               	bsf	3,5	;RP0=1, select bank1
  4186  06B8  009B               	movwf	27	;volatile
  4187                           
  4188                           ;smartkey.C: 198: RD = 1;
  4189  06B9  141C               	bsf	28,0
  4190                           
  4191                           ;smartkey.C: 199: ReEepromData = EEDAT;
  4192  06BA  081A               	movf	26,w	;volatile
  4193  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  4194  06BC  00A1               	movwf	READ_EEPROM@ReEepromData
  4195                           
  4196                           ;smartkey.C: 200: RD = 0;
  4197  06BD  1683               	bsf	3,5	;RP0=1, select bank1
  4198  06BE  101C               	bcf	28,0
  4199                           
  4200                           ;smartkey.C: 201: return ReEepromData;
  4201  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  4202  06C0  0821               	movf	READ_EEPROM@ReEepromData,w
  4203  06C1  0008               	return
  4204  06C2                     __end_of_READ_EEPROM:	
  4205                           
  4206                           	psect	text881
  4207  03DB                     __ptext881:	
  4208 ;; =============== function _READ_EEPROM ends ============
  4209                           
  4210                           
  4211 ;; *************** function _ISR *****************
  4212 ;; Defined at:
  4213 ;;		line 38 in file "smartkey.C"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;		None
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  tmp             1    4[COMMON] unsigned char 
  4218 ;;  tmp             1    0        unsigned char 
  4219 ;; Return value:  Size  Location     Type
  4220 ;;		None               void
  4221 ;; Registers used:
  4222 ;;		wreg, status,2, status,0, pclath, cstack
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: FFE00/0
  4227 ;; Data sizes:     COMMON   BANK0   BANK1
  4228 ;;      Params:         0       0       0
  4229 ;;      Locals:         1       0       0
  4230 ;;      Temps:          2       0       0
  4231 ;;      Totals:         3       0       0
  4232 ;;Total ram usage:        3 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; Hardware stack levels required when called:    1
  4235 ;; This function calls:
  4236 ;;		i1_READ_EEPROM
  4237 ;;		i1_WRITE_EEPROM
  4238 ;; This function is called by:
  4239 ;;		Interrupt level 1
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242  03DB                     _ISR:	
  4243                           
  4244                           ;smartkey.C: 42: if(PAIE&&PAIF){
  4245  03DB  198B               	btfsc	11,3
  4246  03DC  1C0B               	btfss	11,0
  4247  03DD  2BEC               	goto	i1l5439
  4248                           
  4249                           ;smartkey.C: 44: tmp = PORTA;
  4250  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  4251  03DF  0805               	movf	5,w	;volatile
  4252                           
  4253                           ;smartkey.C: 45: PAIF = 0;
  4254  03E0  100B               	bcf	11,0
  4255                           
  4256                           ;smartkey.C: 47: if(RA5){
  4257  03E1  1E85               	btfss	5,5
  4258  03E2  2BEB               	goto	i1l5437
  4259                           
  4260                           ;smartkey.C: 49: if(mode_chek == 0){
  4261  03E3  08F3               	movf	_mode_chek,f
  4262  03E4  1D03               	skipz
  4263  03E5  2BEC               	goto	i1l5439
  4264                           
  4265                           ;smartkey.C: 50: cntCyc = 0;
  4266  03E6  01F2               	clrf	_cntCyc
  4267                           
  4268                           ;smartkey.C: 51: cntOff = 0;
  4269  03E7  01CA               	clrf	_cntOff
  4270                           
  4271                           ;smartkey.C: 53: mode_chek = 1;
  4272  03E8  01F3               	clrf	_mode_chek
  4273  03E9  0AF3               	incf	_mode_chek,f
  4274  03EA  2BEC               	goto	i1l5439
  4275  03EB                     i1l5437:	
  4276                           
  4277                           ;smartkey.C: 58: else{
  4278                           ;smartkey.C: 59: cntOff = 0;
  4279  03EB  01CA               	clrf	_cntOff
  4280  03EC                     i1l5439:	
  4281                           
  4282                           ;smartkey.C: 61: }
  4283                           ;smartkey.C: 63: }
  4284                           ;smartkey.C: 66: if(INTE&&INTF){
  4285  03EC  1A0B               	btfsc	11,4
  4286  03ED  1C8B               	btfss	11,1
  4287  03EE  2C02               	goto	i1l829
  4288                           
  4289                           ;smartkey.C: 67: unsigned char tmp;
  4290                           ;smartkey.C: 68: INTF = 0;
  4291  03EF  108B               	bcf	11,1
  4292                           
  4293                           ;smartkey.C: 70: if( RA2==0){
  4294  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  4295  03F1  1905               	btfsc	5,2
  4296  03F2  2C02               	goto	i1l829
  4297                           
  4298                           ;smartkey.C: 72: if(timeTick <0x20){
  4299  03F3  3000               	movlw	0
  4300  03F4  0271               	subwf	_timeTick+1,w
  4301  03F5  3020               	movlw	32
  4302  03F6  1903               	skipnz
  4303  03F7  0270               	subwf	_timeTick,w
  4304  03F8  1803               	skipnc
  4305  03F9  2C01               	goto	i1l831
  4306                           
  4307                           ;smartkey.C: 73: tmp = READ_EEPROM(0x40);
  4308  03FA  3040               	movlw	64
  4309  03FB  26D6               	fcall	i1_READ_EEPROM
  4310  03FC  00F9               	movwf	ISR@tmp_1138
  4311                           
  4312                           ;smartkey.C: 74: WRITE_EEPROM(0x40,tmp+1);
  4313  03FD  0A79               	incf	ISR@tmp_1138,w
  4314  03FE  00F5               	movwf	?i1_WRITE_EEPROM
  4315  03FF  3040               	movlw	64
  4316  0400  261F               	fcall	i1_WRITE_EEPROM
  4317  0401                     i1l831:	
  4318  0401  2C01               	goto	i1l831
  4319  0402                     i1l829:	
  4320                           
  4321                           ;smartkey.C: 83: }
  4322                           ;smartkey.C: 85: }
  4323                           ;smartkey.C: 88: if (T0IE && T0IF) {
  4324  0402  1A8B               	btfsc	11,5
  4325  0403  1D0B               	btfss	11,2
  4326  0404  2C51               	goto	i1l5497
  4327  0405  30B3               	movlw	179
  4328                           
  4329                           ;smartkey.C: 89: T0IF = 0;
  4330  0406  110B               	bcf	11,2
  4331                           
  4332                           ;smartkey.C: 90: TMR0 = 179;
  4333  0407  1283               	bcf	3,5	;RP0=0, select bank0
  4334  0408  0081               	movwf	1	;volatile
  4335                           
  4336                           ;smartkey.C: 96: if( mode_chek == 1){
  4337  0409  0B73               	decfsz	_mode_chek,w
  4338  040A  2C23               	goto	i1l5477
  4339                           
  4340                           ;smartkey.C: 98: cntCyc++;
  4341  040B  0AF2               	incf	_cntCyc,f
  4342                           
  4343                           ;smartkey.C: 100: if(RA5==0){
  4344  040C  1A85               	btfsc	5,5
  4345  040D  2C23               	goto	i1l5477
  4346  040E  3010               	movlw	16
  4347                           
  4348                           ;smartkey.C: 102: cntOff++;
  4349  040F  0ACA               	incf	_cntOff,f
  4350                           
  4351                           ;smartkey.C: 105: if(cntOff > 15){
  4352  0410  024A               	subwf	_cntOff,w
  4353  0411  1C03               	skipc
  4354  0412  2C23               	goto	i1l5477
  4355  0413  3010               	movlw	16
  4356                           
  4357                           ;smartkey.C: 107: mode_chek = 0;
  4358  0414  01F3               	clrf	_mode_chek
  4359                           
  4360                           ;smartkey.C: 109: if((cntCyc>15) &&(cntCyc<50)) {
  4361  0415  0272               	subwf	_cntCyc,w
  4362  0416  3032               	movlw	50
  4363  0417  1C03               	skipc
  4364  0418  2C1F               	goto	L19
  4365  0419  0272               	subwf	_cntCyc,w
  4366  041A  1803               	skipnc
  4367  041B  2C1E               	goto	i1l5473
  4368                           
  4369                           ;smartkey.C: 110: RegStatus |= (0x40);
  4370  041C  1749               	bsf	_RegStatus,6
  4371                           
  4372                           ;smartkey.C: 111: } else if (cntCyc>=50){
  4373  041D  2C22               	goto	i1l840
  4374  041E                     i1l5473:	
  4375  041E  3032               	movlw	50
  4376  041F                     L19:	
  4377  041F  0272               	subwf	_cntCyc,w
  4378  0420  1803               	btfsc	3,0
  4379                           
  4380                           ;smartkey.C: 112: RegStatus &= ~(0x40);
  4381  0421  1349               	bcf	_RegStatus,6
  4382  0422                     i1l840:	
  4383                           
  4384                           ;smartkey.C: 113: }
  4385                           ;smartkey.C: 116: RegStatus |= 0x80;
  4386  0422  17C9               	bsf	_RegStatus,7
  4387  0423                     i1l5477:	
  4388                           
  4389                           ;smartkey.C: 117: }
  4390                           ;smartkey.C: 119: }
  4391                           ;smartkey.C: 129: }
  4392                           ;smartkey.C: 132: timeTick++;
  4393  0423  0AF0               	incf	_timeTick,f
  4394  0424  1903               	skipnz
  4395  0425  0AF1               	incf	_timeTick+1,f
  4396                           
  4397                           ;smartkey.C: 134: if((mtState == 4)||(mtState == 3)){
  4398  0426  0874               	movf	_mtState,w
  4399  0427  3A04               	xorlw	4
  4400  0428  1903               	skipnz
  4401  0429  2C2E               	goto	i1l5483
  4402  042A  0874               	movf	_mtState,w
  4403  042B  3A03               	xorlw	3
  4404  042C  1D03               	skipz
  4405  042D  2C51               	goto	i1l5497
  4406  042E                     i1l5483:	
  4407                           
  4408                           ;smartkey.C: 136: if(timeTick > cntTmp){
  4409  042E  0871               	movf	_timeTick+1,w
  4410  042F  0246               	subwf	_cntTmp+1,w
  4411  0430  1D03               	skipz
  4412  0431  2C34               	goto	u144_25
  4413  0432  0870               	movf	_timeTick,w
  4414  0433  0245               	subwf	_cntTmp,w
  4415  0434                     u144_25:	
  4416  0434  1803               	skipnc
  4417  0435  2C51               	goto	i1l5497
  4418                           
  4419                           ;smartkey.C: 137: cntTmp = timeTick+45;
  4420  0436  0871               	movf	_timeTick+1,w
  4421  0437  00C6               	movwf	_cntTmp+1
  4422  0438  0870               	movf	_timeTick,w
  4423  0439  00C5               	movwf	_cntTmp
  4424  043A  302D               	movlw	45
  4425  043B  07C5               	addwf	_cntTmp,f
  4426  043C  1803               	skipnc
  4427  043D  0AC6               	incf	_cntTmp+1,f
  4428                           
  4429                           ;smartkey.C: 138: if(cntTmp<=timeOut)
  4430  043E  0846               	movf	_cntTmp+1,w
  4431  043F  0248               	subwf	_timeOut+1,w
  4432  0440  1D03               	skipz
  4433  0441  2C44               	goto	u145_25
  4434  0442  0845               	movf	_cntTmp,w
  4435  0443  0247               	subwf	_timeOut,w
  4436  0444                     u145_25:	
  4437                           
  4438                           ;smartkey.C: 139: {
  4439                           ;smartkey.C: 140: TMR2IE = 0;
  4440  0444  1683               	bsf	3,5	;RP0=1, select bank1
  4441  0445  1C03               	skipc
  4442  0446  2C52               	goto	L20
  4443  0447  108C               	bcf	12,1
  4444                           
  4445                           ;smartkey.C: 142: if (PR2L == 20)
  4446  0448  0811               	movf	17,w	;volatile
  4447  0449  3A14               	xorlw	20
  4448  044A  1D03               	skipz
  4449  044B  2C4E               	goto	i1l5493
  4450                           
  4451                           ;smartkey.C: 143: PR2L = 25;
  4452  044C  3019               	movlw	25
  4453  044D  2C4F               	goto	L18
  4454  044E                     i1l5493:	
  4455                           
  4456                           ;smartkey.C: 144: else
  4457                           ;smartkey.C: 145: PR2L = 20;
  4458  044E  3014               	movlw	20
  4459  044F                     L18:	
  4460  044F  0091               	movwf	17	;volatile
  4461                           
  4462                           ;smartkey.C: 146: TMR2IE = 1;
  4463  0450  148C               	bsf	12,1
  4464  0451                     i1l5497:	
  4465                           
  4466                           ;smartkey.C: 147: }
  4467                           ;smartkey.C: 148: }
  4468                           ;smartkey.C: 149: }
  4469                           ;smartkey.C: 152: }
  4470                           ;smartkey.C: 155: if(TMR2IE&&TMR2IF)
  4471  0451  1683               	bsf	3,5	;RP0=1, select bank1
  4472  0452                     L20:	
  4473  0452  1C8C               	btfss	12,1
  4474  0453  2C5A               	goto	i1l850
  4475  0454  1283               	bcf	3,5	;RP0=0, select bank0
  4476  0455  1C8C               	btfss	12,1
  4477  0456  2C5A               	goto	i1l850
  4478  0457  3008               	movlw	8
  4479                           
  4480                           ;smartkey.C: 156: {
  4481                           ;smartkey.C: 157: TMR2IF = 0;
  4482  0458  108C               	bcf	12,1
  4483                           
  4484                           ;smartkey.C: 158: RA3 =~ RA3;
  4485  0459  0685               	xorwf	5,f
  4486  045A                     i1l850:	
  4487  045A  0878               	movf	??_ISR+1,w
  4488  045B  008A               	movwf	10
  4489  045C  0E77               	swapf	??_ISR^(0+-128),w
  4490  045D  0083               	movwf	3
  4491  045E  0EFE               	swapf	126,f
  4492  045F  0E7E               	swapf	126,w
  4493  0460  0009               	retfie
  4494  0461                     __end_of_ISR:	
  4495                           
  4496                           	psect	intentry
  4497  0004                     __pintentry:	
  4498                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4499                           
  4500  0004                     interrupt_function:	
  4501  007E                     saved_w	set	btemp
  4502  0004  00FE               	movwf	btemp
  4503  0005  0E03               	swapf	3,w
  4504  0006  00F7               	movwf	??_ISR
  4505  0007  080A               	movf	10,w
  4506  0008  00F8               	movwf	??_ISR+1
  4507  0009  2BDB               	ljmp	_ISR
  4508                           
  4509                           	psect	text882
  4510  061F                     __ptext882:	
  4511 ;; =============== function _ISR ends ============
  4512                           
  4513                           
  4514 ;; *************** function i1_WRITE_EEPROM *****************
  4515 ;; Defined at:
  4516 ;;		line 205 in file "smartkey.C"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  WRITE_EEPROM    1    wreg     unsigned char 
  4519 ;;  WRITE_EEPROM    1    0[COMMON] unsigned char 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  WRITE_EEPROM    1    1[COMMON] unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;		None               void
  4524 ;; Registers used:
  4525 ;;		wreg
  4526 ;; Tracked objects:
  4527 ;;		On entry : 20/20
  4528 ;;		On exit  : 20/20
  4529 ;;		Unchanged: FFE00/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1
  4531 ;;      Params:         1       0       0
  4532 ;;      Locals:         1       0       0
  4533 ;;      Temps:          0       0       0
  4534 ;;      Totals:         2       0       0
  4535 ;;Total ram usage:        2 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_ISR
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543  061F                     i1_WRITE_EEPROM:	
  4544                           
  4545                           ; Regs used in i1_WRITE_EEPROM: [wreg]
  4546                           ;i1WRITE_EEPROM@EEAddr stored from wreg
  4547  061F  00F6               	movwf	i1WRITE_EEPROM@EEAddr
  4548                           
  4549                           ;smartkey.C: 206: GIE = 0;
  4550  0620  138B               	bcf	11,7
  4551  0621                     i1l874:	
  4552                           ;smartkey.C: 207: while(GIE) asm("clrwdt");
  4553                           
  4554  0621  1F8B               	btfss	11,7
  4555  0622  2E25               	goto	i1l5677
  4556  0623  0064               	clrwdt	;#
  4557  0624  2E21               	goto	i1l874
  4558  0625                     i1l5677:	
  4559                           
  4560                           ;smartkey.C: 208: EEADR = EEAddr;
  4561  0625  0876               	movf	i1WRITE_EEPROM@EEAddr,w
  4562  0626  1683               	bsf	3,5	;RP0=1, select bank1
  4563  0627  009B               	movwf	27	;volatile
  4564                           
  4565                           ;smartkey.C: 209: EEDAT = EEData;
  4566  0628  0875               	movf	i1WRITE_EEPROM@EEData,w
  4567  0629  009A               	movwf	26	;volatile
  4568  062A  3034               	movlw	52
  4569                           
  4570                           ;smartkey.C: 210: EEIF = 0;
  4571  062B  1283               	bcf	3,5	;RP0=0, select bank0
  4572  062C  138C               	bcf	12,7
  4573                           
  4574                           ;smartkey.C: 211: EECON1 = 0x34;
  4575  062D  1683               	bsf	3,5	;RP0=1, select bank1
  4576  062E  009C               	movwf	28	;volatile
  4577                           
  4578                           ;smartkey.C: 212: WR = 1;
  4579  062F  141D               	bsf	29,0
  4580  0630                     i1l877:	
  4581                           ;smartkey.C: 213: while(WR) asm("clrwdt");
  4582                           
  4583  0630  1683               	bsf	3,5	;RP0=1, select bank1
  4584  0631  1C1D               	btfss	29,0
  4585  0632  2E35               	goto	i1l879
  4586  0633  0064               	clrwdt	;#
  4587  0634  2E30               	goto	i1l877
  4588  0635                     i1l879:	
  4589                           
  4590                           ;smartkey.C: 215: GIE = 1;
  4591  0635  178B               	bsf	11,7
  4592  0636  0008               	return
  4593  0637                     __end_ofi1_WRITE_EEPROM:	
  4594                           
  4595                           	psect	text883
  4596  06D6                     __ptext883:	
  4597 ;; =============== function i1_WRITE_EEPROM ends ============
  4598                           
  4599                           
  4600 ;; *************** function i1_READ_EEPROM *****************
  4601 ;; Defined at:
  4602 ;;		line 194 in file "smartkey.C"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;  READ_EEPROM     1    wreg     unsigned char 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  READ_EEPROM     1    0[COMMON] unsigned char 
  4607 ;;  READ_EEPROM     1    1[COMMON] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      unsigned char 
  4610 ;; Registers used:
  4611 ;;		wreg
  4612 ;; Tracked objects:
  4613 ;;		On entry : 20/0
  4614 ;;		On exit  : 20/20
  4615 ;;		Unchanged: FFFDF/0
  4616 ;; Data sizes:     COMMON   BANK0   BANK1
  4617 ;;      Params:         0       0       0
  4618 ;;      Locals:         2       0       0
  4619 ;;      Temps:          0       0       0
  4620 ;;      Totals:         2       0       0
  4621 ;;Total ram usage:        2 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; This function calls:
  4624 ;;		Nothing
  4625 ;; This function is called by:
  4626 ;;		_ISR
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629  06D6                     i1_READ_EEPROM:	
  4630                           
  4631                           ; Regs used in i1_READ_EEPROM: [wreg]
  4632                           ;i1READ_EEPROM@EEAddr stored from wreg
  4633  06D6  00F5               	movwf	i1READ_EEPROM@EEAddr
  4634                           
  4635                           ;smartkey.C: 195: unsigned char ReEepromData;
  4636                           ;smartkey.C: 197: EEADR = EEAddr;
  4637  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  4638  06D8  009B               	movwf	27	;volatile
  4639                           
  4640                           ;smartkey.C: 198: RD = 1;
  4641  06D9  141C               	bsf	28,0
  4642                           
  4643                           ;smartkey.C: 199: ReEepromData = EEDAT;
  4644  06DA  081A               	movf	26,w	;volatile
  4645  06DB  00F6               	movwf	i1READ_EEPROM@ReEepromData
  4646                           
  4647                           ;smartkey.C: 200: RD = 0;
  4648  06DC  101C               	bcf	28,0
  4649                           
  4650                           ;smartkey.C: 201: return ReEepromData;
  4651  06DD  0008               	return
  4652  06DE                     __end_ofi1_READ_EEPROM:	
  4653                           
  4654                           	psect	text884
  4655  0000                     __ptext884:	
  4656 ;; =============== function i1_READ_EEPROM ends ============
  4657                           
  4658  007E                     btemp	set	126	;btemp
  4659  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Mar 19 17:12:46 2020

                        pc 0002                         _RD 04E0                         _WR 04E8  
             ___awdiv@sign 0025      __size_of_WRITE_EEPROM 001B                         fsr 0004  
                      _C1R 08CA                        _C2R 08D2                        l941 01E1  
                      l925 0196                        l862 0000                        l871 0000  
                      l951 0278                        l880 0000                        l856 0000  
                      l874 0606                        l954 025D                        l859 0000  
                      l883 0000                        l971 02DA                        l955 0248  
                      l868 0000                        l877 0618                        l879 061D  
                      l992 03D8                        _GIE 005F                        _RA2 002A  
                      _RA3 002B                        _RC0 0038                        _RC1 0039  
                      _RA5 002D                        _RA6 002E                        _RA7 002F  
             ?_swI2C_Start 0075                        _HTS 047A                        _ISR 03DB  
                      _SR0 0CF6                        _SR1 0CF7                        _VR0 08C0  
                      _VR1 08C1                        _VR2 08C2                        _VR3 08C3  
                      _VRR 08C5                        fsr0 0004                        indf 0000  
           _swI2C_ReadByte 04EB                       S7143 06DE                       ?_ISR 0075  
                     _C1OE 08CD                       _C2OE 08D5                       _C1ON 08CF  
                     l2601 0000                       _C2ON 08D7                       l4233 0000  
                     l2582 0000                       l1783 06D2                       l1792 0000  
                     l2585 0000                       l1786 0000                       l2594 0535  
                     l1795 0000                       l7011 0000                       l2588 0000  
                     l2596 0000                       l1789 0000                       l7101 0000  
                     l7013 0000                       l7005 0000                       l2599 04F8  
                     l7103 03D2                       l7031 0000                       l7015 0000  
                     l7041 0000                       l7025 0000                       l7017 0000  
                     l7009 0000                       l6411 0000                       l6403 0000  
                     l7043 0000                       l7027 0000                       l7019 032B  
                     l6405 0000                       l6413 0000                       l6421 0000  
                     l6501 0000                       l7061 0000                       l7045 0000  
                     l7037 0000                       l6335 0000                       l6343 0000  
                     l6351 0000                       l6407 0000                       l6415 0000  
                     l6431 0000                       l6423 0000                       l6503 0000  
                     l6511 0000                       l7063 0000                       l7055 0000  
                     l7071 0387                       l6337 0000                       l6345 060A  
                     l6353 0680                       l6361 0000                       l6409 0000  
                     l6417 0000                       l6441 0000                       l6433 0000  
                     l6425 0000                       l6505 0000                       l6513 0000  
                     l6521 0000                       l7081 039E                       l7065 0382  
                     l7049 0365                       l6339 0000                       l6347 0000  
                     l6355 0000                       l6363 0000                       l6419 0000  
                     l6451 0000                       l6443 0000                       l6435 0000  
                     l6427 0000                       l6507 0000                       l6515 0000  
                     l6523 0000                       l6531 0000                       l6611 05C8  
                     l6603 0000                       l7083 0000                       l7059 0000  
                     l7067 0383                       l6349 0000                       l6357 0000  
                     l6365 0000                       l6445 0000                       l6437 0000  
                     l6429 0000                       l6461 046B                       l6453 0000  
                     l6509 0638                       l6517 0000                       l6525 0000  
                     l6533 0000                       l6541 0000                       l6613 0000  
                     l7085 0000                       l7077 0000                       l7069 0000  
                     l6701 0000                       l6359 0000                       l6447 0000  
                     l6439 0000                       l6455 0000                       l6519 0000  
                     l6527 0000                       l6535 0000                       l6551 0000  
                     l6543 0000                       l6607 05C6                       l6703 0000  
                     l6711 0073                       l6449 0000                       l6465 0000  
                     l6529 0000                       l6561 0000                       l6553 0000  
                     l6537 0000                       l6609 05AF                       l7097 0000  
                     l7089 0000                       l6801 0000                       l6721 0000  
                     l6713 0000                       l6705 0000                       l6379 04D2  
                     l6491 0000                       l6483 0000                       l6467 0474  
                     l6459 0000                       l6555 0000                       l6547 0000  
                     l6539 0000                       l6571 0000                       l6643 0000  
                     l6627 0000                       l7099 0000                       l6803 0000  
                     l6731 0000                       l6723 0000                       l6715 007A  
                     l6707 0000                       l6493 04A1                       l6477 0482  
                     l6469 0000                       l6557 0000                       l6549 0000  
                     l6581 0000                       l6573 0000                       l6565 0000  
                     l6645 0000                       l6637 0000                       l6901 0000  
                     l6821 0000                       l6813 01B1                       l6805 01A8  
                     l6741 0000                       l6733 0000                       l6717 0000  
                     l6709 0000                       l6487 0000                       l6479 0000  
                     l6559 0000                       l6583 0000                       l6567 0000  
                     l6639 057A                       l6903 0000                       l6831 0000  
                     l6911 0270                       l6751 0000                       l6727 008E  
                     l6735 00A4                       l6671 0000                       l6663 0000  
                     l6489 0499                       l6497 0000                       l6585 0000  
                     l6577 0000                       l6569 0000                       l6593 0000  
                     l6921 0000                       l6905 0000                       l6841 0000  
                     l6825 01C9                       l6817 01B8                       l6913 0279  
                     l6761 0000                       l6745 00B3                       l6729 0091  
                     l6681 0000                       l6673 0000                       l6665 0000  
                     l6499 0000                       l6587 0000                       l6579 0000  
                     l6931 0000                       l6923 0000                       l6851 0000  
                     l6835 01DA                       l6739 00AB                       l6691 0000  
                     l6683 0000                       l6675 0000                       l6667 0000  
                     l6589 0000                       l6941 0000                       l6933 0000  
                     l6925 0290                       l6845 01F0                       l6837 0000  
                     l6829 0000                       l6781 0137                       l6773 0000  
                     l6765 0000                       l6757 0000                       l6749 00CD  
                     l6685 0000                       l6677 0000                       l6669 0000  
                     l6951 0000                       l6943 02AB                       l6935 0000  
                     l6927 0000                       l6919 0286                       l6871 0000  
                     l6863 0211                       l6855 0201                       l6847 0000  
                     l6839 0000                       l6791 0179                       l6775 0122  
                     l6767 0000                       l6759 00E7                       l6695 0000  
                     l6687 0000                       l6679 0000                       l6961 0000  
                     l6953 0000                       l6937 0000                       l6929 0000  
                     l6865 0000                       l6849 01FE                       l6793 0000  
                     l6785 0000                       l6769 00F5                       l6777 0130  
                     l6697 0058                       l6689 0000                       l6963 0000  
                     l6955 0000                       l6947 02B3                       l6891 0000  
                     l6867 0000                       l6859 0000                       l6875 022B  
                     l6795 0192                       l6973 0000                       l6949 0000  
                     l6957 02CA                       l6885 0000                       l6877 0236  
                     l6869 0222                       l6797 0000                       l6975 0000  
                     l6887 0000                       l6879 0000                       l6799 019A  
                     l6993 0000                       l6977 0000                       l6897 0260  
                     l6889 0000                       l6995 0000                       l6979 0000  
                     l6987 02E1                       l6899 0000                       l6997 0000  
                     l6989 02EF                       _EEIF 0067                       _ANS0 08F0  
                     _ANS1 08F1                       _ANS2 08F2                       _ANS3 08F3  
                     _ANS4 08F4                       _ANS5 08F5                       _ANS6 08F6  
                     _ANS7 08F7                       _ANS8 08F8                       _ANS9 08F9  
                     _T0IE 005D                       _T0IF 005A                       _T0ON 00FB  
                     _IOCB 0116                       u2515 0686                       u3235 02F6  
                     _PAIE 005B                       _PAIF 0058                       _PIE1 008C  
                     u2545 04BF                       u3185 0283                       u2635 048B  
                     u3507 009E                       u3517 00BA                       u2734 051C  
                     u3607 0541                       u2815 0587                       u3527 0129  
                     u2680 053A                       u3617 0547                       u3385 038E  
                     u3537 018C                       u3707 05D7                       u3627 0554  
                     u3547 04F4                       _PEIE 005E                       u3717 05DC  
                     u3637 055A                       u3557 04FB                       u3477 0020  
                     _INTE 005C                       u2694 053C                       _INTF 0059  
                     u3727 05E1                       u3647 06AC                       u3567 050A  
                     u3487 003E                       u3737 05E6                       u3657 06B2  
                     u3577 051F                       u3497 0053                       u3667 0667  
                     u3587 0525                       _PR2H 0092                       u3677 066D  
                     u3597 0531                       u3687 0673                       u2975 0168  
                     _PR2L 0091                       u3697 05D0                       u2985 0174  
                     _PIR1 000C                       _TMR0 0001                       _STRA 0CE8  
                     _STRB 0CE9                       _STRC 0CEA                       _STRD 0CEB  
                     _WREN 0C62                       _WPUA 0095                       _WPUB 0115  
                     _WPUC 0093               ?_READ_EEPROM 0075                       _beep 0637  
          __end_of_AccRead 0592                       _main 000B                       btemp 007E  
                     start 000A               _WRITE_EEPROM 0604                      ??_ISR 0077  
                    _C1CH0 08C8                      _C1CH1 08C9                      _C2CH0 08D0  
                    _C2CH1 08D1                      ?_beep 0024                      _C1SEN 0CF5  
                    _C2REN 0CF4                      _C1POL 08CC                      _C2POL 08D4  
                    _C1OUT 08CE                      _C2OUT 08D6                      ?_main 0075  
          __end_of___awdiv 04A6                      _EEADR 009B                      _EEDAT 009A  
                    _ANS10 08FA                      _ANS11 08FB                      _EEPGD 0C67  
   __end_of_swI2C_ReadByte 052A                      _ANSEL 011E               AccWrite@rAdd 0028  
          ___awdiv@divisor 0020                      _IOCA5 04B5                      _IOCB4 08B4  
                    _IOCB5 08B5                      _IOCB6 08B6                      _IOCB7 08B7  
                    _T1GSS 08D9                      i1l831 0401                      i1l840 0422  
                    i1l850 045A                      i1l829 0402                      i1l871 0000  
                    i1l880 0000                      i1l874 0621                      i1l877 0630  
                    i1l879 0635            ___awdiv@counter 0024                      _MSCON 001B  
          __end_of_beepOff 06ED                      _VP6EN 08C4                      _TMR2H 0013  
                    _TMR2L 0011                      _PSRCA 0088                      _PSRCC 0094  
                    _PORTA 0005                      _PORTC 0007                      _SRCON 019E  
                    _PULSR 0CF2                      _PULSS 0CF3                      _TRISA 0085  
                    _TRISC 0087                      _VRCON 0118                      _WPUB4 08AC  
                    _WPUB5 08AD                      _WPUB6 08AE                      _WPUB7 08AF  
                    _compe 04A6           __end_of_AccWrite 05CA                      pclath 000A  
                    status 0003                      wtemp0 007E            _swI2C_WriteByte 052A  
     __size_of_delay_x10ms 0013             i1_WRITE_EEPROM 061F               __end_of_beep 064D  
             __end_of_main 03DB                     ??_beep 0025                     ??_main 002C  
          ?_swI2C_ReadByte 0075              main@reAlertOn 0040                     _C1VREN 08C7  
                   _C2VREN 08C6                     _C2SYNC 08D8                     ?_compe 0020  
                ??_AccRead 0027                     _EEADRH 010F                     _EEDATH 010E  
                   _EECON1 009C           ___awdiv@dividend 0022                     _ANSELH 011F  
                   _MC1OUT 08DF                     _MC2OUT 08DE                     _T0CON0 001F  
                   _T2CON0 0012                     i1l5421 0000                     i1l5503 0000  
                   i1l5435 0000                     i1l5427 0000                     i1l5437 03EB  
                   i1l5429 0000                     i1l5463 0000                     i1l5455 0000  
                   i1l5439 03EC                     i1l5473 041E                     i1l5457 0000  
                   i1l5449 0000                     i1l5483 042E                     i1l5467 0000  
                   i1l5459 0000                     i1l5493 044E                     i1l5477 0423  
                   i1l5671 0000                     i1l5479 0000                     i1l5681 0000  
                   i1l5489 0000                     i1l5497 0451                     i1l5667 0000  
                   i1l5675 0000                     _INTEDG 040E                     i1l5669 0000  
                   i1l5677 0625                     i1l5679 0000                     u144_25 0434  
                   _INTCON 000B                     u145_25 0444                     _OSCCON 008F  
                   _TMR2IE 0461                     _TMR2IF 0061                     _PSINKA 0097  
                   _PSINKC 009F                     _OPTION 0081                     _TMR2ON 0092  
   __end_ofi1_WRITE_EEPROM 0637            swI2C_ReadByte@i 0023                     _beepOn 06E3  
                ??___awdiv 0024                     _cntCyc 0072                     _cntOff 004A  
                   _cntTmp 0045                  ??_beepOff 0020           ___awdiv@quotient 0026  
         __end_of_int_init 0604                     compe@a 0027                     compe@b 0020  
   __size_ofi1_READ_EEPROM 0008           __end_of_setState 06CE              main@vibrateOn 0031  
                   saved_w 007E       __size_of_swI2C_Start 0013    __end_of_swI2C_WriteByte 0567  
         __end_of_sys_init 06D6       i1WRITE_EEPROM@EEAddr 0076       i1WRITE_EEPROM@EEData 0075  
     __size_of_READ_EEPROM 000D            ?i1_WRITE_EEPROM 0075             __pcstackCOMMON 0075  
            __end_of_compe 04DF                  ?_AccWrite 0023                ISR@tmp_1138 0079  
                  ??_compe 0022                 __pbssBANK0 0045         __size_of_gpio_init 0016  
  READ_EEPROM@ReEepromData 0021              i1_READ_EEPROM 06D6                 __pmaintext 000B  
                  ?_beepOn 0075                 __pintentry 0004  i1READ_EEPROM@ReEepromData 0076  
                  _CM1CON0 0119                    _CM2CON0 011A                    _CM2CON1 011B  
               ??_AccWrite 0026                    _AccRead 0567                    _PSTRCON 019D  
               _swI2C_Init 05CA                    _STRSYNC 0CEC                 _swI2C_Stop 06A8  
         ?_swI2C_WriteByte 0075             ?i1_READ_EEPROM 0075                  AccWrite@i 0029  
                ?_int_init 0075                setState@stt 0022                  ?_setState 0020  
               _mtOldState 004C                    ___awdiv 0461           ??_swI2C_ReadByte 0020  
          __size_of_beepOn 0005                    _beepOff 06E8                    beep@rep 0024  
        __end_of_gpio_init 0663                  ?_sys_init 0075               __size_of_ISR 0086  
                  _mtState 0074                    _timeOut 0047                    compe@dt 0021  
                  main@buf 003A       end_of_initialization 06A6                 _lostDetect 004B  
            ??_delay_x10ms 0022                 ??_int_init 0020                 ??_setState 0022  
              AccRead@rAdd 002A                 _timer_init 0689                 ??_sys_init 0020  
              ?_swI2C_Init 0075            ??i1_READ_EEPROM 0075                ?_swI2C_Stop 0075  
               main@acXOld 0034                 main@acYOld 0033           ??i1_WRITE_EEPROM 0076  
               main@acXsum 0038                 main@acYsum 0036                 main@isFall 0032  
       WRITE_EEPROM@EEAddr 0021         WRITE_EEPROM@EEData 0020                 main@isWait 002F  
      __end_of_delay_x10ms 0689                AccWrite@dat 0023                AccWrite@len 0025  
           __end_of_beepOn 06E8              ??_swI2C_Start 0020          __size_of_AccWrite 0028  
      start_initialization 0699                __end_of_ISR 0461              setState@_tOut 0020  
                _RegStatus 0049              ??_READ_EEPROM 0020              ?_WRITE_EEPROM 0020  
                 ??_beepOn 0020          READ_EEPROM@EEAddr 0020        __size_of_swI2C_Init 001F  
      __size_of_swI2C_Stop 000D                ?_timer_init 0075                __pbssCOMMON 0070  
            __pcstackBANK0 0020                   ?_AccRead 0024        __end_of_swI2C_Start 0676  
              _delay_x10ms 0676             ??_WRITE_EEPROM 0021          __size_of_int_init 001B  
      __end_of_READ_EEPROM 06C2           swI2C_WriteByte@i 0022                   ?___awdiv 0020  
        __size_of_setState 000C                  __ptext860 0000                  __ptext861 0567  
                __ptext870 0461                  __ptext862 05A2                  __ptext871 05E9  
                __ptext863 04EB                  __ptext880 06B5                  __ptext872 0689  
                __ptext864 052A                  __ptext881 03DB                  __ptext873 064D  
                __ptext865 06A8                  __ptext882 061F                  __ptext874 04A6  
                __ptext866 0663                  __ptext883 06D6                  __ptext875 06C2  
                __ptext867 05CA                  __ptext884 0000                  __ptext876 06E3  
                __ptext868 06CE                  __ptext877 06E8                  __ptext869 0637  
                __ptext878 0676                  __ptext879 0604                  beep@delay 0025  
                 ?_beepOff 0075                   AccRead@i 002B         swI2C_WriteByte@dat 0021  
                __pswtext1 06DE          __size_of_sys_init 0008                  _gpio_init 064D  
           __size_of_compe 0039                  _mode_chek 0073          interrupt_function 0004  
      __size_of_timer_init 0010   __size_of_swI2C_WriteByte 003D                 AccRead@dat 0024  
               AccRead@len 0026               delay_x10ms@t 0020                   _AccWrite 05A2  
              _swI2C_Start 0663                  main@tmp16 0042                  main@mpuOk 0035  
               ?_gpio_init 0075               ??_swI2C_Init 0020           __size_of_AccRead 002B  
             ??_swI2C_Stop 0020                _READ_EEPROM 06B5          swI2C_ReadByte@Ack 0021  
        swI2C_ReadByte@dat 0022           __size_of___awdiv 0045           __size_of_beepOff 0005  
       __end_of_swI2C_Init 05E9         __end_of_swI2C_Stop 06B5       __end_of_WRITE_EEPROM 061F  
  __size_of_swI2C_ReadByte 003F      __end_ofi1_READ_EEPROM 06DE              __size_of_beep 0016  
            __size_of_main 03D0                   _int_init 05E9                   _setState 06C2  
                 _timeTick 0070                   main@isSw 0041                   main@tmp8 0044  
        ??_swI2C_WriteByte 0020               ??_timer_init 0020                   _sys_init 06CE  
              ??_gpio_init 0020                   intlevel1 0000               ?_delay_x10ms 0020  
       __end_of_timer_init 0699    __size_ofi1_WRITE_EEPROM 0018        i1READ_EEPROM@EEAddr 0075  
           delay_x10ms@set 0022  
