

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu May 28 10:35:30 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text876,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	text877,local,class=CODE,delta=2
    13                           	psect	text878,local,class=CODE,delta=2
    14                           	psect	text879,local,class=CODE,delta=2
    15                           	psect	text880,local,class=CODE,delta=2
    16                           	psect	text881,local,class=CODE,delta=2
    17                           	psect	text882,local,class=CODE,delta=2
    18                           	psect	text883,local,class=CODE,delta=2
    19                           	psect	text884,local,class=CODE,delta=2
    20                           	psect	text885,local,class=CODE,delta=2
    21                           	psect	text886,local,class=CODE,delta=2
    22                           	psect	text887,local,class=CODE,delta=2
    23                           	psect	text888,local,class=CODE,delta=2
    24                           	psect	text889,local,class=CODE,delta=2
    25                           	psect	text890,local,class=CODE,delta=2
    26                           	psect	text891,local,class=CODE,delta=2
    27                           	psect	text892,local,class=CODE,delta=2
    28                           	psect	text893,local,class=CODE,delta=2
    29                           	psect	text894,local,class=CODE,delta=2
    30                           	psect	text895,local,class=CODE,delta=2
    31                           	psect	text896,local,class=CODE,delta=2
    32                           	psect	text897,local,class=CODE,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text898,local,class=CODE,delta=2
    35                           	psect	text899,local,class=CODE,delta=2
    36                           	psect	text900,local,class=CODE,delta=2
    37                           	psect	pa_nodes,global,class=CODE,delta=2
    38                           	dabs	1,0x11E,1
    39                           	dabs	1,0x11F,1
    40                           	dabs	1,0x119,1
    41                           	dabs	1,0x11A,1
    42                           	dabs	1,0x11B,1
    43                           	dabs	1,0x10F,1
    44                           	dabs	1,0x10E,1
    45                           	dabs	1,0x116,1
    46                           	dabs	1,0x19D,1
    47                           	dabs	1,0x19E,1
    48                           	dabs	1,0x118,1
    49                           	dabs	1,0x115,1
    50                           	dabs	1,0x11E,1
    51                           	dabs	1,0x11E,1
    52                           	dabs	1,0x11F,1
    53                           	dabs	1,0x11F,1
    54                           	dabs	1,0x11E,1
    55                           	dabs	1,0x11E,1
    56                           	dabs	1,0x11E,1
    57                           	dabs	1,0x11E,1
    58                           	dabs	1,0x11E,1
    59                           	dabs	1,0x11E,1
    60                           	dabs	1,0x11F,1
    61                           	dabs	1,0x11F,1
    62                           	dabs	1,0x119,1
    63                           	dabs	1,0x119,1
    64                           	dabs	1,0x119,1
    65                           	dabs	1,0x119,1
    66                           	dabs	1,0x119,1
    67                           	dabs	1,0x119,1
    68                           	dabs	1,0x119,1
    69                           	dabs	1,0x19E,1
    70                           	dabs	1,0x118,1
    71                           	dabs	1,0x11A,1
    72                           	dabs	1,0x11A,1
    73                           	dabs	1,0x11A,1
    74                           	dabs	1,0x11A,1
    75                           	dabs	1,0x11A,1
    76                           	dabs	1,0x11A,1
    77                           	dabs	1,0x11A,1
    78                           	dabs	1,0x19E,1
    79                           	dabs	1,0x11B,1
    80                           	dabs	1,0x118,1
    81                           	dabs	1,0x18C,1
    82                           	dabs	1,0x116,1
    83                           	dabs	1,0x116,1
    84                           	dabs	1,0x116,1
    85                           	dabs	1,0x116,1
    86                           	dabs	1,0x11B,1
    87                           	dabs	1,0x11B,1
    88                           	dabs	1,0x19E,1
    89                           	dabs	1,0x19E,1
    90                           	dabs	1,0x19E,1
    91                           	dabs	1,0x19E,1
    92                           	dabs	1,0x19D,1
    93                           	dabs	1,0x19D,1
    94                           	dabs	1,0x19D,1
    95                           	dabs	1,0x19D,1
    96                           	dabs	1,0x19D,1
    97                           	dabs	1,0x11B,1
    98                           	dabs	1,0x118,1
    99                           	dabs	1,0x118,1
   100                           	dabs	1,0x118,1
   101                           	dabs	1,0x118,1
   102                           	dabs	1,0x118,1
   103                           	dabs	1,0x118,1
   104                           	dabs	1,0x115,1
   105                           	dabs	1,0x115,1
   106                           	dabs	1,0x115,1
   107                           	dabs	1,0x115,1
   108                           	dabs	1,0x18C,1
   109                           	dabs	1,0x7E,2
   110  000A                     
   111                           	psect	text876
   112  0000                     __ptext876:	
   113  011E                     _ANSEL	set	286	;_ANSEL
   114  011F                     _ANSELH	set	287	;_ANSELH
   115  0119                     _CM1CON0	set	281	;_CM1CON0
   116  011A                     _CM2CON0	set	282	;_CM2CON0
   117  011B                     _CM2CON1	set	283	;_CM2CON1
   118  010F                     _EEADRH	set	271	;_EEADRH
   119  010E                     _EEDATH	set	270	;_EEDATH
   120  0116                     _IOCB	set	278	;_IOCB
   121  019D                     _PSTRCON	set	413	;_PSTRCON
   122  019E                     _SRCON	set	414	;_SRCON
   123  0118                     _VRCON	set	280	;_VRCON
   124  0115                     _WPUB	set	277	;_WPUB
   125  08F0                     _ANS0	set	2288	;_ANS0
   126  08F1                     _ANS1	set	2289	;_ANS1
   127  08FA                     _ANS10	set	2298	;_ANS10
   128  08FB                     _ANS11	set	2299	;_ANS11
   129  08F2                     _ANS2	set	2290	;_ANS2
   130  08F3                     _ANS3	set	2291	;_ANS3
   131  08F4                     _ANS4	set	2292	;_ANS4
   132  08F5                     _ANS5	set	2293	;_ANS5
   133  08F6                     _ANS6	set	2294	;_ANS6
   134  08F7                     _ANS7	set	2295	;_ANS7
   135  08F8                     _ANS8	set	2296	;_ANS8
   136  08F9                     _ANS9	set	2297	;_ANS9
   137  08C8                     _C1CH0	set	2248	;_C1CH0
   138  08C9                     _C1CH1	set	2249	;_C1CH1
   139  08CD                     _C1OE	set	2253	;_C1OE
   140  08CF                     _C1ON	set	2255	;_C1ON
   141  08CE                     _C1OUT	set	2254	;_C1OUT
   142  08CC                     _C1POL	set	2252	;_C1POL
   143  08CA                     _C1R	set	2250	;_C1R
   144  0CF5                     _C1SEN	set	3317	;_C1SEN
   145  08C7                     _C1VREN	set	2247	;_C1VREN
   146  08D0                     _C2CH0	set	2256	;_C2CH0
   147  08D1                     _C2CH1	set	2257	;_C2CH1
   148  08D5                     _C2OE	set	2261	;_C2OE
   149  08D7                     _C2ON	set	2263	;_C2ON
   150  08D6                     _C2OUT	set	2262	;_C2OUT
   151  08D4                     _C2POL	set	2260	;_C2POL
   152  08D2                     _C2R	set	2258	;_C2R
   153  0CF4                     _C2REN	set	3316	;_C2REN
   154  08D8                     _C2SYNC	set	2264	;_C2SYNC
   155  08C6                     _C2VREN	set	2246	;_C2VREN
   156  0C67                     _EEPGD	set	3175	;_EEPGD
   157  08B4                     _IOCB4	set	2228	;_IOCB4
   158  08B5                     _IOCB5	set	2229	;_IOCB5
   159  08B6                     _IOCB6	set	2230	;_IOCB6
   160  08B7                     _IOCB7	set	2231	;_IOCB7
   161  08DF                     _MC1OUT	set	2271	;_MC1OUT
   162  08DE                     _MC2OUT	set	2270	;_MC2OUT
   163  0CF2                     _PULSR	set	3314	;_PULSR
   164  0CF3                     _PULSS	set	3315	;_PULSS
   165  0CF6                     _SR0	set	3318	;_SR0
   166  0CF7                     _SR1	set	3319	;_SR1
   167  0CE8                     _STRA	set	3304	;_STRA
   168  0CE9                     _STRB	set	3305	;_STRB
   169  0CEA                     _STRC	set	3306	;_STRC
   170  0CEB                     _STRD	set	3307	;_STRD
   171  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   172  08D9                     _T1GSS	set	2265	;_T1GSS
   173  08C4                     _VP6EN	set	2244	;_VP6EN
   174  08C0                     _VR0	set	2240	;_VR0
   175  08C1                     _VR1	set	2241	;_VR1
   176  08C2                     _VR2	set	2242	;_VR2
   177  08C3                     _VR3	set	2243	;_VR3
   178  08C5                     _VRR	set	2245	;_VRR
   179  08AC                     _WPUB4	set	2220	;_WPUB4
   180  08AD                     _WPUB5	set	2221	;_WPUB5
   181  08AE                     _WPUB6	set	2222	;_WPUB6
   182  08AF                     _WPUB7	set	2223	;_WPUB7
   183  0C62                     _WREN	set	3170	;_WREN
   184  000B                     _INTCON	set	11
   185  001B                     _MSCON	set	27
   186  000C                     _PIR1	set	12
   187  0005                     _PORTA	set	5
   188  0007                     _PORTC	set	7
   189  001F                     _T0CON0	set	31
   190  0012                     _T2CON0	set	18
   191  0001                     _TMR0	set	1
   192  0013                     _TMR2H	set	19
   193  0011                     _TMR2L	set	17
   194  0067                     _EEIF	set	103
   195  005F                     _GIE	set	95
   196  005C                     _INTE	set	92
   197  0059                     _INTF	set	89
   198  005B                     _PAIE	set	91
   199  0058                     _PAIF	set	88
   200  005E                     _PEIE	set	94
   201  002A                     _RA2	set	42
   202  002B                     _RA3	set	43
   203  002D                     _RA5	set	45
   204  002E                     _RA6	set	46
   205  002F                     _RA7	set	47
   206  0038                     _RC0	set	56
   207  0039                     _RC1	set	57
   208  005D                     _T0IE	set	93
   209  005A                     _T0IF	set	90
   210  00FB                     _T0ON	set	251
   211  0061                     _TMR2IF	set	97
   212  0092                     _TMR2ON	set	146
   213  009B                     _EEADR	set	155
   214  009C                     _EECON1	set	156
   215  009A                     _EEDAT	set	154
   216  0081                     _OPTION	set	129
   217  008F                     _OSCCON	set	143
   218  008C                     _PIE1	set	140
   219  0092                     _PR2H	set	146
   220  0091                     _PR2L	set	145
   221  0097                     _PSINKA	set	151
   222  009F                     _PSINKC	set	159
   223  0088                     _PSRCA	set	136
   224  0094                     _PSRCC	set	148
   225  0085                     _TRISA	set	133
   226  0087                     _TRISC	set	135
   227  0095                     _WPUA	set	149
   228  0093                     _WPUC	set	147
   229  047A                     _HTS	set	1146
   230  040E                     _INTEDG	set	1038
   231  04B5                     _IOCA5	set	1205
   232  04E0                     _RD	set	1248
   233  0461                     _TMR2IE	set	1121
   234  04E8                     _WR	set	1256
   235                           
   236                           	psect	cinit
   237  06A0                     start_initialization:	
   238                           
   239                           ; Clear objects allocated to COMMON
   240  06A0  01F0               	clrf	__pbssCOMMON& (0+127)
   241  06A1  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   242  06A2  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   243  06A3  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   244  06A4  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   245                           
   246                           ; Clear objects allocated to BANK0
   247  06A5  01C1               	clrf	__pbssBANK0& (0+127)
   248  06A6  01C2               	clrf	(__pbssBANK0+1)& (0+127)
   249  06A7  01C3               	clrf	(__pbssBANK0+2)& (0+127)
   250  06A8  01C4               	clrf	(__pbssBANK0+3)& (0+127)
   251  06A9  01C5               	clrf	(__pbssBANK0+4)& (0+127)
   252  06AA  01C6               	clrf	(__pbssBANK0+5)& (0+127)
   253  06AB                     end_of_initialization:	
   254                           ;End of C runtime variable initialization code
   255                           
   256  06AB  0183               	clrf	3
   257  06AC  280B               	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMMON
   260  0070                     __pbssCOMMON:	
   261  0070                     _timeTick:	
   262  0070                     	ds	2
   263  0072                     _RegStatus:	
   264  0072                     	ds	1
   265  0073                     _cntCyc:	
   266  0073                     	ds	1
   267  0074                     _mtState:	
   268  0074                     	ds	1
   269                           
   270                           	psect	bssBANK0
   271  0041                     __pbssBANK0:	
   272  0041                     _cntTmp:	
   273  0041                     	ds	2
   274  0043                     _timeOut:	
   275  0043                     	ds	2
   276  0045                     _cntOff:	
   277  0045                     	ds	1
   278  0046                     _mtOldState:	
   279  0046                     	ds	1
   280                           
   281                           	psect	cstackCOMMON
   282  0075                     __pcstackCOMMON:	
   283  0075                     ?_sys_init:	
   284  0075                     ?_gpio_init:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0075                     ?_timer_init:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0075                     ?_int_init:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0075                     ?_swI2C_Init:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0075                     ?_ISR:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0075                     ?_beepOff:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0075                     ?_beepOn:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0075                     ?_main:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0075                     ?_swI2C_Start:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0075                     ?_swI2C_Stop:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0075                     ??i1_READ_EEPROM:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0075                     ?i1_WRITE_EEPROM:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0075                     ?_READ_EEPROM:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0075                     ?_swI2C_WriteByte:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0075                     ?_swI2C_ReadByte:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0075                     ?i1_READ_EEPROM:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0075                     i1READ_EEPROM@EEAddr:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0075                     i1WRITE_EEPROM@EEData:	
   336                           ; 1 bytes @ 0x0
   337                           
   338                           
   339                           ; 1 bytes @ 0x0
   340  0075                     	ds	1
   341  0076                     ??i1_WRITE_EEPROM:	
   342  0076                     i1READ_EEPROM@ReEepromData:	
   343                           ; 0 bytes @ 0x1
   344                           
   345  0076                     i1WRITE_EEPROM@EEAddr:	
   346                           ; 1 bytes @ 0x1
   347                           
   348                           
   349                           ; 1 bytes @ 0x1
   350  0076                     	ds	1
   351  0077                     ??_ISR:	
   352                           
   353                           ; 0 bytes @ 0x2
   354  0077                     	ds	2
   355  0079                     ISR@tmp:	
   356                           
   357                           ; 1 bytes @ 0x4
   358  0079                     	ds	1
   359                           
   360                           	psect	cstackBANK0
   361  0020                     __pcstackBANK0:	
   362  0020                     ??_READ_EEPROM:	
   363  0020                     ?_WRITE_EEPROM:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0020                     ??_sys_init:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0020                     ??_gpio_init:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0020                     ??_timer_init:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0020                     ??_int_init:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0020                     ??_swI2C_Init:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0020                     ?_delay_x10ms:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_beepOff:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ??_beepOn:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ?_setState:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_swI2C_Start:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ??_swI2C_Stop:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_swI2C_WriteByte:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ??_swI2C_ReadByte:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ?_compe:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ?___awdiv:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0020                     READ_EEPROM@EEAddr:	
   412                           ; 2 bytes @ 0x0
   413                           
   414  0020                     WRITE_EEPROM@EEData:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0020                     compe@b:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0020                     delay_x10ms@t:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0020                     setState@_tOut:	
   424                           ; 2 bytes @ 0x0
   425                           
   426  0020                     ___awdiv@divisor:	
   427                           ; 2 bytes @ 0x0
   428                           
   429                           
   430                           ; 2 bytes @ 0x0
   431  0020                     	ds	1
   432  0021                     ??_WRITE_EEPROM:	
   433  0021                     READ_EEPROM@ReEepromData:	
   434                           ; 0 bytes @ 0x1
   435                           
   436  0021                     WRITE_EEPROM@EEAddr:	
   437                           ; 1 bytes @ 0x1
   438                           
   439  0021                     compe@dt:	
   440                           ; 1 bytes @ 0x1
   441                           
   442  0021                     swI2C_WriteByte@dat:	
   443                           ; 1 bytes @ 0x1
   444                           
   445  0021                     swI2C_ReadByte@Ack:	
   446                           ; 1 bytes @ 0x1
   447                           
   448                           
   449                           ; 1 bytes @ 0x1
   450  0021                     	ds	1
   451  0022                     ??_delay_x10ms:	
   452  0022                     ??_setState:	
   453                           ; 0 bytes @ 0x2
   454                           
   455  0022                     ??_compe:	
   456                           ; 0 bytes @ 0x2
   457                           
   458  0022                     setState@stt:	
   459                           ; 0 bytes @ 0x2
   460                           
   461  0022                     swI2C_WriteByte@i:	
   462                           ; 1 bytes @ 0x2
   463                           
   464  0022                     swI2C_ReadByte@dat:	
   465                           ; 1 bytes @ 0x2
   466                           
   467  0022                     delay_x10ms@set:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0022                     ___awdiv@dividend:	
   471                           ; 2 bytes @ 0x2
   472                           
   473                           
   474                           ; 2 bytes @ 0x2
   475  0022                     	ds	1
   476  0023                     ?_AccWrite:	
   477  0023                     swI2C_ReadByte@i:	
   478                           ; 1 bytes @ 0x3
   479                           
   480  0023                     AccWrite@dat:	
   481                           ; 1 bytes @ 0x3
   482                           
   483                           
   484                           ; 1 bytes @ 0x3
   485  0023                     	ds	1
   486  0024                     ?_beep:	
   487  0024                     ??___awdiv:	
   488                           ; 0 bytes @ 0x4
   489                           
   490  0024                     ?_AccRead:	
   491                           ; 0 bytes @ 0x4
   492                           
   493  0024                     beep@rep:	
   494                           ; 1 bytes @ 0x4
   495                           
   496  0024                     compe@a:	
   497                           ; 1 bytes @ 0x4
   498                           
   499  0024                     AccWrite@len:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  0024                     AccRead@dat:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0024                     ___awdiv@counter:	
   506                           ; 1 bytes @ 0x4
   507                           
   508                           
   509                           ; 1 bytes @ 0x4
   510  0024                     	ds	1
   511  0025                     ??_AccWrite:	
   512  0025                     ??_beep:	
   513                           ; 0 bytes @ 0x5
   514                           
   515  0025                     beep@delay:	
   516                           ; 0 bytes @ 0x5
   517                           
   518  0025                     AccRead@len:	
   519                           ; 1 bytes @ 0x5
   520                           
   521  0025                     ___awdiv@sign:	
   522                           ; 1 bytes @ 0x5
   523                           
   524                           
   525                           ; 1 bytes @ 0x5
   526  0025                     	ds	1
   527  0026                     ??_AccRead:	
   528  0026                     AccWrite@rAdd:	
   529                           ; 0 bytes @ 0x6
   530                           
   531  0026                     ___awdiv@quotient:	
   532                           ; 1 bytes @ 0x6
   533                           
   534                           
   535                           ; 2 bytes @ 0x6
   536  0026                     	ds	1
   537  0027                     AccWrite@i:	
   538                           
   539                           ; 1 bytes @ 0x7
   540  0027                     	ds	1
   541  0028                     AccRead@rAdd:	
   542                           
   543                           ; 1 bytes @ 0x8
   544  0028                     	ds	1
   545  0029                     AccRead@i:	
   546                           
   547                           ; 1 bytes @ 0x9
   548  0029                     	ds	1
   549  002A                     ??_main:	
   550                           
   551                           ; 0 bytes @ 0xA
   552  002A                     	ds	3
   553  002D                     main@isWait:	
   554                           
   555                           ; 2 bytes @ 0xD
   556  002D                     	ds	2
   557  002F                     main@isFall:	
   558                           
   559                           ; 1 bytes @ 0xF
   560  002F                     	ds	1
   561  0030                     main@lostDetect:	
   562                           
   563                           ; 1 bytes @ 0x10
   564  0030                     	ds	1
   565  0031                     main@acYOld:	
   566                           
   567                           ; 1 bytes @ 0x11
   568  0031                     	ds	1
   569  0032                     main@acXOld:	
   570                           
   571                           ; 1 bytes @ 0x12
   572  0032                     	ds	1
   573  0033                     main@buf:	
   574                           
   575                           ; 6 bytes @ 0x13
   576  0033                     	ds	6
   577  0039                     main@acYsum:	
   578                           
   579                           ; 2 bytes @ 0x19
   580  0039                     	ds	2
   581  003B                     main@acXsum:	
   582                           
   583                           ; 2 bytes @ 0x1B
   584  003B                     	ds	2
   585  003D                     main@isSw:	
   586                           
   587                           ; 1 bytes @ 0x1D
   588  003D                     	ds	1
   589  003E                     main@tmp16:	
   590                           
   591                           ; 2 bytes @ 0x1E
   592  003E                     	ds	2
   593  0040                     main@tmp8:	
   594                           
   595                           ; 1 bytes @ 0x20
   596  0040                     	ds	1
   597                           
   598                           	psect	maintext
   599  000B                     __pmaintext:	
   600 ;;Data sizes: Strings 0, constant 0, data 0, bss 11, persistent 0 stack 0
   601 ;;Auto spaces:   Size  Autos    Used
   602 ;; COMMON          14      5      10
   603 ;; BANK0           80     33      39
   604 ;; BANK1           32      0       0
   605 ;;
   606 ;; Pointer list with targets:
   607 ;; ?___awdiv	int  size(1) Largest target is 0
   608 ;;
   609 ;; AccRead@dat	PTR unsigned char  size(1) Largest target is 6
   610 ;;		 -> main@buf(BANK0[6]), 
   611 ;;
   612 ;; AccWrite@dat	PTR unsigned char  size(1) Largest target is 6
   613 ;;		 -> main@buf(BANK0[6]), 
   614 ;;
   615 ;;
   616 ;; Critical Paths under _main in COMMON
   617 ;;
   618 ;;   None.
   619 ;;
   620 ;; Critical Paths under _ISR in COMMON
   621 ;;
   622 ;;   _ISR->i1_READ_EEPROM
   623 ;;   _ISR->i1_WRITE_EEPROM
   624 ;;
   625 ;; Critical Paths under _main in BANK0
   626 ;;
   627 ;;   _main->_AccRead
   628 ;;   _AccRead->_swI2C_ReadByte
   629 ;;   _AccWrite->_swI2C_WriteByte
   630 ;;   _beep->_delay_x10ms
   631 ;;
   632 ;; Critical Paths under _ISR in BANK0
   633 ;;
   634 ;;   None.
   635 ;;
   636 ;; Critical Paths under _main in BANK1
   637 ;;
   638 ;;   None.
   639 ;;
   640 ;; Critical Paths under _ISR in BANK1
   641 ;;
   642 ;;   None.
   643 ;;
   644 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   645 ;;
   646 ;;
   647 ;;Call Graph Tables:
   648 ;;
   649 ;; ---------------------------------------------------------------------------------
   650 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   651 ;; ---------------------------------------------------------------------------------
   652 ;; (0) _main                                                23    23      0    3863
   653 ;;                                             10 BANK0     23    23      0
   654 ;;                           _sys_init
   655 ;;                          _gpio_init
   656 ;;                         _timer_init
   657 ;;                           _int_init
   658 ;;                         _swI2C_Init
   659 ;;                           _setState
   660 ;;                       _WRITE_EEPROM
   661 ;;                        _READ_EEPROM
   662 ;;                             _beepOn
   663 ;;                           _AccWrite
   664 ;;                               _beep
   665 ;;                            _AccRead
   666 ;;                            ___awdiv
   667 ;;                            _beepOff
   668 ;;                        _delay_x10ms
   669 ;;                              _compe
   670 ;; ---------------------------------------------------------------------------------
   671 ;; (1) _AccRead                                              6     4      2     532
   672 ;;                                              4 BANK0      6     4      2
   673 ;;                        _swI2C_Start
   674 ;;                    _swI2C_WriteByte
   675 ;;                     _swI2C_ReadByte
   676 ;;                         _swI2C_Stop
   677 ;; ---------------------------------------------------------------------------------
   678 ;; (1) _AccWrite                                             5     3      2     300
   679 ;;                                              3 BANK0      5     3      2
   680 ;;                        _swI2C_Start
   681 ;;                    _swI2C_WriteByte
   682 ;;                         _swI2C_Stop
   683 ;; ---------------------------------------------------------------------------------
   684 ;; (2) _swI2C_ReadByte                                       4     4      0     170
   685 ;;                                              0 BANK0      4     4      0
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (2) _swI2C_WriteByte                                      3     3      0     139
   688 ;;                                              0 BANK0      3     3      0
   689 ;; ---------------------------------------------------------------------------------
   690 ;; (2) _swI2C_Stop                                           1     1      0       0
   691 ;;                                              0 BANK0      1     1      0
   692 ;; ---------------------------------------------------------------------------------
   693 ;; (2) _swI2C_Start                                          1     1      0       0
   694 ;;                                              0 BANK0      1     1      0
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (1) _swI2C_Init                                           1     1      0       0
   697 ;;                                              0 BANK0      1     1      0
   698 ;; ---------------------------------------------------------------------------------
   699 ;; (1) _sys_init                                             0     0      0       0
   700 ;; ---------------------------------------------------------------------------------
   701 ;; (1) _beep                                                 2     1      1     130
   702 ;;                                              4 BANK0      2     1      1
   703 ;;                        _delay_x10ms
   704 ;; ---------------------------------------------------------------------------------
   705 ;; (1) ___awdiv                                              8     4      4     445
   706 ;;                                              0 BANK0      8     4      4
   707 ;; ---------------------------------------------------------------------------------
   708 ;; (1) _int_init                                             1     1      0       0
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (1) _timer_init                                           0     0      0       0
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (1) _gpio_init                                            0     0      0       0
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (1) _compe                                                5     3      2     372
   715 ;;                                              0 BANK0      5     3      2
   716 ;; ---------------------------------------------------------------------------------
   717 ;; (1) _setState                                             3     1      2      62
   718 ;;                                              0 BANK0      3     1      2
   719 ;; ---------------------------------------------------------------------------------
   720 ;; (1) _beepOn                                               0     0      0       0
   721 ;; ---------------------------------------------------------------------------------
   722 ;; (1) _beepOff                                              0     0      0       0
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (1) _delay_x10ms                                          4     2      2      68
   725 ;;                                              0 BANK0      4     2      2
   726 ;; ---------------------------------------------------------------------------------
   727 ;; (1) _WRITE_EEPROM                                         2     1      1      62
   728 ;;                                              0 BANK0      2     1      1
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (1) _READ_EEPROM                                          2     2      0      65
   731 ;;                                              0 BANK0      2     2      0
   732 ;; ---------------------------------------------------------------------------------
   733 ;; Estimated maximum stack depth 2
   734 ;; ---------------------------------------------------------------------------------
   735 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   736 ;; ---------------------------------------------------------------------------------
   737 ;; (3) _ISR                                                  3     3      0     319
   738 ;;                                              2 COMMON     3     3      0
   739 ;;                      i1_READ_EEPROM
   740 ;;                     i1_WRITE_EEPROM
   741 ;; ---------------------------------------------------------------------------------
   742 ;; (4) i1_WRITE_EEPROM                                       2     1      1     146
   743 ;;                                              0 COMMON     2     1      1
   744 ;; ---------------------------------------------------------------------------------
   745 ;; (4) i1_READ_EEPROM                                        2     2      0     148
   746 ;;                                              0 COMMON     2     2      0
   747 ;; ---------------------------------------------------------------------------------
   748 ;; Estimated maximum stack depth 4
   749 ;; ---------------------------------------------------------------------------------
   750 ;; Call Graph Graphs:
   751 ;; _main (ROOT)
   752 ;;   _sys_init
   753 ;;   _gpio_init
   754 ;;   _timer_init
   755 ;;   _int_init
   756 ;;   _swI2C_Init
   757 ;;   _setState
   758 ;;   _WRITE_EEPROM
   759 ;;   _READ_EEPROM
   760 ;;   _beepOn
   761 ;;   _AccWrite
   762 ;;     _swI2C_Start
   763 ;;     _swI2C_WriteByte
   764 ;;     _swI2C_Stop
   765 ;;   _beep
   766 ;;     _delay_x10ms
   767 ;;   _AccRead
   768 ;;     _swI2C_Start
   769 ;;     _swI2C_WriteByte
   770 ;;     _swI2C_ReadByte
   771 ;;     _swI2C_Stop
   772 ;;   ___awdiv
   773 ;;   _beepOff
   774 ;;   _delay_x10ms
   775 ;;   _compe
   776 ;;
   777 ;; _ISR (ROOT)
   778 ;;   i1_READ_EEPROM
   779 ;;   i1_WRITE_EEPROM
   780 ;;
   781 ;; Address spaces:
   782 ;;Name               Size   Autos  Total    Cost      Usage
   783 ;;BITCOMMON            E      0       0       0        0.0%
   784 ;;EEDATA             100      0       0       0        0.0%
   785 ;;NULL                 0      0       0       0        0.0%
   786 ;;CODE                 0      0       0       0        0.0%
   787 ;;COMMON               E      5       A       1       71.4%
   788 ;;BITSFR0              0      0       0       1        0.0%
   789 ;;SFR0                 0      0       0       1        0.0%
   790 ;;BITSFR1              0      0       0       2        0.0%
   791 ;;SFR1                 0      0       0       2        0.0%
   792 ;;STACK                0      0       6       2        0.0%
   793 ;;BITBANK0            50      0       0       3        0.0%
   794 ;;BANK0               50     21      27       4       48.8%
   795 ;;BANK1               20      0       0       5        0.0%
   796 ;;ABS                  0      0      31       6        0.0%
   797 ;;BITBANK1            20      0       0       7        0.0%
   798 ;;DATA                 0      0      37       8        0.0%
   799                           
   800                           
   801 ;; *************** function _main *****************
   802 ;; Defined at:
   803 ;;		line 206 in file "smartkey.C"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  buf             6   19[BANK0 ] unsigned char [6]
   808 ;;  tmp16           2   30[BANK0 ] unsigned int 
   809 ;;  acXsum          2   27[BANK0 ] int 
   810 ;;  acYsum          2   25[BANK0 ] int 
   811 ;;  isWait          2   13[BANK0 ] unsigned int 
   812 ;;  tmp8            1   32[BANK0 ] unsigned char 
   813 ;;  isSw            1   29[BANK0 ] unsigned char 
   814 ;;  acXOld          1   18[BANK0 ] char 
   815 ;;  acYOld          1   17[BANK0 ] char 
   816 ;;  lostDetect      1   16[BANK0 ] unsigned char 
   817 ;;  isFall          1   15[BANK0 ] unsigned char 
   818 ;; Return value:  Size  Location     Type
   819 ;;		None               void
   820 ;; Registers used:
   821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 17F/0
   824 ;;		On exit  : 20/20
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1
   827 ;;      Params:         0       0       0
   828 ;;      Locals:         0      20       0
   829 ;;      Temps:          0       3       0
   830 ;;      Totals:         0      23       0
   831 ;;Total ram usage:       23 bytes
   832 ;; Hardware stack levels required when called:    4
   833 ;; This function calls:
   834 ;;		_sys_init
   835 ;;		_gpio_init
   836 ;;		_timer_init
   837 ;;		_int_init
   838 ;;		_swI2C_Init
   839 ;;		_setState
   840 ;;		_WRITE_EEPROM
   841 ;;		_READ_EEPROM
   842 ;;		_beepOn
   843 ;;		_AccWrite
   844 ;;		_beep
   845 ;;		_AccRead
   846 ;;		___awdiv
   847 ;;		_beepOff
   848 ;;		_delay_x10ms
   849 ;;		_compe
   850 ;; This function is called by:
   851 ;;		Startup code after reset
   852 ;; This function uses a non-reentrant model
   853 ;;
   854  000B                     _main:	
   855                           
   856                           ;smartkey.C: 208: unsigned char tmp8, isSw = 0, isFall = 0, lostDetect = 0;
   857                           
   858                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   859  000B  01BD               	clrf	main@isSw
   860  000C  01AF               	clrf	main@isFall
   861  000D  01B0               	clrf	main@lostDetect
   862                           
   863                           ;smartkey.C: 209: unsigned int isWait = 0;
   864  000E  01AD               	clrf	main@isWait
   865  000F  01AE               	clrf	main@isWait+1
   866                           
   867                           ;smartkey.C: 210: signed int acYsum = 0, acXsum = 0;
   868  0010  01B9               	clrf	main@acYsum
   869  0011  01BA               	clrf	main@acYsum+1
   870  0012  01BB               	clrf	main@acXsum
   871  0013  01BC               	clrf	main@acXsum+1
   872                           
   873                           ;smartkey.C: 211: unsigned int tmp16 = 0;
   874  0014  01BE               	clrf	main@tmp16
   875  0015  01BF               	clrf	main@tmp16+1
   876                           
   877                           ;smartkey.C: 212: signed char acYOld, acXOld;
   878                           ;smartkey.C: 213: unsigned char buf[6];
   879                           ;smartkey.C: 215: RegStatus.byte =0x00;
   880  0016  01F2               	clrf	_RegStatus	;volatile
   881                           
   882                           ;smartkey.C: 216: RegStatus.bits.b6 = 1;
   883  0017  1772               	bsf	_RegStatus,6	;volatile
   884  0018  0064               	clrwdt	;#
   885                           
   886                           ;smartkey.C: 220: sys_init();
   887  0019  26D3               	fcall	_sys_init
   888                           
   889                           ;smartkey.C: 221: gpio_init();
   890  001A  2654               	fcall	_gpio_init
   891                           
   892                           ;smartkey.C: 222: timer_init();
   893  001B  2690               	fcall	_timer_init
   894                           
   895                           ;smartkey.C: 223: int_init();
   896  001C  25F0               	fcall	_int_init
   897                           
   898                           ;smartkey.C: 226: _delay((unsigned long)((100)*(4000000/4000.0)));
   899  001D  3082               	movlw	130
   900  001E  00AB               	movwf	??_main+1
   901  001F  30DD               	movlw	221
   902  0020  00AA               	movwf	??_main
   903  0021                     u3647:	
   904  0021  0BAA               	decfsz	??_main,f
   905  0022  2821               	goto	u3647
   906  0023  0BAB               	decfsz	??_main+1,f
   907  0024  2821               	goto	u3647
   908  0025  2826               	nop2
   909                           
   910                           ;smartkey.C: 228: swI2C_Init();
   911  0026  25D1               	fcall	_swI2C_Init
   912  0027  3000               	movlw	0
   913                           
   914                           ;smartkey.C: 230: setState(0, 0);
   915  0028  1283               	bcf	3,5	;RP0=0, select bank0
   916  0029  01A0               	clrf	?_setState
   917  002A  01A1               	clrf	?_setState+1
   918  002B  26C7               	fcall	_setState
   919                           
   920                           ;smartkey.C: 232: WRITE_EEPROM(0xFF, 0xAA);
   921  002C  30AA               	movlw	170
   922  002D  00A0               	movwf	?_WRITE_EEPROM
   923  002E  30FF               	movlw	255
   924  002F  260B               	fcall	_WRITE_EEPROM
   925                           
   926                           ;smartkey.C: 233: WRITE_EEPROM(0xFF, 0xAA);
   927  0030  30AA               	movlw	170
   928  0031  1283               	bcf	3,5	;RP0=0, select bank0
   929  0032  00A0               	movwf	?_WRITE_EEPROM
   930  0033  30FF               	movlw	255
   931  0034  260B               	fcall	_WRITE_EEPROM
   932                           
   933                           ;smartkey.C: 235: _delay((unsigned long)((100)*(4000000/4000.0)));
   934  0035  3082               	movlw	130
   935  0036  1283               	bcf	3,5	;RP0=0, select bank0
   936  0037  00AB               	movwf	??_main+1
   937  0038  30DD               	movlw	221
   938  0039  00AA               	movwf	??_main
   939  003A                     u3657:	
   940  003A  0BAA               	decfsz	??_main,f
   941  003B  283A               	goto	u3657
   942  003C  0BAB               	decfsz	??_main+1,f
   943  003D  283A               	goto	u3657
   944  003E  283F               	nop2
   945                           
   946                           ;smartkey.C: 238: tmp8 = READ_EEPROM(0x41);
   947  003F  3041               	movlw	65
   948  0040  26BA               	fcall	_READ_EEPROM
   949  0041  00C0               	movwf	main@tmp8
   950                           
   951                           ;smartkey.C: 239: if (tmp8 > 3) {WRITE_EEPROM(0x41, 0); _delay((unsigned long)((2)*(4000
      +                          000/4000.0)));}
   952  0042  3004               	movlw	4
   953  0043  0240               	subwf	main@tmp8,w
   954  0044  1C03               	skipc
   955  0045  2853               	goto	l6784
   956  0046  3041               	movlw	65
   957  0047  01A0               	clrf	?_WRITE_EEPROM
   958  0048  260B               	fcall	_WRITE_EEPROM
   959  0049  3003               	movlw	3
   960  004A  1283               	bcf	3,5	;RP0=0, select bank0
   961  004B  00AB               	movwf	??_main+1
   962  004C  3097               	movlw	151
   963  004D  00AA               	movwf	??_main
   964  004E                     u3667:	
   965  004E  0BAA               	decfsz	??_main,f
   966  004F  284E               	goto	u3667
   967  0050  0BAB               	decfsz	??_main+1,f
   968  0051  284E               	goto	u3667
   969  0052  2853               	nop2
   970  0053                     l6784:	
   971                           
   972                           ;smartkey.C: 243: tmp8 = READ_EEPROM(0x08);
   973  0053  3008               	movlw	8
   974  0054  26BA               	fcall	_READ_EEPROM
   975  0055  00C0               	movwf	main@tmp8
   976                           
   977                           ;smartkey.C: 244: if (tmp8 == 0xff) {WRITE_EEPROM(0x08, 0); _delay((unsigned long)((2)*(
      +                          4000000/4000.0)));}
   978  0056  3AFF               	xorlw	255
   979  0057  1D03               	skipz
   980  0058  2866               	goto	l6792
   981  0059  3008               	movlw	8
   982  005A  01A0               	clrf	?_WRITE_EEPROM
   983  005B  260B               	fcall	_WRITE_EEPROM
   984  005C  3003               	movlw	3
   985  005D  1283               	bcf	3,5	;RP0=0, select bank0
   986  005E  00AB               	movwf	??_main+1
   987  005F  3097               	movlw	151
   988  0060  00AA               	movwf	??_main
   989  0061                     u3677:	
   990  0061  0BAA               	decfsz	??_main,f
   991  0062  2861               	goto	u3677
   992  0063  0BAB               	decfsz	??_main+1,f
   993  0064  2861               	goto	u3677
   994  0065  2866               	nop2
   995  0066                     l6792:	
   996                           
   997                           ;smartkey.C: 245: if (tmp8 == 0xcc) {
   998  0066  1283               	bcf	3,5	;RP0=0, select bank0
   999  0067  0840               	movf	main@tmp8,w
  1000  0068  3ACC               	xorlw	204
  1001  0069  1D03               	skipz
  1002  006A  2881               	goto	l6806
  1003                           
  1004                           ;smartkey.C: 246: RegStatus.bits.b0 = 0;
  1005  006B  1072               	bcf	_RegStatus,0	;volatile
  1006                           
  1007                           ;smartkey.C: 247: setState(3, 1800);
  1008  006C  3008               	movlw	8
  1009  006D  00A0               	movwf	?_setState
  1010  006E  3007               	movlw	7
  1011  006F  00A1               	movwf	?_setState+1
  1012  0070  3003               	movlw	3
  1013  0071  26C7               	fcall	_setState
  1014                           
  1015                           ;smartkey.C: 248: mtOldState = 1;
  1016  0072  01C6               	clrf	_mtOldState
  1017  0073  0AC6               	incf	_mtOldState,f
  1018                           
  1019                           ;smartkey.C: 249: cntTmp = timeTick + 50;
  1020  0074  0871               	movf	_timeTick+1,w
  1021  0075  00C2               	movwf	_cntTmp+1
  1022  0076  0870               	movf	_timeTick,w
  1023  0077  00C1               	movwf	_cntTmp
  1024  0078  3032               	movlw	50
  1025  0079  07C1               	addwf	_cntTmp,f
  1026  007A  1803               	skipnc
  1027  007B  0AC2               	incf	_cntTmp+1,f
  1028                           
  1029                           ;smartkey.C: 250: PR2L = 12;
  1030  007C  300C               	movlw	12
  1031  007D  1683               	bsf	3,5	;RP0=1, select bank1
  1032  007E  0091               	movwf	17	;volatile
  1033                           
  1034                           ;smartkey.C: 251: beepOn();
  1035  007F  26EE               	fcall	_beepOn
  1036                           
  1037                           ;smartkey.C: 252: } else {
  1038  0080  2888               	goto	l6810
  1039  0081                     l6806:	
  1040                           
  1041                           ;smartkey.C: 253: setState(2, 400);
  1042  0081  3090               	movlw	144
  1043  0082  00A0               	movwf	?_setState
  1044  0083  3001               	movlw	1
  1045  0084  00A1               	movwf	?_setState+1
  1046  0085  3002               	movlw	2
  1047  0086  26C7               	fcall	_setState
  1048                           
  1049                           ;smartkey.C: 254: mtOldState = 0;
  1050  0087  01C6               	clrf	_mtOldState
  1051  0088                     l6810:	
  1052                           
  1053                           ;smartkey.C: 255: }
  1054                           ;smartkey.C: 260: buf[0] = 0x08;
  1055  0088  3008               	movlw	8
  1056  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1057  008A  00B3               	movwf	main@buf
  1058                           
  1059                           ;smartkey.C: 261: if ((AccWrite(0x10,buf, 1) == 0)) {
  1060  008B  3033               	movlw	main@buf& (0+255)
  1061  008C  00A3               	movwf	?_AccWrite
  1062  008D  3010               	movlw	16
  1063  008E  01A4               	clrf	?_AccWrite+1
  1064  008F  0AA4               	incf	?_AccWrite+1,f
  1065  0090  25B0               	fcall	_AccWrite
  1066  0091  3800               	iorlw	0
  1067  0092  1903               	btfsc	3,2
  1068  0093  2899               	goto	l6818
  1069                           
  1070                           ;smartkey.C: 264: else {
  1071                           ;smartkey.C: 266: beep(10, 2);
  1072  0094  3002               	movlw	2
  1073  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0096  00A4               	movwf	?_beep
  1075  0097  300A               	movlw	10
  1076  0098  263E               	fcall	_beep
  1077  0099                     l6818:	
  1078                           
  1079                           ;smartkey.C: 267: }
  1080                           ;smartkey.C: 270: tmp8 = READ_EEPROM(0x3F);
  1081  0099  303F               	movlw	63
  1082  009A  26BA               	fcall	_READ_EEPROM
  1083  009B  00C0               	movwf	main@tmp8
  1084                           
  1085                           ;smartkey.C: 271: if (tmp8 == 5) {
  1086  009C  3A05               	xorlw	5
  1087  009D  1D03               	skipz
  1088  009E  28D6               	goto	l6840
  1089  009F  303F               	movlw	63
  1090                           
  1091                           ;smartkey.C: 272: tmp8 = 0;
  1092  00A0  01C0               	clrf	main@tmp8
  1093  00A1                     L4:	
  1094                           
  1095                           ;smartkey.C: 273: WRITE_EEPROM(0x3F, 0);
  1096  00A1  01A0               	clrf	?_WRITE_EEPROM
  1097  00A2  260B               	fcall	_WRITE_EEPROM
  1098  00A3                     l6838:	
  1099                           ;smartkey.C: 274: while ( RA2) {
  1100                           
  1101  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1102  00A4  1D05               	btfss	5,2
  1103  00A5  28D4               	goto	l907
  1104                           
  1105                           ;smartkey.C: 275: _delay((unsigned long)((1500)*(4000000/4000.0)));
  1106  00A6  3008               	movlw	8
  1107  00A7  00AC               	movwf	??_main+2
  1108  00A8  309D               	movlw	157
  1109  00A9  00AB               	movwf	??_main+1
  1110  00AA  300B               	movlw	11
  1111  00AB  00AA               	movwf	??_main
  1112  00AC                     u3687:	
  1113  00AC  0BAA               	decfsz	??_main,f
  1114  00AD  28AC               	goto	u3687
  1115  00AE  0BAB               	decfsz	??_main+1,f
  1116  00AF  28AC               	goto	u3687
  1117  00B0  0BAC               	decfsz	??_main+2,f
  1118  00B1  28AC               	goto	u3687
  1119  00B2  28B3               	nop2
  1120  00B3  3015               	movlw	21
  1121                           
  1122                           ;smartkey.C: 276: tmp8++;
  1123  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1124  00B5  0AC0               	incf	main@tmp8,f
  1125                           
  1126                           ;smartkey.C: 277: if (tmp8 > 20) {
  1127  00B6  0240               	subwf	main@tmp8,w
  1128  00B7  1C03               	skipc
  1129  00B8  28C8               	goto	l903
  1130                           
  1131                           ;smartkey.C: 278: _delay((unsigned long)((10000)*(4000000/4000.0)));
  1132  00B9  3033               	movlw	51
  1133  00BA  00AC               	movwf	??_main+2
  1134  00BB  30BC               	movlw	188
  1135  00BC  00AB               	movwf	??_main+1
  1136  00BD  3010               	movlw	16
  1137  00BE  00AA               	movwf	??_main
  1138  00BF                     u3697:	
  1139  00BF  0BAA               	decfsz	??_main,f
  1140  00C0  28BF               	goto	u3697
  1141  00C1  0BAB               	decfsz	??_main+1,f
  1142  00C2  28BF               	goto	u3697
  1143  00C3  0BAC               	decfsz	??_main+2,f
  1144  00C4  28BF               	goto	u3697
  1145  00C5  3040               	movlw	64
  1146                           
  1147                           ;smartkey.C: 279: WRITE_EEPROM(0x40, 0);
  1148  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1149  00C7  28A1               	goto	L4
  1150  00C8                     l903:	
  1151                           ;smartkey.C: 280: }
  1152                           
  1153                           
  1154                           ;smartkey.C: 281: else if ( RA2) {
  1155  00C8  1D05               	btfss	5,2
  1156  00C9  28A3               	goto	l6838
  1157                           
  1158                           ;smartkey.C: 282: WRITE_EEPROM(0x40, tmp8);
  1159  00CA  0840               	movf	main@tmp8,w
  1160  00CB  00A0               	movwf	?_WRITE_EEPROM
  1161  00CC  3040               	movlw	64
  1162  00CD  260B               	fcall	_WRITE_EEPROM
  1163  00CE  300A               	movlw	10
  1164                           
  1165                           ;smartkey.C: 283: beep(10, 1);
  1166  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1167  00D0  01A4               	clrf	?_beep
  1168  00D1  0AA4               	incf	?_beep,f
  1169  00D2  263E               	fcall	_beep
  1170  00D3  28A3               	goto	l6838
  1171  00D4                     l907:	
  1172  00D4  1D05               	btfss	5,2
  1173  00D5  28D4               	goto	l907
  1174  00D6                     l6840:	
  1175                           
  1176                           ;smartkey.C: 287: }
  1177                           ;smartkey.C: 290: tmp8 = READ_EEPROM(0x40);
  1178  00D6  3040               	movlw	64
  1179  00D7  26BA               	fcall	_READ_EEPROM
  1180  00D8  00C0               	movwf	main@tmp8
  1181                           
  1182                           ;smartkey.C: 291: switch (tmp8) {
  1183  00D9  2970               	goto	l6882
  1184  00DA                     l6842:	
  1185  00DA  3003               	movlw	3
  1186                           
  1187                           ;smartkey.C: 294: tmp8 = 0; beep(10, 3);
  1188  00DB  01C0               	clrf	main@tmp8
  1189  00DC  00A4               	movwf	?_beep
  1190  00DD  300A               	movlw	10
  1191  00DE  263E               	fcall	_beep
  1192                           
  1193                           ;smartkey.C: 295: while ((tmp8 < 11)) {
  1194  00DF  290D               	goto	l912
  1195  00E0                     l6848:	
  1196                           
  1197                           ;smartkey.C: 297: acXsum += (signed char)buf[1];
  1198  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1199  00E1  0834               	movf	main@buf+1,w
  1200  00E2  00AA               	movwf	??_main
  1201  00E3  01AB               	clrf	??_main+1
  1202  00E4  1BAA               	btfsc	??_main,7
  1203  00E5  03AB               	decf	??_main+1,f
  1204  00E6  07BB               	addwf	main@acXsum,f
  1205  00E7  1803               	skipnc
  1206  00E8  0ABC               	incf	main@acXsum+1,f
  1207  00E9  082B               	movf	??_main+1,w
  1208  00EA  07BC               	addwf	main@acXsum+1,f
  1209                           
  1210                           ;smartkey.C: 298: acYsum += (signed char)buf[3];
  1211  00EB  0836               	movf	main@buf+3,w
  1212  00EC  00AA               	movwf	??_main
  1213  00ED  01AB               	clrf	??_main+1
  1214  00EE  1BAA               	btfsc	??_main,7
  1215  00EF  03AB               	decf	??_main+1,f
  1216  00F0  07B9               	addwf	main@acYsum,f
  1217  00F1  1803               	skipnc
  1218  00F2  0ABA               	incf	main@acYsum+1,f
  1219  00F3  082B               	movf	??_main+1,w
  1220  00F4  07BA               	addwf	main@acYsum+1,f
  1221                           
  1222                           ;smartkey.C: 299: if ( ((signed char)buf[5] > -15) && ((signed char)buf[5] <15)) break;
  1223  00F5  0838               	movf	main@buf+5,w
  1224  00F6  3A80               	xorlw	128
  1225  00F7  3E8E               	addlw	142
  1226  00F8  1C03               	skipc
  1227  00F9  28FF               	goto	l6854
  1228  00FA  0838               	movf	main@buf+5,w
  1229  00FB  3A80               	xorlw	128
  1230  00FC  3E71               	addlw	-143
  1231  00FD  1C03               	btfss	3,0
  1232  00FE  291B               	goto	l6858
  1233  00FF                     l6854:	
  1234  00FF  3003               	movlw	3
  1235                           
  1236                           ;smartkey.C: 300: tmp8++;
  1237  0100  0AC0               	incf	main@tmp8,f
  1238                           
  1239                           ;smartkey.C: 303: _delay((unsigned long)((500)*(4000000/4000.0)));
  1240                           
  1241                           ;smartkey.C: 301: } else
  1242  0101  00AC               	movwf	??_main+2
  1243  0102  308A               	movlw	138
  1244  0103  00AB               	movwf	??_main+1
  1245  0104  3056               	movlw	86
  1246  0105  00AA               	movwf	??_main
  1247  0106                     u3707:	
  1248  0106  0BAA               	decfsz	??_main,f
  1249  0107  2906               	goto	u3707
  1250  0108  0BAB               	decfsz	??_main+1,f
  1251  0109  2906               	goto	u3707
  1252  010A  0BAC               	decfsz	??_main+2,f
  1253  010B  2906               	goto	u3707
  1254  010C  290D               	nop2
  1255  010D                     l912:	
  1256  010D  300B               	movlw	11
  1257  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1258  010F  0240               	subwf	main@tmp8,w
  1259  0110  1803               	btfsc	3,0
  1260  0111  291B               	goto	l6858
  1261                           
  1262                           ;smartkey.C: 296: if (AccRead(0x02, buf, 6) == 0) {
  1263  0112  3033               	movlw	main@buf& (0+255)
  1264  0113  00A4               	movwf	?_AccRead
  1265  0114  3006               	movlw	6
  1266  0115  00A5               	movwf	?_AccRead+1
  1267  0116  3002               	movlw	2
  1268  0117  2579               	fcall	_AccRead
  1269  0118  3800               	iorlw	0
  1270  0119  1903               	btfsc	3,2
  1271  011A  28E0               	goto	l6848
  1272  011B                     l6858:	
  1273                           
  1274                           ;smartkey.C: 304: }
  1275                           ;smartkey.C: 306: if (tmp8 == 11) {
  1276  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1277  011C  0840               	movf	main@tmp8,w
  1278  011D  3A0B               	xorlw	11
  1279  011E  1D03               	skipz
  1280  011F  2947               	goto	l6862
  1281                           
  1282                           ;smartkey.C: 307: acXsum = acXsum / 10;
  1283  0120  300A               	movlw	10
  1284  0121  00A0               	movwf	?___awdiv
  1285  0122  01A1               	clrf	?___awdiv+1
  1286  0123  083C               	movf	main@acXsum+1,w
  1287  0124  00A3               	movwf	?___awdiv+3
  1288  0125  083B               	movf	main@acXsum,w
  1289  0126  00A2               	movwf	?___awdiv+2
  1290  0127  247C               	fcall	___awdiv
  1291  0128  0821               	movf	?___awdiv+1,w
  1292  0129  00BC               	movwf	main@acXsum+1
  1293  012A  0820               	movf	?___awdiv,w
  1294  012B  00BB               	movwf	main@acXsum
  1295                           
  1296                           ;smartkey.C: 308: acYsum = acYsum / 10;
  1297  012C  300A               	movlw	10
  1298  012D  00A0               	movwf	?___awdiv
  1299  012E  01A1               	clrf	?___awdiv+1
  1300  012F  083A               	movf	main@acYsum+1,w
  1301  0130  00A3               	movwf	?___awdiv+3
  1302  0131  0839               	movf	main@acYsum,w
  1303  0132  00A2               	movwf	?___awdiv+2
  1304  0133  247C               	fcall	___awdiv
  1305  0134  0821               	movf	?___awdiv+1,w
  1306  0135  00BA               	movwf	main@acYsum+1
  1307  0136  0820               	movf	?___awdiv,w
  1308  0137  00B9               	movwf	main@acYsum
  1309                           
  1310                           ;smartkey.C: 310: WRITE_EEPROM(0x10, acXsum);
  1311  0138  083B               	movf	main@acXsum,w
  1312  0139  00A0               	movwf	?_WRITE_EEPROM
  1313  013A  3010               	movlw	16
  1314  013B  260B               	fcall	_WRITE_EEPROM
  1315                           
  1316                           ;smartkey.C: 311: WRITE_EEPROM(0x11, acYsum);
  1317  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1318  013D  0839               	movf	main@acYsum,w
  1319  013E  00A0               	movwf	?_WRITE_EEPROM
  1320  013F  3011               	movlw	17
  1321  0140  260B               	fcall	_WRITE_EEPROM
  1322                           
  1323                           ;smartkey.C: 312: beep(10, 3);
  1324  0141  3003               	movlw	3
  1325  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0143  00A4               	movwf	?_beep
  1327  0144  300A               	movlw	10
  1328  0145  263E               	fcall	_beep
  1329                           
  1330                           ;smartkey.C: 314: } else {
  1331  0146  297B               	goto	l6884
  1332  0147                     l6862:	
  1333                           
  1334                           ;smartkey.C: 315: beep(10, 2);
  1335  0147  3002               	movlw	2
  1336  0148  00A4               	movwf	?_beep
  1337  0149  300A               	movlw	10
  1338  014A  263E               	fcall	_beep
  1339  014B  297B               	goto	l6884
  1340  014C                     l6864:	
  1341                           
  1342                           ;smartkey.C: 322: tmp8 = READ_EEPROM(0x41);
  1343  014C  3041               	movlw	65
  1344  014D  26BA               	fcall	_READ_EEPROM
  1345  014E  00C0               	movwf	main@tmp8
  1346                           
  1347                           ;smartkey.C: 323: if (tmp8 & 2) {
  1348  014F  1CC0               	btfss	main@tmp8,1
  1349  0150  2953               	goto	l922
  1350                           
  1351                           ;smartkey.C: 324: tmp8 &= ~2;
  1352  0151  10C0               	bcf	main@tmp8,1
  1353                           
  1354                           ;smartkey.C: 325: }
  1355  0152  2954               	goto	l6870
  1356  0153                     l922:	
  1357                           
  1358                           ;smartkey.C: 326: else {
  1359                           ;smartkey.C: 327: tmp8 |= 2;
  1360  0153  14C0               	bsf	main@tmp8,1
  1361  0154                     l6870:	
  1362                           
  1363                           ;smartkey.C: 328: }
  1364                           ;smartkey.C: 329: WRITE_EEPROM(0x41, tmp8);
  1365  0154  0840               	movf	main@tmp8,w
  1366  0155  00A0               	movwf	?_WRITE_EEPROM
  1367  0156  3041               	movlw	65
  1368  0157  260B               	fcall	_WRITE_EEPROM
  1369  0158  3032               	movlw	50
  1370                           
  1371                           ;smartkey.C: 330: beep(50, 1);
  1372  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1373  015A  01A4               	clrf	?_beep
  1374  015B  0AA4               	incf	?_beep,f
  1375  015C  263E               	fcall	_beep
  1376                           
  1377                           ;smartkey.C: 331: break;
  1378  015D  297B               	goto	l6884
  1379  015E                     l6872:	
  1380                           
  1381                           ;smartkey.C: 335: tmp8 = READ_EEPROM(0x41);
  1382  015E  3041               	movlw	65
  1383  015F  26BA               	fcall	_READ_EEPROM
  1384  0160  00C0               	movwf	main@tmp8
  1385                           
  1386                           ;smartkey.C: 336: if (tmp8 & 1) {
  1387  0161  1C40               	btfss	main@tmp8,0
  1388  0162  2965               	goto	l925
  1389                           
  1390                           ;smartkey.C: 337: tmp8 &= ~1;
  1391  0163  1040               	bcf	main@tmp8,0
  1392                           
  1393                           ;smartkey.C: 338: }
  1394  0164  2966               	goto	l6878
  1395  0165                     l925:	
  1396                           
  1397                           ;smartkey.C: 339: else {
  1398                           ;smartkey.C: 340: tmp8 |= 1;
  1399  0165  1440               	bsf	main@tmp8,0
  1400  0166                     l6878:	
  1401                           
  1402                           ;smartkey.C: 341: }
  1403                           ;smartkey.C: 342: WRITE_EEPROM(0x41, tmp8);
  1404  0166  0840               	movf	main@tmp8,w
  1405  0167  00A0               	movwf	?_WRITE_EEPROM
  1406  0168  3041               	movlw	65
  1407  0169  260B               	fcall	_WRITE_EEPROM
  1408  016A  300A               	movlw	10
  1409                           
  1410                           ;smartkey.C: 343: beep(10, 1);
  1411  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1412  016C  01A4               	clrf	?_beep
  1413  016D  0AA4               	incf	?_beep,f
  1414  016E  263E               	fcall	_beep
  1415                           
  1416                           ;smartkey.C: 344: break;
  1417  016F  297B               	goto	l6884
  1418  0170                     l6882:	
  1419  0170  0840               	movf	main@tmp8,w
  1420                           
  1421                           ; Switch size 1, requested type "space"
  1422                           ; Number of cases is 3, Range of values is 3 to 20
  1423                           ; switch strategies available:
  1424                           ; Name         Instructions Cycles
  1425                           ; simple_byte           10     6 (average)
  1426                           ; direct_byte           27     9 (fixed)
  1427                           ; jumptable            263     9 (fixed)
  1428                           ;	Chosen strategy is simple_byte
  1429  0171  3A03               	xorlw	3	; case 3
  1430  0172  1903               	skipnz
  1431  0173  28DA               	goto	l6842
  1432  0174  3A09               	xorlw	9	; case 10
  1433  0175  1903               	skipnz
  1434  0176  295E               	goto	l6872
  1435  0177  3A1E               	xorlw	30	; case 20
  1436  0178  1903               	skipnz
  1437  0179  294C               	goto	l6864
  1438  017A  297B               	goto	l6884
  1439  017B                     l6884:	
  1440                           
  1441                           ;smartkey.C: 348: tmp8 = READ_EEPROM(0x41);
  1442  017B  3041               	movlw	65
  1443  017C  26BA               	fcall	_READ_EEPROM
  1444  017D  00C0               	movwf	main@tmp8
  1445                           
  1446                           ;smartkey.C: 349: if (tmp8 >0 && tmp8<4 ) {
  1447  017E  0840               	movf	main@tmp8,w
  1448  017F  1903               	btfsc	3,2
  1449  0180  299F               	goto	l6904
  1450  0181  3004               	movlw	4
  1451  0182  0240               	subwf	main@tmp8,w
  1452  0183  1803               	skipnc
  1453  0184  299F               	goto	l6904
  1454                           
  1455                           ;smartkey.C: 350: RegStatus.bits.b0 = 1;
  1456  0185  1472               	bsf	_RegStatus,0	;volatile
  1457                           
  1458                           ;smartkey.C: 351: setState(1, 3500);
  1459  0186  30AC               	movlw	172
  1460  0187  00A0               	movwf	?_setState
  1461  0188  300D               	movlw	13
  1462  0189  00A1               	movwf	?_setState+1
  1463  018A  3001               	movlw	1
  1464  018B  26C7               	fcall	_setState
  1465                           
  1466                           ;smartkey.C: 352: RegStatus.bits.b4 = 1;
  1467  018C  1672               	bsf	_RegStatus,4	;volatile
  1468                           
  1469                           ;smartkey.C: 354: if (tmp8 & 2) {
  1470  018D  1CC0               	btfss	main@tmp8,1
  1471  018E  2991               	goto	l928
  1472                           
  1473                           ;smartkey.C: 355: RegStatus.bits.b6 = 0;
  1474  018F  1372               	bcf	_RegStatus,6	;volatile
  1475                           
  1476                           ;smartkey.C: 356: }
  1477  0190  299F               	goto	l6904
  1478  0191                     l928:	
  1479                           
  1480                           ;smartkey.C: 357: else if (tmp8 & 1) {
  1481  0191  1C40               	btfss	main@tmp8,0
  1482  0192  299F               	goto	l6904
  1483                           
  1484                           ;smartkey.C: 358: tmp16 = timeTick + 40;
  1485  0193  0871               	movf	_timeTick+1,w
  1486  0194  00BF               	movwf	main@tmp16+1
  1487  0195  0870               	movf	_timeTick,w
  1488  0196  00BE               	movwf	main@tmp16
  1489  0197  3028               	movlw	40
  1490  0198  07BE               	addwf	main@tmp16,f
  1491  0199  1803               	skipnc
  1492  019A  0ABF               	incf	main@tmp16+1,f
  1493  019B  300A               	movlw	10
  1494                           
  1495                           ;smartkey.C: 359: beep(10, 1);
  1496  019C  01A4               	clrf	?_beep
  1497  019D  0AA4               	incf	?_beep,f
  1498  019E  263E               	fcall	_beep
  1499  019F                     l6904:	
  1500                           
  1501                           ;smartkey.C: 360: }
  1502                           ;smartkey.C: 361: }
  1503                           ;smartkey.C: 364: acXsum = (signed int)READ_EEPROM(0x10);
  1504  019F  3010               	movlw	16
  1505  01A0  26BA               	fcall	_READ_EEPROM
  1506  01A1  00BB               	movwf	main@acXsum
  1507  01A2  3011               	movlw	17
  1508  01A3  01BC               	clrf	main@acXsum+1
  1509                           
  1510                           ;smartkey.C: 365: acYsum = (signed int)READ_EEPROM(0x11);
  1511  01A4  26BA               	fcall	_READ_EEPROM
  1512  01A5  00B9               	movwf	main@acYsum
  1513  01A6  01BA               	clrf	main@acYsum+1
  1514                           
  1515                           ;smartkey.C: 367: PAIE = 1;
  1516  01A7  158B               	bsf	11,3
  1517                           
  1518                           ;smartkey.C: 368: timeTick = 0;
  1519  01A8  01F0               	clrf	_timeTick
  1520  01A9  01F1               	clrf	_timeTick+1
  1521  01AA                     l6912:	
  1522                           
  1523                           ;smartkey.C: 374: if ( RegStatus.bits.b4 == 0) {
  1524  01AA  1E72               	btfss	_RegStatus,4	;volatile
  1525                           
  1526                           ;smartkey.C: 375: if (RegStatus.bits.b3 == 0) {
  1527  01AB  19F2               	btfsc	_RegStatus,3	;volatile
  1528  01AC  2A7C               	goto	l7020
  1529                           
  1530                           ;smartkey.C: 376: if (RegStatus.bits.b1) {
  1531  01AD  1CF2               	btfss	_RegStatus,1	;volatile
  1532  01AE  2A7C               	goto	l7020
  1533                           
  1534                           ;smartkey.C: 378: PAIE = 0;
  1535  01AF  118B               	bcf	11,3
  1536                           
  1537                           ;smartkey.C: 380: RegStatus.bits.b1 = 0;
  1538  01B0  10F2               	bcf	_RegStatus,1	;volatile
  1539                           
  1540                           ;smartkey.C: 384: if (RegStatus.bits.b2) {
  1541  01B1  1972               	btfsc	_RegStatus,2	;volatile
  1542  01B2  2A2E               	goto	l6986
  1543  01B3  2A73               	goto	l7018
  1544  01B4                     l6922:	
  1545                           
  1546                           ;smartkey.C: 388: lostDetect = 0;
  1547  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1548  01B5  01B0               	clrf	main@lostDetect
  1549  01B6                     L1:	
  1550  01B6  3028               	movlw	40
  1551                           
  1552                           ;smartkey.C: 389: timeTick = 0;
  1553  01B7  01F0               	clrf	_timeTick
  1554  01B8  01F1               	clrf	_timeTick+1
  1555                           
  1556                           ;smartkey.C: 390: tmp16 = 40;
  1557  01B9  00BE               	movwf	main@tmp16
  1558  01BA  01BF               	clrf	main@tmp16+1
  1559                           
  1560                           ;smartkey.C: 391: break;
  1561  01BB  2A7B               	goto	l957
  1562  01BC                     l6926:	
  1563                           
  1564                           ;smartkey.C: 394: if (timeTick > 30) {
  1565  01BC  3000               	movlw	0
  1566  01BD  0271               	subwf	_timeTick+1,w
  1567  01BE  301F               	movlw	31
  1568  01BF  1903               	skipnz
  1569  01C0  0270               	subwf	_timeTick,w
  1570  01C1  1C03               	skipc
  1571  01C2  2A7B               	goto	l957
  1572  01C3  3008               	movlw	8
  1573                           
  1574                           ;smartkey.C: 395: timeTick = 0;
  1575  01C4  01F0               	clrf	_timeTick
  1576  01C5  01F1               	clrf	_timeTick+1
  1577                           
  1578                           ;smartkey.C: 397: if (READ_EEPROM(0x08) == 0xcc) WRITE_EEPROM(0x08, 0);
  1579  01C6  26BA               	fcall	_READ_EEPROM
  1580  01C7  3ACC               	xorlw	204
  1581  01C8  1D03               	skipz
  1582  01C9  29CD               	goto	l6934
  1583  01CA  3008               	movlw	8
  1584  01CB  01A0               	clrf	?_WRITE_EEPROM
  1585  01CC  260B               	fcall	_WRITE_EEPROM
  1586  01CD                     l6934:	
  1587                           
  1588                           ;smartkey.C: 399: if ((mtOldState == 3)) {
  1589  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1590  01CE  0846               	movf	_mtOldState,w
  1591  01CF  3A03               	xorlw	3
  1592  01D0  1D03               	skipz
  1593  01D1  29DD               	goto	l6946
  1594                           
  1595                           ;smartkey.C: 400: beepOn(); TMR2ON = 0; beep(10, 1);
  1596  01D2  26EE               	fcall	_beepOn
  1597  01D3  300A               	movlw	10
  1598  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1599  01D5  1112               	bcf	18,2
  1600  01D6  01A4               	clrf	?_beep
  1601  01D7  0AA4               	incf	?_beep,f
  1602  01D8  263E               	fcall	_beep
  1603  01D9                     L3:	
  1604                           
  1605                           ;smartkey.C: 401: if (RegStatus.bits.b7)RegStatus.bits.b7 = 0;
  1606  01D9  1FF2               	btfss	_RegStatus,7	;volatile
  1607  01DA  2A7B               	goto	l957
  1608  01DB  13F2               	bcf	_RegStatus,7	;volatile
  1609  01DC  2A7B               	goto	l957
  1610  01DD                     l6946:	
  1611                           
  1612                           ;smartkey.C: 403: else if ((mtOldState == 0) || (mtOldState == 4)) {
  1613  01DD  0846               	movf	_mtOldState,w
  1614  01DE  1903               	btfsc	3,2
  1615  01DF  29E4               	goto	l947
  1616  01E0  0846               	movf	_mtOldState,w
  1617  01E1  3A04               	xorlw	4
  1618  01E2  1D03               	skipz
  1619  01E3  2A01               	goto	l6960
  1620  01E4                     l947:	
  1621                           
  1622                           ;smartkey.C: 404: RegStatus.bits.b0 = 1;
  1623  01E4  1472               	bsf	_RegStatus,0	;volatile
  1624                           
  1625                           ;smartkey.C: 405: setState(1, 3500);
  1626  01E5  30AC               	movlw	172
  1627  01E6  00A0               	movwf	?_setState
  1628  01E7  300D               	movlw	13
  1629  01E8  00A1               	movwf	?_setState+1
  1630  01E9  3001               	movlw	1
  1631  01EA  26C7               	fcall	_setState
  1632                           
  1633                           ;smartkey.C: 406: if (READ_EEPROM(0x40))WRITE_EEPROM(0x40, 0);
  1634  01EB  3040               	movlw	64
  1635  01EC  26BA               	fcall	_READ_EEPROM
  1636  01ED  3A00               	xorlw	0
  1637  01EE  1903               	skipnz
  1638  01EF  29F3               	goto	l6956
  1639  01F0  3040               	movlw	64
  1640  01F1  01A0               	clrf	?_WRITE_EEPROM
  1641  01F2  260B               	fcall	_WRITE_EEPROM
  1642  01F3                     l6956:	
  1643                           
  1644                           ;smartkey.C: 407: tmp16 = timeTick + 40;
  1645  01F3  0871               	movf	_timeTick+1,w
  1646  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1647  01F5  00BF               	movwf	main@tmp16+1
  1648  01F6  0870               	movf	_timeTick,w
  1649  01F7  00BE               	movwf	main@tmp16
  1650  01F8  3028               	movlw	40
  1651  01F9  07BE               	addwf	main@tmp16,f
  1652  01FA  1803               	skipnc
  1653  01FB  0ABF               	incf	main@tmp16+1,f
  1654  01FC  300A               	movlw	10
  1655                           
  1656                           ;smartkey.C: 408: beep(10, 1);
  1657  01FD  01A4               	clrf	?_beep
  1658  01FE  0AA4               	incf	?_beep,f
  1659  01FF  263E               	fcall	_beep
  1660                           
  1661                           ;smartkey.C: 409: }
  1662  0200  2A7B               	goto	l957
  1663  0201                     l6960:	
  1664                           
  1665                           ;smartkey.C: 410: else if ((mtOldState == 1)) {
  1666  0201  0B46               	decfsz	_mtOldState,w
  1667  0202  2A7B               	goto	l957
  1668                           
  1669                           ;smartkey.C: 412: if (RegStatus.bits.b7)RegStatus.bits.b7 = 0;
  1670  0203  29D9               	goto	L3
  1671  0204                     l6966:	
  1672                           ;smartkey.C: 413: }
  1673                           ;smartkey.C: 414: }
  1674                           ;smartkey.C: 415: break;
  1675                           
  1676                           
  1677                           ;smartkey.C: 418: if (timeTick > 200) {
  1678  0204  3000               	movlw	0
  1679  0205  0271               	subwf	_timeTick+1,w
  1680  0206  30C9               	movlw	201
  1681  0207  1903               	skipnz
  1682  0208  0270               	subwf	_timeTick,w
  1683  0209  1C03               	skipc
  1684  020A  2A7B               	goto	l957
  1685                           
  1686                           ;smartkey.C: 420: beepOff();
  1687  020B  26E3               	fcall	_beepOff
  1688                           
  1689                           ;smartkey.C: 421: if (READ_EEPROM(0x08) == 0xcc) WRITE_EEPROM(0x08, 0);
  1690  020C  3008               	movlw	8
  1691  020D  26BA               	fcall	_READ_EEPROM
  1692  020E  3ACC               	xorlw	204
  1693  020F  1D03               	skipz
  1694  0210  2A14               	goto	l6974
  1695  0211  3008               	movlw	8
  1696  0212  01A0               	clrf	?_WRITE_EEPROM
  1697  0213  260B               	fcall	_WRITE_EEPROM
  1698  0214                     l6974:	
  1699                           
  1700                           ;smartkey.C: 422: RegStatus.bits.b0 = 1;
  1701  0214  1472               	bsf	_RegStatus,0	;volatile
  1702                           
  1703                           ;smartkey.C: 423: setState(1, 3500);
  1704  0215  30AC               	movlw	172
  1705  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1706  0217  00A0               	movwf	?_setState
  1707  0218  300D               	movlw	13
  1708  0219  00A1               	movwf	?_setState+1
  1709  021A  3001               	movlw	1
  1710  021B  26C7               	fcall	_setState
  1711                           
  1712                           ;smartkey.C: 425: tmp16 = timeTick + 40;
  1713  021C  0871               	movf	_timeTick+1,w
  1714  021D  00BF               	movwf	main@tmp16+1
  1715  021E  0870               	movf	_timeTick,w
  1716  021F  00BE               	movwf	main@tmp16
  1717  0220  3028               	movlw	40
  1718  0221  07BE               	addwf	main@tmp16,f
  1719  0222  1803               	skipnc
  1720  0223  0ABF               	incf	main@tmp16+1,f
  1721  0224  2A7B               	goto	l957
  1722  0225                     l6980:	
  1723                           
  1724                           ;smartkey.C: 431: beepOff();
  1725  0225  26E3               	fcall	_beepOff
  1726                           
  1727                           ;smartkey.C: 432: setState(2, 300);
  1728  0226  302C               	movlw	44
  1729  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1730  0228  00A0               	movwf	?_setState
  1731  0229  3001               	movlw	1
  1732  022A  00A1               	movwf	?_setState+1
  1733  022B  3002               	movlw	2
  1734  022C  26C7               	fcall	_setState
  1735                           
  1736                           ;smartkey.C: 433: break;
  1737  022D  2A7B               	goto	l957
  1738  022E                     l6986:	
  1739  022E  0874               	movf	_mtState,w
  1740                           
  1741                           ; Switch size 1, requested type "space"
  1742                           ; Number of cases is 5, Range of values is 0 to 4
  1743                           ; switch strategies available:
  1744                           ; Name         Instructions Cycles
  1745                           ; direct_byte           11     6 (fixed)
  1746                           ; simple_byte           16     9 (average)
  1747                           ; jumptable            260     6 (fixed)
  1748                           ; rangetable             9     6 (fixed)
  1749                           ; spacedrange           16     9 (fixed)
  1750                           ; locatedrange           5     3 (fixed)
  1751                           ;	Chosen strategy is direct_byte
  1752  022F  0084               	movwf	4
  1753  0230  3005               	movlw	5
  1754  0231  0204               	subwf	4,w
  1755  0232  1803               	skipnc
  1756  0233  2A7B               	goto	l957
  1757  0234  3006               	movlw	high S7266
  1758  0235  008A               	movwf	10
  1759  0236  30E9               	movlw	low S7266
  1760  0237  0704               	addwf	4,w
  1761  0238  0082               	movwf	2
  1762  0239                     l6988:	
  1763                           
  1764                           ;smartkey.C: 448: if ((lostDetect == 1) && (timeTick < 1500) && (timeTick > 700))
  1765  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1766  023A  0B30               	decfsz	main@lostDetect,w
  1767  023B  2A67               	goto	l960
  1768  023C  3005               	movlw	5
  1769  023D  0271               	subwf	_timeTick+1,w
  1770  023E  30DC               	movlw	220
  1771  023F  1903               	skipnz
  1772  0240  0270               	subwf	_timeTick,w
  1773  0241  1803               	skipnc
  1774  0242  2A67               	goto	l960
  1775  0243  3002               	movlw	2
  1776  0244  0271               	subwf	_timeTick+1,w
  1777  0245  30BD               	movlw	189
  1778  0246  1903               	skipnz
  1779  0247  0270               	subwf	_timeTick,w
  1780  0248  1C03               	skipc
  1781  0249  2A67               	goto	l960
  1782                           
  1783                           ;smartkey.C: 449: {
  1784                           ;smartkey.C: 450: if (READ_EEPROM(0x08) == 0x00) WRITE_EEPROM(0x08, 0xcc);
  1785  024A  3008               	movlw	8
  1786  024B  26BA               	fcall	_READ_EEPROM
  1787  024C  3800               	iorlw	0
  1788  024D  1D03               	skipz
  1789  024E  2A53               	goto	l961
  1790  024F  30CC               	movlw	204
  1791  0250  00A0               	movwf	?_WRITE_EEPROM
  1792  0251  3008               	movlw	8
  1793  0252  260B               	fcall	_WRITE_EEPROM
  1794  0253                     l961:	
  1795                           
  1796                           ;smartkey.C: 452: setState(3, 1800);
  1797  0253  3008               	movlw	8
  1798  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0255  00A0               	movwf	?_setState
  1800  0256  3007               	movlw	7
  1801  0257  00A1               	movwf	?_setState+1
  1802  0258  3003               	movlw	3
  1803  0259  26C7               	fcall	_setState
  1804                           
  1805                           ;smartkey.C: 453: cntTmp = timeTick + 40;
  1806  025A  0871               	movf	_timeTick+1,w
  1807  025B  00C2               	movwf	_cntTmp+1
  1808  025C  0870               	movf	_timeTick,w
  1809  025D  00C1               	movwf	_cntTmp
  1810  025E  3028               	movlw	40
  1811  025F  07C1               	addwf	_cntTmp,f
  1812  0260  1803               	skipnc
  1813  0261  0AC2               	incf	_cntTmp+1,f
  1814                           
  1815                           ;smartkey.C: 454: PR2L = 20;
  1816  0262  3014               	movlw	20
  1817  0263  1683               	bsf	3,5	;RP0=1, select bank1
  1818  0264  0091               	movwf	17	;volatile
  1819                           
  1820                           ;smartkey.C: 455: beepOn();
  1821  0265  26EE               	fcall	_beepOn
  1822  0266  29B4               	goto	l6922
  1823  0267                     l960:	
  1824                           ;smartkey.C: 457: }
  1825                           
  1826                           ;smartkey.C: 456: lostDetect = 0;
  1827                           
  1828                           
  1829                           ;smartkey.C: 458: else {
  1830                           ;smartkey.C: 459: lostDetect = 1;
  1831  0267  01B0               	clrf	main@lostDetect
  1832  0268  0AB0               	incf	main@lostDetect,f
  1833  0269  29B6               	goto	L1
  1834  026A                     l7010:	
  1835                           ;smartkey.C: 462: }
  1836                           ;smartkey.C: 463: timeTick = 0;
  1837                           
  1838                           
  1839                           ;smartkey.C: 468: timeTick = 0;
  1840  026A  01F0               	clrf	_timeTick
  1841  026B  01F1               	clrf	_timeTick+1
  1842                           
  1843                           ;smartkey.C: 471: if (mtOldState == 3) {RegStatus.bits.b7 = 1;}
  1844  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1845  026D  0846               	movf	_mtOldState,w
  1846  026E  3A03               	xorlw	3
  1847  026F  1D03               	skipz
  1848  0270  2A7B               	goto	l957
  1849  0271  17F2               	bsf	_RegStatus,7	;volatile
  1850  0272  2A7B               	goto	l957
  1851  0273                     l7018:	
  1852  0273  0874               	movf	_mtState,w
  1853                           
  1854                           ; Switch size 1, requested type "space"
  1855                           ; Number of cases is 2, Range of values is 1 to 2
  1856                           ; switch strategies available:
  1857                           ; Name         Instructions Cycles
  1858                           ; simple_byte            7     4 (average)
  1859                           ; direct_byte           11     9 (fixed)
  1860                           ; jumptable            263     9 (fixed)
  1861                           ;	Chosen strategy is simple_byte
  1862  0274  3A01               	xorlw	1	; case 1
  1863  0275  1903               	skipnz
  1864  0276  2A39               	goto	l6988
  1865  0277  3A03               	xorlw	3	; case 2
  1866  0278  1903               	skipnz
  1867  0279  2A6A               	goto	l7010
  1868  027A  2A7B               	goto	l957
  1869  027B                     l957:	
  1870                           
  1871                           ;smartkey.C: 474: }
  1872                           ;smartkey.C: 475: PAIE = 1;
  1873  027B  158B               	bsf	11,3
  1874  027C                     l7020:	
  1875                           
  1876                           ;smartkey.C: 476: }
  1877                           ;smartkey.C: 477: }
  1878                           ;smartkey.C: 478: }
  1879                           ;smartkey.C: 481: if ((timeOut != 0) && ( timeTick > timeOut)) {
  1880  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1881  027D  0844               	movf	_timeOut+1,w
  1882  027E  0443               	iorwf	_timeOut,w
  1883  027F  1903               	skipnz
  1884  0280  2B02               	goto	l7096
  1885  0281  0871               	movf	_timeTick+1,w
  1886  0282  0244               	subwf	_timeOut+1,w
  1887  0283  1D03               	skipz
  1888  0284  2A87               	goto	u3355
  1889  0285  0870               	movf	_timeTick,w
  1890  0286  0243               	subwf	_timeOut,w
  1891  0287                     u3355:	
  1892  0287  1C03               	btfss	3,0
  1893  0288  2AF4               	goto	l7094
  1894  0289  2B02               	goto	l7096
  1895  028A                     l7026:	
  1896                           
  1897                           ;smartkey.C: 489: beepOff();
  1898  028A  26E3               	fcall	_beepOff
  1899                           
  1900                           ;smartkey.C: 490: RegStatus.bits.b0 = 0;
  1901  028B  1072               	bcf	_RegStatus,0	;volatile
  1902                           
  1903                           ;smartkey.C: 491: setState(2, 300);
  1904  028C  302C               	movlw	44
  1905  028D  1283               	bcf	3,5	;RP0=0, select bank0
  1906  028E  00A0               	movwf	?_setState
  1907  028F  3001               	movlw	1
  1908  0290  00A1               	movwf	?_setState+1
  1909  0291  3002               	movlw	2
  1910  0292  26C7               	fcall	_setState
  1911                           
  1912                           ;smartkey.C: 492: break;
  1913  0293  2B02               	goto	l7096
  1914  0294                     l7032:	
  1915                           
  1916                           ;smartkey.C: 494: beepOff();
  1917  0294  26E3               	fcall	_beepOff
  1918                           
  1919                           ;smartkey.C: 495: delay_x10ms(20);
  1920  0295  3014               	movlw	20
  1921  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0297  00A0               	movwf	?_delay_x10ms
  1923  0298  01A1               	clrf	?_delay_x10ms+1
  1924  0299  267D               	fcall	_delay_x10ms
  1925                           
  1926                           ;smartkey.C: 496: beepOn(); TMR2ON = 0; RegStatus.bits.b7 = 0;
  1927  029A  26EE               	fcall	_beepOn
  1928  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1929  029C  1112               	bcf	18,2
  1930  029D  13F2               	bcf	_RegStatus,7	;volatile
  1931  029E  301E               	movlw	30
  1932                           
  1933                           ;smartkey.C: 497: beep(30, 1);
  1934  029F  01A4               	clrf	?_beep
  1935  02A0  0AA4               	incf	?_beep,f
  1936  02A1  263E               	fcall	_beep
  1937                           
  1938                           ;smartkey.C: 498: RegStatus.bits.b5 = 1;
  1939  02A2  16F2               	bsf	_RegStatus,5	;volatile
  1940  02A3  3000               	movlw	0
  1941                           
  1942                           ;smartkey.C: 499: setState(0, 0);
  1943  02A4  01A0               	clrf	?_setState
  1944  02A5  01A1               	clrf	?_setState+1
  1945  02A6                     L2:	
  1946  02A6  26C7               	fcall	_setState
  1947  02A7                     l7044:	
  1948                           
  1949                           ;smartkey.C: 501: tmp16 = timeTick + 40;
  1950  02A7  0871               	movf	_timeTick+1,w
  1951  02A8  00BF               	movwf	main@tmp16+1
  1952  02A9  0870               	movf	_timeTick,w
  1953  02AA  00BE               	movwf	main@tmp16
  1954  02AB  3028               	movlw	40
  1955  02AC  07BE               	addwf	main@tmp16,f
  1956  02AD  1803               	skipnc
  1957  02AE  0ABF               	incf	main@tmp16+1,f
  1958                           
  1959                           ;smartkey.C: 502: break;
  1960  02AF  2B02               	goto	l7096
  1961  02B0                     l7048:	
  1962                           
  1963                           ;smartkey.C: 505: if (READ_EEPROM(0x08) == 0xcc) WRITE_EEPROM(0x08, 0);
  1964  02B0  3008               	movlw	8
  1965  02B1  26BA               	fcall	_READ_EEPROM
  1966  02B2  3ACC               	xorlw	204
  1967  02B3  1D03               	skipz
  1968  02B4  2AB8               	goto	l7052
  1969  02B5  3008               	movlw	8
  1970  02B6  01A0               	clrf	?_WRITE_EEPROM
  1971  02B7  260B               	fcall	_WRITE_EEPROM
  1972  02B8                     l7052:	
  1973                           
  1974                           ;smartkey.C: 506: if (RegStatus.bits.b7) {
  1975  02B8  1FF2               	btfss	_RegStatus,7	;volatile
  1976  02B9  2ACE               	goto	l7062
  1977                           
  1978                           ;smartkey.C: 507: setState(4, 6000);
  1979  02BA  3070               	movlw	112
  1980  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1981  02BC  00A0               	movwf	?_setState
  1982  02BD  3017               	movlw	23
  1983  02BE  00A1               	movwf	?_setState+1
  1984  02BF  3004               	movlw	4
  1985  02C0  26C7               	fcall	_setState
  1986                           
  1987                           ;smartkey.C: 508: cntTmp = timeTick + 40;
  1988  02C1  0871               	movf	_timeTick+1,w
  1989  02C2  00C2               	movwf	_cntTmp+1
  1990  02C3  0870               	movf	_timeTick,w
  1991  02C4  00C1               	movwf	_cntTmp
  1992  02C5  3028               	movlw	40
  1993  02C6  07C1               	addwf	_cntTmp,f
  1994  02C7  1803               	skipnc
  1995  02C8  0AC2               	incf	_cntTmp+1,f
  1996                           
  1997                           ;smartkey.C: 509: PR2L = 20;
  1998  02C9  3014               	movlw	20
  1999  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  2000  02CB  0091               	movwf	17	;volatile
  2001                           
  2002                           ;smartkey.C: 510: beepOn();
  2003  02CC  26EE               	fcall	_beepOn
  2004                           
  2005                           ;smartkey.C: 512: } else if (mtOldState == 0) {
  2006  02CD  2B02               	goto	l7096
  2007  02CE                     l7062:	
  2008  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2009  02CF  08C6               	movf	_mtOldState,f
  2010  02D0  1D03               	skipz
  2011  02D1  2AE6               	goto	l7076
  2012                           
  2013                           ;smartkey.C: 514: beep(10, 5);
  2014  02D2  3005               	movlw	5
  2015  02D3  00A4               	movwf	?_beep
  2016  02D4  300A               	movlw	10
  2017  02D5  263E               	fcall	_beep
  2018                           
  2019                           ;smartkey.C: 515: RegStatus.bits.b0 = 1;
  2020  02D6  1472               	bsf	_RegStatus,0	;volatile
  2021                           
  2022                           ;smartkey.C: 516: if (READ_EEPROM(0x40))WRITE_EEPROM(0x40, 0);
  2023  02D7  3040               	movlw	64
  2024  02D8  26BA               	fcall	_READ_EEPROM
  2025  02D9  3A00               	xorlw	0
  2026  02DA  1903               	skipnz
  2027  02DB  2ADF               	goto	l977
  2028  02DC  3040               	movlw	64
  2029  02DD  01A0               	clrf	?_WRITE_EEPROM
  2030  02DE  260B               	fcall	_WRITE_EEPROM
  2031  02DF                     l977:	
  2032                           
  2033                           ;smartkey.C: 517: setState(1, 3500);
  2034  02DF  30AC               	movlw	172
  2035  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2036  02E1  00A0               	movwf	?_setState
  2037  02E2  300D               	movlw	13
  2038  02E3  00A1               	movwf	?_setState+1
  2039  02E4  3001               	movlw	1
  2040  02E5  2AA6               	goto	L2
  2041  02E6                     l7076:	
  2042                           
  2043                           ;smartkey.C: 521: beepOn(); TMR2ON = 0;
  2044  02E6  26EE               	fcall	_beepOn
  2045  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2046  02E8  1112               	bcf	18,2
  2047                           
  2048                           ;smartkey.C: 522: RegStatus.bits.b7 = 0;
  2049  02E9  13F2               	bcf	_RegStatus,7	;volatile
  2050  02EA  301E               	movlw	30
  2051                           
  2052                           ;smartkey.C: 523: beep(30, 1);
  2053  02EB  01A4               	clrf	?_beep
  2054  02EC  0AA4               	incf	?_beep,f
  2055  02ED  263E               	fcall	_beep
  2056  02EE  3000               	movlw	0
  2057                           
  2058                           ;smartkey.C: 524: setState(0, 0);
  2059  02EF  01A0               	clrf	?_setState
  2060  02F0  01A1               	clrf	?_setState+1
  2061  02F1  26C7               	fcall	_setState
  2062                           
  2063                           ;smartkey.C: 526: RegStatus.bits.b5 = 1;
  2064  02F2  16F2               	bsf	_RegStatus,5	;volatile
  2065  02F3  2AA7               	goto	l7044
  2066  02F4                     l7094:	
  2067  02F4  0874               	movf	_mtState,w
  2068                           
  2069                           ; Switch size 1, requested type "space"
  2070                           ; Number of cases is 4, Range of values is 1 to 4
  2071                           ; switch strategies available:
  2072                           ; Name         Instructions Cycles
  2073                           ; simple_byte           13     7 (average)
  2074                           ; direct_byte           13     9 (fixed)
  2075                           ; jumptable            263     9 (fixed)
  2076                           ;	Chosen strategy is simple_byte
  2077  02F5  3A01               	xorlw	1	; case 1
  2078  02F6  1903               	skipnz
  2079  02F7  2B02               	goto	l7096
  2080  02F8  3A03               	xorlw	3	; case 2
  2081  02F9  1903               	skipnz
  2082  02FA  2AB0               	goto	l7048
  2083  02FB  3A01               	xorlw	1	; case 3
  2084  02FC  1903               	skipnz
  2085  02FD  2A8A               	goto	l7026
  2086  02FE  3A07               	xorlw	7	; case 4
  2087  02FF  1903               	skipnz
  2088  0300  2A94               	goto	l7032
  2089  0301  2B02               	goto	l7096
  2090  0302                     l7096:	
  2091                           
  2092                           ;smartkey.C: 531: }
  2093                           ;smartkey.C: 533: if ((timeTick > tmp16) && (RegStatus.bits.b6 == 1)) {
  2094  0302  0871               	movf	_timeTick+1,w
  2095  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0304  023F               	subwf	main@tmp16+1,w
  2097  0305  1D03               	skipz
  2098  0306  2B09               	goto	u3405
  2099  0307  0870               	movf	_timeTick,w
  2100  0308  023E               	subwf	main@tmp16,w
  2101  0309                     u3405:	
  2102  0309  1C03               	btfss	3,0
  2103  030A  1F72               	btfss	_RegStatus,6	;volatile
  2104  030B  2BD5               	goto	l7204
  2105                           
  2106                           ;smartkey.C: 534: if (timeTick > 65000) timeTick = 0;
  2107  030C  30FD               	movlw	253
  2108  030D  0271               	subwf	_timeTick+1,w
  2109  030E  30E9               	movlw	233
  2110  030F  1903               	skipnz
  2111  0310  0270               	subwf	_timeTick,w
  2112  0311  1C03               	skipc
  2113  0312  2B15               	goto	l7104
  2114  0313  01F0               	clrf	_timeTick
  2115  0314  01F1               	clrf	_timeTick+1
  2116  0315                     l7104:	
  2117                           
  2118                           ;smartkey.C: 535: tmp16 = timeTick + 40;
  2119  0315  0871               	movf	_timeTick+1,w
  2120  0316  00BF               	movwf	main@tmp16+1
  2121  0317  0870               	movf	_timeTick,w
  2122  0318  00BE               	movwf	main@tmp16
  2123  0319  3028               	movlw	40
  2124  031A  07BE               	addwf	main@tmp16,f
  2125  031B  1803               	skipnc
  2126  031C  0ABF               	incf	main@tmp16+1,f
  2127                           
  2128                           ;smartkey.C: 537: if (AccRead(0x02,buf, 6) == 0) {
  2129  031D  3033               	movlw	main@buf& (0+255)
  2130  031E  00A4               	movwf	?_AccRead
  2131  031F  3006               	movlw	6
  2132  0320  00A5               	movwf	?_AccRead+1
  2133  0321  3002               	movlw	2
  2134  0322  2579               	fcall	_AccRead
  2135  0323  3800               	iorlw	0
  2136  0324  1D03               	skipz
  2137  0325  2BD5               	goto	l7204
  2138                           
  2139                           ;smartkey.C: 539: if((mtState == 1) ){
  2140  0326  0B74               	decfsz	_mtState,w
  2141  0327  2BB2               	goto	l7186
  2142                           
  2143                           ;smartkey.C: 542: if (compe((signed char)buf[1], (signed char)acXsum, 4) && compe((signe
      +                          d char)buf[3], (signed char)acYsum, 4)) {
  2144  0328  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0329  083B               	movf	main@acXsum,w
  2146  032A  00A0               	movwf	?_compe
  2147  032B  3004               	movlw	4
  2148  032C  00A1               	movwf	?_compe+1
  2149  032D  0834               	movf	main@buf+1,w
  2150  032E  253C               	fcall	_compe
  2151  032F  3A00               	xorlw	0
  2152  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2153  0331  1903               	skipnz
  2154  0332  2B61               	goto	L5
  2155  0333  0839               	movf	main@acYsum,w
  2156  0334  00A0               	movwf	?_compe
  2157  0335  3004               	movlw	4
  2158  0336  00A1               	movwf	?_compe+1
  2159  0337  0836               	movf	main@buf+3,w
  2160  0338  253C               	fcall	_compe
  2161  0339  3A00               	xorlw	0
  2162                           
  2163                           ;smartkey.C: 544: isSw++;
  2164  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2165  033B  1903               	skipnz
  2166  033C  2B61               	goto	L5
  2167  033D  302D               	movlw	45
  2168  033E  0ABD               	incf	main@isSw,f
  2169                           
  2170                           ;smartkey.C: 545: if (isSw > 44) {
  2171  033F  023D               	subwf	main@isSw,w
  2172  0340  1C03               	skipc
  2173  0341  2B54               	goto	l7132
  2174                           
  2175                           ;smartkey.C: 546: isSw = 0;
  2176  0342  01BD               	clrf	main@isSw
  2177                           
  2178                           ;smartkey.C: 547: RegStatus.bits.b5 = 1;
  2179  0343  16F2               	bsf	_RegStatus,5	;volatile
  2180                           
  2181                           ;smartkey.C: 550: RegStatus.bits.b0 = 0;
  2182  0344  1072               	bcf	_RegStatus,0	;volatile
  2183                           
  2184                           ;smartkey.C: 551: setState(2, 300);
  2185  0345  302C               	movlw	44
  2186  0346  00A0               	movwf	?_setState
  2187  0347  3001               	movlw	1
  2188  0348  00A1               	movwf	?_setState+1
  2189  0349  3002               	movlw	2
  2190  034A  26C7               	fcall	_setState
  2191                           
  2192                           ;smartkey.C: 552: tmp16 = timeTick + 40;
  2193  034B  0871               	movf	_timeTick+1,w
  2194  034C  00BF               	movwf	main@tmp16+1
  2195  034D  0870               	movf	_timeTick,w
  2196  034E  00BE               	movwf	main@tmp16
  2197  034F  3028               	movlw	40
  2198  0350  07BE               	addwf	main@tmp16,f
  2199  0351  1803               	skipnc
  2200  0352  0ABF               	incf	main@tmp16+1,f
  2201                           
  2202                           ;smartkey.C: 553: }
  2203  0353  2B90               	goto	l7164
  2204  0354                     l7132:	
  2205                           
  2206                           ;smartkey.C: 554: else if (isSw > 25) {
  2207  0354  301A               	movlw	26
  2208  0355  023D               	subwf	main@isSw,w
  2209  0356  1803               	btfsc	3,0
  2210                           
  2211                           ;smartkey.C: 555: if (isSw % 2 == 0) {
  2212  0357  183D               	btfsc	main@isSw,0
  2213  0358  2B90               	goto	l7164
  2214                           
  2215                           ;smartkey.C: 556: beepOn(); TMR2ON = 0; beep(7, 1);
  2216  0359  26EE               	fcall	_beepOn
  2217  035A  3007               	movlw	7
  2218  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2219  035C  1112               	bcf	18,2
  2220  035D  01A4               	clrf	?_beep
  2221  035E  0AA4               	incf	?_beep,f
  2222  035F  263E               	fcall	_beep
  2223  0360  2B90               	goto	l7164
  2224  0361                     L5:	
  2225                           ;smartkey.C: 561: else
  2226                           ;smartkey.C: 563: {
  2227                           ;smartkey.C: 564: isSw = 0;
  2228                           
  2229                           ;smartkey.C: 557: }
  2230                           ;smartkey.C: 558: }
  2231                           ;smartkey.C: 559: }
  2232                           
  2233  0361  01BD               	clrf	main@isSw
  2234                           
  2235                           ;smartkey.C: 567: if (compe((signed char)buf[1],acXOld,1 ) && compe((signed char)buf[3],
      +                          acYOld,1)) {
  2236  0362  0832               	movf	main@acXOld,w
  2237  0363  00A0               	movwf	?_compe
  2238  0364  01A1               	clrf	?_compe+1
  2239  0365  0AA1               	incf	?_compe+1,f
  2240  0366  0834               	movf	main@buf+1,w
  2241  0367  253C               	fcall	_compe
  2242  0368  3A00               	xorlw	0
  2243  0369  1283               	bcf	3,5	;RP0=0, select bank0
  2244  036A  1903               	skipnz
  2245  036B  2B8E               	goto	L6
  2246  036C  0831               	movf	main@acYOld,w
  2247  036D  00A0               	movwf	?_compe
  2248  036E  01A1               	clrf	?_compe+1
  2249  036F  0AA1               	incf	?_compe+1,f
  2250  0370  0836               	movf	main@buf+3,w
  2251  0371  253C               	fcall	_compe
  2252  0372  3A00               	xorlw	0
  2253                           
  2254                           ;smartkey.C: 568: isWait++;
  2255  0373  1283               	bcf	3,5	;RP0=0, select bank0
  2256  0374  1903               	skipnz
  2257  0375  2B8E               	goto	L6
  2258  0376  0AAD               	incf	main@isWait,f
  2259  0377  1903               	skipnz
  2260  0378  0AAE               	incf	main@isWait+1,f
  2261                           
  2262                           ;smartkey.C: 569: if (isWait == 450) {
  2263  0379  032E               	decf	main@isWait+1,w
  2264  037A  30C2               	movlw	194
  2265  037B  1903               	skipnz
  2266  037C  062D               	xorwf	main@isWait,w
  2267  037D  1D03               	skipz
  2268  037E  2B90               	goto	l7164
  2269  037F  3002               	movlw	2
  2270                           
  2271                           ;smartkey.C: 570: isWait = 0;
  2272  0380  01AD               	clrf	main@isWait
  2273  0381  01AE               	clrf	main@isWait+1
  2274                           
  2275                           ;smartkey.C: 571: beep(7, 2);
  2276  0382  00A4               	movwf	?_beep
  2277  0383  3007               	movlw	7
  2278  0384  263E               	fcall	_beep
  2279                           
  2280                           ;smartkey.C: 572: RegStatus.bits.b5 = 1;
  2281  0385  16F2               	bsf	_RegStatus,5	;volatile
  2282                           
  2283                           ;smartkey.C: 573: RegStatus.bits.b0 = 0;
  2284  0386  1072               	bcf	_RegStatus,0	;volatile
  2285                           
  2286                           ;smartkey.C: 574: setState(2, 300);
  2287  0387  302C               	movlw	44
  2288  0388  00A0               	movwf	?_setState
  2289  0389  3001               	movlw	1
  2290  038A  00A1               	movwf	?_setState+1
  2291  038B  3002               	movlw	2
  2292  038C  26C7               	fcall	_setState
  2293  038D  2B90               	goto	l7164
  2294  038E                     L6:	
  2295                           ;smartkey.C: 577: else
  2296                           ;smartkey.C: 578: {isWait = 0;}
  2297                           
  2298  038E  01AD               	clrf	main@isWait
  2299  038F  01AE               	clrf	main@isWait+1
  2300  0390                     l7164:	
  2301                           
  2302                           ;smartkey.C: 579: }
  2303                           ;smartkey.C: 582: if ( ((signed char)buf[5] > -15) && ((signed char)buf[5] < 15)) {
  2304  0390  0838               	movf	main@buf+5,w
  2305  0391  3A80               	xorlw	128
  2306  0392  3E8E               	addlw	142
  2307  0393  1C03               	skipc
  2308  0394  2BAC               	goto	l7180
  2309  0395  0838               	movf	main@buf+5,w
  2310  0396  3A80               	xorlw	128
  2311  0397  3E71               	addlw	-143
  2312  0398  1803               	skipnc
  2313  0399  2BAC               	goto	l7180
  2314  039A  3005               	movlw	5
  2315                           
  2316                           ;smartkey.C: 583: isFall++;
  2317  039B  0AAF               	incf	main@isFall,f
  2318                           
  2319                           ;smartkey.C: 584: if (isFall > 4) {
  2320  039C  022F               	subwf	main@isFall,w
  2321  039D  1C03               	skipc
  2322  039E  2BAD               	goto	l7182
  2323  039F  3002               	movlw	2
  2324                           
  2325                           ;smartkey.C: 585: isFall = 0;
  2326  03A0  01AF               	clrf	main@isFall
  2327                           
  2328                           ;smartkey.C: 586: beep(7, 2);
  2329  03A1  00A4               	movwf	?_beep
  2330  03A2  3007               	movlw	7
  2331  03A3  263E               	fcall	_beep
  2332                           
  2333                           ;smartkey.C: 587: RegStatus.bits.b0 = 0;
  2334  03A4  1072               	bcf	_RegStatus,0	;volatile
  2335                           
  2336                           ;smartkey.C: 588: setState(2, 300);
  2337  03A5  302C               	movlw	44
  2338  03A6  00A0               	movwf	?_setState
  2339  03A7  3001               	movlw	1
  2340  03A8  00A1               	movwf	?_setState+1
  2341  03A9  3002               	movlw	2
  2342  03AA  26C7               	fcall	_setState
  2343  03AB  2BAD               	goto	l7182
  2344  03AC                     l7180:	
  2345                           
  2346                           ;smartkey.C: 591: else {
  2347                           ;smartkey.C: 592: isFall = 0;
  2348  03AC  01AF               	clrf	main@isFall
  2349  03AD                     l7182:	
  2350                           
  2351                           ;smartkey.C: 593: }
  2352                           ;smartkey.C: 596: acYOld =(signed char)buf[3]; acXOld = (signed char)buf[1];
  2353  03AD  0836               	movf	main@buf+3,w
  2354  03AE  00B1               	movwf	main@acYOld
  2355  03AF  0834               	movf	main@buf+1,w
  2356  03B0  00B2               	movwf	main@acXOld
  2357                           
  2358                           ;smartkey.C: 599: }
  2359  03B1  2BD5               	goto	l7204
  2360  03B2                     l7186:	
  2361                           
  2362                           ;smartkey.C: 600: else if(mtState== 0){
  2363  03B2  08F4               	movf	_mtState,f
  2364  03B3  1903               	btfsc	3,2
  2365                           
  2366                           ;smartkey.C: 602: if (RegStatus.bits.b5) {
  2367  03B4  1EF2               	btfss	_RegStatus,5	;volatile
  2368  03B5  2BD5               	goto	l7204
  2369                           
  2370                           ;smartkey.C: 603: if (compe((signed char)buf[1],acXOld , 3) && compe((signed char)buf[3]
      +                          ,acYOld , 3)) {
  2371  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2372  03B7  0832               	movf	main@acXOld,w
  2373  03B8  00A0               	movwf	?_compe
  2374  03B9  3003               	movlw	3
  2375  03BA  00A1               	movwf	?_compe+1
  2376  03BB  0834               	movf	main@buf+1,w
  2377  03BC  253C               	fcall	_compe
  2378  03BD  3A00               	xorlw	0
  2379  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2380  03BF  1903               	skipnz
  2381  03C0  2BCD               	goto	L7
  2382  03C1  0831               	movf	main@acYOld,w
  2383  03C2  00A0               	movwf	?_compe
  2384  03C3  3003               	movlw	3
  2385  03C4  00A1               	movwf	?_compe+1
  2386  03C5  0836               	movf	main@buf+3,w
  2387  03C6  253C               	fcall	_compe
  2388  03C7  3A00               	xorlw	0
  2389                           
  2390                           ;smartkey.C: 605: isSw = 0;
  2391  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2392  03C9  1903               	skipnz
  2393  03CA  2BCD               	goto	L7
  2394  03CB  01BD               	clrf	main@isSw
  2395                           
  2396                           ;smartkey.C: 606: }
  2397  03CC  2BD5               	goto	l7204
  2398  03CD                     L7:	
  2399                           ;smartkey.C: 607: else {
  2400                           ;smartkey.C: 608: isSw++;
  2401                           
  2402  03CD  0ABD               	incf	main@isSw,f
  2403                           
  2404                           ;smartkey.C: 609: beepOn(); TMR2ON = 0; beep(7, 3);
  2405  03CE  26EE               	fcall	_beepOn
  2406  03CF  3003               	movlw	3
  2407  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2408  03D1  1112               	bcf	18,2
  2409  03D2  00A4               	movwf	?_beep
  2410  03D3  3007               	movlw	7
  2411  03D4  263E               	fcall	_beep
  2412  03D5                     l7204:	
  2413                           
  2414                           ;smartkey.C: 610: }
  2415                           ;smartkey.C: 611: }
  2416                           ;smartkey.C: 612: }
  2417                           ;smartkey.C: 615: }
  2418                           ;smartkey.C: 616: }
  2419                           ;smartkey.C: 618: if (RegStatus.bits.b0) {RC0 = 1; RC1 = 1;}
  2420  03D5  1C72               	btfss	_RegStatus,0	;volatile
  2421  03D6  2BDB               	goto	l1000
  2422  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2423  03D8  1407               	bsf	7,0
  2424  03D9  1487               	bsf	7,1
  2425  03DA  2BDE               	goto	l7208
  2426  03DB                     l1000:	
  2427                           
  2428                           ;smartkey.C: 619: else {RC0 = 0; RC1 = 0;}
  2429  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2430  03DC  1007               	bcf	7,0
  2431  03DD  1087               	bcf	7,1
  2432  03DE                     l7208:	
  2433                           
  2434                           ;smartkey.C: 622: if (timeTick > 500){
  2435  03DE  3001               	movlw	1
  2436  03DF  0271               	subwf	_timeTick+1,w
  2437  03E0  30F5               	movlw	245
  2438  03E1  1903               	skipnz
  2439  03E2  0270               	subwf	_timeTick,w
  2440  03E3  1C03               	skipc
  2441  03E4  29AA               	goto	l6912
  2442                           
  2443                           ;smartkey.C: 623: if (READ_EEPROM(0x3F)) WRITE_EEPROM(0x3F, 0);
  2444  03E5  303F               	movlw	63
  2445  03E6  26BA               	fcall	_READ_EEPROM
  2446  03E7  3A00               	xorlw	0
  2447  03E8  1903               	skipnz
  2448  03E9  2BED               	goto	l7214
  2449  03EA  303F               	movlw	63
  2450  03EB  01A0               	clrf	?_WRITE_EEPROM
  2451  03EC  260B               	fcall	_WRITE_EEPROM
  2452  03ED                     l7214:	
  2453                           
  2454                           ;smartkey.C: 624: if (READ_EEPROM(0x40)) WRITE_EEPROM(0x40, 0);
  2455  03ED  3040               	movlw	64
  2456  03EE  26BA               	fcall	_READ_EEPROM
  2457  03EF  3A00               	xorlw	0
  2458  03F0  1903               	skipnz
  2459  03F1  29AA               	goto	l6912
  2460  03F2  3040               	movlw	64
  2461  03F3  01A0               	clrf	?_WRITE_EEPROM
  2462  03F4  260B               	fcall	_WRITE_EEPROM
  2463  03F5  29AA               	goto	l6912
  2464  03F6                     __end_of_main:	
  2465                           
  2466                           	psect	swtext1
  2467  06E9                     __pswtext1:	
  2468  06E9                     S7266:	
  2469  06E9  2A7B               	ljmp	l957
  2470  06EA  29B4               	ljmp	l6922
  2471  06EB  29BC               	ljmp	l6926
  2472  06EC  2A04               	ljmp	l6966
  2473  06ED  2A25               	ljmp	l6980
  2474                           
  2475                           	psect	text877
  2476  0579                     __ptext877:	
  2477 ;; =============== function _main ends ============
  2478                           
  2479                           
  2480 ;; *************** function _AccRead *****************
  2481 ;; Defined at:
  2482 ;;		line 34 in file "mpu6x.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  rAdd            1    wreg     unsigned char 
  2485 ;;  dat             1    4[BANK0 ] PTR unsigned char 
  2486 ;;		 -> main@buf(6), 
  2487 ;;  len             1    5[BANK0 ] unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  rAdd            1    8[BANK0 ] unsigned char 
  2490 ;;  i               1    9[BANK0 ] unsigned char 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      unsigned char 
  2493 ;; Registers used:
  2494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 20/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMMON   BANK0   BANK1
  2500 ;;      Params:         0       2       0
  2501 ;;      Locals:         0       2       0
  2502 ;;      Temps:          0       2       0
  2503 ;;      Totals:         0       6       0
  2504 ;;Total ram usage:        6 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    3
  2507 ;; This function calls:
  2508 ;;		_swI2C_Start
  2509 ;;		_swI2C_WriteByte
  2510 ;;		_swI2C_ReadByte
  2511 ;;		_swI2C_Stop
  2512 ;; This function is called by:
  2513 ;;		_main
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516  0579                     _AccRead:	
  2517                           
  2518                           ; Regs used in _AccRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2519                           ;AccRead@rAdd stored from wreg
  2520  0579  00A8               	movwf	AccRead@rAdd
  2521                           
  2522                           ;mpu6x.c: 35: unsigned char i;
  2523                           ;mpu6x.c: 37: swI2C_Start();
  2524  057A  266A               	fcall	_swI2C_Start
  2525                           
  2526                           ;mpu6x.c: 38: if(swI2C_WriteByte(0x18<<1)== 0 )
  2527  057B  3030               	movlw	48
  2528  057C  24FF               	fcall	_swI2C_WriteByte
  2529  057D  3800               	iorlw	0
  2530  057E  1D03               	skipz
  2531  057F  3401               	retlw	1
  2532                           
  2533                           ;mpu6x.c: 39: {
  2534                           ;mpu6x.c: 40: if(swI2C_WriteByte(rAdd)==0 )
  2535  0580  0828               	movf	AccRead@rAdd,w
  2536  0581  24FF               	fcall	_swI2C_WriteByte
  2537  0582  3800               	iorlw	0
  2538  0583  1D03               	skipz
  2539  0584  3402               	retlw	2
  2540                           
  2541                           ;mpu6x.c: 41: {
  2542                           ;mpu6x.c: 42: swI2C_Start();
  2543  0585  266A               	fcall	_swI2C_Start
  2544                           
  2545                           ;mpu6x.c: 43: if(swI2C_WriteByte((0x18<<1)|1)== 0 ){
  2546  0586  3031               	movlw	49
  2547  0587  24FF               	fcall	_swI2C_WriteByte
  2548  0588  3800               	iorlw	0
  2549  0589  1D03               	skipz
  2550  058A  3401               	retlw	1
  2551                           
  2552                           ;mpu6x.c: 45: for(i=0; i<(len-1);i++){
  2553  058B  01A9               	clrf	AccRead@i
  2554  058C                     l6726:	
  2555  058C  0825               	movf	AccRead@len,w
  2556  058D  3EFF               	addlw	255
  2557  058E  00A6               	movwf	??_AccRead
  2558  058F  30FF               	movlw	255
  2559  0590  1803               	skipnc
  2560  0591  3000               	movlw	0
  2561  0592  00A7               	movwf	??_AccRead+1
  2562  0593  3A80               	xorlw	128
  2563  0594  3C80               	sublw	128
  2564  0595  1D03               	skipz
  2565  0596  2D99               	goto	u2935
  2566  0597  0826               	movf	??_AccRead,w
  2567  0598  0229               	subwf	AccRead@i,w
  2568  0599                     u2935:	
  2569                           
  2570                           ;mpu6x.c: 46: dat[i]=swI2C_ReadByte(0);
  2571  0599  1283               	bcf	3,5	;RP0=0, select bank0
  2572  059A  0829               	movf	AccRead@i,w
  2573  059B  1803               	btfsc	3,0
  2574  059C  2DA6               	goto	L8
  2575  059D  0724               	addwf	AccRead@dat,w
  2576  059E  00A6               	movwf	??_AccRead
  2577  059F  0084               	movwf	4
  2578  05A0  3000               	movlw	0
  2579  05A1  24C1               	fcall	_swI2C_ReadByte
  2580  05A2  1383               	bcf	3,7	;select IRP bank0
  2581  05A3  0080               	movwf	0
  2582  05A4  0AA9               	incf	AccRead@i,f
  2583  05A5  2D8C               	goto	l6726
  2584  05A6                     L8:	
  2585                           ;mpu6x.c: 47: }
  2586                           ;mpu6x.c: 48: dat[i]=swI2C_ReadByte(1);
  2587                           
  2588  05A6  0724               	addwf	AccRead@dat,w
  2589  05A7  00A6               	movwf	??_AccRead
  2590  05A8  0826               	movf	??_AccRead,w
  2591  05A9  0084               	movwf	4
  2592  05AA  3001               	movlw	1
  2593  05AB  24C1               	fcall	_swI2C_ReadByte
  2594  05AC  1383               	bcf	3,7	;select IRP bank0
  2595  05AD  0080               	movwf	0
  2596                           
  2597                           ;mpu6x.c: 49: swI2C_Stop();
  2598  05AE  26AD               	fcall	_swI2C_Stop
  2599                           
  2600                           ;mpu6x.c: 50: return 0;
  2601  05AF  3400               	retlw	0
  2602  05B0                     __end_of_AccRead:	
  2603                           ;mpu6x.c: 56: else
  2604                           ;mpu6x.c: 57: return 2;
  2605                           
  2606                           ;mpu6x.c: 53: else
  2607                           ;mpu6x.c: 54: return 1;
  2608                           
  2609                           
  2610                           	psect	text878
  2611  05B0                     __ptext878:	
  2612 ;; =============== function _AccRead ends ============
  2613                           
  2614                           
  2615 ;; *************** function _AccWrite *****************
  2616 ;; Defined at:
  2617 ;;		line 4 in file "mpu6x.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  rAdd            1    wreg     unsigned char 
  2620 ;;  dat             1    3[BANK0 ] PTR unsigned char 
  2621 ;;		 -> main@buf(6), 
  2622 ;;  len             1    4[BANK0 ] unsigned char 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  rAdd            1    6[BANK0 ] unsigned char 
  2625 ;;  i               1    7[BANK0 ] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      unsigned char 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 20/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1
  2635 ;;      Params:         0       2       0
  2636 ;;      Locals:         0       2       0
  2637 ;;      Temps:          0       1       0
  2638 ;;      Totals:         0       5       0
  2639 ;;Total ram usage:        5 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    3
  2642 ;; This function calls:
  2643 ;;		_swI2C_Start
  2644 ;;		_swI2C_WriteByte
  2645 ;;		_swI2C_Stop
  2646 ;; This function is called by:
  2647 ;;		_main
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650  05B0                     _AccWrite:	
  2651                           
  2652                           ; Regs used in _AccWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2653                           ;AccWrite@rAdd stored from wreg
  2654  05B0  00A6               	movwf	AccWrite@rAdd
  2655                           
  2656                           ;mpu6x.c: 5: unsigned char i;
  2657                           ;mpu6x.c: 7: for(i=0; i<len;i++){
  2658  05B1  01A7               	clrf	AccWrite@i
  2659  05B2                     l6708:	
  2660  05B2  0824               	movf	AccWrite@len,w
  2661  05B3  0227               	subwf	AccWrite@i,w
  2662  05B4  1803               	btfsc	3,0
  2663  05B5  3400               	retlw	0
  2664                           
  2665                           ;mpu6x.c: 8: swI2C_Start();
  2666  05B6  266A               	fcall	_swI2C_Start
  2667                           
  2668                           ;mpu6x.c: 10: if(swI2C_WriteByte(0x18<<1)== 0 )
  2669  05B7  3030               	movlw	48
  2670  05B8  24FF               	fcall	_swI2C_WriteByte
  2671  05B9  3800               	iorlw	0
  2672  05BA  1D03               	skipz
  2673  05BB  3401               	retlw	1
  2674                           
  2675                           ;mpu6x.c: 11: {
  2676                           ;mpu6x.c: 12: if(swI2C_WriteByte(rAdd)==0 )
  2677  05BC  0826               	movf	AccWrite@rAdd,w
  2678  05BD  24FF               	fcall	_swI2C_WriteByte
  2679  05BE  3800               	iorlw	0
  2680  05BF  1D03               	skipz
  2681  05C0  3402               	retlw	2
  2682                           
  2683                           ;mpu6x.c: 13: {
  2684                           ;mpu6x.c: 15: {
  2685                           ;mpu6x.c: 16: if(swI2C_WriteByte(dat[i])==1 ){
  2686  05C1  0827               	movf	AccWrite@i,w
  2687  05C2  0723               	addwf	AccWrite@dat,w
  2688  05C3  00A5               	movwf	??_AccWrite
  2689  05C4  0084               	movwf	4
  2690  05C5  1383               	bcf	3,7	;select IRP bank0
  2691  05C6  0800               	movf	0,w
  2692  05C7  24FF               	fcall	_swI2C_WriteByte
  2693  05C8  3A01               	xorlw	1
  2694  05C9  1D03               	skipz
  2695  05CA  2DCD               	goto	l6696
  2696                           
  2697                           ;mpu6x.c: 17: swI2C_Stop();
  2698  05CB  26AD               	fcall	_swI2C_Stop
  2699                           
  2700                           ;mpu6x.c: 18: return 3;
  2701  05CC  3403               	retlw	3
  2702  05CD                     l6696:	
  2703                           
  2704                           ;mpu6x.c: 19: }
  2705                           ;mpu6x.c: 20: }
  2706                           ;mpu6x.c: 21: swI2C_Stop();
  2707  05CD  26AD               	fcall	_swI2C_Stop
  2708                           
  2709                           ;mpu6x.c: 26: else
  2710                           ;mpu6x.c: 27: return 1;
  2711                           
  2712                           ;mpu6x.c: 23: else
  2713                           ;mpu6x.c: 24: return 2;
  2714                           
  2715                           ;mpu6x.c: 22: }
  2716  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2717  05CF  0AA7               	incf	AccWrite@i,f
  2718  05D0  2DB2               	goto	l6708
  2719  05D1                     __end_of_AccWrite:	
  2720                           ;mpu6x.c: 28: }
  2721                           ;mpu6x.c: 29: return 0;
  2722                           
  2723                           
  2724                           	psect	text879
  2725  04C1                     __ptext879:	
  2726 ;; =============== function _AccWrite ends ============
  2727                           
  2728                           
  2729 ;; *************** function _swI2C_ReadByte *****************
  2730 ;; Defined at:
  2731 ;;		line 112 in file "SWI2C.C"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  Ack             1    wreg     unsigned char 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  Ack             1    1[BANK0 ] unsigned char 
  2736 ;;  i               1    3[BANK0 ] unsigned char 
  2737 ;;  dat             1    2[BANK0 ] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      unsigned char 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 20/0
  2744 ;;		On exit  : 20/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1
  2747 ;;      Params:         0       0       0
  2748 ;;      Locals:         0       3       0
  2749 ;;      Temps:          0       1       0
  2750 ;;      Totals:         0       4       0
  2751 ;;Total ram usage:        4 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    2
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_AccRead
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760  04C1                     _swI2C_ReadByte:	
  2761                           
  2762                           ; Regs used in _swI2C_ReadByte: [wreg+status,2+status,0]
  2763                           ;swI2C_ReadByte@Ack stored from wreg
  2764  04C1  00A1               	movwf	swI2C_ReadByte@Ack
  2765  04C2  01A2               	clrf	swI2C_ReadByte@dat
  2766                           
  2767                           ;SWI2C.C: 115: RA7 = 0;
  2768  04C3  1385               	bcf	5,7
  2769                           
  2770                           ;SWI2C.C: 116: TRISA |=0x40;;
  2771  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  2772  04C5  1705               	bsf	5,6	;volatile
  2773                           
  2774                           ;SWI2C.C: 117: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2775  04C6  3005               	movlw	5
  2776  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2777  04C8  00A0               	movwf	??_swI2C_ReadByte
  2778  04C9                     u3717:	
  2779  04C9  0BA0               	decfsz	??_swI2C_ReadByte,f
  2780  04CA  2CC9               	goto	u3717
  2781                           
  2782                           ;SWI2C.C: 118: for(i=0;i<8;i++)
  2783  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2784  04CC  01A3               	clrf	swI2C_ReadByte@i
  2785  04CD                     l2610:	
  2786  04CD  3005               	movlw	5
  2787                           
  2788                           ;SWI2C.C: 119: {
  2789                           ;SWI2C.C: 120: RA7 = 1;
  2790  04CE  1785               	bsf	5,7
  2791                           
  2792                           ;SWI2C.C: 121: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2793  04CF  00A0               	movwf	??_swI2C_ReadByte
  2794  04D0                     u3727:	
  2795  04D0  0BA0               	decfsz	??_swI2C_ReadByte,f
  2796  04D1  2CD0               	goto	u3727
  2797                           
  2798                           ;SWI2C.C: 122: dat = dat<<1 |(RA6 & 1 );
  2799  04D2  3000               	movlw	0
  2800  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2801  04D4  1B05               	btfsc	5,6
  2802  04D5  3001               	movlw	1
  2803  04D6  3901               	andlw	1
  2804  04D7  00A0               	movwf	??_swI2C_ReadByte
  2805  04D8  1003               	clrc
  2806  04D9  0D22               	rlf	swI2C_ReadByte@dat,w
  2807  04DA  0420               	iorwf	??_swI2C_ReadByte,w
  2808  04DB  00A2               	movwf	swI2C_ReadByte@dat
  2809  04DC  3005               	movlw	5
  2810                           
  2811                           ;SWI2C.C: 125: RA7 = 0;
  2812  04DD  1385               	bcf	5,7
  2813                           
  2814                           ;SWI2C.C: 126: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2815  04DE  00A0               	movwf	??_swI2C_ReadByte
  2816  04DF                     u3737:	
  2817  04DF  0BA0               	decfsz	??_swI2C_ReadByte,f
  2818  04E0  2CDF               	goto	u3737
  2819  04E1  3008               	movlw	8
  2820  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  2821  04E3  0AA3               	incf	swI2C_ReadByte@i,f
  2822  04E4  0223               	subwf	swI2C_ReadByte@i,w
  2823  04E5  1C03               	skipc
  2824  04E6  2CCD               	goto	l2610
  2825                           
  2826                           ;SWI2C.C: 127: }
  2827                           ;SWI2C.C: 129: TRISA &=0xbf;;
  2828  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  2829  04E8  1305               	bcf	5,6	;volatile
  2830                           
  2831                           ;SWI2C.C: 131: RA6 = (Ack) ? 1 : 0;
  2832  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2833  04EA  08A1               	movf	swI2C_ReadByte@Ack,f
  2834  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2835  04EC  1903               	btfsc	3,2
  2836  04ED  2CF0               	goto	L9
  2837  04EE  1705               	bsf	5,6
  2838  04EF  2CF1               	goto	l6670
  2839  04F0                     L9:	
  2840  04F0  1305               	bcf	5,6
  2841  04F1                     l6670:	
  2842  04F1  3005               	movlw	5
  2843                           
  2844                           ;SWI2C.C: 132: RA7 = 1;
  2845  04F2  1785               	bsf	5,7
  2846                           
  2847                           ;SWI2C.C: 133: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2848  04F3  00A0               	movwf	??_swI2C_ReadByte
  2849  04F4                     u3747:	
  2850  04F4  0BA0               	decfsz	??_swI2C_ReadByte,f
  2851  04F5  2CF4               	goto	u3747
  2852  04F6  3005               	movlw	5
  2853                           
  2854                           ;SWI2C.C: 134: RA7 = 0;
  2855  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2856  04F8  1385               	bcf	5,7
  2857                           
  2858                           ;SWI2C.C: 135: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2859  04F9  00A0               	movwf	??_swI2C_ReadByte
  2860  04FA                     u3757:	
  2861  04FA  0BA0               	decfsz	??_swI2C_ReadByte,f
  2862  04FB  2CFA               	goto	u3757
  2863                           
  2864                           ;SWI2C.C: 136: return dat;
  2865  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2866  04FD  0822               	movf	swI2C_ReadByte@dat,w
  2867  04FE  0008               	return
  2868  04FF                     __end_of_swI2C_ReadByte:	
  2869                           
  2870                           	psect	text880
  2871  04FF                     __ptext880:	
  2872 ;; =============== function _swI2C_ReadByte ends ============
  2873                           
  2874                           
  2875 ;; *************** function _swI2C_WriteByte *****************
  2876 ;; Defined at:
  2877 ;;		line 86 in file "SWI2C.C"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  dat             1    wreg     unsigned char 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  dat             1    1[BANK0 ] unsigned char 
  2882 ;;  i               1    2[BANK0 ] unsigned char 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      unsigned char 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 20/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1
  2892 ;;      Params:         0       0       0
  2893 ;;      Locals:         0       2       0
  2894 ;;      Temps:          0       1       0
  2895 ;;      Totals:         0       3       0
  2896 ;;Total ram usage:        3 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    2
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_AccWrite
  2903 ;;		_AccRead
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906  04FF                     _swI2C_WriteByte:	
  2907                           
  2908                           ; Regs used in _swI2C_WriteByte: [wreg+status,2+status,0]
  2909                           ;swI2C_WriteByte@dat stored from wreg
  2910  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0500  00A1               	movwf	swI2C_WriteByte@dat
  2912                           
  2913                           ;SWI2C.C: 89: TRISA &=0xbf;;
  2914  0501  1683               	bsf	3,5	;RP0=1, select bank1
  2915  0502  1305               	bcf	5,6	;volatile
  2916                           
  2917                           ;SWI2C.C: 90: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2918  0503  3005               	movlw	5
  2919  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0505  00A0               	movwf	??_swI2C_WriteByte
  2921  0506                     u3767:	
  2922  0506  0BA0               	decfsz	??_swI2C_WriteByte,f
  2923  0507  2D06               	goto	u3767
  2924                           
  2925                           ;SWI2C.C: 91: for(i=0;i<8;i++)
  2926  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0509  01A2               	clrf	swI2C_WriteByte@i
  2928  050A                     l2605:	
  2929                           
  2930                           ;SWI2C.C: 92: {
  2931                           ;SWI2C.C: 93: RA6 = (dat&0x80) ? 1:0;
  2932  050A  1FA1               	btfss	swI2C_WriteByte@dat,7
  2933  050B  2D0F               	goto	u2800
  2934  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2935  050D  1705               	bsf	5,6
  2936  050E  2D11               	goto	u2814
  2937  050F                     u2800:	
  2938  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0510  1305               	bcf	5,6
  2940  0511                     u2814:	
  2941  0511  3005               	movlw	5
  2942                           
  2943                           ;SWI2C.C: 94: dat<<=1;
  2944  0512  1003               	clrc
  2945  0513  0DA1               	rlf	swI2C_WriteByte@dat,f
  2946                           
  2947                           ;SWI2C.C: 95: RA7 = 1;
  2948  0514  1785               	bsf	5,7
  2949                           
  2950                           ;SWI2C.C: 96: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2951  0515  00A0               	movwf	??_swI2C_WriteByte
  2952  0516                     u3777:	
  2953  0516  0BA0               	decfsz	??_swI2C_WriteByte,f
  2954  0517  2D16               	goto	u3777
  2955  0518  3005               	movlw	5
  2956                           
  2957                           ;SWI2C.C: 97: RA7 = 0;
  2958  0519  1283               	bcf	3,5	;RP0=0, select bank0
  2959  051A  1385               	bcf	5,7
  2960                           
  2961                           ;SWI2C.C: 98: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2962  051B  00A0               	movwf	??_swI2C_WriteByte
  2963  051C                     u3787:	
  2964  051C  0BA0               	decfsz	??_swI2C_WriteByte,f
  2965  051D  2D1C               	goto	u3787
  2966  051E  3008               	movlw	8
  2967  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2968  0520  0AA2               	incf	swI2C_WriteByte@i,f
  2969  0521  0222               	subwf	swI2C_WriteByte@i,w
  2970  0522  1C03               	skipc
  2971  0523  2D0A               	goto	l2605
  2972                           
  2973                           ;SWI2C.C: 99: }
  2974                           ;SWI2C.C: 101: TRISA |=0x40;;
  2975  0524  1683               	bsf	3,5	;RP0=1, select bank1
  2976  0525  1705               	bsf	5,6	;volatile
  2977                           
  2978                           ;SWI2C.C: 102: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2979  0526  3005               	movlw	5
  2980  0527  1283               	bcf	3,5	;RP0=0, select bank0
  2981  0528  00A0               	movwf	??_swI2C_WriteByte
  2982  0529                     u3797:	
  2983  0529  0BA0               	decfsz	??_swI2C_WriteByte,f
  2984  052A  2D29               	goto	u3797
  2985  052B  3005               	movlw	5
  2986                           
  2987                           ;SWI2C.C: 103: RA7 = 1;
  2988  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2989  052D  1785               	bsf	5,7
  2990                           
  2991                           ;SWI2C.C: 104: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2992  052E  00A0               	movwf	??_swI2C_WriteByte
  2993  052F                     u3807:	
  2994  052F  0BA0               	decfsz	??_swI2C_WriteByte,f
  2995  0530  2D2F               	goto	u3807
  2996                           
  2997                           ;SWI2C.C: 105: i= RA6;
  2998  0531  3000               	movlw	0
  2999  0532  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0533  1B05               	btfsc	5,6
  3001  0534  3001               	movlw	1
  3002  0535  00A2               	movwf	swI2C_WriteByte@i
  3003                           
  3004                           ;SWI2C.C: 106: RA7 = 0;
  3005  0536  1385               	bcf	5,7
  3006                           
  3007                           ;SWI2C.C: 107: TRISA &=0xbf;;
  3008  0537  1683               	bsf	3,5	;RP0=1, select bank1
  3009  0538  1305               	bcf	5,6	;volatile
  3010                           
  3011                           ;SWI2C.C: 108: return i;
  3012  0539  1283               	bcf	3,5	;RP0=0, select bank0
  3013  053A  0822               	movf	swI2C_WriteByte@i,w
  3014  053B  0008               	return
  3015  053C                     __end_of_swI2C_WriteByte:	
  3016                           
  3017                           	psect	text881
  3018  06AD                     __ptext881:	
  3019 ;; =============== function _swI2C_WriteByte ends ============
  3020                           
  3021                           
  3022 ;; *************** function _swI2C_Stop *****************
  3023 ;; Defined at:
  3024 ;;		line 35 in file "SWI2C.C"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;		None               void
  3031 ;; Registers used:
  3032 ;;		wreg
  3033 ;; Tracked objects:
  3034 ;;		On entry : 20/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1
  3038 ;;      Params:         0       0       0
  3039 ;;      Locals:         0       0       0
  3040 ;;      Temps:          0       1       0
  3041 ;;      Totals:         0       1       0
  3042 ;;Total ram usage:        1 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    2
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_AccWrite
  3049 ;;		_AccRead
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052  06AD                     _swI2C_Stop:	
  3053  06AD  3005               	movlw	5
  3054                           
  3055                           ;SWI2C.C: 37: RA6 = 0;
  3056                           
  3057                           ; Regs used in _swI2C_Stop: [wreg]
  3058  06AE  1305               	bcf	5,6
  3059                           
  3060                           ;SWI2C.C: 38: RA7 = 1;
  3061  06AF  1785               	bsf	5,7
  3062                           
  3063                           ;SWI2C.C: 39: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3064  06B0  00A0               	movwf	??_swI2C_Stop
  3065  06B1                     u3817:	
  3066  06B1  0BA0               	decfsz	??_swI2C_Stop,f
  3067  06B2  2EB1               	goto	u3817
  3068  06B3  3005               	movlw	5
  3069                           
  3070                           ;SWI2C.C: 40: RA6 = 1;
  3071  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  3072  06B5  1705               	bsf	5,6
  3073                           
  3074                           ;SWI2C.C: 41: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3075  06B6  00A0               	movwf	??_swI2C_Stop
  3076  06B7                     u3827:	
  3077  06B7  0BA0               	decfsz	??_swI2C_Stop,f
  3078  06B8  2EB7               	goto	u3827
  3079  06B9  0008               	return
  3080  06BA                     __end_of_swI2C_Stop:	
  3081                           
  3082                           	psect	text882
  3083  066A                     __ptext882:	
  3084 ;; =============== function _swI2C_Stop ends ============
  3085                           
  3086                           
  3087 ;; *************** function _swI2C_Start *****************
  3088 ;; Defined at:
  3089 ;;		line 22 in file "SWI2C.C"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;		None               void
  3096 ;; Registers used:
  3097 ;;		wreg
  3098 ;; Tracked objects:
  3099 ;;		On entry : 20/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1
  3103 ;;      Params:         0       0       0
  3104 ;;      Locals:         0       0       0
  3105 ;;      Temps:          0       1       0
  3106 ;;      Totals:         0       1       0
  3107 ;;Total ram usage:        1 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    2
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_AccWrite
  3114 ;;		_AccRead
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117  066A                     _swI2C_Start:	
  3118  066A  3005               	movlw	5
  3119                           
  3120                           ;SWI2C.C: 24: RA7 = 1;
  3121                           
  3122                           ; Regs used in _swI2C_Start: [wreg]
  3123  066B  1785               	bsf	5,7
  3124                           
  3125                           ;SWI2C.C: 26: RA6 = 1;
  3126  066C  1705               	bsf	5,6
  3127                           
  3128                           ;SWI2C.C: 27: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3129  066D  00A0               	movwf	??_swI2C_Start
  3130  066E                     u3837:	
  3131  066E  0BA0               	decfsz	??_swI2C_Start,f
  3132  066F  2E6E               	goto	u3837
  3133  0670  3005               	movlw	5
  3134                           
  3135                           ;SWI2C.C: 28: RA6 = 0;
  3136  0671  1283               	bcf	3,5	;RP0=0, select bank0
  3137  0672  1305               	bcf	5,6
  3138                           
  3139                           ;SWI2C.C: 29: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3140  0673  00A0               	movwf	??_swI2C_Start
  3141  0674                     u3847:	
  3142  0674  0BA0               	decfsz	??_swI2C_Start,f
  3143  0675  2E74               	goto	u3847
  3144  0676  3005               	movlw	5
  3145                           
  3146                           ;SWI2C.C: 30: RA7 = 0;
  3147  0677  1283               	bcf	3,5	;RP0=0, select bank0
  3148  0678  1385               	bcf	5,7
  3149                           
  3150                           ;SWI2C.C: 31: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3151  0679  00A0               	movwf	??_swI2C_Start
  3152  067A                     u3857:	
  3153  067A  0BA0               	decfsz	??_swI2C_Start,f
  3154  067B  2E7A               	goto	u3857
  3155  067C  0008               	return
  3156  067D                     __end_of_swI2C_Start:	
  3157                           
  3158                           	psect	text883
  3159  05D1                     __ptext883:	
  3160 ;; =============== function _swI2C_Start ends ============
  3161                           
  3162                           
  3163 ;; *************** function _swI2C_Init *****************
  3164 ;; Defined at:
  3165 ;;		line 8 in file "SWI2C.C"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;		None
  3170 ;; Return value:  Size  Location     Type
  3171 ;;		None               void
  3172 ;; Registers used:
  3173 ;;		wreg
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1
  3179 ;;      Params:         0       0       0
  3180 ;;      Locals:         0       0       0
  3181 ;;      Temps:          0       1       0
  3182 ;;      Totals:         0       1       0
  3183 ;;Total ram usage:        1 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    2
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_main
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192  05D1                     _swI2C_Init:	
  3193                           
  3194                           ;SWI2C.C: 10: TRISA &=0xbf;;
  3195                           
  3196                           ; Regs used in _swI2C_Init: [wreg]
  3197  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  3198  05D2  1305               	bcf	5,6	;volatile
  3199                           
  3200                           ;SWI2C.C: 11: TRISA &=0x7f;;
  3201  05D3  1385               	bcf	5,7	;volatile
  3202                           
  3203                           ;SWI2C.C: 12: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3204  05D4  3005               	movlw	5
  3205  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  3206  05D6  00A0               	movwf	??_swI2C_Init
  3207  05D7                     u3867:	
  3208  05D7  0BA0               	decfsz	??_swI2C_Init,f
  3209  05D8  2DD7               	goto	u3867
  3210  05D9  3005               	movlw	5
  3211                           
  3212                           ;SWI2C.C: 13: RA7 = 1;
  3213  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3214  05DB  1785               	bsf	5,7
  3215  05DC  1705               	bsf	5,6
  3216                           
  3217                           ;SWI2C.C: 15: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3218  05DD  00A0               	movwf	??_swI2C_Init
  3219  05DE                     u3877:	
  3220  05DE  0BA0               	decfsz	??_swI2C_Init,f
  3221  05DF  2DDE               	goto	u3877
  3222                           
  3223                           ;SWI2C.C: 16: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3224  05E0  3005               	movlw	5
  3225  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  3226  05E2  00A0               	movwf	??_swI2C_Init
  3227  05E3                     u3887:	
  3228  05E3  0BA0               	decfsz	??_swI2C_Init,f
  3229  05E4  2DE3               	goto	u3887
  3230                           
  3231                           ;SWI2C.C: 17: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3232  05E5  3005               	movlw	5
  3233  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  3234  05E7  00A0               	movwf	??_swI2C_Init
  3235  05E8                     u3897:	
  3236  05E8  0BA0               	decfsz	??_swI2C_Init,f
  3237  05E9  2DE8               	goto	u3897
  3238                           
  3239                           ;SWI2C.C: 18: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3240  05EA  3005               	movlw	5
  3241  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3242  05EC  00A0               	movwf	??_swI2C_Init
  3243  05ED                     u3907:	
  3244  05ED  0BA0               	decfsz	??_swI2C_Init,f
  3245  05EE  2DED               	goto	u3907
  3246  05EF  0008               	return
  3247  05F0                     __end_of_swI2C_Init:	
  3248                           
  3249                           	psect	text884
  3250  06D3                     __ptext884:	
  3251 ;; =============== function _swI2C_Init ends ============
  3252                           
  3253                           
  3254 ;; *************** function _sys_init *****************
  3255 ;; Defined at:
  3256 ;;		line 3 in file "sysinit.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;		None               void
  3263 ;; Registers used:
  3264 ;;		wreg
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 20/20
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMMON   BANK0   BANK1
  3270 ;;      Params:         0       0       0
  3271 ;;      Locals:         0       0       0
  3272 ;;      Temps:          0       0       0
  3273 ;;      Totals:         0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    2
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_main
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283  06D3                     _sys_init:	
  3284                           
  3285                           ;sysinit.c: 21: OSCCON = 0B01010001;
  3286                           
  3287                           ; Regs used in _sys_init: [wreg]
  3288  06D3  3051               	movlw	81
  3289  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  3290  06D5  008F               	movwf	15	;volatile
  3291                           
  3292                           ;sysinit.c: 22: _nop();
  3293  06D6  0000               	nop
  3294  06D7                     l1794:	
  3295                           ;sysinit.c: 28: while(HTS==0);
  3296                           
  3297  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  3298  06D8  190F               	btfsc	15,2
  3299  06D9  0008               	return
  3300  06DA  2ED7               	goto	l1794
  3301  06DB                     __end_of_sys_init:	
  3302                           
  3303                           	psect	text885
  3304  063E                     __ptext885:	
  3305 ;; =============== function _sys_init ends ============
  3306                           
  3307                           
  3308 ;; *************** function _beep *****************
  3309 ;; Defined at:
  3310 ;;		line 146 in file "smartkey.C"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  delay           1    wreg     unsigned char 
  3313 ;;  rep             1    4[BANK0 ] unsigned char 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  delay           1    5[BANK0 ] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;		None               void
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, pclath, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 20/0
  3322 ;;		On exit  : 20/0
  3323 ;;		Unchanged: FFFDF/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1
  3325 ;;      Params:         0       1       0
  3326 ;;      Locals:         0       1       0
  3327 ;;      Temps:          0       0       0
  3328 ;;      Totals:         0       2       0
  3329 ;;Total ram usage:        2 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    3
  3332 ;; This function calls:
  3333 ;;		_delay_x10ms
  3334 ;; This function is called by:
  3335 ;;		_main
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338  063E                     _beep:	
  3339                           
  3340                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  3341                           ;beep@delay stored from wreg
  3342  063E  00A5               	movwf	beep@delay
  3343  063F                     l6590:	
  3344                           ;smartkey.C: 147: {
  3345                           ;smartkey.C: 148: while (rep--) {
  3346                           
  3347  063F  03A4               	decf	beep@rep,f
  3348  0640  0824               	movf	beep@rep,w
  3349  0641  3AFF               	xorlw	255
  3350  0642  1903               	btfsc	3,2
  3351  0643  0008               	return
  3352  0644  300C               	movlw	12
  3353                           
  3354                           ;smartkey.C: 149: TMR2ON = 1;
  3355  0645  1512               	bsf	18,2
  3356                           
  3357                           ;smartkey.C: 150: PR2L = 12;
  3358  0646  1683               	bsf	3,5	;RP0=1, select bank1
  3359  0647  0091               	movwf	17	;volatile
  3360                           
  3361                           ;smartkey.C: 151: delay_x10ms(delay);
  3362  0648  1283               	bcf	3,5	;RP0=0, select bank0
  3363  0649  0825               	movf	beep@delay,w
  3364  064A  00A0               	movwf	?_delay_x10ms
  3365  064B  01A1               	clrf	?_delay_x10ms+1
  3366  064C  267D               	fcall	_delay_x10ms
  3367  064D  3014               	movlw	20
  3368                           
  3369                           ;smartkey.C: 153: TMR2ON = 0; RA3 = 0;
  3370  064E  1112               	bcf	18,2
  3371  064F  1185               	bcf	5,3
  3372                           
  3373                           ;smartkey.C: 154: delay_x10ms(20);
  3374  0650  00A0               	movwf	?_delay_x10ms
  3375  0651  01A1               	clrf	?_delay_x10ms+1
  3376  0652  267D               	fcall	_delay_x10ms
  3377  0653  2E3F               	goto	l6590
  3378  0654                     __end_of_beep:	
  3379                           
  3380                           	psect	text886
  3381  047C                     __ptext886:	
  3382 ;; =============== function _beep ends ============
  3383                           
  3384                           
  3385 ;; *************** function ___awdiv *****************
  3386 ;; Defined at:
  3387 ;;		line 5 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\awdiv.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  divisor         2    0[BANK0 ] int 
  3390 ;;  dividend        2    2[BANK0 ] int 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  quotient        2    6[BANK0 ] int 
  3393 ;;  sign            1    5[BANK0 ] unsigned char 
  3394 ;;  counter         1    4[BANK0 ] unsigned char 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  2    0[BANK0 ] int 
  3397 ;; Registers used:
  3398 ;;		wreg, status,2, status,0
  3399 ;; Tracked objects:
  3400 ;;		On entry : 20/0
  3401 ;;		On exit  : 20/0
  3402 ;;		Unchanged: FFFDF/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1
  3404 ;;      Params:         0       4       0
  3405 ;;      Locals:         0       4       0
  3406 ;;      Temps:          0       0       0
  3407 ;;      Totals:         0       8       0
  3408 ;;Total ram usage:        8 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    2
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417  047C                     ___awdiv:	
  3418                           
  3419                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3420  047C  01A5               	clrf	___awdiv@sign
  3421  047D  1FA1               	btfss	___awdiv@divisor+1,7
  3422  047E  2C86               	goto	l6542
  3423  047F  09A0               	comf	___awdiv@divisor,f
  3424  0480  09A1               	comf	___awdiv@divisor+1,f
  3425  0481  0AA0               	incf	___awdiv@divisor,f
  3426  0482  1903               	skipnz
  3427  0483  0AA1               	incf	___awdiv@divisor+1,f
  3428  0484  01A5               	clrf	___awdiv@sign
  3429  0485  0AA5               	incf	___awdiv@sign,f
  3430  0486                     l6542:	
  3431  0486  1FA3               	btfss	___awdiv@dividend+1,7
  3432  0487  2C8F               	goto	l6548
  3433  0488  09A2               	comf	___awdiv@dividend,f
  3434  0489  09A3               	comf	___awdiv@dividend+1,f
  3435  048A  0AA2               	incf	___awdiv@dividend,f
  3436  048B  1903               	skipnz
  3437  048C  0AA3               	incf	___awdiv@dividend+1,f
  3438  048D  3001               	movlw	1
  3439  048E  06A5               	xorwf	___awdiv@sign,f
  3440  048F                     l6548:	
  3441  048F  01A6               	clrf	___awdiv@quotient
  3442  0490  01A7               	clrf	___awdiv@quotient+1
  3443  0491  0821               	movf	___awdiv@divisor+1,w
  3444  0492  0420               	iorwf	___awdiv@divisor,w
  3445  0493  1903               	skipnz
  3446  0494  2CB4               	goto	l6570
  3447  0495  01A4               	clrf	___awdiv@counter
  3448  0496                     L10:	
  3449  0496  0AA4               	incf	___awdiv@counter,f
  3450  0497  1BA1               	btfsc	___awdiv@divisor+1,7
  3451  0498  2C9D               	goto	l6558
  3452  0499  1003               	clrc
  3453  049A  0DA0               	rlf	___awdiv@divisor,f
  3454  049B  0DA1               	rlf	___awdiv@divisor+1,f
  3455  049C  2C96               	goto	L10
  3456  049D                     l6558:	
  3457  049D  1003               	clrc
  3458  049E  0DA6               	rlf	___awdiv@quotient,f
  3459  049F  0DA7               	rlf	___awdiv@quotient+1,f
  3460  04A0  0821               	movf	___awdiv@divisor+1,w
  3461  04A1  0223               	subwf	___awdiv@dividend+1,w
  3462  04A2  1D03               	skipz
  3463  04A3  2CA6               	goto	u2755
  3464  04A4  0820               	movf	___awdiv@divisor,w
  3465  04A5  0222               	subwf	___awdiv@dividend,w
  3466  04A6                     u2755:	
  3467  04A6  1C03               	skipc
  3468  04A7  2CB0               	goto	L11
  3469  04A8  0820               	movf	___awdiv@divisor,w
  3470  04A9  02A2               	subwf	___awdiv@dividend,f
  3471  04AA  0821               	movf	___awdiv@divisor+1,w
  3472  04AB  1C03               	skipc
  3473  04AC  03A3               	decf	___awdiv@dividend+1,f
  3474  04AD  02A3               	subwf	___awdiv@dividend+1,f
  3475  04AE  1426               	bsf	___awdiv@quotient,0
  3476  04AF  1003               	clrc
  3477  04B0                     L11:	
  3478  04B0  0CA1               	rrf	___awdiv@divisor+1,f
  3479  04B1  0CA0               	rrf	___awdiv@divisor,f
  3480  04B2  0BA4               	decfsz	___awdiv@counter,f
  3481  04B3  2C9D               	goto	l6558
  3482  04B4                     l6570:	
  3483  04B4  0825               	movf	___awdiv@sign,w
  3484  04B5  1903               	btfsc	3,2
  3485  04B6  2CBC               	goto	l6574
  3486  04B7  09A6               	comf	___awdiv@quotient,f
  3487  04B8  09A7               	comf	___awdiv@quotient+1,f
  3488  04B9  0AA6               	incf	___awdiv@quotient,f
  3489  04BA  1903               	skipnz
  3490  04BB  0AA7               	incf	___awdiv@quotient+1,f
  3491  04BC                     l6574:	
  3492  04BC  0827               	movf	___awdiv@quotient+1,w
  3493  04BD  00A1               	movwf	?___awdiv+1
  3494  04BE  0826               	movf	___awdiv@quotient,w
  3495  04BF  00A0               	movwf	?___awdiv
  3496  04C0  0008               	return
  3497  04C1                     __end_of___awdiv:	
  3498                           
  3499                           	psect	text887
  3500  05F0                     __ptext887:	
  3501 ;; =============== function ___awdiv ends ============
  3502                           
  3503                           
  3504 ;; *************** function _int_init *****************
  3505 ;; Defined at:
  3506 ;;		line 83 in file "sysinit.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;		None
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  tmp             1    0        unsigned char 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;		None               void
  3513 ;; Registers used:
  3514 ;;		wreg, status,2
  3515 ;; Tracked objects:
  3516 ;;		On entry : 20/0
  3517 ;;		On exit  : 20/0
  3518 ;;		Unchanged: FFFDF/0
  3519 ;; Data sizes:     COMMON   BANK0   BANK1
  3520 ;;      Params:         0       0       0
  3521 ;;      Locals:         0       0       0
  3522 ;;      Temps:          0       0       0
  3523 ;;      Totals:         0       0       0
  3524 ;;Total ram usage:        0 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    2
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_main
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533  05F0                     _int_init:	
  3534                           
  3535                           ;sysinit.c: 88: INTCON = 0B00000000;
  3536                           
  3537                           ; Regs used in _int_init: [wreg+status,2]
  3538  05F0  018B               	clrf	11	;volatile
  3539                           
  3540                           ;sysinit.c: 89: PIE1 = 0B00000000;
  3541  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  3542  05F2  018C               	clrf	12	;volatile
  3543                           
  3544                           ;sysinit.c: 90: PIR1 = 0B00000000;
  3545  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3546  05F4  018C               	clrf	12	;volatile
  3547                           
  3548                           ;sysinit.c: 92: IOCA5 = 1;
  3549  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  3550  05F6  1696               	bsf	22,5
  3551                           
  3552                           ;sysinit.c: 93: tmp = PORTA;
  3553  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3554  05F8  0805               	movf	5,w	;volatile
  3555                           
  3556                           ;sysinit.c: 94: PAIF = 0;
  3557  05F9  100B               	bcf	11,0
  3558                           
  3559                           ;sysinit.c: 95: PAIE = 0;
  3560  05FA  118B               	bcf	11,3
  3561                           
  3562                           ;sysinit.c: 98: INTEDG = 0;
  3563  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  3564  05FC  1301               	bcf	1,6
  3565                           
  3566                           ;sysinit.c: 99: INTF = 0;
  3567  05FD  108B               	bcf	11,1
  3568                           
  3569                           ;sysinit.c: 100: INTE = 1;
  3570  05FE  160B               	bsf	11,4
  3571                           
  3572                           ;sysinit.c: 102: TMR2IF = 0;
  3573  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0600  108C               	bcf	12,1
  3575                           
  3576                           ;sysinit.c: 103: TMR2IE = 1;
  3577  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3578  0602  148C               	bsf	12,1
  3579                           
  3580                           ;sysinit.c: 104: TMR2ON = 0;
  3581  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3582  0604  1112               	bcf	18,2
  3583                           
  3584                           ;sysinit.c: 110: T0IF = 0;
  3585  0605  110B               	bcf	11,2
  3586                           
  3587                           ;sysinit.c: 111: T0IE = 1;
  3588  0606  168B               	bsf	11,5
  3589                           
  3590                           ;sysinit.c: 112: T0ON = 1;
  3591  0607  159F               	bsf	31,3
  3592                           
  3593                           ;sysinit.c: 114: PEIE = 1;
  3594  0608  170B               	bsf	11,6
  3595                           
  3596                           ;sysinit.c: 116: GIE = 1;
  3597  0609  178B               	bsf	11,7
  3598  060A  0008               	return
  3599  060B                     __end_of_int_init:	
  3600                           
  3601                           	psect	text888
  3602  0690                     __ptext888:	
  3603 ;; =============== function _int_init ends ============
  3604                           
  3605                           
  3606 ;; *************** function _timer_init *****************
  3607 ;; Defined at:
  3608 ;;		line 51 in file "sysinit.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;		None               void
  3615 ;; Registers used:
  3616 ;;		wreg, status,2
  3617 ;; Tracked objects:
  3618 ;;		On entry : 20/0
  3619 ;;		On exit  : 20/0
  3620 ;;		Unchanged: FFFDF/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1
  3622 ;;      Params:         0       0       0
  3623 ;;      Locals:         0       0       0
  3624 ;;      Temps:          0       0       0
  3625 ;;      Totals:         0       0       0
  3626 ;;Total ram usage:        0 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    2
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635  0690                     _timer_init:	
  3636                           
  3637                           ;sysinit.c: 60: T0CON0 = 0B00000000;
  3638                           
  3639                           ; Regs used in _timer_init: [wreg+status,2]
  3640  0690  019F               	clrf	31	;volatile
  3641                           
  3642                           ;sysinit.c: 61: OPTION = 0B00000111;
  3643  0691  3007               	movlw	7
  3644  0692  1683               	bsf	3,5	;RP0=1, select bank1
  3645  0693  0081               	movwf	1	;volatile
  3646                           
  3647                           ;sysinit.c: 62: TMR0 = 179;
  3648  0694  30B3               	movlw	179
  3649  0695  1283               	bcf	3,5	;RP0=0, select bank0
  3650  0696  0081               	movwf	1	;volatile
  3651                           
  3652                           ;sysinit.c: 64: TMR2H = 0;
  3653  0697  0193               	clrf	19	;volatile
  3654                           
  3655                           ;sysinit.c: 65: TMR2L = 0;
  3656  0698  0191               	clrf	17	;volatile
  3657                           
  3658                           ;sysinit.c: 66: PR2H = 0;
  3659  0699  1683               	bsf	3,5	;RP0=1, select bank1
  3660  069A  0192               	clrf	18	;volatile
  3661                           
  3662                           ;sysinit.c: 67: PR2L =0;
  3663  069B  0191               	clrf	17	;volatile
  3664                           
  3665                           ;sysinit.c: 68: T2CON0 = 0B00101001;
  3666  069C  3029               	movlw	41
  3667  069D  1283               	bcf	3,5	;RP0=0, select bank0
  3668  069E  0092               	movwf	18	;volatile
  3669  069F  0008               	return
  3670  06A0                     __end_of_timer_init:	
  3671                           
  3672                           	psect	text889
  3673  0654                     __ptext889:	
  3674 ;; =============== function _timer_init ends ============
  3675                           
  3676                           
  3677 ;; *************** function _gpio_init *****************
  3678 ;; Defined at:
  3679 ;;		line 32 in file "sysinit.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;		None               void
  3686 ;; Registers used:
  3687 ;;		wreg, status,2
  3688 ;; Tracked objects:
  3689 ;;		On entry : 20/20
  3690 ;;		On exit  : 20/0
  3691 ;;		Unchanged: FFFDF/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1
  3693 ;;      Params:         0       0       0
  3694 ;;      Locals:         0       0       0
  3695 ;;      Temps:          0       0       0
  3696 ;;      Totals:         0       0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    2
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706  0654                     _gpio_init:	
  3707                           
  3708                           ;sysinit.c: 34: PORTA = 0B00000000;
  3709                           
  3710                           ; Regs used in _gpio_init: [wreg+status,2]
  3711  0654  1283               	bcf	3,5	;RP0=0, select bank0
  3712  0655  0185               	clrf	5	;volatile
  3713                           
  3714                           ;sysinit.c: 35: TRISA = 0B00110111;
  3715  0656  3037               	movlw	55
  3716  0657  1683               	bsf	3,5	;RP0=1, select bank1
  3717  0658  0085               	movwf	5	;volatile
  3718                           
  3719                           ;sysinit.c: 36: WPUA = 0B11000000;
  3720  0659  30C0               	movlw	192
  3721  065A  0095               	movwf	21	;volatile
  3722                           
  3723                           ;sysinit.c: 38: PORTC = 0B00000000;
  3724  065B  1283               	bcf	3,5	;RP0=0, select bank0
  3725  065C  0187               	clrf	7	;volatile
  3726                           
  3727                           ;sysinit.c: 39: TRISC = 0B11111100;
  3728  065D  30FC               	movlw	252
  3729  065E  1683               	bsf	3,5	;RP0=1, select bank1
  3730  065F  0087               	movwf	7	;volatile
  3731                           
  3732                           ;sysinit.c: 40: WPUC = 0B00000000;
  3733  0660  0193               	clrf	19	;volatile
  3734                           
  3735                           ;sysinit.c: 42: PSRCA = 0B11111111;
  3736  0661  30FF               	movlw	255
  3737  0662  0088               	movwf	8	;volatile
  3738                           
  3739                           ;sysinit.c: 43: PSRCC = 0B11111111;
  3740  0663  0094               	movwf	20	;volatile
  3741                           
  3742                           ;sysinit.c: 44: PSINKA = 0B11111111;
  3743  0664  0097               	movwf	23	;volatile
  3744                           
  3745                           ;sysinit.c: 45: PSINKC = 0B11111111;
  3746  0665  009F               	movwf	31	;volatile
  3747                           
  3748                           ;sysinit.c: 47: MSCON = 0B00110000;
  3749  0666  3030               	movlw	48
  3750  0667  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0668  009B               	movwf	27	;volatile
  3752  0669  0008               	return
  3753  066A                     __end_of_gpio_init:	
  3754                           
  3755                           	psect	text890
  3756  053C                     __ptext890:	
  3757 ;; =============== function _gpio_init ends ============
  3758                           
  3759                           
  3760 ;; *************** function _compe *****************
  3761 ;; Defined at:
  3762 ;;		line 190 in file "smartkey.C"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;  a               1    wreg     char 
  3765 ;;  b               1    0[BANK0 ] char 
  3766 ;;  dt              1    1[BANK0 ] unsigned char 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  a               1    4[BANK0 ] char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      unsigned char 
  3771 ;; Registers used:
  3772 ;;		wreg
  3773 ;; Tracked objects:
  3774 ;;		On entry : 20/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: FFE00/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1
  3778 ;;      Params:         0       2       0
  3779 ;;      Locals:         0       1       0
  3780 ;;      Temps:          0       2       0
  3781 ;;      Totals:         0       5       0
  3782 ;;Total ram usage:        5 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    2
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_main
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791  053C                     _compe:	
  3792                           
  3793                           ; Regs used in _compe: [wreg]
  3794                           ;compe@a stored from wreg
  3795  053C  00A4               	movwf	compe@a
  3796                           
  3797                           ;smartkey.C: 192: if (a > b) {
  3798  053D  0820               	movf	compe@b,w
  3799  053E  3A80               	xorlw	128
  3800  053F  00A2               	movwf	??_compe
  3801  0540  0824               	movf	compe@a,w
  3802  0541  3A80               	xorlw	128
  3803  0542  02A2               	subwf	??_compe,f
  3804  0543  1803               	skipnc
  3805  0544  2D6C               	goto	l6460
  3806                           
  3807                           ;smartkey.C: 193: if ((a - b) <= dt) return 1;
  3808  0545  0820               	movf	compe@b,w
  3809  0546  0224               	subwf	compe@a,w
  3810  0547  00A2               	movwf	??_compe
  3811  0548  01A3               	clrf	??_compe+1
  3812  0549  1C03               	skipc
  3813  054A  03A3               	decf	??_compe+1,f
  3814  054B  1BA4               	btfsc	compe@a,7
  3815  054C  03A3               	decf	??_compe+1,f
  3816  054D  1BA0               	btfsc	compe@b,7
  3817  054E  0AA3               	incf	??_compe+1,f
  3818  054F  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0550  0823               	movf	??_compe+1,w
  3820  0551  3A80               	xorlw	128
  3821  0552  3C80               	sublw	128
  3822  0553  1D03               	skipz
  3823  0554  2D57               	goto	u2665
  3824  0555  0822               	movf	??_compe,w
  3825  0556  0221               	subwf	compe@dt,w
  3826  0557                     u2665:	
  3827  0557  1C03               	skipc
  3828  0558  3400               	retlw	0
  3829  0559  3401               	retlw	1
  3830  055A                     L12:	
  3831                           ;smartkey.C: 197: if ((b - a) <= dt) return 1;
  3832                           
  3833  055A  0220               	subwf	compe@b,w
  3834  055B  00A2               	movwf	??_compe
  3835  055C  01A3               	clrf	??_compe+1
  3836  055D  1C03               	skipc
  3837  055E  03A3               	decf	??_compe+1,f
  3838  055F  1BA0               	btfsc	compe@b,7
  3839  0560  03A3               	decf	??_compe+1,f
  3840  0561  1BA4               	btfsc	compe@a,7
  3841  0562  0AA3               	incf	??_compe+1,f
  3842  0563  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0564  0823               	movf	??_compe+1,w
  3844  0565  3A80               	xorlw	128
  3845  0566  3C80               	sublw	128
  3846  0567  1D03               	skipz
  3847  0568  2D57               	goto	u2665
  3848  0569  0822               	movf	??_compe,w
  3849  056A  0221               	subwf	compe@dt,w
  3850  056B  2D57               	goto	u2665
  3851  056C                     l6460:	
  3852                           ;smartkey.C: 194: else return 0;
  3853                           
  3854                           
  3855                           ;smartkey.C: 196: else if (a < b) {
  3856  056C  0824               	movf	compe@a,w
  3857  056D  3A80               	xorlw	128
  3858  056E  00A2               	movwf	??_compe
  3859  056F  0820               	movf	compe@b,w
  3860  0570  3A80               	xorlw	128
  3861  0571  02A2               	subwf	??_compe,f
  3862                           
  3863                           ;smartkey.C: 200: else if (a == b) {
  3864  0572  0824               	movf	compe@a,w
  3865  0573  1C03               	btfss	3,0
  3866  0574  2D5A               	goto	L12
  3867  0575  0620               	xorwf	compe@b,w
  3868  0576  1903               	btfsc	3,2
  3869  0577  3401               	retlw	1
  3870  0578  3400               	retlw	0
  3871  0579                     __end_of_compe:	
  3872                           
  3873                           	psect	text891
  3874  06C7                     __ptext891:	
  3875 ;; =============== function _compe ends ============
  3876                           
  3877                           
  3878 ;; *************** function _setState *****************
  3879 ;; Defined at:
  3880 ;;		line 184 in file "smartkey.C"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  stt             1    wreg     unsigned char 
  3883 ;;  _tOut           2    0[BANK0 ] unsigned int 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  stt             1    2[BANK0 ] unsigned char 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;		None               void
  3888 ;; Registers used:
  3889 ;;		wreg, status,2
  3890 ;; Tracked objects:
  3891 ;;		On entry : 20/0
  3892 ;;		On exit  : 20/0
  3893 ;;		Unchanged: FFFDF/0
  3894 ;; Data sizes:     COMMON   BANK0   BANK1
  3895 ;;      Params:         0       2       0
  3896 ;;      Locals:         0       1       0
  3897 ;;      Temps:          0       0       0
  3898 ;;      Totals:         0       3       0
  3899 ;;Total ram usage:        3 bytes
  3900 ;; Hardware stack levels used:    1
  3901 ;; Hardware stack levels required when called:    2
  3902 ;; This function calls:
  3903 ;;		Nothing
  3904 ;; This function is called by:
  3905 ;;		_main
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908  06C7                     _setState:	
  3909                           
  3910                           ; Regs used in _setState: [wreg+status,2]
  3911                           ;setState@stt stored from wreg
  3912  06C7  00A2               	movwf	setState@stt
  3913                           
  3914                           ;smartkey.C: 185: mtOldState = mtState;
  3915  06C8  0874               	movf	_mtState,w
  3916  06C9  00C6               	movwf	_mtOldState
  3917                           
  3918                           ;smartkey.C: 186: mtState = stt;
  3919  06CA  0822               	movf	setState@stt,w
  3920  06CB  00F4               	movwf	_mtState
  3921                           
  3922                           ;smartkey.C: 187: timeTick = 0;
  3923  06CC  01F0               	clrf	_timeTick
  3924  06CD  01F1               	clrf	_timeTick+1
  3925                           
  3926                           ;smartkey.C: 188: timeOut = _tOut;
  3927  06CE  0821               	movf	setState@_tOut+1,w
  3928  06CF  00C4               	movwf	_timeOut+1
  3929  06D0  0820               	movf	setState@_tOut,w
  3930  06D1  00C3               	movwf	_timeOut
  3931  06D2  0008               	return
  3932  06D3                     __end_of_setState:	
  3933                           
  3934                           	psect	text892
  3935  06EE                     __ptext892:	
  3936 ;; =============== function _setState ends ============
  3937                           
  3938                           
  3939 ;; *************** function _beepOn *****************
  3940 ;; Defined at:
  3941 ;;		line 142 in file "smartkey.C"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;		None
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;		None               void
  3948 ;; Registers used:
  3949 ;;		None
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/20
  3952 ;;		On exit  : 20/20
  3953 ;;		Unchanged: FFFDF/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1
  3955 ;;      Params:         0       0       0
  3956 ;;      Locals:         0       0       0
  3957 ;;      Temps:          0       0       0
  3958 ;;      Totals:         0       0       0
  3959 ;;Total ram usage:        0 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:    2
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_main
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968  06EE                     _beepOn:	
  3969                           
  3970                           ;smartkey.C: 143: TMR2ON = 1;
  3971                           
  3972                           ; Regs used in _beepOn: []
  3973  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  3974  06EF  1512               	bsf	18,2
  3975                           
  3976                           ;smartkey.C: 144: TRISA &= 0xf7;
  3977  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  3978  06F1  1185               	bcf	5,3	;volatile
  3979  06F2  0008               	return
  3980  06F3                     __end_of_beepOn:	
  3981                           
  3982                           	psect	text893
  3983  06E3                     __ptext893:	
  3984 ;; =============== function _beepOn ends ============
  3985                           
  3986                           
  3987 ;; *************** function _beepOff *****************
  3988 ;; Defined at:
  3989 ;;		line 139 in file "smartkey.C"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;		None               void
  3996 ;; Registers used:
  3997 ;;		None
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 20/20
  4001 ;;		Unchanged: FFFDF/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1
  4003 ;;      Params:         0       0       0
  4004 ;;      Locals:         0       0       0
  4005 ;;      Temps:          0       0       0
  4006 ;;      Totals:         0       0       0
  4007 ;;Total ram usage:        0 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    2
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_main
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016  06E3                     _beepOff:	
  4017                           
  4018                           ;smartkey.C: 140: TMR2ON = 0; RA3 = 0; TRISA |= 0x08;
  4019                           
  4020                           ; Regs used in _beepOff: []
  4021  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  4022  06E4  1112               	bcf	18,2
  4023  06E5  1185               	bcf	5,3
  4024  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  4025  06E7  1585               	bsf	5,3	;volatile
  4026  06E8  0008               	return
  4027  06E9                     __end_of_beepOff:	
  4028                           
  4029                           	psect	text894
  4030  067D                     __ptext894:	
  4031 ;; =============== function _beepOff ends ============
  4032                           
  4033                           
  4034 ;; *************** function _delay_x10ms *****************
  4035 ;; Defined at:
  4036 ;;		line 134 in file "smartkey.C"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  t               2    0[BANK0 ] unsigned int 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  set             2    2[BANK0 ] unsigned int 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;		None               void
  4043 ;; Registers used:
  4044 ;;		wreg
  4045 ;; Tracked objects:
  4046 ;;		On entry : 20/0
  4047 ;;		On exit  : 20/0
  4048 ;;		Unchanged: FFFDF/0
  4049 ;; Data sizes:     COMMON   BANK0   BANK1
  4050 ;;      Params:         0       2       0
  4051 ;;      Locals:         0       2       0
  4052 ;;      Temps:          0       0       0
  4053 ;;      Totals:         0       4       0
  4054 ;;Total ram usage:        4 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    2
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_beep
  4061 ;;		_main
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064  067D                     _delay_x10ms:	
  4065                           
  4066                           ;smartkey.C: 135: unsigned int set = t + timeTick;
  4067                           
  4068                           ; Regs used in _delay_x10ms: [wreg]
  4069  067D  0821               	movf	delay_x10ms@t+1,w
  4070  067E  00A3               	movwf	delay_x10ms@set+1
  4071  067F  0820               	movf	delay_x10ms@t,w
  4072  0680  00A2               	movwf	delay_x10ms@set
  4073  0681  0870               	movf	_timeTick,w
  4074  0682  07A2               	addwf	delay_x10ms@set,f
  4075  0683  1803               	skipnc
  4076  0684  0AA3               	incf	delay_x10ms@set+1,f
  4077  0685  0871               	movf	_timeTick+1,w
  4078  0686  07A3               	addwf	delay_x10ms@set+1,f
  4079  0687                     l6434:	
  4080                           ;smartkey.C: 136: while (timeTick < set);
  4081                           
  4082  0687  0823               	movf	delay_x10ms@set+1,w
  4083  0688  0271               	subwf	_timeTick+1,w
  4084  0689  1D03               	skipz
  4085  068A  2E8D               	goto	u2635
  4086  068B  0822               	movf	delay_x10ms@set,w
  4087  068C  0270               	subwf	_timeTick,w
  4088  068D                     u2635:	
  4089  068D  1803               	btfsc	3,0
  4090  068E  0008               	return
  4091  068F  2E87               	goto	l6434
  4092  0690                     __end_of_delay_x10ms:	
  4093                           
  4094                           	psect	text895
  4095  060B                     __ptext895:	
  4096 ;; =============== function _delay_x10ms ends ============
  4097                           
  4098                           
  4099 ;; *************** function _WRITE_EEPROM *****************
  4100 ;; Defined at:
  4101 ;;		line 172 in file "smartkey.C"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  EEAddr          1    wreg     unsigned char 
  4104 ;;  EEData          1    0[BANK0 ] unsigned char 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  EEAddr          1    1[BANK0 ] unsigned char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;		None               void
  4109 ;; Registers used:
  4110 ;;		wreg
  4111 ;; Tracked objects:
  4112 ;;		On entry : 20/0
  4113 ;;		On exit  : 20/20
  4114 ;;		Unchanged: FFE00/0
  4115 ;; Data sizes:     COMMON   BANK0   BANK1
  4116 ;;      Params:         0       1       0
  4117 ;;      Locals:         0       1       0
  4118 ;;      Temps:          0       0       0
  4119 ;;      Totals:         0       2       0
  4120 ;;Total ram usage:        2 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:    2
  4123 ;; This function calls:
  4124 ;;		Nothing
  4125 ;; This function is called by:
  4126 ;;		_main
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129  060B                     _WRITE_EEPROM:	
  4130                           
  4131                           ; Regs used in _WRITE_EEPROM: [wreg]
  4132                           ;WRITE_EEPROM@EEAddr stored from wreg
  4133  060B  00A1               	movwf	WRITE_EEPROM@EEAddr
  4134                           
  4135                           ;smartkey.C: 173: GIE = 0;
  4136  060C  138B               	bcf	11,7
  4137  060D                     l870:	
  4138                           ;smartkey.C: 174: while (GIE) asm("clrwdt");
  4139                           
  4140  060D  1F8B               	btfss	11,7
  4141  060E  2E11               	goto	l6426
  4142  060F  0064               	clrwdt	;#
  4143  0610  2E0D               	goto	l870
  4144  0611                     l6426:	
  4145                           
  4146                           ;smartkey.C: 175: EEADR = EEAddr;
  4147  0611  1283               	bcf	3,5	;RP0=0, select bank0
  4148  0612  0821               	movf	WRITE_EEPROM@EEAddr,w
  4149  0613  1683               	bsf	3,5	;RP0=1, select bank1
  4150  0614  009B               	movwf	27	;volatile
  4151                           
  4152                           ;smartkey.C: 176: EEDAT = EEData;
  4153  0615  1283               	bcf	3,5	;RP0=0, select bank0
  4154  0616  0820               	movf	WRITE_EEPROM@EEData,w
  4155  0617  1683               	bsf	3,5	;RP0=1, select bank1
  4156  0618  009A               	movwf	26	;volatile
  4157  0619  3034               	movlw	52
  4158                           
  4159                           ;smartkey.C: 177: EEIF = 0;
  4160  061A  1283               	bcf	3,5	;RP0=0, select bank0
  4161  061B  138C               	bcf	12,7
  4162                           
  4163                           ;smartkey.C: 178: EECON1 = 0x34;
  4164  061C  1683               	bsf	3,5	;RP0=1, select bank1
  4165  061D  009C               	movwf	28	;volatile
  4166                           
  4167                           ;smartkey.C: 179: WR = 1;
  4168  061E  141D               	bsf	29,0
  4169  061F                     l873:	
  4170                           ;smartkey.C: 180: while (WR) asm("clrwdt");
  4171                           
  4172  061F  1683               	bsf	3,5	;RP0=1, select bank1
  4173  0620  1C1D               	btfss	29,0
  4174  0621  2E24               	goto	l875
  4175  0622  0064               	clrwdt	;#
  4176  0623  2E1F               	goto	l873
  4177  0624                     l875:	
  4178                           
  4179                           ;smartkey.C: 181: GIE = 1;
  4180  0624  178B               	bsf	11,7
  4181  0625  0008               	return
  4182  0626                     __end_of_WRITE_EEPROM:	
  4183                           
  4184                           	psect	text896
  4185  06BA                     __ptext896:	
  4186 ;; =============== function _WRITE_EEPROM ends ============
  4187                           
  4188                           
  4189 ;; *************** function _READ_EEPROM *****************
  4190 ;; Defined at:
  4191 ;;		line 162 in file "smartkey.C"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  EEAddr          1    wreg     unsigned char 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  EEAddr          1    0[BANK0 ] unsigned char 
  4196 ;;  ReEepromData    1    1[BANK0 ] unsigned char 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      unsigned char 
  4199 ;; Registers used:
  4200 ;;		wreg
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/20
  4203 ;;		On exit  : 20/0
  4204 ;;		Unchanged: FFFDF/0
  4205 ;; Data sizes:     COMMON   BANK0   BANK1
  4206 ;;      Params:         0       0       0
  4207 ;;      Locals:         0       2       0
  4208 ;;      Temps:          0       0       0
  4209 ;;      Totals:         0       2       0
  4210 ;;Total ram usage:        2 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; Hardware stack levels required when called:    2
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_main
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219  06BA                     _READ_EEPROM:	
  4220                           
  4221                           ; Regs used in _READ_EEPROM: [wreg]
  4222                           ;READ_EEPROM@EEAddr stored from wreg
  4223  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  4224  06BB  00A0               	movwf	READ_EEPROM@EEAddr
  4225                           
  4226                           ;smartkey.C: 163: unsigned char ReEepromData;
  4227                           ;smartkey.C: 164: EEADR = EEAddr;
  4228  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  4229  06BD  009B               	movwf	27	;volatile
  4230                           
  4231                           ;smartkey.C: 165: RD = 1;
  4232  06BE  141C               	bsf	28,0
  4233                           
  4234                           ;smartkey.C: 166: ReEepromData = EEDAT;
  4235  06BF  081A               	movf	26,w	;volatile
  4236  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  4237  06C1  00A1               	movwf	READ_EEPROM@ReEepromData
  4238                           
  4239                           ;smartkey.C: 167: RD = 0;
  4240  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  4241  06C3  101C               	bcf	28,0
  4242                           
  4243                           ;smartkey.C: 168: return ReEepromData;
  4244  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  4245  06C5  0821               	movf	READ_EEPROM@ReEepromData,w
  4246  06C6  0008               	return
  4247  06C7                     __end_of_READ_EEPROM:	
  4248                           
  4249                           	psect	text897
  4250  03F6                     __ptext897:	
  4251 ;; =============== function _READ_EEPROM ends ============
  4252                           
  4253                           
  4254 ;; *************** function _ISR *****************
  4255 ;; Defined at:
  4256 ;;		line 46 in file "smartkey.C"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;		None
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  tmp             1    4[COMMON] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;		None               void
  4263 ;; Registers used:
  4264 ;;		wreg, status,2, status,0, pclath, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: FFE00/0
  4269 ;; Data sizes:     COMMON   BANK0   BANK1
  4270 ;;      Params:         0       0       0
  4271 ;;      Locals:         1       0       0
  4272 ;;      Temps:          2       0       0
  4273 ;;      Totals:         3       0       0
  4274 ;;Total ram usage:        3 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    1
  4277 ;; This function calls:
  4278 ;;		i1_READ_EEPROM
  4279 ;;		i1_WRITE_EEPROM
  4280 ;; This function is called by:
  4281 ;;		Interrupt level 1
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284  03F6                     _ISR:	
  4285                           
  4286                           ;smartkey.C: 50: if (PAIE && PAIF) {
  4287  03F6  198B               	btfsc	11,3
  4288  03F7  1C0B               	btfss	11,0
  4289  03F8  2C05               	goto	i1l5478
  4290  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  4291  03FA  0805               	movf	5,w	;volatile
  4292                           
  4293                           ;smartkey.C: 52: PAIF = 0;
  4294  03FB  100B               	bcf	11,0
  4295                           
  4296                           ;smartkey.C: 54: if (RA5) {
  4297  03FC  1E85               	btfss	5,5
  4298  03FD  2C04               	goto	i1l5476
  4299                           
  4300                           ;smartkey.C: 55: if (RegStatus.bits.b3 == 0) {
  4301  03FE  19F2               	btfsc	_RegStatus,3	;volatile
  4302  03FF  2C05               	goto	i1l5478
  4303                           
  4304                           ;smartkey.C: 56: cntCyc = 0;
  4305  0400  01F3               	clrf	_cntCyc
  4306                           
  4307                           ;smartkey.C: 57: cntOff = 0;
  4308  0401  01C5               	clrf	_cntOff
  4309                           
  4310                           ;smartkey.C: 59: RegStatus.bits.b3 = 1;
  4311  0402  15F2               	bsf	_RegStatus,3	;volatile
  4312  0403  2C05               	goto	i1l5478
  4313  0404                     i1l5476:	
  4314                           
  4315                           ;smartkey.C: 62: else {
  4316                           ;smartkey.C: 63: cntOff = 0;
  4317  0404  01C5               	clrf	_cntOff
  4318  0405                     i1l5478:	
  4319                           
  4320                           ;smartkey.C: 64: }
  4321                           ;smartkey.C: 65: }
  4322                           ;smartkey.C: 67: if (INTE && INTF) {
  4323  0405  1A0B               	btfsc	11,4
  4324  0406  1C8B               	btfss	11,1
  4325  0407  2C1D               	goto	i1l825
  4326                           
  4327                           ;smartkey.C: 68: INTF = 0;
  4328  0408  108B               	bcf	11,1
  4329                           
  4330                           ;smartkey.C: 69: if ( RA2 == 0) {
  4331  0409  1283               	bcf	3,5	;RP0=0, select bank0
  4332  040A  1905               	btfsc	5,2
  4333  040B  2C1D               	goto	i1l825
  4334                           
  4335                           ;smartkey.C: 70: if (timeTick < 32) {
  4336  040C  3000               	movlw	0
  4337  040D  0271               	subwf	_timeTick+1,w
  4338  040E  3020               	movlw	32
  4339  040F  1903               	skipnz
  4340  0410  0270               	subwf	_timeTick,w
  4341  0411  1803               	skipnc
  4342  0412  2C1A               	goto	i1l828
  4343                           
  4344                           ;smartkey.C: 71: tmp = READ_EEPROM(0x3F);
  4345  0413  303F               	movlw	63
  4346  0414  26DB               	fcall	i1_READ_EEPROM
  4347  0415  00F9               	movwf	ISR@tmp
  4348                           
  4349                           ;smartkey.C: 72: WRITE_EEPROM(0x3F, tmp + 1);
  4350  0416  0A79               	incf	ISR@tmp,w
  4351  0417  00F5               	movwf	?i1_WRITE_EEPROM
  4352  0418  303F               	movlw	63
  4353  0419  2626               	fcall	i1_WRITE_EEPROM
  4354  041A                     i1l828:	
  4355  041A  1283               	bcf	3,5	;RP0=0, select bank0
  4356  041B  1D05               	btfss	5,2
  4357  041C  2C1A               	goto	i1l828
  4358  041D                     i1l825:	
  4359                           
  4360                           ;smartkey.C: 75: }
  4361                           ;smartkey.C: 76: }
  4362                           ;smartkey.C: 79: if (T0IE && T0IF) {
  4363  041D  1A8B               	btfsc	11,5
  4364  041E  1D0B               	btfss	11,2
  4365  041F  2C6C               	goto	i1l5538
  4366  0420  30B3               	movlw	179
  4367                           
  4368                           ;smartkey.C: 80: T0IF = 0;
  4369  0421  110B               	bcf	11,2
  4370                           
  4371                           ;smartkey.C: 81: TMR0 = 179;
  4372  0422  1283               	bcf	3,5	;RP0=0, select bank0
  4373  0423  0081               	movwf	1	;volatile
  4374                           
  4375                           ;smartkey.C: 87: if ( RegStatus.bits.b3 == 1) {
  4376  0424  1DF2               	btfss	_RegStatus,3	;volatile
  4377  0425  2C3E               	goto	i1l5518
  4378                           
  4379                           ;smartkey.C: 89: cntCyc++;
  4380  0426  0AF3               	incf	_cntCyc,f
  4381                           
  4382                           ;smartkey.C: 90: if (RA5 == 0) {
  4383  0427  1A85               	btfsc	5,5
  4384  0428  2C3E               	goto	i1l5518
  4385  0429  3010               	movlw	16
  4386                           
  4387                           ;smartkey.C: 92: cntOff++;
  4388  042A  0AC5               	incf	_cntOff,f
  4389                           
  4390                           ;smartkey.C: 94: if (cntOff > 15) {
  4391  042B  0245               	subwf	_cntOff,w
  4392  042C  1C03               	skipc
  4393  042D  2C3E               	goto	i1l5518
  4394                           
  4395                           ;smartkey.C: 96: RegStatus.bits.b3 = 0;
  4396  042E  11F2               	bcf	_RegStatus,3	;volatile
  4397                           
  4398                           ;smartkey.C: 98: if ((cntCyc > 15) && (cntCyc < 50)) {
  4399  042F  3010               	movlw	16
  4400  0430  0273               	subwf	_cntCyc,w
  4401  0431  3032               	movlw	50
  4402  0432  1C03               	skipc
  4403  0433  2C3A               	goto	L14
  4404  0434  0273               	subwf	_cntCyc,w
  4405  0435  1803               	skipnc
  4406  0436  2C39               	goto	i1l5514
  4407                           
  4408                           ;smartkey.C: 99: RegStatus.bits.b2 =1;
  4409  0437  1572               	bsf	_RegStatus,2	;volatile
  4410                           
  4411                           ;smartkey.C: 100: } else if (cntCyc >= 50) {
  4412  0438  2C3D               	goto	i1l836
  4413  0439                     i1l5514:	
  4414  0439  3032               	movlw	50
  4415  043A                     L14:	
  4416  043A  0273               	subwf	_cntCyc,w
  4417  043B  1803               	btfsc	3,0
  4418                           
  4419                           ;smartkey.C: 101: RegStatus.bits.b2 =0;
  4420  043C  1172               	bcf	_RegStatus,2	;volatile
  4421  043D                     i1l836:	
  4422                           
  4423                           ;smartkey.C: 102: }
  4424                           ;smartkey.C: 103: RegStatus.bits.b1 = 1;
  4425  043D  14F2               	bsf	_RegStatus,1	;volatile
  4426  043E                     i1l5518:	
  4427                           
  4428                           ;smartkey.C: 104: }
  4429                           ;smartkey.C: 105: }
  4430                           ;smartkey.C: 106: }
  4431                           ;smartkey.C: 108: timeTick++;
  4432  043E  0AF0               	incf	_timeTick,f
  4433  043F  1903               	skipnz
  4434  0440  0AF1               	incf	_timeTick+1,f
  4435                           
  4436                           ;smartkey.C: 110: if ((mtState == 4) || (mtState == 3)) {
  4437  0441  0874               	movf	_mtState,w
  4438  0442  3A04               	xorlw	4
  4439  0443  1903               	skipnz
  4440  0444  2C49               	goto	i1l5524
  4441  0445  0874               	movf	_mtState,w
  4442  0446  3A03               	xorlw	3
  4443  0447  1D03               	skipz
  4444  0448  2C6C               	goto	i1l5538
  4445  0449                     i1l5524:	
  4446                           
  4447                           ;smartkey.C: 111: if (timeTick > cntTmp) {
  4448  0449  0871               	movf	_timeTick+1,w
  4449  044A  0242               	subwf	_cntTmp+1,w
  4450  044B  1D03               	skipz
  4451  044C  2C4F               	goto	u151_25
  4452  044D  0870               	movf	_timeTick,w
  4453  044E  0241               	subwf	_cntTmp,w
  4454  044F                     u151_25:	
  4455  044F  1803               	skipnc
  4456  0450  2C6C               	goto	i1l5538
  4457                           
  4458                           ;smartkey.C: 112: cntTmp = timeTick + 38;
  4459  0451  0871               	movf	_timeTick+1,w
  4460  0452  00C2               	movwf	_cntTmp+1
  4461  0453  0870               	movf	_timeTick,w
  4462  0454  00C1               	movwf	_cntTmp
  4463  0455  3026               	movlw	38
  4464  0456  07C1               	addwf	_cntTmp,f
  4465  0457  1803               	skipnc
  4466  0458  0AC2               	incf	_cntTmp+1,f
  4467                           
  4468                           ;smartkey.C: 113: if (cntTmp <= timeOut)
  4469  0459  0842               	movf	_cntTmp+1,w
  4470  045A  0244               	subwf	_timeOut+1,w
  4471  045B  1D03               	skipz
  4472  045C  2C5F               	goto	u152_25
  4473  045D  0841               	movf	_cntTmp,w
  4474  045E  0243               	subwf	_timeOut,w
  4475  045F                     u152_25:	
  4476                           
  4477                           ;smartkey.C: 114: {
  4478                           ;smartkey.C: 115: TMR2IE = 0;
  4479  045F  1683               	bsf	3,5	;RP0=1, select bank1
  4480  0460  1C03               	skipc
  4481  0461  2C6D               	goto	L15
  4482  0462  108C               	bcf	12,1
  4483                           
  4484                           ;smartkey.C: 116: if (PR2L == 20)
  4485  0463  0811               	movf	17,w	;volatile
  4486  0464  3A14               	xorlw	20
  4487  0465  1D03               	skipz
  4488  0466  2C69               	goto	i1l5534
  4489                           
  4490                           ;smartkey.C: 117: PR2L = 25;
  4491  0467  3019               	movlw	25
  4492  0468  2C6A               	goto	L13
  4493  0469                     i1l5534:	
  4494                           
  4495                           ;smartkey.C: 118: else
  4496                           ;smartkey.C: 119: PR2L = 20;
  4497  0469  3014               	movlw	20
  4498  046A                     L13:	
  4499  046A  0091               	movwf	17	;volatile
  4500                           
  4501                           ;smartkey.C: 120: TMR2IE = 1;
  4502  046B  148C               	bsf	12,1
  4503  046C                     i1l5538:	
  4504                           
  4505                           ;smartkey.C: 121: }
  4506                           ;smartkey.C: 122: }
  4507                           ;smartkey.C: 123: }
  4508                           ;smartkey.C: 124: }
  4509                           ;smartkey.C: 127: if (TMR2IE && TMR2IF)
  4510  046C  1683               	bsf	3,5	;RP0=1, select bank1
  4511  046D                     L15:	
  4512  046D  1C8C               	btfss	12,1
  4513  046E  2C75               	goto	i1l846
  4514  046F  1283               	bcf	3,5	;RP0=0, select bank0
  4515  0470  1C8C               	btfss	12,1
  4516  0471  2C75               	goto	i1l846
  4517  0472  3008               	movlw	8
  4518                           
  4519                           ;smartkey.C: 128: {
  4520                           ;smartkey.C: 129: TMR2IF = 0;
  4521  0473  108C               	bcf	12,1
  4522                           
  4523                           ;smartkey.C: 130: RA3 = ~ RA3;
  4524  0474  0685               	xorwf	5,f
  4525  0475                     i1l846:	
  4526  0475  0878               	movf	??_ISR+1,w
  4527  0476  008A               	movwf	10
  4528  0477  0E77               	swapf	??_ISR^(0+-128),w
  4529  0478  0083               	movwf	3
  4530  0479  0EFE               	swapf	126,f
  4531  047A  0E7E               	swapf	126,w
  4532  047B  0009               	retfie
  4533  047C                     __end_of_ISR:	
  4534                           
  4535                           	psect	intentry
  4536  0004                     __pintentry:	
  4537                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4538                           
  4539  0004                     interrupt_function:	
  4540  007E                     saved_w	set	btemp
  4541  0004  00FE               	movwf	btemp
  4542  0005  0E03               	swapf	3,w
  4543  0006  00F7               	movwf	??_ISR
  4544  0007  080A               	movf	10,w
  4545  0008  00F8               	movwf	??_ISR+1
  4546  0009  2BF6               	ljmp	_ISR
  4547                           
  4548                           	psect	text898
  4549  0626                     __ptext898:	
  4550 ;; =============== function _ISR ends ============
  4551                           
  4552                           
  4553 ;; *************** function i1_WRITE_EEPROM *****************
  4554 ;; Defined at:
  4555 ;;		line 172 in file "smartkey.C"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  WRITE_EEPROM    1    wreg     unsigned char 
  4558 ;;  WRITE_EEPROM    1    0[COMMON] unsigned char 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  WRITE_EEPROM    1    1[COMMON] unsigned char 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;		None               void
  4563 ;; Registers used:
  4564 ;;		wreg
  4565 ;; Tracked objects:
  4566 ;;		On entry : 20/20
  4567 ;;		On exit  : 20/20
  4568 ;;		Unchanged: FFE00/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1
  4570 ;;      Params:         1       0       0
  4571 ;;      Locals:         1       0       0
  4572 ;;      Temps:          0       0       0
  4573 ;;      Totals:         2       0       0
  4574 ;;Total ram usage:        2 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_ISR
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582  0626                     i1_WRITE_EEPROM:	
  4583                           
  4584                           ; Regs used in i1_WRITE_EEPROM: [wreg]
  4585                           ;i1WRITE_EEPROM@EEAddr stored from wreg
  4586  0626  00F6               	movwf	i1WRITE_EEPROM@EEAddr
  4587                           
  4588                           ;smartkey.C: 173: GIE = 0;
  4589  0627  138B               	bcf	11,7
  4590  0628                     i1l870:	
  4591                           ;smartkey.C: 174: while (GIE) asm("clrwdt");
  4592                           
  4593  0628  1F8B               	btfss	11,7
  4594  0629  2E2C               	goto	i1l5718
  4595  062A  0064               	clrwdt	;#
  4596  062B  2E28               	goto	i1l870
  4597  062C                     i1l5718:	
  4598                           
  4599                           ;smartkey.C: 175: EEADR = EEAddr;
  4600  062C  0876               	movf	i1WRITE_EEPROM@EEAddr,w
  4601  062D  1683               	bsf	3,5	;RP0=1, select bank1
  4602  062E  009B               	movwf	27	;volatile
  4603                           
  4604                           ;smartkey.C: 176: EEDAT = EEData;
  4605  062F  0875               	movf	i1WRITE_EEPROM@EEData,w
  4606  0630  009A               	movwf	26	;volatile
  4607  0631  3034               	movlw	52
  4608                           
  4609                           ;smartkey.C: 177: EEIF = 0;
  4610  0632  1283               	bcf	3,5	;RP0=0, select bank0
  4611  0633  138C               	bcf	12,7
  4612                           
  4613                           ;smartkey.C: 178: EECON1 = 0x34;
  4614  0634  1683               	bsf	3,5	;RP0=1, select bank1
  4615  0635  009C               	movwf	28	;volatile
  4616                           
  4617                           ;smartkey.C: 179: WR = 1;
  4618  0636  141D               	bsf	29,0
  4619  0637                     i1l873:	
  4620                           ;smartkey.C: 180: while (WR) asm("clrwdt");
  4621                           
  4622  0637  1683               	bsf	3,5	;RP0=1, select bank1
  4623  0638  1C1D               	btfss	29,0
  4624  0639  2E3C               	goto	i1l875
  4625  063A  0064               	clrwdt	;#
  4626  063B  2E37               	goto	i1l873
  4627  063C                     i1l875:	
  4628                           
  4629                           ;smartkey.C: 181: GIE = 1;
  4630  063C  178B               	bsf	11,7
  4631  063D  0008               	return
  4632  063E                     __end_ofi1_WRITE_EEPROM:	
  4633                           
  4634                           	psect	text899
  4635  06DB                     __ptext899:	
  4636 ;; =============== function i1_WRITE_EEPROM ends ============
  4637                           
  4638                           
  4639 ;; *************** function i1_READ_EEPROM *****************
  4640 ;; Defined at:
  4641 ;;		line 162 in file "smartkey.C"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  READ_EEPROM     1    wreg     unsigned char 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  READ_EEPROM     1    0[COMMON] unsigned char 
  4646 ;;  READ_EEPROM     1    1[COMMON] unsigned char 
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      unsigned char 
  4649 ;; Registers used:
  4650 ;;		wreg
  4651 ;; Tracked objects:
  4652 ;;		On entry : 20/0
  4653 ;;		On exit  : 20/20
  4654 ;;		Unchanged: FFFDF/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1
  4656 ;;      Params:         0       0       0
  4657 ;;      Locals:         2       0       0
  4658 ;;      Temps:          0       0       0
  4659 ;;      Totals:         2       0       0
  4660 ;;Total ram usage:        2 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_ISR
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668  06DB                     i1_READ_EEPROM:	
  4669                           
  4670                           ; Regs used in i1_READ_EEPROM: [wreg]
  4671                           ;i1READ_EEPROM@EEAddr stored from wreg
  4672  06DB  00F5               	movwf	i1READ_EEPROM@EEAddr
  4673                           
  4674                           ;smartkey.C: 163: unsigned char ReEepromData;
  4675                           ;smartkey.C: 164: EEADR = EEAddr;
  4676  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  4677  06DD  009B               	movwf	27	;volatile
  4678                           
  4679                           ;smartkey.C: 165: RD = 1;
  4680  06DE  141C               	bsf	28,0
  4681                           
  4682                           ;smartkey.C: 166: ReEepromData = EEDAT;
  4683  06DF  081A               	movf	26,w	;volatile
  4684  06E0  00F6               	movwf	i1READ_EEPROM@ReEepromData
  4685                           
  4686                           ;smartkey.C: 167: RD = 0;
  4687  06E1  101C               	bcf	28,0
  4688                           
  4689                           ;smartkey.C: 168: return ReEepromData;
  4690  06E2  0008               	return
  4691  06E3                     __end_ofi1_READ_EEPROM:	
  4692                           
  4693                           	psect	text900
  4694  0000                     __ptext900:	
  4695 ;; =============== function i1_READ_EEPROM ends ============
  4696                           
  4697  007E                     btemp	set	126	;btemp
  4698  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu May 28 10:35:30 2020

                        pc 0002                         _RD 04E0                         _WR 04E8  
             ___awdiv@sign 0025      __size_of_WRITE_EEPROM 001B                         fsr 0004  
                      _C1R 08CA                        _C2R 08D2                        l903 00C8  
                      l912 010D                        l922 0153                        l907 00D4  
                      l852 0000                        l925 0165                        l870 060D  
                      l855 0000                        l864 0000                        l960 0267  
                      l928 0191                        l873 061F                        l961 0253  
                      l858 0000                        l867 0000                        l875 0624  
                      l947 01E4                        l876 0000                        l957 027B  
                      l879 0000                        l977 02DF                        _GIE 005F  
                      _RA2 002A                        _RA3 002B                        _RC0 0038  
                      _RC1 0039                        _RA5 002D                        _RA6 002E  
                      _RA7 002F               ?_swI2C_Start 0075                        _HTS 047A  
                      _ISR 03F6                        _SR0 0CF6                        _SR1 0CF7  
                      _VR0 08C0                        _VR1 08C1                        _VR2 08C2  
                      _VR3 08C3                        _VRR 08C5                        fsr0 0004  
                      indf 0000             _swI2C_ReadByte 04C1                       S7266 06E9  
                     ?_ISR 0075                       l1000 03DB                       _C1OE 08CD  
                     _C2OE 08D5                       l1800 0000                       _C1ON 08CF  
                     l2610 04CD                       l1803 0000                       l2612 0000  
                     _C2ON 08D7                       l2605 050A                       l1806 0000  
                     l2607 0000                       l4244 0000                       l7000 0000  
                     l2593 0000                       l1794 06D7                       l7010 026A  
                     l7002 0000                       l2596 0000                       l7012 0000  
                     l7004 0000                       l7020 027C                       l1797 0000  
                     l7030 0000                       l2599 0000                       l7200 0000  
                     l7112 0000                       l7104 0315                       l7040 0000  
                     l7032 0294                       l7202 0000                       l7130 0000  
                     l7122 0000                       l7106 0000                       l7042 0000  
                     l7034 0000                       l7026 028A                       l7018 0273  
                     l6420 0000                       l6500 0000                       l7140 0000  
                     l7124 0000                       l7132 0354                       l7108 0000  
                     l7204 03D5                       l7060 0000                       l7052 02B8  
                     l7044 02A7                       l7036 0000                       l7028 0000  
                     l6430 0000                       l6510 0000                       l6502 0000  
                     l7214 03ED                       l7150 0000                       l7126 0000  
                     l7118 0000                       l7062 02CE                       l7046 0000  
                     l7038 0000                       l6416 0000                       l6424 0000  
                     l6432 0000                       l6440 0000                       l6520 0000  
                     l6512 0000                       l6504 0000                       l6600 0000  
                     l7208 03DE                       l7160 0000                       l7144 0000  
                     l7128 0000                       l7080 0000                       l7056 0000  
                     l7048 02B0                       l6418 0000                       l6426 0611  
                     l6434 0687                       l6442 0000                       l6530 0000  
                     l6522 0000                       l6514 0000                       l6506 0000  
                     l6602 0000                       l6610 0000                       l7170 0000  
                     l7154 0000                       l7138 0000                       l7082 0000  
                     l7066 0000                       l7058 0000                       l6428 0000  
                     l6436 0000                       l6444 0000                       l6460 056C  
                     l6532 0000                       l6524 0000                       l6516 0000  
                     l6508 0000                       l6540 0000                       l6604 0000  
                     l6612 0000                       l6620 0000                       l7180 03AC  
                     l7156 0000                       l7164 0390                       l7084 0000  
                     l7068 0000                       l7076 02E6                       l6438 0000  
                     l6446 0000                       l6526 0000                       l6518 0000  
                     l6550 0000                       l6542 0486                       l6534 0000  
                     l6606 0000                       l6614 0000                       l6630 0000  
                     l6622 0000                       l7174 0000                       l7182 03AD  
                     l7158 0000                       l7086 0000                       l7078 0000  
                     l7094 02F4                       l6528 0000                       l6560 0000  
                     l6536 0000                       l6608 0000                       l6616 0000  
                     l6640 0000                       l6632 0000                       l6624 0000  
                     l7184 0000                       l7176 0000                       l7096 0302  
                     l6800 0000                       l6490 0000                       l6570 04B4  
                     l6546 0000                       l6642 0000                       l6634 0000  
                     l6618 0000                       l6650 0000                       l6730 0000  
                     l6714 0000                       l7178 0000                       l7186 03B2  
                     l6810 0088                       l6802 0000                       l6492 0000  
                     l6484 0000                       l6572 0000                       l6564 0000  
                     l6548 048F                       l6580 0000                       l6636 0000  
                     l6628 0000                       l6660 0000                       l6652 0000  
                     l6708 05B2                       l6732 0000                       l6724 0000  
                     l6820 0000                       l6812 0000                       l6804 0000  
                     l6486 0000                       l6494 0000                       l6574 04BC  
                     l6558 049D                       l6582 0000                       l6590 063F  
                     l6638 0000                       l6670 04F1                       l6662 0000  
                     l6654 0000                       l6646 0000                       l6726 058C  
                     l7198 0000                       l6910 0000                       l6902 0000  
                     l6830 0000                       l6806 0081                       l6750 0000  
                     l6488 0000                       l6496 0000                       l6568 0000  
                     l6584 0000                       l6592 0000                       l6672 0000  
                     l6664 0000                       l6648 0000                       l6912 01AA  
                     l6904 019F                       l6824 0000                       l6840 00D6  
                     l6808 0000                       l6760 0000                       l6752 0000  
                     l6498 0000                       l6586 0000                       l6578 0000  
                     l6594 0000                       l6674 0000                       l6666 0000  
                     l6658 0000                       l6682 0000                       l6930 0000  
                     l6922 01B4                       l6906 0000                       l6842 00DA  
                     l6834 0000                       l6818 0099                       l6770 0000  
                     l6762 0000                       l6754 0000                       l6588 0000  
                     l6596 0000                       l6676 0000                       l6668 0000  
                     l6692 0000                       l6940 0000                       l6908 0000  
                     l6844 0000                       l6828 0000                       l6772 0000  
                     l6764 0000                       l6756 0000                       l6598 0000  
                     l6678 0000                       l6950 0000                       l6942 0000  
                     l6934 01CD                       l6926 01BC                       l6870 0154  
                     l6862 0147                       l6854 00FF                       l6838 00A3  
                     l6790 0000                       l6782 0000                       l6774 0000  
                     l6766 0000                       l6758 0000                       l6696 05CD  
                     l6952 0000                       l6960 0201                       l6872 015E  
                     l6864 014C                       l6856 0000                       l6848 00E0  
                     l6792 0066                       l6784 0053                       l6776 0000  
                     l6768 0000                       l6970 0000                       l6962 0000  
                     l6938 0000                       l6946 01DD                       l6874 0000  
                     l6866 0000                       l6858 011B                       l6882 0170  
                     l6786 0000                       l6778 0000                       l6980 0225  
                     l6956 01F3                       l6948 0000                       l6892 0000  
                     l6884 017B                       l6796 0000                       l6990 0000  
                     l6982 0000                       l6974 0214                       l6966 0204  
                     l6958 0000                       l6894 0000                       l6886 0000  
                     l6878 0166                       l6798 0000                       l6976 0000  
                     l6896 0000                       l6888 0000                       l6978 0000  
                     l6986 022E                       l6988 0239                       l6998 0000  
                     _EEIF 0067                       _ANS0 08F0                       _ANS1 08F1  
                     _ANS2 08F2                       _ANS3 08F3                       _ANS4 08F4  
                     _ANS5 08F5                       _ANS6 08F6                       _ANS7 08F7  
                     _ANS8 08F8                       _ANS9 08F9                       _T0IE 005D  
                     _T0IF 005A                       _T0ON 00FB                       _IOCB 0116  
                     _PAIE 005B                       _PAIF 0058                       u3405 0309  
                     _PIE1 008C                       u2800 050F                       u2635 068D  
                     u3355 0287                       u2814 0511                       u2665 0557  
                     u2755 04A6                       u3707 0106                       _PEIE 005E  
                     u3717 04C9                       _INTE 005C                       _INTF 0059  
                     u3807 052F                       u3727 04D0                       u2935 0599  
                     u3647 0021                       u3817 06B1                       u3737 04DF  
                     u3657 003A                       u3907 05ED                       u3827 06B7  
                     u3747 04F4                       u3667 004E                       _PR2H 0092  
                     u3837 066E                       u3757 04FA                       u3677 0061  
                     u3847 0674                       u3767 0506                       u3687 00AC  
                     _PR2L 0091                       u3857 067A                       u3777 0516  
                     u3697 00BF                       _PIR1 000C                       u3867 05D7  
                     u3787 051C                       u3877 05DE                       u3797 0529  
                     u3887 05E3                       u3897 05E8                       _TMR0 0001  
                     _STRA 0CE8                       _STRB 0CE9                       _STRC 0CEA  
                     _STRD 0CEB                       _WREN 0C62                       _WPUA 0095  
                     _WPUB 0115                       _WPUC 0093               ?_READ_EEPROM 0075  
                     _beep 063E            __end_of_AccRead 05B0                       _main 000B  
                     btemp 007E                       start 000A               _WRITE_EEPROM 060B  
                    ??_ISR 0077                      _C1CH0 08C8                      _C1CH1 08C9  
                    _C2CH0 08D0                      _C2CH1 08D1                      ?_beep 0024  
                    _C1SEN 0CF5                      _C2REN 0CF4                      _C1POL 08CC  
                    _C2POL 08D4                      _C1OUT 08CE                      _C2OUT 08D6  
                    ?_main 0075            __end_of___awdiv 04C1                      _EEADR 009B  
                    _EEDAT 009A                      _ANS10 08FA                      _ANS11 08FB  
                    _EEPGD 0C67     __end_of_swI2C_ReadByte 04FF                      _ANSEL 011E  
             AccWrite@rAdd 0026            ___awdiv@divisor 0020                      _IOCA5 04B5  
                    _IOCB4 08B4                      _IOCB5 08B5                      _IOCB6 08B6  
                    _IOCB7 08B7                      _T1GSS 08D9                      i1l825 041D  
                    i1l836 043D                      i1l828 041A                      i1l870 0628  
                    i1l846 0475                      i1l873 0637                      i1l867 0000  
                    i1l875 063C                      i1l876 0000            ___awdiv@counter 0024  
                    _MSCON 001B            __end_of_beepOff 06E9                      _VP6EN 08C4  
                    _TMR2H 0013                      _TMR2L 0011                      _PSRCA 0088  
                    _PSRCC 0094                      _PORTA 0005                      _PORTC 0007  
                    _SRCON 019E                      _PULSR 0CF2                      _PULSS 0CF3  
                    _TRISA 0085                      _TRISC 0087                      _VRCON 0118  
                    _WPUB4 08AC                      _WPUB5 08AD                      _WPUB6 08AE  
                    _WPUB7 08AF                      _compe 053C           __end_of_AccWrite 05D1  
                    pclath 000A                      status 0003                      wtemp0 007E  
          _swI2C_WriteByte 04FF       __size_of_delay_x10ms 0013             i1_WRITE_EEPROM 0626  
             __end_of_beep 0654               __end_of_main 03F6                     ??_beep 0025  
                   ??_main 002A            ?_swI2C_ReadByte 0075                     ISR@tmp 0079  
                   _C1VREN 08C7                     _C2VREN 08C6                     _C2SYNC 08D8  
                   ?_compe 0020                  ??_AccRead 0026                     _EEADRH 010F  
                   _EEDATH 010E                     _EECON1 009C           ___awdiv@dividend 0022  
                   _ANSELH 011F                     _MC1OUT 08DF                     _MC2OUT 08DE  
                   _T0CON0 001F                     _T2CON0 0012                     i1l5500 0000  
                   i1l5520 0000                     i1l5504 0000                     i1l5530 0000  
                   i1l5514 0439                     i1l5524 0449                     i1l5508 0000  
                   i1l5460 0000                     i1l5710 0000                     i1l5534 0469  
                   i1l5518 043E                     i1l5712 0000                     i1l5720 0000  
                   i1l5544 0000                     i1l5722 0000                     i1l5538 046C  
                   i1l5474 0000                     i1l5466 0000                     i1l5458 0000  
                   i1l5708 0000                     i1l5716 0000                     i1l5476 0404  
                   i1l5468 0000                     i1l5718 062C                     i1l5494 0000  
                   i1l5478 0405                     i1l5496 0000                     i1l5488 0000  
                   _INTEDG 040E                     u151_25 044F                     u152_25 045F  
                   _INTCON 000B                     _OSCCON 008F                     _TMR2IE 0461  
                   _TMR2IF 0061                     _PSINKA 0097                     _PSINKC 009F  
                   _OPTION 0081                     _TMR2ON 0092     __end_ofi1_WRITE_EEPROM 063E  
          swI2C_ReadByte@i 0023                     _beepOn 06EE                  ??___awdiv 0024  
                   _cntCyc 0073                     _cntOff 0045                     _cntTmp 0041  
                ??_beepOff 0020           ___awdiv@quotient 0026           __end_of_int_init 060B  
                   compe@a 0024                     compe@b 0020     __size_ofi1_READ_EEPROM 0008  
         __end_of_setState 06D3                     saved_w 007E       __size_of_swI2C_Start 0013  
  __end_of_swI2C_WriteByte 053C           __end_of_sys_init 06DB       i1WRITE_EEPROM@EEAddr 0076  
     i1WRITE_EEPROM@EEData 0075       __size_of_READ_EEPROM 000D            ?i1_WRITE_EEPROM 0075  
           __pcstackCOMMON 0075              __end_of_compe 0579                  ?_AccWrite 0023  
                  ??_compe 0022                 __pbssBANK0 0041         __size_of_gpio_init 0016  
  READ_EEPROM@ReEepromData 0021              i1_READ_EEPROM 06DB                 __pmaintext 000B  
                  ?_beepOn 0075                 __pintentry 0004  i1READ_EEPROM@ReEepromData 0076  
                  _CM1CON0 0119                    _CM2CON0 011A                    _CM2CON1 011B  
               ??_AccWrite 0025                    _AccRead 0579                    _PSTRCON 019D  
               _swI2C_Init 05D1                    _STRSYNC 0CEC                 _swI2C_Stop 06AD  
         ?_swI2C_WriteByte 0075             ?i1_READ_EEPROM 0075                  AccWrite@i 0027  
                ?_int_init 0075                setState@stt 0022                  ?_setState 0020  
               _mtOldState 0046                    ___awdiv 047C           ??_swI2C_ReadByte 0020  
          __size_of_beepOn 0005                    _beepOff 06E3             main@lostDetect 0030  
                  beep@rep 0024          __end_of_gpio_init 066A                  ?_sys_init 0075  
             __size_of_ISR 0086                    _mtState 0074                    _timeOut 0043  
                  compe@dt 0021                    main@buf 0033       end_of_initialization 06AB  
            ??_delay_x10ms 0022                 ??_int_init 0020                 ??_setState 0022  
              AccRead@rAdd 0028                 _timer_init 0690                 ??_sys_init 0020  
              ?_swI2C_Init 0075            ??i1_READ_EEPROM 0075                ?_swI2C_Stop 0075  
               main@acXOld 0032                 main@acYOld 0031           ??i1_WRITE_EEPROM 0076  
               main@acXsum 003B                 main@acYsum 0039                 main@isFall 002F  
       WRITE_EEPROM@EEAddr 0021         WRITE_EEPROM@EEData 0020                 main@isWait 002D  
      __end_of_delay_x10ms 0690                AccWrite@dat 0023                AccWrite@len 0024  
           __end_of_beepOn 06F3              ??_swI2C_Start 0020          __size_of_AccWrite 0021  
      start_initialization 06A0                __end_of_ISR 047C              setState@_tOut 0020  
                _RegStatus 0072              ??_READ_EEPROM 0020              ?_WRITE_EEPROM 0020  
                 ??_beepOn 0020          READ_EEPROM@EEAddr 0020        __size_of_swI2C_Init 001F  
      __size_of_swI2C_Stop 000D                ?_timer_init 0075                __pbssCOMMON 0070  
            __pcstackBANK0 0020                   ?_AccRead 0024        __end_of_swI2C_Start 067D  
              _delay_x10ms 067D             ??_WRITE_EEPROM 0021          __size_of_int_init 001B  
      __end_of_READ_EEPROM 06C7           swI2C_WriteByte@i 0022                   ?___awdiv 0020  
        __size_of_setState 000C                  __ptext900 0000                  __ptext880 04FF  
                __ptext881 06AD                  __ptext890 053C                  __ptext882 066A  
                __ptext891 06C7                  __ptext883 05D1                  __ptext892 06EE  
                __ptext884 06D3                  __ptext876 0000                  __ptext893 06E3  
                __ptext885 063E                  __ptext877 0579                  __ptext894 067D  
                __ptext886 047C                  __ptext878 05B0                  __ptext895 060B  
                __ptext887 05F0                  __ptext879 04C1                  __ptext896 06BA  
                __ptext888 0690                  __ptext897 03F6                  __ptext889 0654  
                __ptext898 0626                  __ptext899 06DB                  beep@delay 0025  
                 ?_beepOff 0075                   AccRead@i 0029         swI2C_WriteByte@dat 0021  
                __pswtext1 06E9          __size_of_sys_init 0008                  _gpio_init 0654  
           __size_of_compe 003D          interrupt_function 0004        __size_of_timer_init 0010  
 __size_of_swI2C_WriteByte 003D                 AccRead@dat 0024                 AccRead@len 0025  
             delay_x10ms@t 0020                   _AccWrite 05B0                _swI2C_Start 066A  
                main@tmp16 003E                 ?_gpio_init 0075               ??_swI2C_Init 0020  
         __size_of_AccRead 0037               ??_swI2C_Stop 0020                _READ_EEPROM 06BA  
        swI2C_ReadByte@Ack 0021          swI2C_ReadByte@dat 0022           __size_of___awdiv 0045  
         __size_of_beepOff 0006         __end_of_swI2C_Init 05F0         __end_of_swI2C_Stop 06BA  
     __end_of_WRITE_EEPROM 0626    __size_of_swI2C_ReadByte 003E      __end_ofi1_READ_EEPROM 06E3  
            __size_of_beep 0016              __size_of_main 03EB                   _int_init 05F0  
                 _setState 06C7                   _timeTick 0070                   main@isSw 003D  
                 main@tmp8 0040          ??_swI2C_WriteByte 0020               ??_timer_init 0020  
                 _sys_init 06D3                ??_gpio_init 0020                   intlevel1 0000  
             ?_delay_x10ms 0020         __end_of_timer_init 06A0    __size_ofi1_WRITE_EEPROM 0018  
      i1READ_EEPROM@EEAddr 0075             delay_x10ms@set 0022  
