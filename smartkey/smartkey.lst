

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Mar 20 13:44:42 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text860,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	text861,local,class=CODE,delta=2
    13                           	psect	text862,local,class=CODE,delta=2
    14                           	psect	text863,local,class=CODE,delta=2
    15                           	psect	text864,local,class=CODE,delta=2
    16                           	psect	text865,local,class=CODE,delta=2
    17                           	psect	text866,local,class=CODE,delta=2
    18                           	psect	text867,local,class=CODE,delta=2
    19                           	psect	text868,local,class=CODE,delta=2
    20                           	psect	text869,local,class=CODE,delta=2
    21                           	psect	text870,local,class=CODE,delta=2
    22                           	psect	text871,local,class=CODE,delta=2
    23                           	psect	text872,local,class=CODE,delta=2
    24                           	psect	text873,local,class=CODE,delta=2
    25                           	psect	text874,local,class=CODE,delta=2
    26                           	psect	text875,local,class=CODE,delta=2
    27                           	psect	text876,local,class=CODE,delta=2
    28                           	psect	text877,local,class=CODE,delta=2
    29                           	psect	text878,local,class=CODE,delta=2
    30                           	psect	text879,local,class=CODE,delta=2
    31                           	psect	text880,local,class=CODE,delta=2
    32                           	psect	text881,local,class=CODE,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text882,local,class=CODE,delta=2
    35                           	psect	text883,local,class=CODE,delta=2
    36                           	psect	text884,local,class=CODE,delta=2
    37                           	psect	pa_nodes,global,class=CODE,delta=2
    38                           	dabs	1,0x11E,1
    39                           	dabs	1,0x11F,1
    40                           	dabs	1,0x119,1
    41                           	dabs	1,0x11A,1
    42                           	dabs	1,0x11B,1
    43                           	dabs	1,0x10F,1
    44                           	dabs	1,0x10E,1
    45                           	dabs	1,0x116,1
    46                           	dabs	1,0x19D,1
    47                           	dabs	1,0x19E,1
    48                           	dabs	1,0x118,1
    49                           	dabs	1,0x115,1
    50                           	dabs	1,0x11E,1
    51                           	dabs	1,0x11E,1
    52                           	dabs	1,0x11F,1
    53                           	dabs	1,0x11F,1
    54                           	dabs	1,0x11E,1
    55                           	dabs	1,0x11E,1
    56                           	dabs	1,0x11E,1
    57                           	dabs	1,0x11E,1
    58                           	dabs	1,0x11E,1
    59                           	dabs	1,0x11E,1
    60                           	dabs	1,0x11F,1
    61                           	dabs	1,0x11F,1
    62                           	dabs	1,0x119,1
    63                           	dabs	1,0x119,1
    64                           	dabs	1,0x119,1
    65                           	dabs	1,0x119,1
    66                           	dabs	1,0x119,1
    67                           	dabs	1,0x119,1
    68                           	dabs	1,0x119,1
    69                           	dabs	1,0x19E,1
    70                           	dabs	1,0x118,1
    71                           	dabs	1,0x11A,1
    72                           	dabs	1,0x11A,1
    73                           	dabs	1,0x11A,1
    74                           	dabs	1,0x11A,1
    75                           	dabs	1,0x11A,1
    76                           	dabs	1,0x11A,1
    77                           	dabs	1,0x11A,1
    78                           	dabs	1,0x19E,1
    79                           	dabs	1,0x11B,1
    80                           	dabs	1,0x118,1
    81                           	dabs	1,0x18C,1
    82                           	dabs	1,0x116,1
    83                           	dabs	1,0x116,1
    84                           	dabs	1,0x116,1
    85                           	dabs	1,0x116,1
    86                           	dabs	1,0x11B,1
    87                           	dabs	1,0x11B,1
    88                           	dabs	1,0x19E,1
    89                           	dabs	1,0x19E,1
    90                           	dabs	1,0x19E,1
    91                           	dabs	1,0x19E,1
    92                           	dabs	1,0x19D,1
    93                           	dabs	1,0x19D,1
    94                           	dabs	1,0x19D,1
    95                           	dabs	1,0x19D,1
    96                           	dabs	1,0x19D,1
    97                           	dabs	1,0x11B,1
    98                           	dabs	1,0x118,1
    99                           	dabs	1,0x118,1
   100                           	dabs	1,0x118,1
   101                           	dabs	1,0x118,1
   102                           	dabs	1,0x118,1
   103                           	dabs	1,0x118,1
   104                           	dabs	1,0x115,1
   105                           	dabs	1,0x115,1
   106                           	dabs	1,0x115,1
   107                           	dabs	1,0x115,1
   108                           	dabs	1,0x18C,1
   109                           	dabs	1,0x7E,2
   110  000A                     
   111                           	psect	text860
   112  0000                     __ptext860:	
   113  011E                     _ANSEL	set	286	;_ANSEL
   114  011F                     _ANSELH	set	287	;_ANSELH
   115  0119                     _CM1CON0	set	281	;_CM1CON0
   116  011A                     _CM2CON0	set	282	;_CM2CON0
   117  011B                     _CM2CON1	set	283	;_CM2CON1
   118  010F                     _EEADRH	set	271	;_EEADRH
   119  010E                     _EEDATH	set	270	;_EEDATH
   120  0116                     _IOCB	set	278	;_IOCB
   121  019D                     _PSTRCON	set	413	;_PSTRCON
   122  019E                     _SRCON	set	414	;_SRCON
   123  0118                     _VRCON	set	280	;_VRCON
   124  0115                     _WPUB	set	277	;_WPUB
   125  08F0                     _ANS0	set	2288	;_ANS0
   126  08F1                     _ANS1	set	2289	;_ANS1
   127  08FA                     _ANS10	set	2298	;_ANS10
   128  08FB                     _ANS11	set	2299	;_ANS11
   129  08F2                     _ANS2	set	2290	;_ANS2
   130  08F3                     _ANS3	set	2291	;_ANS3
   131  08F4                     _ANS4	set	2292	;_ANS4
   132  08F5                     _ANS5	set	2293	;_ANS5
   133  08F6                     _ANS6	set	2294	;_ANS6
   134  08F7                     _ANS7	set	2295	;_ANS7
   135  08F8                     _ANS8	set	2296	;_ANS8
   136  08F9                     _ANS9	set	2297	;_ANS9
   137  08C8                     _C1CH0	set	2248	;_C1CH0
   138  08C9                     _C1CH1	set	2249	;_C1CH1
   139  08CD                     _C1OE	set	2253	;_C1OE
   140  08CF                     _C1ON	set	2255	;_C1ON
   141  08CE                     _C1OUT	set	2254	;_C1OUT
   142  08CC                     _C1POL	set	2252	;_C1POL
   143  08CA                     _C1R	set	2250	;_C1R
   144  0CF5                     _C1SEN	set	3317	;_C1SEN
   145  08C7                     _C1VREN	set	2247	;_C1VREN
   146  08D0                     _C2CH0	set	2256	;_C2CH0
   147  08D1                     _C2CH1	set	2257	;_C2CH1
   148  08D5                     _C2OE	set	2261	;_C2OE
   149  08D7                     _C2ON	set	2263	;_C2ON
   150  08D6                     _C2OUT	set	2262	;_C2OUT
   151  08D4                     _C2POL	set	2260	;_C2POL
   152  08D2                     _C2R	set	2258	;_C2R
   153  0CF4                     _C2REN	set	3316	;_C2REN
   154  08D8                     _C2SYNC	set	2264	;_C2SYNC
   155  08C6                     _C2VREN	set	2246	;_C2VREN
   156  0C67                     _EEPGD	set	3175	;_EEPGD
   157  08B4                     _IOCB4	set	2228	;_IOCB4
   158  08B5                     _IOCB5	set	2229	;_IOCB5
   159  08B6                     _IOCB6	set	2230	;_IOCB6
   160  08B7                     _IOCB7	set	2231	;_IOCB7
   161  08DF                     _MC1OUT	set	2271	;_MC1OUT
   162  08DE                     _MC2OUT	set	2270	;_MC2OUT
   163  0CF2                     _PULSR	set	3314	;_PULSR
   164  0CF3                     _PULSS	set	3315	;_PULSS
   165  0CF6                     _SR0	set	3318	;_SR0
   166  0CF7                     _SR1	set	3319	;_SR1
   167  0CE8                     _STRA	set	3304	;_STRA
   168  0CE9                     _STRB	set	3305	;_STRB
   169  0CEA                     _STRC	set	3306	;_STRC
   170  0CEB                     _STRD	set	3307	;_STRD
   171  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   172  08D9                     _T1GSS	set	2265	;_T1GSS
   173  08C4                     _VP6EN	set	2244	;_VP6EN
   174  08C0                     _VR0	set	2240	;_VR0
   175  08C1                     _VR1	set	2241	;_VR1
   176  08C2                     _VR2	set	2242	;_VR2
   177  08C3                     _VR3	set	2243	;_VR3
   178  08C5                     _VRR	set	2245	;_VRR
   179  08AC                     _WPUB4	set	2220	;_WPUB4
   180  08AD                     _WPUB5	set	2221	;_WPUB5
   181  08AE                     _WPUB6	set	2222	;_WPUB6
   182  08AF                     _WPUB7	set	2223	;_WPUB7
   183  0C62                     _WREN	set	3170	;_WREN
   184  000B                     _INTCON	set	11
   185  001B                     _MSCON	set	27
   186  000C                     _PIR1	set	12
   187  0005                     _PORTA	set	5
   188  0007                     _PORTC	set	7
   189  001F                     _T0CON0	set	31
   190  0012                     _T2CON0	set	18
   191  0001                     _TMR0	set	1
   192  0013                     _TMR2H	set	19
   193  0011                     _TMR2L	set	17
   194  0067                     _EEIF	set	103
   195  005F                     _GIE	set	95
   196  005C                     _INTE	set	92
   197  0059                     _INTF	set	89
   198  005B                     _PAIE	set	91
   199  0058                     _PAIF	set	88
   200  005E                     _PEIE	set	94
   201  002A                     _RA2	set	42
   202  002B                     _RA3	set	43
   203  002D                     _RA5	set	45
   204  002E                     _RA6	set	46
   205  002F                     _RA7	set	47
   206  0038                     _RC0	set	56
   207  0039                     _RC1	set	57
   208  005D                     _T0IE	set	93
   209  005A                     _T0IF	set	90
   210  00FB                     _T0ON	set	251
   211  0061                     _TMR2IF	set	97
   212  0092                     _TMR2ON	set	146
   213  009B                     _EEADR	set	155
   214  009C                     _EECON1	set	156
   215  009A                     _EEDAT	set	154
   216  0081                     _OPTION	set	129
   217  008F                     _OSCCON	set	143
   218  008C                     _PIE1	set	140
   219  0092                     _PR2H	set	146
   220  0091                     _PR2L	set	145
   221  0097                     _PSINKA	set	151
   222  009F                     _PSINKC	set	159
   223  0088                     _PSRCA	set	136
   224  0094                     _PSRCC	set	148
   225  0085                     _TRISA	set	133
   226  0087                     _TRISC	set	135
   227  0095                     _WPUA	set	149
   228  0093                     _WPUC	set	147
   229  047A                     _HTS	set	1146
   230  040E                     _INTEDG	set	1038
   231  04B5                     _IOCA5	set	1205
   232  04E0                     _RD	set	1248
   233  0461                     _TMR2IE	set	1121
   234  04E8                     _WR	set	1256
   235                           
   236                           	psect	cinit
   237  06A4                     start_initialization:	
   238                           
   239                           ; Clear objects allocated to COMMON
   240  06A4  01F0               	clrf	__pbssCOMMON& (0+127)
   241  06A5  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   242  06A6  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   243  06A7  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   244  06A8  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   245                           
   246                           ; Clear objects allocated to BANK0
   247  06A9  01C5               	clrf	__pbssBANK0& (0+127)
   248  06AA  01C6               	clrf	(__pbssBANK0+1)& (0+127)
   249  06AB  01C7               	clrf	(__pbssBANK0+2)& (0+127)
   250  06AC  01C8               	clrf	(__pbssBANK0+3)& (0+127)
   251  06AD  01C9               	clrf	(__pbssBANK0+4)& (0+127)
   252  06AE  01CA               	clrf	(__pbssBANK0+5)& (0+127)
   253  06AF  01CB               	clrf	(__pbssBANK0+6)& (0+127)
   254  06B0  01CC               	clrf	(__pbssBANK0+7)& (0+127)
   255  06B1                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  06B1  0183               	clrf	3
   259  06B2  280B               	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMMON
   262  0070                     __pbssCOMMON:	
   263  0070                     _timeTick:	
   264  0070                     	ds	2
   265  0072                     _cntCyc:	
   266  0072                     	ds	1
   267  0073                     _mode_chek:	
   268  0073                     	ds	1
   269  0074                     _mtState:	
   270  0074                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273  0045                     __pbssBANK0:	
   274  0045                     _cntTmp:	
   275  0045                     	ds	2
   276  0047                     _timeOut:	
   277  0047                     	ds	2
   278  0049                     _RegStatus:	
   279  0049                     	ds	1
   280  004A                     _cntOff:	
   281  004A                     	ds	1
   282  004B                     _lostDetect:	
   283  004B                     	ds	1
   284  004C                     _mtOldState:	
   285  004C                     	ds	1
   286                           
   287                           	psect	cstackCOMMON
   288  0075                     __pcstackCOMMON:	
   289  0075                     ?_sys_init:	
   290  0075                     ?_gpio_init:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0075                     ?_timer_init:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0075                     ?_int_init:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0075                     ?_swI2C_Init:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0075                     ?_ISR:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0075                     ?_beepOff:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0075                     ?_beepOn:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0075                     ?_main:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0075                     ?_swI2C_Start:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0075                     ?_swI2C_Stop:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0075                     ??i1_READ_EEPROM:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0075                     ?i1_WRITE_EEPROM:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0075                     ?_READ_EEPROM:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0075                     ?_swI2C_WriteByte:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0075                     ?_swI2C_ReadByte:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0075                     ?i1_READ_EEPROM:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0075                     i1READ_EEPROM@EEAddr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0075                     i1WRITE_EEPROM@EEData:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346  0075                     	ds	1
   347  0076                     ??i1_WRITE_EEPROM:	
   348  0076                     i1READ_EEPROM@ReEepromData:	
   349                           ; 0 bytes @ 0x1
   350                           
   351  0076                     i1WRITE_EEPROM@EEAddr:	
   352                           ; 1 bytes @ 0x1
   353                           
   354                           
   355                           ; 1 bytes @ 0x1
   356  0076                     	ds	1
   357  0077                     ??_ISR:	
   358                           
   359                           ; 0 bytes @ 0x2
   360  0077                     	ds	2
   361  0079                     ISR@tmp_1138:	
   362                           
   363                           ; 1 bytes @ 0x4
   364  0079                     	ds	1
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:	
   368  0020                     ??_READ_EEPROM:	
   369  0020                     ?_WRITE_EEPROM:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0020                     ??_sys_init:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0020                     ??_gpio_init:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0020                     ??_timer_init:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0020                     ??_int_init:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_swI2C_Init:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ?_delay_x10ms:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ??_beepOff:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_beepOn:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ?_setState:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_swI2C_Start:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ??_swI2C_Stop:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ??_swI2C_WriteByte:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ??_swI2C_ReadByte:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0020                     ?_compe:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0020                     ?___awdiv:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0020                     READ_EEPROM@EEAddr:	
   418                           ; 2 bytes @ 0x0
   419                           
   420  0020                     WRITE_EEPROM@EEData:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0020                     compe@b:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0020                     delay_x10ms@t:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0020                     setState@_tOut:	
   430                           ; 2 bytes @ 0x0
   431                           
   432  0020                     ___awdiv@divisor:	
   433                           ; 2 bytes @ 0x0
   434                           
   435                           
   436                           ; 2 bytes @ 0x0
   437  0020                     	ds	1
   438  0021                     ??_WRITE_EEPROM:	
   439  0021                     READ_EEPROM@ReEepromData:	
   440                           ; 0 bytes @ 0x1
   441                           
   442  0021                     WRITE_EEPROM@EEAddr:	
   443                           ; 1 bytes @ 0x1
   444                           
   445  0021                     compe@dt:	
   446                           ; 1 bytes @ 0x1
   447                           
   448  0021                     swI2C_WriteByte@dat:	
   449                           ; 1 bytes @ 0x1
   450                           
   451  0021                     swI2C_ReadByte@Ack:	
   452                           ; 1 bytes @ 0x1
   453                           
   454                           
   455                           ; 1 bytes @ 0x1
   456  0021                     	ds	1
   457  0022                     ??_delay_x10ms:	
   458  0022                     ??_setState:	
   459                           ; 0 bytes @ 0x2
   460                           
   461  0022                     ??_compe:	
   462                           ; 0 bytes @ 0x2
   463                           
   464  0022                     setState@stt:	
   465                           ; 0 bytes @ 0x2
   466                           
   467  0022                     swI2C_WriteByte@i:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0022                     swI2C_ReadByte@dat:	
   471                           ; 1 bytes @ 0x2
   472                           
   473  0022                     delay_x10ms@set:	
   474                           ; 1 bytes @ 0x2
   475                           
   476  0022                     ___awdiv@dividend:	
   477                           ; 2 bytes @ 0x2
   478                           
   479                           
   480                           ; 2 bytes @ 0x2
   481  0022                     	ds	1
   482  0023                     ?_AccWrite:	
   483  0023                     swI2C_ReadByte@i:	
   484                           ; 1 bytes @ 0x3
   485                           
   486  0023                     AccWrite@dat:	
   487                           ; 1 bytes @ 0x3
   488                           
   489                           
   490                           ; 2 bytes @ 0x3
   491  0023                     	ds	1
   492  0024                     ?_beep:	
   493  0024                     ??___awdiv:	
   494                           ; 0 bytes @ 0x4
   495                           
   496  0024                     ?_AccRead:	
   497                           ; 0 bytes @ 0x4
   498                           
   499  0024                     beep@rep:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  0024                     ___awdiv@counter:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0024                     AccRead@dat:	
   506                           ; 1 bytes @ 0x4
   507                           
   508                           
   509                           ; 2 bytes @ 0x4
   510  0024                     	ds	1
   511  0025                     ??_beep:	
   512  0025                     beep@delay:	
   513                           ; 0 bytes @ 0x5
   514                           
   515  0025                     AccWrite@len:	
   516                           ; 1 bytes @ 0x5
   517                           
   518  0025                     ___awdiv@sign:	
   519                           ; 1 bytes @ 0x5
   520                           
   521                           
   522                           ; 1 bytes @ 0x5
   523  0025                     	ds	1
   524  0026                     ??_AccWrite:	
   525  0026                     AccRead@len:	
   526                           ; 0 bytes @ 0x6
   527                           
   528  0026                     ___awdiv@quotient:	
   529                           ; 1 bytes @ 0x6
   530                           
   531                           
   532                           ; 2 bytes @ 0x6
   533  0026                     	ds	1
   534  0027                     ??_AccRead:	
   535  0027                     compe@a:	
   536                           ; 0 bytes @ 0x7
   537                           
   538                           
   539                           ; 1 bytes @ 0x7
   540  0027                     	ds	1
   541  0028                     AccWrite@rAdd:	
   542                           
   543                           ; 1 bytes @ 0x8
   544  0028                     	ds	1
   545  0029                     AccWrite@i:	
   546                           
   547                           ; 1 bytes @ 0x9
   548  0029                     	ds	1
   549  002A                     AccRead@rAdd:	
   550                           
   551                           ; 1 bytes @ 0xA
   552  002A                     	ds	1
   553  002B                     AccRead@i:	
   554                           
   555                           ; 1 bytes @ 0xB
   556  002B                     	ds	1
   557  002C                     ??_main:	
   558                           
   559                           ; 0 bytes @ 0xC
   560  002C                     	ds	3
   561  002F                     main@vibrateOn:	
   562                           
   563                           ; 1 bytes @ 0xF
   564  002F                     	ds	1
   565  0030                     main@isWait:	
   566                           
   567                           ; 2 bytes @ 0x10
   568  0030                     	ds	2
   569  0032                     main@isFall:	
   570                           
   571                           ; 1 bytes @ 0x12
   572  0032                     	ds	1
   573  0033                     main@acYOld:	
   574                           
   575                           ; 1 bytes @ 0x13
   576  0033                     	ds	1
   577  0034                     main@acXOld:	
   578                           
   579                           ; 1 bytes @ 0x14
   580  0034                     	ds	1
   581  0035                     main@mpuOk:	
   582                           
   583                           ; 1 bytes @ 0x15
   584  0035                     	ds	1
   585  0036                     main@acYsum:	
   586                           
   587                           ; 2 bytes @ 0x16
   588  0036                     	ds	2
   589  0038                     main@acXsum:	
   590                           
   591                           ; 2 bytes @ 0x18
   592  0038                     	ds	2
   593  003A                     main@buf:	
   594                           
   595                           ; 6 bytes @ 0x1A
   596  003A                     	ds	6
   597  0040                     main@reAlertOn:	
   598                           
   599                           ; 1 bytes @ 0x20
   600  0040                     	ds	1
   601  0041                     main@isSw:	
   602                           
   603                           ; 1 bytes @ 0x21
   604  0041                     	ds	1
   605  0042                     main@tmp16:	
   606                           
   607                           ; 2 bytes @ 0x22
   608  0042                     	ds	2
   609  0044                     main@tmp8:	
   610                           
   611                           ; 1 bytes @ 0x24
   612  0044                     	ds	1
   613                           
   614                           	psect	maintext
   615  000B                     __pmaintext:	
   616 ;;Data sizes: Strings 0, constant 0, data 0, bss 13, persistent 0 stack 0
   617 ;;Auto spaces:   Size  Autos    Used
   618 ;; COMMON          14      5      10
   619 ;; BANK0           80     37      45
   620 ;; BANK1           32      0       0
   621 ;;
   622 ;; Pointer list with targets:
   623 ;; ?___awdiv	int  size(1) Largest target is 0
   624 ;;
   625 ;; AccRead@dat	PTR unsigned char  size(2) Largest target is 256
   626 ;;		 -> RAM(DATA[256]), main@buf(BANK0[6]), 
   627 ;;
   628 ;; AccWrite@dat	PTR unsigned char  size(2) Largest target is 256
   629 ;;		 -> RAM(DATA[256]), 
   630 ;;
   631 ;;
   632 ;; Critical Paths under _main in COMMON
   633 ;;
   634 ;;   None.
   635 ;;
   636 ;; Critical Paths under _ISR in COMMON
   637 ;;
   638 ;;   _ISR->i1_READ_EEPROM
   639 ;;   _ISR->i1_WRITE_EEPROM
   640 ;;
   641 ;; Critical Paths under _main in BANK0
   642 ;;
   643 ;;   _main->_AccRead
   644 ;;   _AccRead->_swI2C_ReadByte
   645 ;;   _AccWrite->_swI2C_WriteByte
   646 ;;   _beep->_delay_x10ms
   647 ;;
   648 ;; Critical Paths under _ISR in BANK0
   649 ;;
   650 ;;   None.
   651 ;;
   652 ;; Critical Paths under _main in BANK1
   653 ;;
   654 ;;   None.
   655 ;;
   656 ;; Critical Paths under _ISR in BANK1
   657 ;;
   658 ;;   None.
   659 ;;
   660 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   661 ;;
   662 ;;
   663 ;;Call Graph Tables:
   664 ;;
   665 ;; ---------------------------------------------------------------------------------
   666 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   667 ;; ---------------------------------------------------------------------------------
   668 ;; (0) _main                                                26    26      0    4074
   669 ;;                                             12 BANK0     25    25      0
   670 ;;                           _sys_init
   671 ;;                          _gpio_init
   672 ;;                         _timer_init
   673 ;;                           _int_init
   674 ;;                         _swI2C_Init
   675 ;;                           _setState
   676 ;;                       _WRITE_EEPROM
   677 ;;                        _READ_EEPROM
   678 ;;                             _beepOn
   679 ;;                               _beep
   680 ;;                           _AccWrite
   681 ;;                            _AccRead
   682 ;;                            ___awdiv
   683 ;;                            _beepOff
   684 ;;                        _delay_x10ms
   685 ;;                              _compe
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (1) _AccRead                                              8     5      3     532
   688 ;;                                              4 BANK0      8     5      3
   689 ;;                        _swI2C_Start
   690 ;;                    _swI2C_WriteByte
   691 ;;                     _swI2C_ReadByte
   692 ;;                         _swI2C_Stop
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (1) _AccWrite                                             7     4      3     300
   695 ;;                                              3 BANK0      7     4      3
   696 ;;                        _swI2C_Start
   697 ;;                    _swI2C_WriteByte
   698 ;;                         _swI2C_Stop
   699 ;; ---------------------------------------------------------------------------------
   700 ;; (2) _swI2C_ReadByte                                       4     4      0     170
   701 ;;                                              0 BANK0      4     4      0
   702 ;; ---------------------------------------------------------------------------------
   703 ;; (2) _swI2C_WriteByte                                      3     3      0     139
   704 ;;                                              0 BANK0      3     3      0
   705 ;; ---------------------------------------------------------------------------------
   706 ;; (2) _swI2C_Stop                                           1     1      0       0
   707 ;;                                              0 BANK0      1     1      0
   708 ;; ---------------------------------------------------------------------------------
   709 ;; (2) _swI2C_Start                                          1     1      0       0
   710 ;;                                              0 BANK0      1     1      0
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (1) _swI2C_Init                                           1     1      0       0
   713 ;;                                              0 BANK0      1     1      0
   714 ;; ---------------------------------------------------------------------------------
   715 ;; (1) _sys_init                                             0     0      0       0
   716 ;; ---------------------------------------------------------------------------------
   717 ;; (1) _beep                                                 2     1      1     130
   718 ;;                                              4 BANK0      2     1      1
   719 ;;                        _delay_x10ms
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (1) ___awdiv                                              8     4      4     445
   722 ;;                                              0 BANK0      8     4      4
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (1) _int_init                                             1     1      0       0
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (1) _timer_init                                           0     0      0       0
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (1) _gpio_init                                            0     0      0       0
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (1) _compe                                                8     6      2     372
   731 ;;                                              0 BANK0      8     6      2
   732 ;; ---------------------------------------------------------------------------------
   733 ;; (1) _setState                                             3     1      2      62
   734 ;;                                              0 BANK0      3     1      2
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (1) _beepOn                                               0     0      0       0
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (1) _beepOff                                              0     0      0       0
   739 ;; ---------------------------------------------------------------------------------
   740 ;; (1) _delay_x10ms                                          4     2      2      68
   741 ;;                                              0 BANK0      4     2      2
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (1) _WRITE_EEPROM                                         2     1      1      62
   744 ;;                                              0 BANK0      2     1      1
   745 ;; ---------------------------------------------------------------------------------
   746 ;; (1) _READ_EEPROM                                          2     2      0      65
   747 ;;                                              0 BANK0      2     2      0
   748 ;; ---------------------------------------------------------------------------------
   749 ;; Estimated maximum stack depth 2
   750 ;; ---------------------------------------------------------------------------------
   751 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   752 ;; ---------------------------------------------------------------------------------
   753 ;; (3) _ISR                                                  4     4      0     317
   754 ;;                                              2 COMMON     3     3      0
   755 ;;                      i1_READ_EEPROM
   756 ;;                     i1_WRITE_EEPROM
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (4) i1_WRITE_EEPROM                                       2     1      1     146
   759 ;;                                              0 COMMON     2     1      1
   760 ;; ---------------------------------------------------------------------------------
   761 ;; (4) i1_READ_EEPROM                                        2     2      0     148
   762 ;;                                              0 COMMON     2     2      0
   763 ;; ---------------------------------------------------------------------------------
   764 ;; Estimated maximum stack depth 4
   765 ;; ---------------------------------------------------------------------------------
   766 ;; Call Graph Graphs:
   767 ;; _main (ROOT)
   768 ;;   _sys_init
   769 ;;   _gpio_init
   770 ;;   _timer_init
   771 ;;   _int_init
   772 ;;   _swI2C_Init
   773 ;;   _setState
   774 ;;   _WRITE_EEPROM
   775 ;;   _READ_EEPROM
   776 ;;   _beepOn
   777 ;;   _beep
   778 ;;     _delay_x10ms
   779 ;;   _AccWrite
   780 ;;     _swI2C_Start
   781 ;;     _swI2C_WriteByte
   782 ;;     _swI2C_Stop
   783 ;;   _AccRead
   784 ;;     _swI2C_Start
   785 ;;     _swI2C_WriteByte
   786 ;;     _swI2C_ReadByte
   787 ;;     _swI2C_Stop
   788 ;;   ___awdiv
   789 ;;   _beepOff
   790 ;;   _delay_x10ms
   791 ;;   _compe
   792 ;;
   793 ;; _ISR (ROOT)
   794 ;;   i1_READ_EEPROM
   795 ;;   i1_WRITE_EEPROM
   796 ;;
   797 ;; Address spaces:
   798 ;;Name               Size   Autos  Total    Cost      Usage
   799 ;;BITCOMMON            E      0       0       0        0.0%
   800 ;;EEDATA             100      0       0       0        0.0%
   801 ;;NULL                 0      0       0       0        0.0%
   802 ;;CODE                 0      0       0       0        0.0%
   803 ;;COMMON               E      5       A       1       71.4%
   804 ;;BITSFR0              0      0       0       1        0.0%
   805 ;;SFR0                 0      0       0       1        0.0%
   806 ;;BITSFR1              0      0       0       2        0.0%
   807 ;;SFR1                 0      0       0       2        0.0%
   808 ;;STACK                0      0       6       2        0.0%
   809 ;;BITBANK0            50      0       0       3        0.0%
   810 ;;BANK0               50     25      2D       4       56.3%
   811 ;;BANK1               20      0       0       5        0.0%
   812 ;;ABS                  0      0      37       6        0.0%
   813 ;;BITBANK1            20      0       0       7        0.0%
   814 ;;DATA                 0      0      3D       8        0.0%
   815                           
   816                           
   817 ;; *************** function _main *****************
   818 ;; Defined at:
   819 ;;		line 243 in file "smartkey.C"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  buf             6   26[BANK0 ] char [6]
   824 ;;  tmp16           2   34[BANK0 ] unsigned int 
   825 ;;  acXsum          2   24[BANK0 ] int 
   826 ;;  acYsum          2   22[BANK0 ] int 
   827 ;;  isWait          2   16[BANK0 ] unsigned int 
   828 ;;  tmp8            1   36[BANK0 ] unsigned char 
   829 ;;  isSw            1   33[BANK0 ] unsigned char 
   830 ;;  reAlertOn       1   32[BANK0 ] unsigned char 
   831 ;;  mpuOk           1   21[BANK0 ] unsigned char 
   832 ;;  acXOld          1   20[BANK0 ] char 
   833 ;;  acYOld          1   19[BANK0 ] char 
   834 ;;  isFall          1   18[BANK0 ] unsigned char 
   835 ;;  vibrateOn       1   15[BANK0 ] unsigned char 
   836 ;;  accSet          1    0        unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;		None               void
   839 ;; Registers used:
   840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   841 ;; Tracked objects:
   842 ;;		On entry : 17F/0
   843 ;;		On exit  : 20/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1
   846 ;;      Params:         0       0       0
   847 ;;      Locals:         0      22       0
   848 ;;      Temps:          0       3       0
   849 ;;      Totals:         0      25       0
   850 ;;Total ram usage:       25 bytes
   851 ;; Hardware stack levels required when called:    4
   852 ;; This function calls:
   853 ;;		_sys_init
   854 ;;		_gpio_init
   855 ;;		_timer_init
   856 ;;		_int_init
   857 ;;		_swI2C_Init
   858 ;;		_setState
   859 ;;		_WRITE_EEPROM
   860 ;;		_READ_EEPROM
   861 ;;		_beepOn
   862 ;;		_beep
   863 ;;		_AccWrite
   864 ;;		_AccRead
   865 ;;		___awdiv
   866 ;;		_beepOff
   867 ;;		_delay_x10ms
   868 ;;		_compe
   869 ;; This function is called by:
   870 ;;		Startup code after reset
   871 ;; This function uses a non-reentrant model
   872 ;;
   873  000B                     _main:	
   874                           
   875                           ;smartkey.C: 251: unsigned char reAlertOn=0,tmp8,isSw=0,isFall=0,mpuOk=0,vibrateOn=0,acc
      +                          Set=0;
   876                           
   877                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   878  000B  01C0               	clrf	main@reAlertOn
   879  000C  01C1               	clrf	main@isSw
   880  000D  01B2               	clrf	main@isFall
   881  000E  01AF               	clrf	main@vibrateOn
   882                           
   883                           ;smartkey.C: 252: unsigned int isWait =0;
   884  000F  01B0               	clrf	main@isWait
   885  0010  01B1               	clrf	main@isWait+1
   886                           
   887                           ;smartkey.C: 253: signed int acYsum=0,acXsum=0;
   888  0011  01B6               	clrf	main@acYsum
   889  0012  01B7               	clrf	main@acYsum+1
   890  0013  01B8               	clrf	main@acXsum
   891  0014  01B9               	clrf	main@acXsum+1
   892                           
   893                           ;smartkey.C: 254: unsigned int tmp16=0;
   894  0015  01C2               	clrf	main@tmp16
   895  0016  01C3               	clrf	main@tmp16+1
   896  0017  0064               	clrwdt	;#
   897                           
   898                           ;smartkey.C: 260: sys_init();
   899  0018  26D9               	fcall	_sys_init
   900                           
   901                           ;smartkey.C: 261: gpio_init();
   902  0019  2658               	fcall	_gpio_init
   903                           
   904                           ;smartkey.C: 262: timer_init();
   905  001A  2694               	fcall	_timer_init
   906                           
   907                           ;smartkey.C: 263: int_init();
   908  001B  25F4               	fcall	_int_init
   909                           
   910                           ;smartkey.C: 266: _delay((unsigned long)((100)*(4000000/4000.0)));
   911  001C  3082               	movlw	130
   912  001D  00AD               	movwf	??_main+1
   913  001E  30DD               	movlw	221
   914  001F  00AC               	movwf	??_main
   915  0020                     u3477:	
   916  0020  0BAC               	decfsz	??_main,f
   917  0021  2820               	goto	u3477
   918  0022  0BAD               	decfsz	??_main+1,f
   919  0023  2820               	goto	u3477
   920  0024  2825               	nop2
   921                           
   922                           ;smartkey.C: 270: PAIE = 1;
   923  0025  158B               	bsf	11,3
   924                           
   925                           ;smartkey.C: 272: RegStatus = 0;
   926  0026  1283               	bcf	3,5	;RP0=0, select bank0
   927  0027  01C9               	clrf	_RegStatus
   928                           
   929                           ;smartkey.C: 274: swI2C_Init();
   930  0028  25D5               	fcall	_swI2C_Init
   931  0029  3000               	movlw	0
   932                           
   933                           ;smartkey.C: 277: setState(0,0);
   934  002A  1283               	bcf	3,5	;RP0=0, select bank0
   935  002B  01A0               	clrf	?_setState
   936  002C  01A1               	clrf	?_setState+1
   937  002D  26CD               	fcall	_setState
   938                           
   939                           ;smartkey.C: 279: WRITE_EEPROM(0xFF,0xAA);
   940  002E  30AA               	movlw	170
   941  002F  00A0               	movwf	?_WRITE_EEPROM
   942  0030  30FF               	movlw	255
   943  0031  260F               	fcall	_WRITE_EEPROM
   944                           
   945                           ;smartkey.C: 280: WRITE_EEPROM(0xFF,0xAA);
   946  0032  30AA               	movlw	170
   947  0033  1283               	bcf	3,5	;RP0=0, select bank0
   948  0034  00A0               	movwf	?_WRITE_EEPROM
   949  0035  30FF               	movlw	255
   950  0036  260F               	fcall	_WRITE_EEPROM
   951                           
   952                           ;smartkey.C: 283: _delay((unsigned long)((200)*(4000000/4000.0)));
   953  0037  3002               	movlw	2
   954  0038  1283               	bcf	3,5	;RP0=0, select bank0
   955  0039  00AE               	movwf	??_main+2
   956  003A  3004               	movlw	4
   957  003B  00AD               	movwf	??_main+1
   958  003C  30BA               	movlw	186
   959  003D  00AC               	movwf	??_main
   960  003E                     u3487:	
   961  003E  0BAC               	decfsz	??_main,f
   962  003F  283E               	goto	u3487
   963  0040  0BAD               	decfsz	??_main+1,f
   964  0041  283E               	goto	u3487
   965  0042  0BAE               	decfsz	??_main+2,f
   966  0043  283E               	goto	u3487
   967  0044  0064               	clrwdt
   968                           
   969                           ;smartkey.C: 285: tmp8= READ_EEPROM(0x08);
   970  0045  3008               	movlw	8
   971  0046  26C0               	fcall	_READ_EEPROM
   972  0047  00C4               	movwf	main@tmp8
   973                           
   974                           ;smartkey.C: 286: if(tmp8==0xff) {WRITE_EEPROM(0x08,0);_delay((unsigned long)((2)*(40000
      +                          00/4000.0)));}
   975  0048  3AFF               	xorlw	255
   976  0049  1D03               	skipz
   977  004A  2858               	goto	l6702
   978  004B  3008               	movlw	8
   979  004C  01A0               	clrf	?_WRITE_EEPROM
   980  004D  260F               	fcall	_WRITE_EEPROM
   981  004E  3003               	movlw	3
   982  004F  1283               	bcf	3,5	;RP0=0, select bank0
   983  0050  00AD               	movwf	??_main+1
   984  0051  3097               	movlw	151
   985  0052  00AC               	movwf	??_main
   986  0053                     u3497:	
   987  0053  0BAC               	decfsz	??_main,f
   988  0054  2853               	goto	u3497
   989  0055  0BAD               	decfsz	??_main+1,f
   990  0056  2853               	goto	u3497
   991  0057  2858               	nop2
   992  0058                     l6702:	
   993                           
   994                           ;smartkey.C: 288: if(tmp8==0xcc){
   995  0058  1283               	bcf	3,5	;RP0=0, select bank0
   996  0059  0844               	movf	main@tmp8,w
   997  005A  3ACC               	xorlw	204
   998  005B  1D03               	skipz
   999  005C  2873               	goto	l6716
  1000  005D  3008               	movlw	8
  1001                           
  1002                           ;smartkey.C: 289: RegStatus &=~(0x20);
  1003  005E  12C9               	bcf	_RegStatus,5
  1004                           
  1005                           ;smartkey.C: 290: setState(3,1800);
  1006  005F  00A0               	movwf	?_setState
  1007  0060  3007               	movlw	7
  1008  0061  00A1               	movwf	?_setState+1
  1009  0062  3003               	movlw	3
  1010  0063  26CD               	fcall	_setState
  1011                           
  1012                           ;smartkey.C: 291: mtOldState = 1;
  1013  0064  01CC               	clrf	_mtOldState
  1014  0065  0ACC               	incf	_mtOldState,f
  1015                           
  1016                           ;smartkey.C: 292: cntTmp = timeTick+50;
  1017  0066  0871               	movf	_timeTick+1,w
  1018  0067  00C6               	movwf	_cntTmp+1
  1019  0068  0870               	movf	_timeTick,w
  1020  0069  00C5               	movwf	_cntTmp
  1021  006A  3032               	movlw	50
  1022  006B  07C5               	addwf	_cntTmp,f
  1023  006C  1803               	skipnc
  1024  006D  0AC6               	incf	_cntTmp+1,f
  1025                           
  1026                           ;smartkey.C: 293: PR2L =12;
  1027  006E  300C               	movlw	12
  1028  006F  1683               	bsf	3,5	;RP0=1, select bank1
  1029  0070  0091               	movwf	17	;volatile
  1030                           
  1031                           ;smartkey.C: 294: beepOn();
  1032  0071  26EE               	fcall	_beepOn
  1033                           
  1034                           ;smartkey.C: 295: } else {
  1035  0072  287A               	goto	l6720
  1036  0073                     l6716:	
  1037                           
  1038                           ;smartkey.C: 296: setState(2,400);
  1039  0073  3090               	movlw	144
  1040  0074  00A0               	movwf	?_setState
  1041  0075  3001               	movlw	1
  1042  0076  00A1               	movwf	?_setState+1
  1043  0077  3002               	movlw	2
  1044  0078  26CD               	fcall	_setState
  1045                           
  1046                           ;smartkey.C: 298: mtOldState = 0;
  1047  0079  01CC               	clrf	_mtOldState
  1048  007A                     l6720:	
  1049                           
  1050                           ;smartkey.C: 300: }
  1051                           ;smartkey.C: 303: tmp8 = READ_EEPROM(0x40);
  1052  007A  3040               	movlw	64
  1053  007B  26C0               	fcall	_READ_EEPROM
  1054  007C  00C4               	movwf	main@tmp8
  1055                           
  1056                           ;smartkey.C: 304: if(tmp8==8){
  1057  007D  3A08               	xorlw	8
  1058  007E  1D03               	skipz
  1059  007F  28A4               	goto	l6740
  1060                           
  1061                           ;smartkey.C: 305: tmp8= READ_EEPROM(0x41);
  1062  0080  3041               	movlw	65
  1063  0081  26C0               	fcall	_READ_EEPROM
  1064  0082  00C4               	movwf	main@tmp8
  1065  0083  301E               	movlw	30
  1066                           
  1067                           ;smartkey.C: 306: beep(30,1);
  1068  0084  01A4               	clrf	?_beep
  1069  0085  0AA4               	incf	?_beep,f
  1070  0086  2642               	fcall	_beep
  1071                           
  1072                           ;smartkey.C: 307: if((tmp8==1)||(tmp8==0xff)){
  1073  0087  0344               	decf	main@tmp8,w
  1074  0088  1903               	skipnz
  1075  0089  288E               	goto	l6732
  1076  008A  0844               	movf	main@tmp8,w
  1077  008B  3AFF               	xorlw	255
  1078  008C  1D03               	skipz
  1079  008D  2891               	goto	l6734
  1080  008E                     l6732:	
  1081  008E  3041               	movlw	65
  1082                           
  1083                           ;smartkey.C: 308: WRITE_EEPROM(0x41,0);
  1084  008F  01A0               	clrf	?_WRITE_EEPROM
  1085  0090  2894               	goto	L1
  1086  0091                     l6734:	
  1087                           ;smartkey.C: 309: }
  1088                           
  1089  0091  3041               	movlw	65
  1090                           
  1091                           ;smartkey.C: 310: else {
  1092                           ;smartkey.C: 311: WRITE_EEPROM(0x41,0x1);
  1093  0092  01A0               	clrf	?_WRITE_EEPROM
  1094  0093  0AA0               	incf	?_WRITE_EEPROM,f
  1095  0094                     L1:	
  1096  0094  260F               	fcall	_WRITE_EEPROM
  1097  0095  3040               	movlw	64
  1098                           
  1099                           ;smartkey.C: 313: }
  1100                           ;smartkey.C: 314: WRITE_EEPROM(0x40,0);
  1101  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0097  01A0               	clrf	?_WRITE_EEPROM
  1103  0098  260F               	fcall	_WRITE_EEPROM
  1104                           
  1105                           ;smartkey.C: 316: _delay((unsigned long)((100)*(4000000/4000.0)));
  1106  0099  3082               	movlw	130
  1107  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1108  009B  00AD               	movwf	??_main+1
  1109  009C  30DD               	movlw	221
  1110  009D  00AC               	movwf	??_main
  1111  009E                     u3507:	
  1112  009E  0BAC               	decfsz	??_main,f
  1113  009F  289E               	goto	u3507
  1114  00A0  0BAD               	decfsz	??_main+1,f
  1115  00A1  289E               	goto	u3507
  1116  00A2  28A3               	nop2
  1117                           
  1118                           ;smartkey.C: 317: } else if(tmp8==0xff) WRITE_EEPROM(0x40,0);
  1119  00A3  28AB               	goto	l6744
  1120  00A4                     l6740:	
  1121  00A4  0844               	movf	main@tmp8,w
  1122  00A5  3AFF               	xorlw	255
  1123  00A6  1D03               	skipz
  1124  00A7  28AB               	goto	l6744
  1125  00A8  3040               	movlw	64
  1126  00A9  01A0               	clrf	?_WRITE_EEPROM
  1127  00AA  260F               	fcall	_WRITE_EEPROM
  1128  00AB                     l6744:	
  1129                           
  1130                           ;smartkey.C: 320: tmp8 = READ_EEPROM(0x41);
  1131  00AB  3041               	movlw	65
  1132  00AC  26C0               	fcall	_READ_EEPROM
  1133  00AD  00C4               	movwf	main@tmp8
  1134                           
  1135                           ;smartkey.C: 321: if(tmp8==1){
  1136  00AE  0344               	decf	main@tmp8,w
  1137  00AF  1D03               	skipz
  1138  00B0  28CD               	goto	l6754
  1139                           
  1140                           ;smartkey.C: 322: RC0 =1;RC1 =1;
  1141  00B1  1407               	bsf	7,0
  1142  00B2  1487               	bsf	7,1
  1143  00B3                     l6750:	
  1144                           
  1145                           ;smartkey.C: 324: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1146  00B3  3006               	movlw	6
  1147  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1148  00B5  00AE               	movwf	??_main+2
  1149  00B6  3013               	movlw	19
  1150  00B7  00AD               	movwf	??_main+1
  1151  00B8  30B1               	movlw	177
  1152  00B9  00AC               	movwf	??_main
  1153  00BA                     u3517:	
  1154  00BA  0BAC               	decfsz	??_main,f
  1155  00BB  28BA               	goto	u3517
  1156  00BC  0BAD               	decfsz	??_main+1,f
  1157  00BD  28BA               	goto	u3517
  1158  00BE  0BAE               	decfsz	??_main+2,f
  1159  00BF  28BA               	goto	u3517
  1160  00C0  28C1               	nop2
  1161                           
  1162                           ;smartkey.C: 325: if(timeTick >300) WRITE_EEPROM(0x40,0);
  1163  00C1  3001               	movlw	1
  1164  00C2  0271               	subwf	_timeTick+1,w
  1165  00C3  302D               	movlw	45
  1166  00C4  1903               	skipnz
  1167  00C5  0270               	subwf	_timeTick,w
  1168  00C6  1C03               	skipc
  1169  00C7  28B3               	goto	l6750
  1170  00C8  3040               	movlw	64
  1171  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1172  00CA  01A0               	clrf	?_WRITE_EEPROM
  1173  00CB  260F               	fcall	_WRITE_EEPROM
  1174  00CC  28B3               	goto	l6750
  1175  00CD                     l6754:	
  1176                           
  1177                           ;smartkey.C: 326: }
  1178                           ;smartkey.C: 327: }
  1179                           ;smartkey.C: 330: buf[0] = 0x08;
  1180  00CD  3008               	movlw	8
  1181  00CE  00BA               	movwf	main@buf
  1182                           
  1183                           ;smartkey.C: 331: buf[1] = 0x4d;
  1184  00CF  304D               	movlw	77
  1185  00D0  00BB               	movwf	main@buf+1
  1186                           
  1187                           ;smartkey.C: 333: if(AccWrite(0x10,(unsigned char)buf,2)==0) {
  1188  00D1  303A               	movlw	main@buf& (0+255)
  1189  00D2  00AC               	movwf	??_main
  1190  00D3  01AD               	clrf	??_main+1
  1191  00D4  00A3               	movwf	?_AccWrite
  1192  00D5  082D               	movf	??_main+1,w
  1193  00D6  00A4               	movwf	?_AccWrite+1
  1194  00D7  3002               	movlw	2
  1195  00D8  00A5               	movwf	?_AccWrite+2
  1196  00D9  3010               	movlw	16
  1197  00DA  25AD               	fcall	_AccWrite
  1198  00DB  3800               	iorlw	0
  1199                           
  1200                           ;smartkey.C: 334: mpuOk =1;
  1201  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1202  00DD  1D03               	skipz
  1203  00DE  28E2               	goto	L7
  1204  00DF  01B5               	clrf	main@mpuOk
  1205  00E0  0AB5               	incf	main@mpuOk,f
  1206                           
  1207                           ;smartkey.C: 335: }
  1208  00E1  28E7               	goto	l6764
  1209  00E2                     L7:	
  1210                           ;smartkey.C: 336: else {
  1211                           ;smartkey.C: 337: mpuOk =0;
  1212                           
  1213  00E2  3002               	movlw	2
  1214  00E3  01B5               	clrf	main@mpuOk
  1215                           
  1216                           ;smartkey.C: 338: beep(10,2);
  1217  00E4  00A4               	movwf	?_beep
  1218  00E5  300A               	movlw	10
  1219  00E6  2642               	fcall	_beep
  1220  00E7                     l6764:	
  1221                           
  1222                           ;smartkey.C: 339: }
  1223                           ;smartkey.C: 345: tmp8= READ_EEPROM(0x40);
  1224  00E7  3040               	movlw	64
  1225  00E8  26C0               	fcall	_READ_EEPROM
  1226  00E9  00C4               	movwf	main@tmp8
  1227                           
  1228                           ;smartkey.C: 346: if(tmp8==6 && mpuOk ==1)
  1229  00EA  3A06               	xorlw	6
  1230  00EB  1D03               	skipz
  1231  00EC  299A               	goto	l6804
  1232  00ED  0B35               	decfsz	main@mpuOk,w
  1233  00EE  299A               	goto	l6804
  1234  00EF  3003               	movlw	3
  1235                           
  1236                           ;smartkey.C: 347: {
  1237                           ;smartkey.C: 348: tmp8=0; beep(10,3);
  1238  00F0  01C4               	clrf	main@tmp8
  1239  00F1  00A4               	movwf	?_beep
  1240  00F2  300A               	movlw	10
  1241  00F3  2642               	fcall	_beep
  1242                           
  1243                           ;smartkey.C: 349: while((RA2 )&&(tmp8<11))
  1244  00F4  2930               	goto	l6782
  1245  00F5                     l6774:	
  1246                           
  1247                           ;smartkey.C: 350: {
  1248                           ;smartkey.C: 351: if(AccRead(0x02,(unsigned char)buf,6)==0){
  1249  00F5  303A               	movlw	main@buf& (0+255)
  1250  00F6  00AC               	movwf	??_main
  1251  00F7  01AD               	clrf	??_main+1
  1252  00F8  00A4               	movwf	?_AccRead
  1253  00F9  082D               	movf	??_main+1,w
  1254  00FA  00A5               	movwf	?_AccRead+1
  1255  00FB  3006               	movlw	6
  1256  00FC  00A6               	movwf	?_AccRead+2
  1257  00FD  3002               	movlw	2
  1258  00FE  2572               	fcall	_AccRead
  1259  00FF  3800               	iorlw	0
  1260  0100  1D03               	skipz
  1261  0101  2922               	goto	l6780
  1262                           
  1263                           ;smartkey.C: 353: acXsum += buf[1];
  1264  0102  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0103  083B               	movf	main@buf+1,w
  1266  0104  00AC               	movwf	??_main
  1267  0105  01AD               	clrf	??_main+1
  1268  0106  1BAC               	btfsc	??_main,7
  1269  0107  03AD               	decf	??_main+1,f
  1270  0108  07B8               	addwf	main@acXsum,f
  1271  0109  1803               	skipnc
  1272  010A  0AB9               	incf	main@acXsum+1,f
  1273  010B  082D               	movf	??_main+1,w
  1274  010C  07B9               	addwf	main@acXsum+1,f
  1275                           
  1276                           ;smartkey.C: 354: acYsum += buf[3];
  1277  010D  083D               	movf	main@buf+3,w
  1278  010E  00AC               	movwf	??_main
  1279  010F  01AD               	clrf	??_main+1
  1280  0110  1BAC               	btfsc	??_main,7
  1281  0111  03AD               	decf	??_main+1,f
  1282  0112  07B6               	addwf	main@acYsum,f
  1283  0113  1803               	skipnc
  1284  0114  0AB7               	incf	main@acYsum+1,f
  1285  0115  082D               	movf	??_main+1,w
  1286  0116  07B7               	addwf	main@acYsum+1,f
  1287                           
  1288                           ;smartkey.C: 355: tmp16 = (signed int)tmp16 + buf[5];
  1289  0117  083F               	movf	main@buf+5,w
  1290  0118  00AC               	movwf	??_main
  1291  0119  01AD               	clrf	??_main+1
  1292  011A  1BAC               	btfsc	??_main,7
  1293  011B  03AD               	decf	??_main+1,f
  1294  011C  07C2               	addwf	main@tmp16,f
  1295  011D  1803               	skipnc
  1296  011E  0AC3               	incf	main@tmp16+1,f
  1297  011F  082D               	movf	??_main+1,w
  1298  0120  07C3               	addwf	main@tmp16+1,f
  1299                           
  1300                           ;smartkey.C: 356: tmp8++;
  1301  0121  0AC4               	incf	main@tmp8,f
  1302  0122                     l6780:	
  1303                           
  1304                           ;smartkey.C: 357: }
  1305                           ;smartkey.C: 358: _delay((unsigned long)((500)*(4000000/4000.0)));
  1306  0122  3003               	movlw	3
  1307  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0124  00AE               	movwf	??_main+2
  1309  0125  308A               	movlw	138
  1310  0126  00AD               	movwf	??_main+1
  1311  0127  3056               	movlw	86
  1312  0128  00AC               	movwf	??_main
  1313  0129                     u3527:	
  1314  0129  0BAC               	decfsz	??_main,f
  1315  012A  2929               	goto	u3527
  1316  012B  0BAD               	decfsz	??_main+1,f
  1317  012C  2929               	goto	u3527
  1318  012D  0BAE               	decfsz	??_main+2,f
  1319  012E  2929               	goto	u3527
  1320  012F  2930               	nop2
  1321  0130                     l6782:	
  1322  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0131  1D05               	btfss	5,2
  1324  0132  2937               	goto	l6786
  1325  0133  300B               	movlw	11
  1326  0134  0244               	subwf	main@tmp8,w
  1327  0135  1C03               	skipc
  1328  0136  28F5               	goto	l6774
  1329  0137                     l6786:	
  1330                           
  1331                           ;smartkey.C: 360: }
  1332                           ;smartkey.C: 362: if(tmp8==11){
  1333  0137  0844               	movf	main@tmp8,w
  1334  0138  3A0B               	xorlw	11
  1335  0139  1D03               	skipz
  1336  013A  2992               	goto	l6800
  1337                           
  1338                           ;smartkey.C: 363: acXsum =acXsum/10;
  1339  013B  300A               	movlw	10
  1340  013C  00A0               	movwf	?___awdiv
  1341  013D  01A1               	clrf	?___awdiv+1
  1342  013E  0839               	movf	main@acXsum+1,w
  1343  013F  00A3               	movwf	?___awdiv+3
  1344  0140  0838               	movf	main@acXsum,w
  1345  0141  00A2               	movwf	?___awdiv+2
  1346  0142  246C               	fcall	___awdiv
  1347  0143  0821               	movf	?___awdiv+1,w
  1348  0144  00B9               	movwf	main@acXsum+1
  1349  0145  0820               	movf	?___awdiv,w
  1350  0146  00B8               	movwf	main@acXsum
  1351                           
  1352                           ;smartkey.C: 364: acYsum = acYsum/10;
  1353  0147  300A               	movlw	10
  1354  0148  00A0               	movwf	?___awdiv
  1355  0149  01A1               	clrf	?___awdiv+1
  1356  014A  0837               	movf	main@acYsum+1,w
  1357  014B  00A3               	movwf	?___awdiv+3
  1358  014C  0836               	movf	main@acYsum,w
  1359  014D  00A2               	movwf	?___awdiv+2
  1360  014E  246C               	fcall	___awdiv
  1361  014F  0821               	movf	?___awdiv+1,w
  1362  0150  00B7               	movwf	main@acYsum+1
  1363  0151  0820               	movf	?___awdiv,w
  1364  0152  00B6               	movwf	main@acYsum
  1365                           
  1366                           ;smartkey.C: 365: tmp16 = (signed int)tmp16/10;
  1367  0153  300A               	movlw	10
  1368  0154  00A0               	movwf	?___awdiv
  1369  0155  01A1               	clrf	?___awdiv+1
  1370  0156  0843               	movf	main@tmp16+1,w
  1371  0157  00A3               	movwf	?___awdiv+3
  1372  0158  0842               	movf	main@tmp16,w
  1373  0159  00A2               	movwf	?___awdiv+2
  1374  015A  246C               	fcall	___awdiv
  1375  015B  0821               	movf	?___awdiv+1,w
  1376  015C  00C3               	movwf	main@tmp16+1
  1377  015D  0820               	movf	?___awdiv,w
  1378  015E  00C2               	movwf	main@tmp16
  1379                           
  1380                           ;smartkey.C: 367: if(((signed int)tmp16 > (-31)) && ((signed int)tmp16 < 31)){
  1381  015F  0843               	movf	main@tmp16+1,w
  1382  0160  3A80               	xorlw	128
  1383  0161  00FF               	movwf	127
  1384  0162  307F               	movlw	127
  1385  0163  027F               	subwf	127,w
  1386  0164  1D03               	skipz
  1387  0165  2968               	goto	u2975
  1388  0166  30E2               	movlw	226
  1389  0167  0242               	subwf	main@tmp16,w
  1390  0168                     u2975:	
  1391  0168  1C03               	skipc
  1392  0169  2979               	goto	l6796
  1393  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1394  016B  0843               	movf	main@tmp16+1,w
  1395  016C  3A80               	xorlw	128
  1396  016D  00FF               	movwf	127
  1397  016E  3080               	movlw	128
  1398  016F  027F               	subwf	127,w
  1399  0170  1D03               	skipz
  1400  0171  2974               	goto	u2985
  1401  0172  301F               	movlw	31
  1402  0173  0242               	subwf	main@tmp16,w
  1403  0174                     u2985:	
  1404  0174  1803               	skipnc
  1405  0175  2979               	goto	l6796
  1406                           
  1407                           ;smartkey.C: 368: beep(10,2);
  1408  0176  3002               	movlw	2
  1409  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0178  2993               	goto	L2
  1411  0179                     l6796:	
  1412                           ;smartkey.C: 369: }
  1413                           
  1414                           
  1415                           ;smartkey.C: 370: else
  1416                           ;smartkey.C: 372: {
  1417                           ;smartkey.C: 373: beep(10,3);
  1418  0179  3003               	movlw	3
  1419  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1420  017B  00A4               	movwf	?_beep
  1421  017C  300A               	movlw	10
  1422  017D  2642               	fcall	_beep
  1423                           
  1424                           ;smartkey.C: 374: WRITE_EEPROM(0x10,(unsigned char)acXsum);
  1425  017E  0838               	movf	main@acXsum,w
  1426  017F  00A0               	movwf	?_WRITE_EEPROM
  1427  0180  3010               	movlw	16
  1428  0181  260F               	fcall	_WRITE_EEPROM
  1429                           
  1430                           ;smartkey.C: 375: WRITE_EEPROM(0x11,(unsigned char)acYsum);
  1431  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0183  0836               	movf	main@acYsum,w
  1433  0184  00A0               	movwf	?_WRITE_EEPROM
  1434  0185  3011               	movlw	17
  1435  0186  260F               	fcall	_WRITE_EEPROM
  1436                           
  1437                           ;smartkey.C: 376: _delay((unsigned long)((100)*(4000000/4000.0)));
  1438  0187  3082               	movlw	130
  1439  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1440  0189  00AD               	movwf	??_main+1
  1441  018A  30DD               	movlw	221
  1442  018B  00AC               	movwf	??_main
  1443  018C                     u3537:	
  1444  018C  0BAC               	decfsz	??_main,f
  1445  018D  298C               	goto	u3537
  1446  018E  0BAD               	decfsz	??_main+1,f
  1447  018F  298C               	goto	u3537
  1448  0190  2991               	nop2
  1449  0191  2996               	goto	l925
  1450  0192                     l6800:	
  1451                           
  1452                           ;smartkey.C: 380: beep(10,2);
  1453  0192  3002               	movlw	2
  1454  0193                     L2:	
  1455  0193  00A4               	movwf	?_beep
  1456  0194  300A               	movlw	10
  1457  0195  2642               	fcall	_beep
  1458  0196                     l925:	
  1459  0196  3040               	movlw	64
  1460                           
  1461                           ;smartkey.C: 381: }
  1462                           ;smartkey.C: 382: WRITE_EEPROM(0x40,0);
  1463  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1464  0198  01A0               	clrf	?_WRITE_EEPROM
  1465  0199  260F               	fcall	_WRITE_EEPROM
  1466  019A                     l6804:	
  1467                           
  1468                           ;smartkey.C: 384: }
  1469                           ;smartkey.C: 386: acXsum = (signed char)READ_EEPROM(0x10);
  1470  019A  3010               	movlw	16
  1471  019B  26C0               	fcall	_READ_EEPROM
  1472  019C  00B8               	movwf	main@acXsum
  1473  019D  01B9               	clrf	main@acXsum+1
  1474  019E  1BB8               	btfsc	main@acXsum,7
  1475  019F  03B9               	decf	main@acXsum+1,f
  1476                           
  1477                           ;smartkey.C: 387: acYsum = (signed char)READ_EEPROM(0x11);
  1478  01A0  3011               	movlw	17
  1479  01A1  26C0               	fcall	_READ_EEPROM
  1480  01A2  00B6               	movwf	main@acYsum
  1481  01A3  01B7               	clrf	main@acYsum+1
  1482  01A4  1BB6               	btfsc	main@acYsum,7
  1483  01A5  03B7               	decf	main@acYsum+1,f
  1484                           
  1485                           ;smartkey.C: 389: timeTick = 0;
  1486  01A6  01F0               	clrf	_timeTick
  1487  01A7  01F1               	clrf	_timeTick+1
  1488  01A8                     l6810:	
  1489                           
  1490                           ;smartkey.C: 398: if(mode_chek == 0)
  1491  01A8  08F3               	movf	_mode_chek,f
  1492  01A9  1903               	btfsc	3,2
  1493                           
  1494                           ;smartkey.C: 399: {
  1495                           ;smartkey.C: 401: if(RegStatus & 0x80)
  1496  01AA  1FC9               	btfss	_RegStatus,7
  1497  01AB  2A79               	goto	l6918
  1498                           
  1499                           ;smartkey.C: 402: {
  1500                           ;smartkey.C: 403: PAIE = 0;
  1501  01AC  118B               	bcf	11,3
  1502                           
  1503                           ;smartkey.C: 406: RegStatus &= (~0x80);
  1504  01AD  13C9               	bcf	_RegStatus,7
  1505                           
  1506                           ;smartkey.C: 418: {
  1507                           ;smartkey.C: 420: if ((RegStatus & 0x40) !=0){
  1508  01AE  1B49               	btfsc	_RegStatus,6
  1509  01AF  2A2B               	goto	l6880
  1510  01B0  2A70               	goto	l6916
  1511  01B1                     l6818:	
  1512                           
  1513                           ;smartkey.C: 426: lostDetect =0;
  1514  01B1  01CB               	clrf	_lostDetect
  1515  01B2                     L4:	
  1516  01B2  3028               	movlw	40
  1517                           
  1518                           ;smartkey.C: 427: timeTick =0;
  1519  01B3  01F0               	clrf	_timeTick
  1520  01B4  01F1               	clrf	_timeTick+1
  1521                           
  1522                           ;smartkey.C: 428: tmp16 = 40;
  1523  01B5  00C2               	movwf	main@tmp16
  1524  01B6  01C3               	clrf	main@tmp16+1
  1525                           
  1526                           ;smartkey.C: 429: break;
  1527  01B7  2A78               	goto	l951
  1528  01B8                     l6822:	
  1529                           
  1530                           ;smartkey.C: 432: if(timeTick >30){
  1531  01B8  3000               	movlw	0
  1532  01B9  0271               	subwf	_timeTick+1,w
  1533  01BA  301F               	movlw	31
  1534  01BB  1903               	skipnz
  1535  01BC  0270               	subwf	_timeTick,w
  1536  01BD  1C03               	skipc
  1537  01BE  2A78               	goto	l951
  1538  01BF  3008               	movlw	8
  1539                           
  1540                           ;smartkey.C: 433: timeTick =0;
  1541  01C0  01F0               	clrf	_timeTick
  1542  01C1  01F1               	clrf	_timeTick+1
  1543                           
  1544                           ;smartkey.C: 435: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1545  01C2  26C0               	fcall	_READ_EEPROM
  1546  01C3  3ACC               	xorlw	204
  1547  01C4  1D03               	skipz
  1548  01C5  29C9               	goto	l6830
  1549  01C6  3008               	movlw	8
  1550  01C7  01A0               	clrf	?_WRITE_EEPROM
  1551  01C8  260F               	fcall	_WRITE_EEPROM
  1552  01C9                     l6830:	
  1553                           
  1554                           ;smartkey.C: 437: if((mtOldState == 3)){
  1555  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1556  01CA  084C               	movf	_mtOldState,w
  1557  01CB  3A03               	xorlw	3
  1558  01CC  1D03               	skipz
  1559  01CD  29DA               	goto	l6840
  1560                           
  1561                           ;smartkey.C: 438: beepOn();TMR2ON = 0; beep(10,1);
  1562  01CE  26EE               	fcall	_beepOn
  1563  01CF  300A               	movlw	10
  1564  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1565  01D1  1112               	bcf	18,2
  1566  01D2  01A4               	clrf	?_beep
  1567  01D3  0AA4               	incf	?_beep,f
  1568  01D4  2642               	fcall	_beep
  1569  01D5                     L3:	
  1570                           
  1571                           ;smartkey.C: 439: if(reAlertOn)reAlertOn =0;
  1572  01D5  0840               	movf	main@reAlertOn,w
  1573  01D6  1903               	btfsc	3,2
  1574  01D7  2A78               	goto	l951
  1575  01D8  01C0               	clrf	main@reAlertOn
  1576  01D9  2A78               	goto	l951
  1577  01DA                     l6840:	
  1578                           
  1579                           ;smartkey.C: 441: else if((mtOldState == 0)||(mtOldState == 4)){
  1580  01DA  084C               	movf	_mtOldState,w
  1581  01DB  1903               	btfsc	3,2
  1582  01DC  29E1               	goto	l941
  1583  01DD  084C               	movf	_mtOldState,w
  1584  01DE  3A04               	xorlw	4
  1585  01DF  1D03               	skipz
  1586  01E0  29FE               	goto	l6854
  1587  01E1                     l941:	
  1588  01E1  30AC               	movlw	172
  1589                           
  1590                           ;smartkey.C: 442: RegStatus |=(0x20);
  1591  01E2  16C9               	bsf	_RegStatus,5
  1592                           
  1593                           ;smartkey.C: 443: setState(1,3500);
  1594  01E3  00A0               	movwf	?_setState
  1595  01E4  300D               	movlw	13
  1596  01E5  00A1               	movwf	?_setState+1
  1597  01E6  3001               	movlw	1
  1598  01E7  26CD               	fcall	_setState
  1599                           
  1600                           ;smartkey.C: 444: if(READ_EEPROM(0x40))WRITE_EEPROM(0x40,0);
  1601  01E8  3040               	movlw	64
  1602  01E9  26C0               	fcall	_READ_EEPROM
  1603  01EA  3A00               	xorlw	0
  1604  01EB  1903               	skipnz
  1605  01EC  29F0               	goto	l6850
  1606  01ED  3040               	movlw	64
  1607  01EE  01A0               	clrf	?_WRITE_EEPROM
  1608  01EF  260F               	fcall	_WRITE_EEPROM
  1609  01F0                     l6850:	
  1610                           
  1611                           ;smartkey.C: 445: tmp16 = timeTick+40;
  1612  01F0  0871               	movf	_timeTick+1,w
  1613  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1614  01F2  00C3               	movwf	main@tmp16+1
  1615  01F3  0870               	movf	_timeTick,w
  1616  01F4  00C2               	movwf	main@tmp16
  1617  01F5  3028               	movlw	40
  1618  01F6  07C2               	addwf	main@tmp16,f
  1619  01F7  1803               	skipnc
  1620  01F8  0AC3               	incf	main@tmp16+1,f
  1621  01F9  300A               	movlw	10
  1622                           
  1623                           ;smartkey.C: 446: beep(10,1);
  1624  01FA  01A4               	clrf	?_beep
  1625  01FB  0AA4               	incf	?_beep,f
  1626  01FC  2642               	fcall	_beep
  1627                           
  1628                           ;smartkey.C: 447: }
  1629  01FD  2A78               	goto	l951
  1630  01FE                     l6854:	
  1631                           
  1632                           ;smartkey.C: 448: else if((mtOldState == 1)){
  1633  01FE  0B4C               	decfsz	_mtOldState,w
  1634  01FF  2A78               	goto	l951
  1635  0200  29D5               	goto	L3
  1636  0201                     l6860:	
  1637                           ;smartkey.C: 451: }
  1638                           ;smartkey.C: 452: }
  1639                           ;smartkey.C: 453: break;
  1640                           
  1641                           ;smartkey.C: 450: if(reAlertOn)reAlertOn =0;
  1642                           
  1643                           
  1644                           ;smartkey.C: 456: if(timeTick > 200)
  1645  0201  3000               	movlw	0
  1646  0202  0271               	subwf	_timeTick+1,w
  1647  0203  30C9               	movlw	201
  1648  0204  1903               	skipnz
  1649  0205  0270               	subwf	_timeTick,w
  1650  0206  1C03               	skipc
  1651  0207  2A78               	goto	l951
  1652                           
  1653                           ;smartkey.C: 457: {
  1654                           ;smartkey.C: 458: beepOff();
  1655  0208  26F3               	fcall	_beepOff
  1656                           
  1657                           ;smartkey.C: 459: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1658  0209  3008               	movlw	8
  1659  020A  26C0               	fcall	_READ_EEPROM
  1660  020B  3ACC               	xorlw	204
  1661  020C  1D03               	skipz
  1662  020D  2A11               	goto	l6868
  1663  020E  3008               	movlw	8
  1664  020F  01A0               	clrf	?_WRITE_EEPROM
  1665  0210  260F               	fcall	_WRITE_EEPROM
  1666  0211                     l6868:	
  1667  0211  30AC               	movlw	172
  1668                           
  1669                           ;smartkey.C: 460: RegStatus |=(0x20);
  1670  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0213  16C9               	bsf	_RegStatus,5
  1672                           
  1673                           ;smartkey.C: 461: setState(1,3500);
  1674  0214  00A0               	movwf	?_setState
  1675  0215  300D               	movlw	13
  1676  0216  00A1               	movwf	?_setState+1
  1677  0217  3001               	movlw	1
  1678  0218  26CD               	fcall	_setState
  1679                           
  1680                           ;smartkey.C: 463: tmp16 = timeTick+40;
  1681  0219  0871               	movf	_timeTick+1,w
  1682  021A  00C3               	movwf	main@tmp16+1
  1683  021B  0870               	movf	_timeTick,w
  1684  021C  00C2               	movwf	main@tmp16
  1685  021D  3028               	movlw	40
  1686  021E  07C2               	addwf	main@tmp16,f
  1687  021F  1803               	skipnc
  1688  0220  0AC3               	incf	main@tmp16+1,f
  1689  0221  2A78               	goto	l951
  1690  0222                     l6874:	
  1691                           
  1692                           ;smartkey.C: 469: beepOff();
  1693  0222  26F3               	fcall	_beepOff
  1694                           
  1695                           ;smartkey.C: 470: setState(2,300);
  1696  0223  302C               	movlw	44
  1697  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0225  00A0               	movwf	?_setState
  1699  0226  3001               	movlw	1
  1700  0227  00A1               	movwf	?_setState+1
  1701  0228  3002               	movlw	2
  1702  0229  26CD               	fcall	_setState
  1703                           
  1704                           ;smartkey.C: 471: break;
  1705  022A  2A78               	goto	l951
  1706  022B                     l6880:	
  1707  022B  0874               	movf	_mtState,w
  1708                           
  1709                           ; Switch size 1, requested type "space"
  1710                           ; Number of cases is 5, Range of values is 0 to 4
  1711                           ; switch strategies available:
  1712                           ; Name         Instructions Cycles
  1713                           ; direct_byte           11     6 (fixed)
  1714                           ; simple_byte           16     9 (average)
  1715                           ; jumptable            260     6 (fixed)
  1716                           ; rangetable             9     6 (fixed)
  1717                           ; spacedrange           16     9 (fixed)
  1718                           ; locatedrange           5     3 (fixed)
  1719                           ;	Chosen strategy is direct_byte
  1720  022C  0084               	movwf	4
  1721  022D  3005               	movlw	5
  1722  022E  0204               	subwf	4,w
  1723  022F  1803               	skipnc
  1724  0230  2A78               	goto	l951
  1725  0231  3006               	movlw	high S7150
  1726  0232  008A               	movwf	10
  1727  0233  30E9               	movlw	low S7150
  1728  0234  0704               	addwf	4,w
  1729  0235  0082               	movwf	2
  1730  0236                     l6882:	
  1731                           
  1732                           ;smartkey.C: 488: {
  1733                           ;smartkey.C: 490: if(lostDetect==1 && timeTick< 1500)
  1734  0236  0B4B               	decfsz	_lostDetect,w
  1735  0237  2A5D               	goto	l954
  1736  0238  3005               	movlw	5
  1737  0239  0271               	subwf	_timeTick+1,w
  1738  023A  30DC               	movlw	220
  1739  023B  1903               	skipnz
  1740  023C  0270               	subwf	_timeTick,w
  1741  023D  1803               	skipnc
  1742  023E  2A5D               	goto	l954
  1743                           
  1744                           ;smartkey.C: 491: {
  1745                           ;smartkey.C: 492: if(READ_EEPROM(0x08)==0x00) WRITE_EEPROM(0x08,0xcc);
  1746  023F  3008               	movlw	8
  1747  0240  26C0               	fcall	_READ_EEPROM
  1748  0241  3800               	iorlw	0
  1749  0242  1D03               	skipz
  1750  0243  2A48               	goto	l955
  1751  0244  30CC               	movlw	204
  1752  0245  00A0               	movwf	?_WRITE_EEPROM
  1753  0246  3008               	movlw	8
  1754  0247  260F               	fcall	_WRITE_EEPROM
  1755  0248                     l955:	
  1756                           
  1757                           ;smartkey.C: 494: setState(3,1800);
  1758  0248  3008               	movlw	8
  1759  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1760  024A  00A0               	movwf	?_setState
  1761  024B  3007               	movlw	7
  1762  024C  00A1               	movwf	?_setState+1
  1763  024D  3003               	movlw	3
  1764  024E  26CD               	fcall	_setState
  1765                           
  1766                           ;smartkey.C: 495: cntTmp = timeTick+40;
  1767  024F  0871               	movf	_timeTick+1,w
  1768  0250  00C6               	movwf	_cntTmp+1
  1769  0251  0870               	movf	_timeTick,w
  1770  0252  00C5               	movwf	_cntTmp
  1771  0253  3028               	movlw	40
  1772  0254  07C5               	addwf	_cntTmp,f
  1773  0255  1803               	skipnc
  1774  0256  0AC6               	incf	_cntTmp+1,f
  1775                           
  1776                           ;smartkey.C: 496: PR2L =20;
  1777  0257  3014               	movlw	20
  1778  0258  1683               	bsf	3,5	;RP0=1, select bank1
  1779  0259  0091               	movwf	17	;volatile
  1780                           
  1781                           ;smartkey.C: 497: beepOn();
  1782  025A  26EE               	fcall	_beepOn
  1783                           
  1784                           ;smartkey.C: 498: lostDetect =0;
  1785  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1786  025C  29B1               	goto	l6818
  1787  025D                     l954:	
  1788                           ;smartkey.C: 499: }
  1789                           
  1790                           
  1791                           ;smartkey.C: 500: else {
  1792                           ;smartkey.C: 501: lostDetect =1;
  1793  025D  01CB               	clrf	_lostDetect
  1794  025E  0ACB               	incf	_lostDetect,f
  1795  025F  29B2               	goto	L4
  1796  0260                     l6902:	
  1797                           ;smartkey.C: 504: }
  1798                           ;smartkey.C: 505: timeTick =0;
  1799                           
  1800                           
  1801                           ;smartkey.C: 511: {
  1802                           ;smartkey.C: 512: timeTick =0;
  1803  0260  01F0               	clrf	_timeTick
  1804  0261  01F1               	clrf	_timeTick+1
  1805                           
  1806                           ;smartkey.C: 513: beepOn();TMR2ON = 0;
  1807  0262  26EE               	fcall	_beepOn
  1808  0263  3002               	movlw	2
  1809  0264  1283               	bcf	3,5	;RP0=0, select bank0
  1810  0265  1112               	bcf	18,2
  1811                           
  1812                           ;smartkey.C: 514: beep(10,2);
  1813  0266  00A4               	movwf	?_beep
  1814  0267  300A               	movlw	10
  1815  0268  2642               	fcall	_beep
  1816                           
  1817                           ;smartkey.C: 515: if(mtOldState == 3){reAlertOn =1;}
  1818  0269  084C               	movf	_mtOldState,w
  1819  026A  3A03               	xorlw	3
  1820  026B  1D03               	skipz
  1821  026C  2A78               	goto	l951
  1822  026D  01C0               	clrf	main@reAlertOn
  1823  026E  0AC0               	incf	main@reAlertOn,f
  1824  026F  2A78               	goto	l951
  1825  0270                     l6916:	
  1826  0270  0874               	movf	_mtState,w
  1827                           
  1828                           ; Switch size 1, requested type "space"
  1829                           ; Number of cases is 2, Range of values is 1 to 2
  1830                           ; switch strategies available:
  1831                           ; Name         Instructions Cycles
  1832                           ; simple_byte            7     4 (average)
  1833                           ; direct_byte           11     9 (fixed)
  1834                           ; jumptable            263     9 (fixed)
  1835                           ;	Chosen strategy is simple_byte
  1836  0271  3A01               	xorlw	1	; case 1
  1837  0272  1903               	skipnz
  1838  0273  2A36               	goto	l6882
  1839  0274  3A03               	xorlw	3	; case 2
  1840  0275  1903               	skipnz
  1841  0276  2A60               	goto	l6902
  1842  0277  2A78               	goto	l951
  1843  0278                     l951:	
  1844                           
  1845                           ;smartkey.C: 519: }
  1846                           ;smartkey.C: 521: }
  1847                           ;smartkey.C: 523: PAIE = 1;
  1848  0278  158B               	bsf	11,3
  1849  0279                     l6918:	
  1850                           
  1851                           ;smartkey.C: 524: }
  1852                           ;smartkey.C: 526: }
  1853                           ;smartkey.C: 530: {
  1854                           ;smartkey.C: 531: if((timeOut!=0)&&( timeTick >timeOut)){
  1855  0279  0848               	movf	_timeOut+1,w
  1856  027A  0447               	iorwf	_timeOut,w
  1857  027B  1903               	skipnz
  1858  027C  2AEF               	goto	l6994
  1859  027D  0871               	movf	_timeTick+1,w
  1860  027E  0248               	subwf	_timeOut+1,w
  1861  027F  1D03               	skipz
  1862  0280  2A83               	goto	u3185
  1863  0281  0870               	movf	_timeTick,w
  1864  0282  0247               	subwf	_timeOut,w
  1865  0283                     u3185:	
  1866  0283  1C03               	btfss	3,0
  1867  0284  2AE1               	goto	l6992
  1868  0285  2AEF               	goto	l6994
  1869  0286                     l6924:	
  1870                           
  1871                           ;smartkey.C: 542: beepOff();
  1872  0286  26F3               	fcall	_beepOff
  1873  0287  302C               	movlw	44
  1874                           
  1875                           ;smartkey.C: 543: RegStatus &=(~0x20);
  1876  0288  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0289  12C9               	bcf	_RegStatus,5
  1878                           
  1879                           ;smartkey.C: 544: setState(2,300);
  1880  028A  00A0               	movwf	?_setState
  1881  028B  3001               	movlw	1
  1882  028C  00A1               	movwf	?_setState+1
  1883  028D  3002               	movlw	2
  1884  028E  26CD               	fcall	_setState
  1885                           
  1886                           ;smartkey.C: 545: break;
  1887  028F  2AEF               	goto	l6994
  1888  0290                     l6930:	
  1889                           
  1890                           ;smartkey.C: 547: beepOff();
  1891  0290  26F3               	fcall	_beepOff
  1892                           
  1893                           ;smartkey.C: 548: delay_x10ms(20);
  1894  0291  3014               	movlw	20
  1895  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1896  0293  00A0               	movwf	?_delay_x10ms
  1897  0294  01A1               	clrf	?_delay_x10ms+1
  1898  0295  2681               	fcall	_delay_x10ms
  1899  0296                     L6:	
  1900                           
  1901                           ;smartkey.C: 549: beepOn();TMR2ON = 0;reAlertOn =0;
  1902  0296  26EE               	fcall	_beepOn
  1903  0297  301E               	movlw	30
  1904  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1905  0299  1112               	bcf	18,2
  1906  029A  01C0               	clrf	main@reAlertOn
  1907  029B  01A4               	clrf	?_beep
  1908  029C  0AA4               	incf	?_beep,f
  1909  029D  2642               	fcall	_beep
  1910  029E  3000               	movlw	0
  1911                           
  1912                           ;smartkey.C: 551: setState(0,0);
  1913  029F  01A0               	clrf	?_setState
  1914  02A0  01A1               	clrf	?_setState+1
  1915  02A1                     L5:	
  1916  02A1  26CD               	fcall	_setState
  1917                           
  1918                           ;smartkey.C: 553: tmp16 = timeTick+40;
  1919  02A2  0871               	movf	_timeTick+1,w
  1920  02A3  00C3               	movwf	main@tmp16+1
  1921  02A4  0870               	movf	_timeTick,w
  1922  02A5  00C2               	movwf	main@tmp16
  1923  02A6  3028               	movlw	40
  1924  02A7  07C2               	addwf	main@tmp16,f
  1925  02A8  1803               	skipnc
  1926  02A9  0AC3               	incf	main@tmp16+1,f
  1927                           
  1928                           ;smartkey.C: 554: break;
  1929  02AA  2AEF               	goto	l6994
  1930  02AB                     l6948:	
  1931                           
  1932                           ;smartkey.C: 557: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1933  02AB  3008               	movlw	8
  1934  02AC  26C0               	fcall	_READ_EEPROM
  1935  02AD  3ACC               	xorlw	204
  1936  02AE  1D03               	skipz
  1937  02AF  2AB3               	goto	l6952
  1938  02B0  3008               	movlw	8
  1939  02B1  01A0               	clrf	?_WRITE_EEPROM
  1940  02B2  260F               	fcall	_WRITE_EEPROM
  1941  02B3                     l6952:	
  1942                           
  1943                           ;smartkey.C: 559: if(reAlertOn){
  1944  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1945  02B4  0840               	movf	main@reAlertOn,w
  1946  02B5  1903               	btfsc	3,2
  1947  02B6  2ACA               	goto	l6962
  1948                           
  1949                           ;smartkey.C: 560: setState(4,6000);
  1950  02B7  3070               	movlw	112
  1951  02B8  00A0               	movwf	?_setState
  1952  02B9  3017               	movlw	23
  1953  02BA  00A1               	movwf	?_setState+1
  1954  02BB  3004               	movlw	4
  1955  02BC  26CD               	fcall	_setState
  1956                           
  1957                           ;smartkey.C: 561: cntTmp = timeTick+40;
  1958  02BD  0871               	movf	_timeTick+1,w
  1959  02BE  00C6               	movwf	_cntTmp+1
  1960  02BF  0870               	movf	_timeTick,w
  1961  02C0  00C5               	movwf	_cntTmp
  1962  02C1  3028               	movlw	40
  1963  02C2  07C5               	addwf	_cntTmp,f
  1964  02C3  1803               	skipnc
  1965  02C4  0AC6               	incf	_cntTmp+1,f
  1966                           
  1967                           ;smartkey.C: 562: PR2L =20;
  1968  02C5  3014               	movlw	20
  1969  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  1970  02C7  0091               	movwf	17	;volatile
  1971                           
  1972                           ;smartkey.C: 563: beepOn();
  1973  02C8  26EE               	fcall	_beepOn
  1974                           
  1975                           ;smartkey.C: 565: }else if(mtOldState == 0){
  1976  02C9  2AEF               	goto	l6994
  1977  02CA                     l6962:	
  1978  02CA  08CC               	movf	_mtOldState,f
  1979  02CB  1D03               	skipz
  1980  02CC  2A96               	goto	L6
  1981                           
  1982                           ;smartkey.C: 567: beep(10,5);
  1983  02CD  3005               	movlw	5
  1984  02CE  00A4               	movwf	?_beep
  1985  02CF  300A               	movlw	10
  1986  02D0  2642               	fcall	_beep
  1987  02D1  3040               	movlw	64
  1988                           
  1989                           ;smartkey.C: 568: RegStatus |=(0x20);
  1990  02D2  16C9               	bsf	_RegStatus,5
  1991                           
  1992                           ;smartkey.C: 571: if(READ_EEPROM(0x40))WRITE_EEPROM(0x40,0);
  1993  02D3  26C0               	fcall	_READ_EEPROM
  1994  02D4  3A00               	xorlw	0
  1995  02D5  1903               	skipnz
  1996  02D6  2ADA               	goto	l971
  1997  02D7  3040               	movlw	64
  1998  02D8  01A0               	clrf	?_WRITE_EEPROM
  1999  02D9  260F               	fcall	_WRITE_EEPROM
  2000  02DA                     l971:	
  2001                           
  2002                           ;smartkey.C: 573: setState(1,3500);
  2003  02DA  30AC               	movlw	172
  2004  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2005  02DC  00A0               	movwf	?_setState
  2006  02DD  300D               	movlw	13
  2007  02DE  00A1               	movwf	?_setState+1
  2008  02DF  3001               	movlw	1
  2009  02E0  2AA1               	goto	L5
  2010  02E1                     l6992:	
  2011                           ;smartkey.C: 580: setState(0,0);
  2012                           
  2013                           ;smartkey.C: 579: beep(30,1);
  2014                           
  2015                           ;smartkey.C: 578: reAlertOn =0;
  2016                           
  2017                           ;smartkey.C: 577: beepOn();TMR2ON = 0;
  2018                           
  2019  02E1  0874               	movf	_mtState,w
  2020                           
  2021                           ; Switch size 1, requested type "space"
  2022                           ; Number of cases is 4, Range of values is 1 to 4
  2023                           ; switch strategies available:
  2024                           ; Name         Instructions Cycles
  2025                           ; simple_byte           13     7 (average)
  2026                           ; direct_byte           13     9 (fixed)
  2027                           ; jumptable            263     9 (fixed)
  2028                           ;	Chosen strategy is simple_byte
  2029  02E2  3A01               	xorlw	1	; case 1
  2030  02E3  1903               	skipnz
  2031  02E4  2AEF               	goto	l6994
  2032  02E5  3A03               	xorlw	3	; case 2
  2033  02E6  1903               	skipnz
  2034  02E7  2AAB               	goto	l6948
  2035  02E8  3A01               	xorlw	1	; case 3
  2036  02E9  1903               	skipnz
  2037  02EA  2A86               	goto	l6924
  2038  02EB  3A07               	xorlw	7	; case 4
  2039  02EC  1903               	skipnz
  2040  02ED  2A90               	goto	l6930
  2041  02EE  2AEF               	goto	l6994
  2042  02EF                     l6994:	
  2043                           
  2044                           ;smartkey.C: 586: }
  2045                           ;smartkey.C: 588: }
  2046                           ;smartkey.C: 590: if((timeTick>tmp16) && (mtState == 1) && mpuOk ==1){
  2047  02EF  0871               	movf	_timeTick+1,w
  2048  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2049  02F1  0243               	subwf	main@tmp16+1,w
  2050  02F2  1D03               	skipz
  2051  02F3  2AF6               	goto	u3235
  2052  02F4  0870               	movf	_timeTick,w
  2053  02F5  0242               	subwf	main@tmp16,w
  2054  02F6                     u3235:	
  2055  02F6  1803               	skipnc
  2056  02F7  2B92               	goto	l7078
  2057  02F8  0B74               	decfsz	_mtState,w
  2058  02F9  2B92               	goto	l7078
  2059  02FA  0B35               	decfsz	main@mpuOk,w
  2060  02FB  2B92               	goto	l7078
  2061                           
  2062                           ;smartkey.C: 591: tmp16 = timeTick+40;
  2063  02FC  0871               	movf	_timeTick+1,w
  2064  02FD  00C3               	movwf	main@tmp16+1
  2065  02FE  0870               	movf	_timeTick,w
  2066  02FF  00C2               	movwf	main@tmp16
  2067  0300  3028               	movlw	40
  2068  0301  07C2               	addwf	main@tmp16,f
  2069  0302  1803               	skipnc
  2070  0303  0AC3               	incf	main@tmp16+1,f
  2071                           
  2072                           ;smartkey.C: 592: if(AccRead(0x02,buf,6)==0){
  2073  0304  303A               	movlw	main@buf& (0+255)
  2074  0305  00A4               	movwf	?_AccRead
  2075  0306  3000               	movlw	0
  2076  0307  00A5               	movwf	?_AccRead+1
  2077  0308  3006               	movlw	6
  2078  0309  00A6               	movwf	?_AccRead+2
  2079  030A  3002               	movlw	2
  2080  030B  2572               	fcall	_AccRead
  2081  030C  3800               	iorlw	0
  2082  030D  1D03               	skipz
  2083  030E  2B92               	goto	l7078
  2084                           
  2085                           ;smartkey.C: 594: if(compe(buf[1], (signed char)acXsum,5) && compe(buf[3], (signed char)
      +                          acYsum,5)){
  2086  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0310  0838               	movf	main@acXsum,w
  2088  0311  00A0               	movwf	?_compe
  2089  0312  3005               	movlw	5
  2090  0313  00A1               	movwf	?_compe+1
  2091  0314  083B               	movf	main@buf+1,w
  2092  0315  24B1               	fcall	_compe
  2093  0316  3A00               	xorlw	0
  2094  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0318  1903               	skipnz
  2096  0319  2B41               	goto	L8
  2097  031A  0836               	movf	main@acYsum,w
  2098  031B  00A0               	movwf	?_compe
  2099  031C  3005               	movlw	5
  2100  031D  00A1               	movwf	?_compe+1
  2101  031E  083D               	movf	main@buf+3,w
  2102  031F  24B1               	fcall	_compe
  2103  0320  3A00               	xorlw	0
  2104                           
  2105                           ;smartkey.C: 597: isSw++;
  2106  0321  1283               	bcf	3,5	;RP0=0, select bank0
  2107  0322  1903               	skipnz
  2108  0323  2B41               	goto	L8
  2109  0324  302D               	movlw	45
  2110  0325  0AC1               	incf	main@isSw,f
  2111                           
  2112                           ;smartkey.C: 598: if(isSw >44){
  2113  0326  0241               	subwf	main@isSw,w
  2114  0327  1C03               	skipc
  2115  0328  2B34               	goto	l7024
  2116  0329  302C               	movlw	44
  2117                           
  2118                           ;smartkey.C: 599: isSw =0;
  2119  032A  01C1               	clrf	main@isSw
  2120                           
  2121                           ;smartkey.C: 600: vibrateOn=1;
  2122  032B  01AF               	clrf	main@vibrateOn
  2123  032C  0AAF               	incf	main@vibrateOn,f
  2124                           
  2125                           ;smartkey.C: 603: RegStatus &=(~0x20);
  2126  032D  12C9               	bcf	_RegStatus,5
  2127                           
  2128                           ;smartkey.C: 604: setState(2,300);
  2129  032E  00A0               	movwf	?_setState
  2130  032F  3001               	movlw	1
  2131  0330  00A1               	movwf	?_setState+1
  2132  0331  3002               	movlw	2
  2133  0332  26CD               	fcall	_setState
  2134                           
  2135                           ;smartkey.C: 606: }
  2136  0333  2B71               	goto	l7056
  2137  0334                     l7024:	
  2138                           
  2139                           ;smartkey.C: 607: else if(isSw > 25){
  2140  0334  301A               	movlw	26
  2141  0335  0241               	subwf	main@isSw,w
  2142  0336  1803               	btfsc	3,0
  2143                           
  2144                           ;smartkey.C: 608: if(isSw%2==0){
  2145  0337  1841               	btfsc	main@isSw,0
  2146  0338  2B71               	goto	l7056
  2147                           
  2148                           ;smartkey.C: 609: beepOn();TMR2ON = 0; beep(7,1);
  2149  0339  26EE               	fcall	_beepOn
  2150  033A  3007               	movlw	7
  2151  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2152  033C  1112               	bcf	18,2
  2153  033D  01A4               	clrf	?_beep
  2154  033E  0AA4               	incf	?_beep,f
  2155  033F  2642               	fcall	_beep
  2156  0340  2B71               	goto	l7056
  2157  0341                     L8:	
  2158                           ;smartkey.C: 614: else{
  2159                           ;smartkey.C: 615: isSw =0;
  2160                           
  2161                           ;smartkey.C: 610: }
  2162                           ;smartkey.C: 611: }
  2163                           ;smartkey.C: 613: }
  2164                           
  2165  0341  01C1               	clrf	main@isSw
  2166                           
  2167                           ;smartkey.C: 618: if(compe(buf[1], acXOld,1) && compe(buf[3], acYOld,1)){
  2168  0342  0834               	movf	main@acXOld,w
  2169  0343  00A0               	movwf	?_compe
  2170  0344  01A1               	clrf	?_compe+1
  2171  0345  0AA1               	incf	?_compe+1,f
  2172  0346  083B               	movf	main@buf+1,w
  2173  0347  24B1               	fcall	_compe
  2174  0348  3A00               	xorlw	0
  2175  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2176  034A  1903               	skipnz
  2177  034B  2B6F               	goto	L9
  2178  034C  0833               	movf	main@acYOld,w
  2179  034D  00A0               	movwf	?_compe
  2180  034E  01A1               	clrf	?_compe+1
  2181  034F  0AA1               	incf	?_compe+1,f
  2182  0350  083D               	movf	main@buf+3,w
  2183  0351  24B1               	fcall	_compe
  2184  0352  3A00               	xorlw	0
  2185                           
  2186                           ;smartkey.C: 619: isWait++;
  2187  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0354  1903               	skipnz
  2189  0355  2B6F               	goto	L9
  2190  0356  0AB0               	incf	main@isWait,f
  2191  0357  1903               	skipnz
  2192  0358  0AB1               	incf	main@isWait+1,f
  2193                           
  2194                           ;smartkey.C: 620: if(isWait==450){
  2195  0359  0331               	decf	main@isWait+1,w
  2196  035A  30C2               	movlw	194
  2197  035B  1903               	skipnz
  2198  035C  0630               	xorwf	main@isWait,w
  2199  035D  1D03               	skipz
  2200  035E  2B71               	goto	l7056
  2201  035F  3002               	movlw	2
  2202                           
  2203                           ;smartkey.C: 621: isWait = 0;
  2204  0360  01B0               	clrf	main@isWait
  2205  0361  01B1               	clrf	main@isWait+1
  2206                           
  2207                           ;smartkey.C: 622: beep(7,2);
  2208  0362  00A4               	movwf	?_beep
  2209  0363  3007               	movlw	7
  2210  0364  2642               	fcall	_beep
  2211  0365  302C               	movlw	44
  2212                           
  2213                           ;smartkey.C: 623: vibrateOn=1;
  2214  0366  01AF               	clrf	main@vibrateOn
  2215  0367  0AAF               	incf	main@vibrateOn,f
  2216                           
  2217                           ;smartkey.C: 624: RegStatus &=(~0x20);
  2218  0368  12C9               	bcf	_RegStatus,5
  2219                           
  2220                           ;smartkey.C: 625: setState(2,300);
  2221  0369  00A0               	movwf	?_setState
  2222  036A  3001               	movlw	1
  2223  036B  00A1               	movwf	?_setState+1
  2224  036C  3002               	movlw	2
  2225  036D  26CD               	fcall	_setState
  2226  036E  2B71               	goto	l7056
  2227  036F                     L9:	
  2228                           ;smartkey.C: 628: else
  2229                           ;smartkey.C: 629: isWait=0;
  2230                           
  2231  036F  01B0               	clrf	main@isWait
  2232  0370  01B1               	clrf	main@isWait+1
  2233  0371                     l7056:	
  2234                           
  2235                           ;smartkey.C: 631: }
  2236                           ;smartkey.C: 633: if( (buf[5] > -31) && (buf[5] < 31)) {
  2237  0371  083F               	movf	main@buf+5,w
  2238  0372  3A80               	xorlw	128
  2239  0373  3E9E               	addlw	158
  2240  0374  1C03               	skipc
  2241  0375  2B8D               	goto	l7072
  2242  0376  083F               	movf	main@buf+5,w
  2243  0377  3A80               	xorlw	128
  2244  0378  3E61               	addlw	-159
  2245  0379  1803               	skipnc
  2246  037A  2B8D               	goto	l7072
  2247  037B  3005               	movlw	5
  2248                           
  2249                           ;smartkey.C: 634: isFall++;
  2250  037C  0AB2               	incf	main@isFall,f
  2251                           
  2252                           ;smartkey.C: 635: if(isFall >4){
  2253  037D  0232               	subwf	main@isFall,w
  2254  037E  1C03               	skipc
  2255  037F  2B8E               	goto	l7074
  2256  0380  3002               	movlw	2
  2257                           
  2258                           ;smartkey.C: 636: isFall =0;
  2259  0381  01B2               	clrf	main@isFall
  2260                           
  2261                           ;smartkey.C: 637: beep(7,2);
  2262  0382  00A4               	movwf	?_beep
  2263  0383  3007               	movlw	7
  2264  0384  2642               	fcall	_beep
  2265  0385  302C               	movlw	44
  2266                           
  2267                           ;smartkey.C: 638: RegStatus &=(~0x20);
  2268  0386  12C9               	bcf	_RegStatus,5
  2269                           
  2270                           ;smartkey.C: 639: setState(2,300);
  2271  0387  00A0               	movwf	?_setState
  2272  0388  3001               	movlw	1
  2273  0389  00A1               	movwf	?_setState+1
  2274  038A  3002               	movlw	2
  2275  038B  26CD               	fcall	_setState
  2276  038C  2B8E               	goto	l7074
  2277  038D                     l7072:	
  2278                           
  2279                           ;smartkey.C: 642: else{
  2280                           ;smartkey.C: 643: isFall=0;
  2281  038D  01B2               	clrf	main@isFall
  2282  038E                     l7074:	
  2283                           
  2284                           ;smartkey.C: 644: }
  2285                           ;smartkey.C: 646: acYOld = buf[3];acXOld = buf[1];
  2286  038E  083D               	movf	main@buf+3,w
  2287  038F  00B3               	movwf	main@acYOld
  2288  0390  083B               	movf	main@buf+1,w
  2289  0391  00B4               	movwf	main@acXOld
  2290  0392                     l7078:	
  2291                           
  2292                           ;smartkey.C: 647: }
  2293                           ;smartkey.C: 649: }
  2294                           ;smartkey.C: 652: if((timeTick>tmp16) && (mtState == 0 ) && mpuOk ==1){
  2295  0392  0871               	movf	_timeTick+1,w
  2296  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0394  0243               	subwf	main@tmp16+1,w
  2298  0395  1D03               	skipz
  2299  0396  2B99               	goto	u3385
  2300  0397  0870               	movf	_timeTick,w
  2301  0398  0242               	subwf	main@tmp16,w
  2302  0399                     u3385:	
  2303  0399  1803               	skipnc
  2304  039A  2BDD               	goto	l7110
  2305  039B  08F4               	movf	_mtState,f
  2306  039C  1D03               	skipz
  2307  039D  2BDD               	goto	l7110
  2308  039E  0B35               	decfsz	main@mpuOk,w
  2309  039F  2BDD               	goto	l7110
  2310                           
  2311                           ;smartkey.C: 654: if(timeTick >65000) timeTick =0;
  2312  03A0  30FD               	movlw	253
  2313  03A1  0271               	subwf	_timeTick+1,w
  2314  03A2  30E9               	movlw	233
  2315  03A3  1903               	skipnz
  2316  03A4  0270               	subwf	_timeTick,w
  2317  03A5  1C03               	skipc
  2318  03A6  2BA9               	goto	l7088
  2319  03A7  01F0               	clrf	_timeTick
  2320  03A8  01F1               	clrf	_timeTick+1
  2321  03A9                     l7088:	
  2322                           
  2323                           ;smartkey.C: 655: tmp16 = timeTick+40;
  2324  03A9  0871               	movf	_timeTick+1,w
  2325  03AA  00C3               	movwf	main@tmp16+1
  2326  03AB  0870               	movf	_timeTick,w
  2327  03AC  00C2               	movwf	main@tmp16
  2328  03AD  3028               	movlw	40
  2329  03AE  07C2               	addwf	main@tmp16,f
  2330  03AF  1803               	skipnc
  2331  03B0  0AC3               	incf	main@tmp16+1,f
  2332                           
  2333                           ;smartkey.C: 657: if(AccRead(0x02,buf,6)==0){
  2334  03B1  303A               	movlw	main@buf& (0+255)
  2335  03B2  00A4               	movwf	?_AccRead
  2336  03B3  3000               	movlw	0
  2337  03B4  00A5               	movwf	?_AccRead+1
  2338  03B5  3006               	movlw	6
  2339  03B6  00A6               	movwf	?_AccRead+2
  2340  03B7  3002               	movlw	2
  2341  03B8  2572               	fcall	_AccRead
  2342  03B9  3800               	iorlw	0
  2343                           
  2344                           ;smartkey.C: 659: if(vibrateOn==1){
  2345  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2346  03BB  1D03               	skipz
  2347  03BC  2BDE               	goto	L10
  2348  03BD  0B2F               	decfsz	main@vibrateOn,w
  2349  03BE  2BDD               	goto	l7110
  2350                           
  2351                           ;smartkey.C: 660: if(compe(buf[1],acXOld ,3) && compe(buf[3],acYOld ,3)){
  2352  03BF  0834               	movf	main@acXOld,w
  2353  03C0  00A0               	movwf	?_compe
  2354  03C1  3003               	movlw	3
  2355  03C2  00A1               	movwf	?_compe+1
  2356  03C3  083B               	movf	main@buf+1,w
  2357  03C4  24B1               	fcall	_compe
  2358  03C5  3A00               	xorlw	0
  2359  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2360  03C7  1903               	skipnz
  2361  03C8  2BD5               	goto	L11
  2362  03C9  0833               	movf	main@acYOld,w
  2363  03CA  00A0               	movwf	?_compe
  2364  03CB  3003               	movlw	3
  2365  03CC  00A1               	movwf	?_compe+1
  2366  03CD  083D               	movf	main@buf+3,w
  2367  03CE  24B1               	fcall	_compe
  2368  03CF  3A00               	xorlw	0
  2369                           
  2370                           ;smartkey.C: 662: isSw=0;
  2371  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2372  03D1  1903               	skipnz
  2373  03D2  2BD5               	goto	L11
  2374  03D3  01C1               	clrf	main@isSw
  2375                           
  2376                           ;smartkey.C: 665: }
  2377  03D4  2BDD               	goto	l7110
  2378  03D5                     L11:	
  2379                           ;smartkey.C: 666: else{
  2380                           ;smartkey.C: 667: isSw++;
  2381                           
  2382  03D5  0AC1               	incf	main@isSw,f
  2383                           
  2384                           ;smartkey.C: 670: {
  2385                           ;smartkey.C: 671: beepOn();TMR2ON = 0; beep(7,3);
  2386  03D6  26EE               	fcall	_beepOn
  2387  03D7  3003               	movlw	3
  2388  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2389  03D9  1112               	bcf	18,2
  2390  03DA  00A4               	movwf	?_beep
  2391  03DB  3007               	movlw	7
  2392  03DC  2642               	fcall	_beep
  2393  03DD                     l7110:	
  2394                           
  2395                           ;smartkey.C: 672: }
  2396                           ;smartkey.C: 673: }
  2397                           ;smartkey.C: 674: }
  2398                           ;smartkey.C: 676: }
  2399                           ;smartkey.C: 679: }
  2400                           ;smartkey.C: 681: if(RegStatus & 0x20) {RC0 =1;RC1 =1;}
  2401  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2402  03DE                     L10:	
  2403  03DE  1EC9               	btfss	_RegStatus,5
  2404  03DF  2BE3               	goto	l993
  2405  03E0  1407               	bsf	7,0
  2406  03E1  1487               	bsf	7,1
  2407  03E2  29A8               	goto	l6810
  2408  03E3                     l993:	
  2409                           
  2410                           ;smartkey.C: 682: else {RC0 =0;RC1 =0;}
  2411  03E3  1007               	bcf	7,0
  2412  03E4  1087               	bcf	7,1
  2413  03E5  29A8               	goto	l6810
  2414  03E6                     __end_of_main:	
  2415                           
  2416                           	psect	swtext1
  2417  06E9                     __pswtext1:	
  2418  06E9                     S7150:	
  2419  06E9  2A78               	ljmp	l951
  2420  06EA  29B1               	ljmp	l6818
  2421  06EB  29B8               	ljmp	l6822
  2422  06EC  2A01               	ljmp	l6860
  2423  06ED  2A22               	ljmp	l6874
  2424                           
  2425                           	psect	text861
  2426  0572                     __ptext861:	
  2427 ;; =============== function _main ends ============
  2428                           
  2429                           
  2430 ;; *************** function _AccRead *****************
  2431 ;; Defined at:
  2432 ;;		line 31 in file "mpu6x.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  rAdd            1    wreg     unsigned char 
  2435 ;;  dat             2    4[BANK0 ] PTR unsigned char 
  2436 ;;		 -> RAM(256), main@buf(6), 
  2437 ;;  len             1    6[BANK0 ] unsigned char 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  rAdd            1   10[BANK0 ] unsigned char 
  2440 ;;  i               1   11[BANK0 ] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      unsigned char 
  2443 ;; Registers used:
  2444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 20/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1
  2450 ;;      Params:         0       3       0
  2451 ;;      Locals:         0       2       0
  2452 ;;      Temps:          0       3       0
  2453 ;;      Totals:         0       8       0
  2454 ;;Total ram usage:        8 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    3
  2457 ;; This function calls:
  2458 ;;		_swI2C_Start
  2459 ;;		_swI2C_WriteByte
  2460 ;;		_swI2C_ReadByte
  2461 ;;		_swI2C_Stop
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466  0572                     _AccRead:	
  2467                           
  2468                           ; Regs used in _AccRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2469                           ;AccRead@rAdd stored from wreg
  2470  0572  00AA               	movwf	AccRead@rAdd
  2471                           
  2472                           ;mpu6x.c: 32: unsigned char i;
  2473                           ;mpu6x.c: 34: swI2C_Start();
  2474  0573  266E               	fcall	_swI2C_Start
  2475                           
  2476                           ;mpu6x.c: 36: if(swI2C_WriteByte(0x18<<1)== 0 )
  2477  0574  3030               	movlw	48
  2478  0575  2535               	fcall	_swI2C_WriteByte
  2479  0576  3800               	iorlw	0
  2480  0577  1D03               	skipz
  2481  0578  3401               	retlw	1
  2482                           
  2483                           ;mpu6x.c: 37: {
  2484                           ;mpu6x.c: 38: if(swI2C_WriteByte(rAdd)==0 )
  2485  0579  082A               	movf	AccRead@rAdd,w
  2486  057A  2535               	fcall	_swI2C_WriteByte
  2487  057B  3800               	iorlw	0
  2488  057C  1D03               	skipz
  2489  057D  3402               	retlw	2
  2490                           
  2491                           ;mpu6x.c: 39: {
  2492                           ;mpu6x.c: 40: swI2C_Start();
  2493  057E  266E               	fcall	_swI2C_Start
  2494                           
  2495                           ;mpu6x.c: 41: if(swI2C_WriteByte((0x18<<1)|1)== 0 ){
  2496  057F  3031               	movlw	49
  2497  0580  2535               	fcall	_swI2C_WriteByte
  2498  0581  3800               	iorlw	0
  2499  0582  1D03               	skipz
  2500  0583  3401               	retlw	1
  2501                           
  2502                           ;mpu6x.c: 43: for(i=0; i<(len-1);i++){
  2503  0584  01AB               	clrf	AccRead@i
  2504  0585                     l6644:	
  2505  0585  0826               	movf	AccRead@len,w
  2506  0586  3EFF               	addlw	255
  2507  0587  00A7               	movwf	??_AccRead
  2508  0588  30FF               	movlw	255
  2509  0589  1803               	skipnc
  2510  058A  3000               	movlw	0
  2511  058B  00A8               	movwf	??_AccRead+1
  2512  058C  3A80               	xorlw	128
  2513  058D  3C80               	sublw	128
  2514  058E  1D03               	skipz
  2515  058F  2D92               	goto	u2815
  2516  0590  0827               	movf	??_AccRead,w
  2517  0591  022B               	subwf	AccRead@i,w
  2518  0592                     u2815:	
  2519                           
  2520                           ;mpu6x.c: 44: dat[i]=swI2C_ReadByte(1);
  2521  0592  3001               	movlw	1
  2522  0593  1803               	btfsc	3,0
  2523  0594  2D99               	goto	L12
  2524  0595  24F6               	fcall	_swI2C_ReadByte
  2525  0596  259D               	fcall	PL2	;call to abstracted procedure
  2526  0597  0AAB               	incf	AccRead@i,f
  2527  0598  2D85               	goto	l6644
  2528  0599                     L12:	
  2529                           ;mpu6x.c: 45: }
  2530                           ;mpu6x.c: 46: dat[i]=swI2C_ReadByte(1);
  2531                           
  2532  0599  24F6               	fcall	_swI2C_ReadByte
  2533  059A  259D               	fcall	PL2	;call to abstracted procedure
  2534                           
  2535                           ;mpu6x.c: 47: swI2C_Stop();
  2536  059B  26B3               	fcall	_swI2C_Stop
  2537                           
  2538                           ;mpu6x.c: 48: return 0;
  2539  059C  3400               	retlw	0
  2540  059D                     __end_of_AccRead:	
  2541                           ;mpu6x.c: 54: else
  2542                           ;mpu6x.c: 55: return 2;
  2543                           
  2544                           ;mpu6x.c: 51: else
  2545                           ;mpu6x.c: 52: return 1;
  2546                           
  2547  059D                     PL2:	
  2548  059D  00A7               	movwf	??_AccRead
  2549  059E  082B               	movf	AccRead@i,w
  2550  059F  0724               	addwf	AccRead@dat,w
  2551  05A0  00A8               	movwf	??_AccRead+1
  2552  05A1  0825               	movf	AccRead@dat+1,w
  2553  05A2  1803               	skipnc
  2554  05A3  3E01               	addlw	1
  2555  05A4  00A9               	movwf	??_AccRead+2
  2556  05A5  0828               	movf	??_AccRead+1,w
  2557  05A6  0084               	movwf	4
  2558  05A7  1383               	bcf	3,7
  2559  05A8  1829               	btfsc	??_AccRead+2,0
  2560  05A9  1783               	bsf	3,7
  2561  05AA  0827               	movf	??_AccRead,w
  2562  05AB  0080               	movwf	0
  2563  05AC  0008               	return
  2564                           
  2565                           	psect	text862
  2566  05AD                     __ptext862:	
  2567 ;; =============== function _AccRead ends ============
  2568                           
  2569                           
  2570 ;; *************** function _AccWrite *****************
  2571 ;; Defined at:
  2572 ;;		line 4 in file "mpu6x.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  rAdd            1    wreg     unsigned char 
  2575 ;;  dat             2    3[BANK0 ] PTR unsigned char 
  2576 ;;		 -> RAM(256), 
  2577 ;;  len             1    5[BANK0 ] unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  rAdd            1    8[BANK0 ] unsigned char 
  2580 ;;  i               1    9[BANK0 ] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      unsigned char 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 20/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1
  2590 ;;      Params:         0       3       0
  2591 ;;      Locals:         0       2       0
  2592 ;;      Temps:          0       2       0
  2593 ;;      Totals:         0       7       0
  2594 ;;Total ram usage:        7 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    3
  2597 ;; This function calls:
  2598 ;;		_swI2C_Start
  2599 ;;		_swI2C_WriteByte
  2600 ;;		_swI2C_Stop
  2601 ;; This function is called by:
  2602 ;;		_main
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605  05AD                     _AccWrite:	
  2606                           
  2607                           ; Regs used in _AccWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2608                           ;AccWrite@rAdd stored from wreg
  2609  05AD  00A8               	movwf	AccWrite@rAdd
  2610                           
  2611                           ;mpu6x.c: 5: unsigned char i;
  2612                           ;mpu6x.c: 6: swI2C_Start();
  2613  05AE  266E               	fcall	_swI2C_Start
  2614                           
  2615                           ;mpu6x.c: 8: if(swI2C_WriteByte(0x18<<1)== 0 )
  2616  05AF  3030               	movlw	48
  2617  05B0  2535               	fcall	_swI2C_WriteByte
  2618  05B1  3800               	iorlw	0
  2619  05B2  1D03               	skipz
  2620  05B3  3401               	retlw	1
  2621                           
  2622                           ;mpu6x.c: 9: {
  2623                           ;mpu6x.c: 10: if(swI2C_WriteByte(rAdd)==0 )
  2624  05B4  0828               	movf	AccWrite@rAdd,w
  2625  05B5  2535               	fcall	_swI2C_WriteByte
  2626  05B6  3800               	iorlw	0
  2627  05B7  1D03               	skipz
  2628  05B8  3402               	retlw	2
  2629                           
  2630                           ;mpu6x.c: 11: {
  2631                           ;mpu6x.c: 12: for(i=0; i<len;i++){
  2632  05B9  01A9               	clrf	AccWrite@i
  2633  05BA                     l6614:	
  2634  05BA  0825               	movf	AccWrite@len,w
  2635  05BB  0229               	subwf	AccWrite@i,w
  2636  05BC  1803               	btfsc	3,0
  2637  05BD  2DD3               	goto	l6616
  2638                           
  2639                           ;mpu6x.c: 13: if(swI2C_WriteByte(dat[i])==1 ){
  2640  05BE  0829               	movf	AccWrite@i,w
  2641  05BF  0723               	addwf	AccWrite@dat,w
  2642  05C0  00A6               	movwf	??_AccWrite
  2643  05C1  0824               	movf	AccWrite@dat+1,w
  2644  05C2  1803               	skipnc
  2645  05C3  3E01               	addlw	1
  2646  05C4  00A7               	movwf	??_AccWrite+1
  2647  05C5  0826               	movf	??_AccWrite,w
  2648  05C6  0084               	movwf	4
  2649  05C7  1783               	bsf	3,7
  2650  05C8  1C27               	btfss	??_AccWrite+1,0
  2651  05C9  1383               	bcf	3,7
  2652  05CA  0800               	movf	0,w
  2653  05CB  2535               	fcall	_swI2C_WriteByte
  2654  05CC  3A01               	xorlw	1
  2655  05CD  1D03               	skipz
  2656  05CE  2DD1               	goto	l6612
  2657                           
  2658                           ;mpu6x.c: 14: swI2C_Stop();
  2659  05CF  26B3               	fcall	_swI2C_Stop
  2660                           
  2661                           ;mpu6x.c: 15: return 3;
  2662  05D0  3403               	retlw	3
  2663  05D1                     l6612:	
  2664  05D1  0AA9               	incf	AccWrite@i,f
  2665  05D2  2DBA               	goto	l6614
  2666  05D3                     l6616:	
  2667                           
  2668                           ;mpu6x.c: 16: }
  2669                           ;mpu6x.c: 17: }
  2670                           ;mpu6x.c: 18: swI2C_Stop();
  2671  05D3  26B3               	fcall	_swI2C_Stop
  2672                           
  2673                           ;mpu6x.c: 19: return 0;
  2674  05D4  3400               	retlw	0
  2675  05D5                     __end_of_AccWrite:	
  2676                           ;mpu6x.c: 24: else
  2677                           ;mpu6x.c: 25: return 1;
  2678                           
  2679                           ;mpu6x.c: 21: else
  2680                           ;mpu6x.c: 22: return 2;
  2681                           
  2682                           
  2683                           	psect	text863
  2684  04F6                     __ptext863:	
  2685 ;; =============== function _AccWrite ends ============
  2686                           
  2687                           
  2688 ;; *************** function _swI2C_ReadByte *****************
  2689 ;; Defined at:
  2690 ;;		line 112 in file "SWI2C.C"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  Ack             1    wreg     unsigned char 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  Ack             1    1[BANK0 ] unsigned char 
  2695 ;;  i               1    3[BANK0 ] unsigned char 
  2696 ;;  dat             1    2[BANK0 ] unsigned char 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      unsigned char 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 20/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1
  2706 ;;      Params:         0       0       0
  2707 ;;      Locals:         0       3       0
  2708 ;;      Temps:          0       1       0
  2709 ;;      Totals:         0       4       0
  2710 ;;Total ram usage:        4 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    2
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_AccRead
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719  04F6                     _swI2C_ReadByte:	
  2720                           
  2721                           ; Regs used in _swI2C_ReadByte: [wreg+status,2+status,0]
  2722                           ;swI2C_ReadByte@Ack stored from wreg
  2723  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2724  04F7  00A1               	movwf	swI2C_ReadByte@Ack
  2725  04F8  01A2               	clrf	swI2C_ReadByte@dat
  2726                           
  2727                           ;SWI2C.C: 115: RA7 = 0;
  2728  04F9  1385               	bcf	5,7
  2729                           
  2730                           ;SWI2C.C: 116: TRISA |=0x40;;
  2731  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2732  04FB  1705               	bsf	5,6	;volatile
  2733                           
  2734                           ;SWI2C.C: 117: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2735  04FC  3005               	movlw	5
  2736  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2737  04FE  00A0               	movwf	??_swI2C_ReadByte
  2738  04FF                     u3547:	
  2739  04FF  0BA0               	decfsz	??_swI2C_ReadByte,f
  2740  0500  2CFF               	goto	u3547
  2741                           
  2742                           ;SWI2C.C: 118: for(i=0;i<8;i++)
  2743  0501  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0502  01A3               	clrf	swI2C_ReadByte@i
  2745  0503                     l2600:	
  2746  0503  3005               	movlw	5
  2747                           
  2748                           ;SWI2C.C: 119: {
  2749                           ;SWI2C.C: 120: RA7 = 1;
  2750  0504  1785               	bsf	5,7
  2751                           
  2752                           ;SWI2C.C: 121: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2753  0505  00A0               	movwf	??_swI2C_ReadByte
  2754  0506                     u3557:	
  2755  0506  0BA0               	decfsz	??_swI2C_ReadByte,f
  2756  0507  2D06               	goto	u3557
  2757                           
  2758                           ;SWI2C.C: 122: dat = dat<<1 |(RA6 & 1 );
  2759  0508  3000               	movlw	0
  2760  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2761  050A  1B05               	btfsc	5,6
  2762  050B  3001               	movlw	1
  2763  050C  3901               	andlw	1
  2764  050D  00A0               	movwf	??_swI2C_ReadByte
  2765  050E  1003               	clrc
  2766  050F  0D22               	rlf	swI2C_ReadByte@dat,w
  2767  0510  0420               	iorwf	??_swI2C_ReadByte,w
  2768  0511  00A2               	movwf	swI2C_ReadByte@dat
  2769  0512  3005               	movlw	5
  2770                           
  2771                           ;SWI2C.C: 125: RA7 = 0;
  2772  0513  1385               	bcf	5,7
  2773                           
  2774                           ;SWI2C.C: 126: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2775  0514  00A0               	movwf	??_swI2C_ReadByte
  2776  0515                     u3567:	
  2777  0515  0BA0               	decfsz	??_swI2C_ReadByte,f
  2778  0516  2D15               	goto	u3567
  2779  0517  3008               	movlw	8
  2780  0518  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0519  0AA3               	incf	swI2C_ReadByte@i,f
  2782  051A  0223               	subwf	swI2C_ReadByte@i,w
  2783  051B  1C03               	skipc
  2784  051C  2D03               	goto	l2600
  2785                           
  2786                           ;SWI2C.C: 127: }
  2787                           ;SWI2C.C: 129: TRISA &=0xbf;;
  2788  051D  1683               	bsf	3,5	;RP0=1, select bank1
  2789  051E  1305               	bcf	5,6	;volatile
  2790                           
  2791                           ;SWI2C.C: 131: RA6 = (Ack) ? 0 : 1;
  2792  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0520  08A1               	movf	swI2C_ReadByte@Ack,f
  2794  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0522  1D03               	btfss	3,2
  2796  0523  2D26               	goto	L13
  2797  0524  1705               	bsf	5,6
  2798  0525  2D27               	goto	u2734
  2799  0526                     L13:	
  2800  0526  1305               	bcf	5,6
  2801  0527                     u2734:	
  2802  0527  3005               	movlw	5
  2803                           
  2804                           ;SWI2C.C: 132: RA7 = 1;
  2805  0528  1785               	bsf	5,7
  2806                           
  2807                           ;SWI2C.C: 133: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2808  0529  00A0               	movwf	??_swI2C_ReadByte
  2809  052A                     u3577:	
  2810  052A  0BA0               	decfsz	??_swI2C_ReadByte,f
  2811  052B  2D2A               	goto	u3577
  2812  052C  3005               	movlw	5
  2813                           
  2814                           ;SWI2C.C: 134: RA7 = 0;
  2815  052D  1283               	bcf	3,5	;RP0=0, select bank0
  2816  052E  1385               	bcf	5,7
  2817                           
  2818                           ;SWI2C.C: 135: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2819  052F  00A0               	movwf	??_swI2C_ReadByte
  2820  0530                     u3587:	
  2821  0530  0BA0               	decfsz	??_swI2C_ReadByte,f
  2822  0531  2D30               	goto	u3587
  2823                           
  2824                           ;SWI2C.C: 136: return dat;
  2825  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2826  0533  0822               	movf	swI2C_ReadByte@dat,w
  2827  0534  0008               	return
  2828  0535                     __end_of_swI2C_ReadByte:	
  2829                           
  2830                           	psect	text864
  2831  0535                     __ptext864:	
  2832 ;; =============== function _swI2C_ReadByte ends ============
  2833                           
  2834                           
  2835 ;; *************** function _swI2C_WriteByte *****************
  2836 ;; Defined at:
  2837 ;;		line 86 in file "SWI2C.C"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  dat             1    wreg     unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  dat             1    1[BANK0 ] unsigned char 
  2842 ;;  i               1    2[BANK0 ] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      unsigned char 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 20/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMMON   BANK0   BANK1
  2852 ;;      Params:         0       0       0
  2853 ;;      Locals:         0       2       0
  2854 ;;      Temps:          0       1       0
  2855 ;;      Totals:         0       3       0
  2856 ;;Total ram usage:        3 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    2
  2859 ;; This function calls:
  2860 ;;		Nothing
  2861 ;; This function is called by:
  2862 ;;		_AccWrite
  2863 ;;		_AccRead
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866  0535                     _swI2C_WriteByte:	
  2867                           
  2868                           ; Regs used in _swI2C_WriteByte: [wreg+status,2+status,0]
  2869                           ;swI2C_WriteByte@dat stored from wreg
  2870  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0536  00A1               	movwf	swI2C_WriteByte@dat
  2872                           
  2873                           ;SWI2C.C: 89: TRISA &=0xbf;;
  2874  0537  1683               	bsf	3,5	;RP0=1, select bank1
  2875  0538  1305               	bcf	5,6	;volatile
  2876                           
  2877                           ;SWI2C.C: 90: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2878  0539  3005               	movlw	5
  2879  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2880  053B  00A0               	movwf	??_swI2C_WriteByte
  2881  053C                     u3597:	
  2882  053C  0BA0               	decfsz	??_swI2C_WriteByte,f
  2883  053D  2D3C               	goto	u3597
  2884                           
  2885                           ;SWI2C.C: 91: for(i=0;i<8;i++)
  2886  053E  1283               	bcf	3,5	;RP0=0, select bank0
  2887  053F  01A2               	clrf	swI2C_WriteByte@i
  2888  0540                     l2595:	
  2889                           
  2890                           ;SWI2C.C: 92: {
  2891                           ;SWI2C.C: 93: RA6 = (dat&0x80) ? 1:0;
  2892  0540  1FA1               	btfss	swI2C_WriteByte@dat,7
  2893  0541  2D45               	goto	u2680
  2894  0542  1283               	bcf	3,5	;RP0=0, select bank0
  2895  0543  1705               	bsf	5,6
  2896  0544  2D47               	goto	u2694
  2897  0545                     u2680:	
  2898  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0546  1305               	bcf	5,6
  2900  0547                     u2694:	
  2901  0547  3005               	movlw	5
  2902                           
  2903                           ;SWI2C.C: 94: dat<<=1;
  2904  0548  1003               	clrc
  2905  0549  0DA1               	rlf	swI2C_WriteByte@dat,f
  2906                           
  2907                           ;SWI2C.C: 95: RA7 = 1;
  2908  054A  1785               	bsf	5,7
  2909                           
  2910                           ;SWI2C.C: 96: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2911  054B  00A0               	movwf	??_swI2C_WriteByte
  2912  054C                     u3607:	
  2913  054C  0BA0               	decfsz	??_swI2C_WriteByte,f
  2914  054D  2D4C               	goto	u3607
  2915  054E  3005               	movlw	5
  2916                           
  2917                           ;SWI2C.C: 97: RA7 = 0;
  2918  054F  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0550  1385               	bcf	5,7
  2920                           
  2921                           ;SWI2C.C: 98: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2922  0551  00A0               	movwf	??_swI2C_WriteByte
  2923  0552                     u3617:	
  2924  0552  0BA0               	decfsz	??_swI2C_WriteByte,f
  2925  0553  2D52               	goto	u3617
  2926  0554  3008               	movlw	8
  2927  0555  1283               	bcf	3,5	;RP0=0, select bank0
  2928  0556  0AA2               	incf	swI2C_WriteByte@i,f
  2929  0557  0222               	subwf	swI2C_WriteByte@i,w
  2930  0558  1C03               	skipc
  2931  0559  2D40               	goto	l2595
  2932                           
  2933                           ;SWI2C.C: 99: }
  2934                           ;SWI2C.C: 101: TRISA |=0x40;;
  2935  055A  1683               	bsf	3,5	;RP0=1, select bank1
  2936  055B  1705               	bsf	5,6	;volatile
  2937                           
  2938                           ;SWI2C.C: 102: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2939  055C  3005               	movlw	5
  2940  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2941  055E  00A0               	movwf	??_swI2C_WriteByte
  2942  055F                     u3627:	
  2943  055F  0BA0               	decfsz	??_swI2C_WriteByte,f
  2944  0560  2D5F               	goto	u3627
  2945  0561  3005               	movlw	5
  2946                           
  2947                           ;SWI2C.C: 103: RA7 = 1;
  2948  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2949  0563  1785               	bsf	5,7
  2950                           
  2951                           ;SWI2C.C: 104: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2952  0564  00A0               	movwf	??_swI2C_WriteByte
  2953  0565                     u3637:	
  2954  0565  0BA0               	decfsz	??_swI2C_WriteByte,f
  2955  0566  2D65               	goto	u3637
  2956                           
  2957                           ;SWI2C.C: 105: i= RA6;
  2958  0567  3000               	movlw	0
  2959  0568  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0569  1B05               	btfsc	5,6
  2961  056A  3001               	movlw	1
  2962  056B  00A2               	movwf	swI2C_WriteByte@i
  2963                           
  2964                           ;SWI2C.C: 106: RA7 = 0;
  2965  056C  1385               	bcf	5,7
  2966                           
  2967                           ;SWI2C.C: 107: TRISA &=0xbf;;
  2968  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2969  056E  1305               	bcf	5,6	;volatile
  2970                           
  2971                           ;SWI2C.C: 108: return i;
  2972  056F  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0570  0822               	movf	swI2C_WriteByte@i,w
  2974  0571  0008               	return
  2975  0572                     __end_of_swI2C_WriteByte:	
  2976                           
  2977                           	psect	text865
  2978  06B3                     __ptext865:	
  2979 ;; =============== function _swI2C_WriteByte ends ============
  2980                           
  2981                           
  2982 ;; *************** function _swI2C_Stop *****************
  2983 ;; Defined at:
  2984 ;;		line 35 in file "SWI2C.C"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;		None
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;		None
  2989 ;; Return value:  Size  Location     Type
  2990 ;;		None               void
  2991 ;; Registers used:
  2992 ;;		wreg
  2993 ;; Tracked objects:
  2994 ;;		On entry : 20/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMMON   BANK0   BANK1
  2998 ;;      Params:         0       0       0
  2999 ;;      Locals:         0       0       0
  3000 ;;      Temps:          0       1       0
  3001 ;;      Totals:         0       1       0
  3002 ;;Total ram usage:        1 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:    2
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_AccWrite
  3009 ;;		_AccRead
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012  06B3                     _swI2C_Stop:	
  3013  06B3  3005               	movlw	5
  3014                           
  3015                           ;SWI2C.C: 37: RA6 = 0;
  3016                           
  3017                           ; Regs used in _swI2C_Stop: [wreg]
  3018  06B4  1305               	bcf	5,6
  3019                           
  3020                           ;SWI2C.C: 38: RA7 = 1;
  3021  06B5  1785               	bsf	5,7
  3022                           
  3023                           ;SWI2C.C: 39: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3024  06B6  00A0               	movwf	??_swI2C_Stop
  3025  06B7                     u3647:	
  3026  06B7  0BA0               	decfsz	??_swI2C_Stop,f
  3027  06B8  2EB7               	goto	u3647
  3028  06B9  3005               	movlw	5
  3029                           
  3030                           ;SWI2C.C: 40: RA6 = 1;
  3031  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3032  06BB  1705               	bsf	5,6
  3033                           
  3034                           ;SWI2C.C: 41: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3035  06BC  00A0               	movwf	??_swI2C_Stop
  3036  06BD                     u3657:	
  3037  06BD  0BA0               	decfsz	??_swI2C_Stop,f
  3038  06BE  2EBD               	goto	u3657
  3039  06BF  0008               	return
  3040  06C0                     __end_of_swI2C_Stop:	
  3041                           
  3042                           	psect	text866
  3043  066E                     __ptext866:	
  3044 ;; =============== function _swI2C_Stop ends ============
  3045                           
  3046                           
  3047 ;; *************** function _swI2C_Start *****************
  3048 ;; Defined at:
  3049 ;;		line 22 in file "SWI2C.C"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;		None
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;		None
  3054 ;; Return value:  Size  Location     Type
  3055 ;;		None               void
  3056 ;; Registers used:
  3057 ;;		wreg
  3058 ;; Tracked objects:
  3059 ;;		On entry : 20/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1
  3063 ;;      Params:         0       0       0
  3064 ;;      Locals:         0       0       0
  3065 ;;      Temps:          0       1       0
  3066 ;;      Totals:         0       1       0
  3067 ;;Total ram usage:        1 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    2
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_AccWrite
  3074 ;;		_AccRead
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077  066E                     _swI2C_Start:	
  3078  066E  3005               	movlw	5
  3079                           
  3080                           ;SWI2C.C: 24: RA7 = 1;
  3081                           
  3082                           ; Regs used in _swI2C_Start: [wreg]
  3083  066F  1785               	bsf	5,7
  3084                           
  3085                           ;SWI2C.C: 26: RA6 = 1;
  3086  0670  1705               	bsf	5,6
  3087                           
  3088                           ;SWI2C.C: 27: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3089  0671  00A0               	movwf	??_swI2C_Start
  3090  0672                     u3667:	
  3091  0672  0BA0               	decfsz	??_swI2C_Start,f
  3092  0673  2E72               	goto	u3667
  3093  0674  3005               	movlw	5
  3094                           
  3095                           ;SWI2C.C: 28: RA6 = 0;
  3096  0675  1283               	bcf	3,5	;RP0=0, select bank0
  3097  0676  1305               	bcf	5,6
  3098                           
  3099                           ;SWI2C.C: 29: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3100  0677  00A0               	movwf	??_swI2C_Start
  3101  0678                     u3677:	
  3102  0678  0BA0               	decfsz	??_swI2C_Start,f
  3103  0679  2E78               	goto	u3677
  3104  067A  3005               	movlw	5
  3105                           
  3106                           ;SWI2C.C: 30: RA7 = 0;
  3107  067B  1283               	bcf	3,5	;RP0=0, select bank0
  3108  067C  1385               	bcf	5,7
  3109                           
  3110                           ;SWI2C.C: 31: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3111  067D  00A0               	movwf	??_swI2C_Start
  3112  067E                     u3687:	
  3113  067E  0BA0               	decfsz	??_swI2C_Start,f
  3114  067F  2E7E               	goto	u3687
  3115  0680  0008               	return
  3116  0681                     __end_of_swI2C_Start:	
  3117                           
  3118                           	psect	text867
  3119  05D5                     __ptext867:	
  3120 ;; =============== function _swI2C_Start ends ============
  3121                           
  3122                           
  3123 ;; *************** function _swI2C_Init *****************
  3124 ;; Defined at:
  3125 ;;		line 8 in file "SWI2C.C"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;		None
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;		None               void
  3132 ;; Registers used:
  3133 ;;		wreg
  3134 ;; Tracked objects:
  3135 ;;		On entry : 20/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1
  3139 ;;      Params:         0       0       0
  3140 ;;      Locals:         0       0       0
  3141 ;;      Temps:          0       1       0
  3142 ;;      Totals:         0       1       0
  3143 ;;Total ram usage:        1 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    2
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_main
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152  05D5                     _swI2C_Init:	
  3153                           
  3154                           ;SWI2C.C: 10: TRISA &=0xbf;;
  3155                           
  3156                           ; Regs used in _swI2C_Init: [wreg]
  3157  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  3158  05D6  1305               	bcf	5,6	;volatile
  3159                           
  3160                           ;SWI2C.C: 11: TRISA &=0x7f;;
  3161  05D7  1385               	bcf	5,7	;volatile
  3162                           
  3163                           ;SWI2C.C: 12: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3164  05D8  3005               	movlw	5
  3165  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3166  05DA  00A0               	movwf	??_swI2C_Init
  3167  05DB                     u3697:	
  3168  05DB  0BA0               	decfsz	??_swI2C_Init,f
  3169  05DC  2DDB               	goto	u3697
  3170  05DD  3005               	movlw	5
  3171                           
  3172                           ;SWI2C.C: 13: RA7 = 1;
  3173  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3174  05DF  1785               	bsf	5,7
  3175  05E0  1705               	bsf	5,6
  3176                           
  3177                           ;SWI2C.C: 15: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3178  05E1  00A0               	movwf	??_swI2C_Init
  3179  05E2                     u3707:	
  3180  05E2  0BA0               	decfsz	??_swI2C_Init,f
  3181  05E3  2DE2               	goto	u3707
  3182                           
  3183                           ;SWI2C.C: 16: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3184  05E4  3005               	movlw	5
  3185  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3186  05E6  00A0               	movwf	??_swI2C_Init
  3187  05E7                     u3717:	
  3188  05E7  0BA0               	decfsz	??_swI2C_Init,f
  3189  05E8  2DE7               	goto	u3717
  3190                           
  3191                           ;SWI2C.C: 17: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3192  05E9  3005               	movlw	5
  3193  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  3194  05EB  00A0               	movwf	??_swI2C_Init
  3195  05EC                     u3727:	
  3196  05EC  0BA0               	decfsz	??_swI2C_Init,f
  3197  05ED  2DEC               	goto	u3727
  3198                           
  3199                           ;SWI2C.C: 18: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3200  05EE  3005               	movlw	5
  3201  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3202  05F0  00A0               	movwf	??_swI2C_Init
  3203  05F1                     u3737:	
  3204  05F1  0BA0               	decfsz	??_swI2C_Init,f
  3205  05F2  2DF1               	goto	u3737
  3206  05F3  0008               	return
  3207  05F4                     __end_of_swI2C_Init:	
  3208                           
  3209                           	psect	text868
  3210  06D9                     __ptext868:	
  3211 ;; =============== function _swI2C_Init ends ============
  3212                           
  3213                           
  3214 ;; *************** function _sys_init *****************
  3215 ;; Defined at:
  3216 ;;		line 3 in file "sysinit.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;		None               void
  3223 ;; Registers used:
  3224 ;;		wreg
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 20/20
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1
  3230 ;;      Params:         0       0       0
  3231 ;;      Locals:         0       0       0
  3232 ;;      Temps:          0       0       0
  3233 ;;      Totals:         0       0       0
  3234 ;;Total ram usage:        0 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    2
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243  06D9                     _sys_init:	
  3244                           
  3245                           ;sysinit.c: 21: OSCCON = 0B01010001;
  3246                           
  3247                           ; Regs used in _sys_init: [wreg]
  3248  06D9  3051               	movlw	81
  3249  06DA  1683               	bsf	3,5	;RP0=1, select bank1
  3250  06DB  008F               	movwf	15	;volatile
  3251                           
  3252                           ;sysinit.c: 22: _nop();
  3253  06DC  0000               	nop
  3254  06DD                     l1784:	
  3255                           ;sysinit.c: 28: while(HTS==0);
  3256                           
  3257  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  3258  06DE  190F               	btfsc	15,2
  3259  06DF  0008               	return
  3260  06E0  2EDD               	goto	l1784
  3261  06E1                     __end_of_sys_init:	
  3262                           
  3263                           	psect	text869
  3264  0642                     __ptext869:	
  3265 ;; =============== function _sys_init ends ============
  3266                           
  3267                           
  3268 ;; *************** function _beep *****************
  3269 ;; Defined at:
  3270 ;;		line 176 in file "smartkey.C"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  delay           1    wreg     unsigned char 
  3273 ;;  rep             1    4[BANK0 ] unsigned char 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  delay           1    5[BANK0 ] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;		None               void
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0, pclath, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 20/0
  3282 ;;		On exit  : 20/0
  3283 ;;		Unchanged: FFFDF/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1
  3285 ;;      Params:         0       1       0
  3286 ;;      Locals:         0       1       0
  3287 ;;      Temps:          0       0       0
  3288 ;;      Totals:         0       2       0
  3289 ;;Total ram usage:        2 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    3
  3292 ;; This function calls:
  3293 ;;		_delay_x10ms
  3294 ;; This function is called by:
  3295 ;;		_main
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298  0642                     _beep:	
  3299                           
  3300                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  3301                           ;beep@delay stored from wreg
  3302  0642  00A5               	movwf	beep@delay
  3303  0643                     l6514:	
  3304                           ;smartkey.C: 177: {
  3305                           ;smartkey.C: 178: while(rep--){
  3306                           
  3307  0643  03A4               	decf	beep@rep,f
  3308  0644  0824               	movf	beep@rep,w
  3309  0645  3AFF               	xorlw	255
  3310  0646  1903               	btfsc	3,2
  3311  0647  0008               	return
  3312  0648  300C               	movlw	12
  3313                           
  3314                           ;smartkey.C: 179: TMR2ON = 1;
  3315  0649  1512               	bsf	18,2
  3316                           
  3317                           ;smartkey.C: 180: PR2L = 12;
  3318  064A  1683               	bsf	3,5	;RP0=1, select bank1
  3319  064B  0091               	movwf	17	;volatile
  3320                           
  3321                           ;smartkey.C: 181: delay_x10ms(delay);
  3322  064C  1283               	bcf	3,5	;RP0=0, select bank0
  3323  064D  0825               	movf	beep@delay,w
  3324  064E  00A0               	movwf	?_delay_x10ms
  3325  064F  01A1               	clrf	?_delay_x10ms+1
  3326  0650  2681               	fcall	_delay_x10ms
  3327  0651  3014               	movlw	20
  3328                           
  3329                           ;smartkey.C: 183: TMR2ON = 0;RA3 =0;
  3330  0652  1112               	bcf	18,2
  3331  0653  1185               	bcf	5,3
  3332                           
  3333                           ;smartkey.C: 184: delay_x10ms(20);
  3334  0654  00A0               	movwf	?_delay_x10ms
  3335  0655  01A1               	clrf	?_delay_x10ms+1
  3336  0656  2681               	fcall	_delay_x10ms
  3337  0657  2E43               	goto	l6514
  3338  0658                     __end_of_beep:	
  3339                           
  3340                           	psect	text870
  3341  046C                     __ptext870:	
  3342 ;; =============== function _beep ends ============
  3343                           
  3344                           
  3345 ;; *************** function ___awdiv *****************
  3346 ;; Defined at:
  3347 ;;		line 5 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\awdiv.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  divisor         2    0[BANK0 ] int 
  3350 ;;  dividend        2    2[BANK0 ] int 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  quotient        2    6[BANK0 ] int 
  3353 ;;  sign            1    5[BANK0 ] unsigned char 
  3354 ;;  counter         1    4[BANK0 ] unsigned char 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  2    0[BANK0 ] int 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0
  3359 ;; Tracked objects:
  3360 ;;		On entry : 20/0
  3361 ;;		On exit  : 20/0
  3362 ;;		Unchanged: FFFDF/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1
  3364 ;;      Params:         0       4       0
  3365 ;;      Locals:         0       4       0
  3366 ;;      Temps:          0       0       0
  3367 ;;      Totals:         0       8       0
  3368 ;;Total ram usage:        8 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    2
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_main
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377  046C                     ___awdiv:	
  3378                           
  3379                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3380  046C  01A5               	clrf	___awdiv@sign
  3381  046D  1FA1               	btfss	___awdiv@divisor+1,7
  3382  046E  2C76               	goto	l6466
  3383  046F  09A0               	comf	___awdiv@divisor,f
  3384  0470  09A1               	comf	___awdiv@divisor+1,f
  3385  0471  0AA0               	incf	___awdiv@divisor,f
  3386  0472  1903               	skipnz
  3387  0473  0AA1               	incf	___awdiv@divisor+1,f
  3388  0474  01A5               	clrf	___awdiv@sign
  3389  0475  0AA5               	incf	___awdiv@sign,f
  3390  0476                     l6466:	
  3391  0476  1FA3               	btfss	___awdiv@dividend+1,7
  3392  0477  2C7F               	goto	l6472
  3393  0478  09A2               	comf	___awdiv@dividend,f
  3394  0479  09A3               	comf	___awdiv@dividend+1,f
  3395  047A  0AA2               	incf	___awdiv@dividend,f
  3396  047B  1903               	skipnz
  3397  047C  0AA3               	incf	___awdiv@dividend+1,f
  3398  047D  3001               	movlw	1
  3399  047E  06A5               	xorwf	___awdiv@sign,f
  3400  047F                     l6472:	
  3401  047F  01A6               	clrf	___awdiv@quotient
  3402  0480  01A7               	clrf	___awdiv@quotient+1
  3403  0481  0821               	movf	___awdiv@divisor+1,w
  3404  0482  0420               	iorwf	___awdiv@divisor,w
  3405  0483  1903               	skipnz
  3406  0484  2CA4               	goto	l6494
  3407  0485  01A4               	clrf	___awdiv@counter
  3408  0486                     L14:	
  3409  0486  0AA4               	incf	___awdiv@counter,f
  3410  0487  1BA1               	btfsc	___awdiv@divisor+1,7
  3411  0488  2C8D               	goto	l6482
  3412  0489  1003               	clrc
  3413  048A  0DA0               	rlf	___awdiv@divisor,f
  3414  048B  0DA1               	rlf	___awdiv@divisor+1,f
  3415  048C  2C86               	goto	L14
  3416  048D                     l6482:	
  3417  048D  1003               	clrc
  3418  048E  0DA6               	rlf	___awdiv@quotient,f
  3419  048F  0DA7               	rlf	___awdiv@quotient+1,f
  3420  0490  0821               	movf	___awdiv@divisor+1,w
  3421  0491  0223               	subwf	___awdiv@dividend+1,w
  3422  0492  1D03               	skipz
  3423  0493  2C96               	goto	u2635
  3424  0494  0820               	movf	___awdiv@divisor,w
  3425  0495  0222               	subwf	___awdiv@dividend,w
  3426  0496                     u2635:	
  3427  0496  1C03               	skipc
  3428  0497  2CA0               	goto	L15
  3429  0498  0820               	movf	___awdiv@divisor,w
  3430  0499  02A2               	subwf	___awdiv@dividend,f
  3431  049A  0821               	movf	___awdiv@divisor+1,w
  3432  049B  1C03               	skipc
  3433  049C  03A3               	decf	___awdiv@dividend+1,f
  3434  049D  02A3               	subwf	___awdiv@dividend+1,f
  3435  049E  1426               	bsf	___awdiv@quotient,0
  3436  049F  1003               	clrc
  3437  04A0                     L15:	
  3438  04A0  0CA1               	rrf	___awdiv@divisor+1,f
  3439  04A1  0CA0               	rrf	___awdiv@divisor,f
  3440  04A2  0BA4               	decfsz	___awdiv@counter,f
  3441  04A3  2C8D               	goto	l6482
  3442  04A4                     l6494:	
  3443  04A4  0825               	movf	___awdiv@sign,w
  3444  04A5  1903               	btfsc	3,2
  3445  04A6  2CAC               	goto	l6498
  3446  04A7  09A6               	comf	___awdiv@quotient,f
  3447  04A8  09A7               	comf	___awdiv@quotient+1,f
  3448  04A9  0AA6               	incf	___awdiv@quotient,f
  3449  04AA  1903               	skipnz
  3450  04AB  0AA7               	incf	___awdiv@quotient+1,f
  3451  04AC                     l6498:	
  3452  04AC  0827               	movf	___awdiv@quotient+1,w
  3453  04AD  00A1               	movwf	?___awdiv+1
  3454  04AE  0826               	movf	___awdiv@quotient,w
  3455  04AF  00A0               	movwf	?___awdiv
  3456  04B0  0008               	return
  3457  04B1                     __end_of___awdiv:	
  3458                           
  3459                           	psect	text871
  3460  05F4                     __ptext871:	
  3461 ;; =============== function ___awdiv ends ============
  3462                           
  3463                           
  3464 ;; *************** function _int_init *****************
  3465 ;; Defined at:
  3466 ;;		line 83 in file "sysinit.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;		None
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  tmp             1    0        unsigned char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;		None               void
  3473 ;; Registers used:
  3474 ;;		wreg, status,2
  3475 ;; Tracked objects:
  3476 ;;		On entry : 20/0
  3477 ;;		On exit  : 20/0
  3478 ;;		Unchanged: FFFDF/0
  3479 ;; Data sizes:     COMMON   BANK0   BANK1
  3480 ;;      Params:         0       0       0
  3481 ;;      Locals:         0       0       0
  3482 ;;      Temps:          0       0       0
  3483 ;;      Totals:         0       0       0
  3484 ;;Total ram usage:        0 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    2
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_main
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493  05F4                     _int_init:	
  3494                           
  3495                           ;sysinit.c: 88: INTCON = 0B00000000;
  3496                           
  3497                           ; Regs used in _int_init: [wreg+status,2]
  3498  05F4  018B               	clrf	11	;volatile
  3499                           
  3500                           ;sysinit.c: 89: PIE1 = 0B00000000;
  3501  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  3502  05F6  018C               	clrf	12	;volatile
  3503                           
  3504                           ;sysinit.c: 90: PIR1 = 0B00000000;
  3505  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3506  05F8  018C               	clrf	12	;volatile
  3507                           
  3508                           ;sysinit.c: 92: IOCA5 = 1;
  3509  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  3510  05FA  1696               	bsf	22,5
  3511                           
  3512                           ;sysinit.c: 93: tmp = PORTA;
  3513  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3514  05FC  0805               	movf	5,w	;volatile
  3515                           
  3516                           ;sysinit.c: 94: PAIF = 0;
  3517  05FD  100B               	bcf	11,0
  3518                           
  3519                           ;sysinit.c: 95: PAIE = 0;
  3520  05FE  118B               	bcf	11,3
  3521                           
  3522                           ;sysinit.c: 98: INTEDG = 0;
  3523  05FF  1683               	bsf	3,5	;RP0=1, select bank1
  3524  0600  1301               	bcf	1,6
  3525                           
  3526                           ;sysinit.c: 99: INTF = 0;
  3527  0601  108B               	bcf	11,1
  3528                           
  3529                           ;sysinit.c: 100: INTE = 1;
  3530  0602  160B               	bsf	11,4
  3531                           
  3532                           ;sysinit.c: 102: TMR2IF = 0;
  3533  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3534  0604  108C               	bcf	12,1
  3535                           
  3536                           ;sysinit.c: 103: TMR2IE = 1;
  3537  0605  1683               	bsf	3,5	;RP0=1, select bank1
  3538  0606  148C               	bsf	12,1
  3539                           
  3540                           ;sysinit.c: 104: TMR2ON = 0;
  3541  0607  1283               	bcf	3,5	;RP0=0, select bank0
  3542  0608  1112               	bcf	18,2
  3543                           
  3544                           ;sysinit.c: 110: T0IF = 0;
  3545  0609  110B               	bcf	11,2
  3546                           
  3547                           ;sysinit.c: 111: T0IE = 1;
  3548  060A  168B               	bsf	11,5
  3549                           
  3550                           ;sysinit.c: 112: T0ON = 1;
  3551  060B  159F               	bsf	31,3
  3552                           
  3553                           ;sysinit.c: 114: PEIE = 1;
  3554  060C  170B               	bsf	11,6
  3555                           
  3556                           ;sysinit.c: 116: GIE = 1;
  3557  060D  178B               	bsf	11,7
  3558  060E  0008               	return
  3559  060F                     __end_of_int_init:	
  3560                           
  3561                           	psect	text872
  3562  0694                     __ptext872:	
  3563 ;; =============== function _int_init ends ============
  3564                           
  3565                           
  3566 ;; *************** function _timer_init *****************
  3567 ;; Defined at:
  3568 ;;		line 51 in file "sysinit.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;		None               void
  3575 ;; Registers used:
  3576 ;;		wreg, status,2
  3577 ;; Tracked objects:
  3578 ;;		On entry : 20/0
  3579 ;;		On exit  : 20/0
  3580 ;;		Unchanged: FFFDF/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1
  3582 ;;      Params:         0       0       0
  3583 ;;      Locals:         0       0       0
  3584 ;;      Temps:          0       0       0
  3585 ;;      Totals:         0       0       0
  3586 ;;Total ram usage:        0 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    2
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_main
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595  0694                     _timer_init:	
  3596                           
  3597                           ;sysinit.c: 60: T0CON0 = 0B00000000;
  3598                           
  3599                           ; Regs used in _timer_init: [wreg+status,2]
  3600  0694  019F               	clrf	31	;volatile
  3601                           
  3602                           ;sysinit.c: 61: OPTION = 0B00000111;
  3603  0695  3007               	movlw	7
  3604  0696  1683               	bsf	3,5	;RP0=1, select bank1
  3605  0697  0081               	movwf	1	;volatile
  3606                           
  3607                           ;sysinit.c: 62: TMR0 = 179;
  3608  0698  30B3               	movlw	179
  3609  0699  1283               	bcf	3,5	;RP0=0, select bank0
  3610  069A  0081               	movwf	1	;volatile
  3611                           
  3612                           ;sysinit.c: 64: TMR2H = 0;
  3613  069B  0193               	clrf	19	;volatile
  3614                           
  3615                           ;sysinit.c: 65: TMR2L = 0;
  3616  069C  0191               	clrf	17	;volatile
  3617                           
  3618                           ;sysinit.c: 66: PR2H = 0;
  3619  069D  1683               	bsf	3,5	;RP0=1, select bank1
  3620  069E  0192               	clrf	18	;volatile
  3621                           
  3622                           ;sysinit.c: 67: PR2L =0;
  3623  069F  0191               	clrf	17	;volatile
  3624                           
  3625                           ;sysinit.c: 68: T2CON0 = 0B00101001;
  3626  06A0  3029               	movlw	41
  3627  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  3628  06A2  0092               	movwf	18	;volatile
  3629  06A3  0008               	return
  3630  06A4                     __end_of_timer_init:	
  3631                           
  3632                           	psect	text873
  3633  0658                     __ptext873:	
  3634 ;; =============== function _timer_init ends ============
  3635                           
  3636                           
  3637 ;; *************** function _gpio_init *****************
  3638 ;; Defined at:
  3639 ;;		line 32 in file "sysinit.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;		None
  3644 ;; Return value:  Size  Location     Type
  3645 ;;		None               void
  3646 ;; Registers used:
  3647 ;;		wreg, status,2
  3648 ;; Tracked objects:
  3649 ;;		On entry : 20/20
  3650 ;;		On exit  : 20/0
  3651 ;;		Unchanged: FFFDF/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1
  3653 ;;      Params:         0       0       0
  3654 ;;      Locals:         0       0       0
  3655 ;;      Temps:          0       0       0
  3656 ;;      Totals:         0       0       0
  3657 ;;Total ram usage:        0 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    2
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_main
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666  0658                     _gpio_init:	
  3667                           
  3668                           ;sysinit.c: 34: PORTA = 0B00000000;
  3669                           
  3670                           ; Regs used in _gpio_init: [wreg+status,2]
  3671  0658  1283               	bcf	3,5	;RP0=0, select bank0
  3672  0659  0185               	clrf	5	;volatile
  3673                           
  3674                           ;sysinit.c: 35: TRISA = 0B00110111;
  3675  065A  3037               	movlw	55
  3676  065B  1683               	bsf	3,5	;RP0=1, select bank1
  3677  065C  0085               	movwf	5	;volatile
  3678                           
  3679                           ;sysinit.c: 36: WPUA = 0B11000000;
  3680  065D  30C0               	movlw	192
  3681  065E  0095               	movwf	21	;volatile
  3682                           
  3683                           ;sysinit.c: 38: PORTC = 0B00000000;
  3684  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3685  0660  0187               	clrf	7	;volatile
  3686                           
  3687                           ;sysinit.c: 39: TRISC = 0B11111100;
  3688  0661  30FC               	movlw	252
  3689  0662  1683               	bsf	3,5	;RP0=1, select bank1
  3690  0663  0087               	movwf	7	;volatile
  3691                           
  3692                           ;sysinit.c: 40: WPUC = 0B00000000;
  3693  0664  0193               	clrf	19	;volatile
  3694                           
  3695                           ;sysinit.c: 42: PSRCA = 0B11111111;
  3696  0665  30FF               	movlw	255
  3697  0666  0088               	movwf	8	;volatile
  3698                           
  3699                           ;sysinit.c: 43: PSRCC = 0B11111111;
  3700  0667  0094               	movwf	20	;volatile
  3701                           
  3702                           ;sysinit.c: 44: PSINKA = 0B11111111;
  3703  0668  0097               	movwf	23	;volatile
  3704                           
  3705                           ;sysinit.c: 45: PSINKC = 0B11111111;
  3706  0669  009F               	movwf	31	;volatile
  3707                           
  3708                           ;sysinit.c: 47: MSCON = 0B00110000;
  3709  066A  3030               	movlw	48
  3710  066B  1283               	bcf	3,5	;RP0=0, select bank0
  3711  066C  009B               	movwf	27	;volatile
  3712  066D  0008               	return
  3713  066E                     __end_of_gpio_init:	
  3714                           
  3715                           	psect	text874
  3716  04B1                     __ptext874:	
  3717 ;; =============== function _gpio_init ends ============
  3718                           
  3719                           
  3720 ;; *************** function _compe *****************
  3721 ;; Defined at:
  3722 ;;		line 226 in file "smartkey.C"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  a               1    wreg     char 
  3725 ;;  b               1    0[BANK0 ] char 
  3726 ;;  dt              1    1[BANK0 ] char 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  a               1    7[BANK0 ] char 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      unsigned char 
  3731 ;; Registers used:
  3732 ;;		wreg
  3733 ;; Tracked objects:
  3734 ;;		On entry : 20/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: FFE00/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1
  3738 ;;      Params:         0       2       0
  3739 ;;      Locals:         0       1       0
  3740 ;;      Temps:          0       5       0
  3741 ;;      Totals:         0       8       0
  3742 ;;Total ram usage:        8 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    2
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_main
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751  04B1                     _compe:	
  3752                           
  3753                           ; Regs used in _compe: [wreg]
  3754                           ;compe@a stored from wreg
  3755  04B1  00A7               	movwf	compe@a
  3756                           
  3757                           ;smartkey.C: 228: if(a>b){
  3758  04B2  0820               	movf	compe@b,w
  3759  04B3  3A80               	xorlw	128
  3760  04B4  00A2               	movwf	??_compe
  3761  04B5  0827               	movf	compe@a,w
  3762  04B6  3A80               	xorlw	128
  3763  04B7  02A2               	subwf	??_compe,f
  3764  04B8  1803               	skipnc
  3765  04B9  2CDD               	goto	l6384
  3766                           
  3767                           ;smartkey.C: 229: if((a-b)<=dt) return 1;
  3768  04BA  0820               	movf	compe@b,w
  3769  04BB  0227               	subwf	compe@a,w
  3770  04BC  00A2               	movwf	??_compe
  3771  04BD  01A3               	clrf	??_compe+1
  3772  04BE  1C03               	skipc
  3773  04BF  03A3               	decf	??_compe+1,f
  3774  04C0  1BA7               	btfsc	compe@a,7
  3775  04C1  03A3               	decf	??_compe+1,f
  3776  04C2  1BA0               	btfsc	compe@b,7
  3777  04C3  0AA3               	incf	??_compe+1,f
  3778  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  3779  04C5  24EA               	fcall	PL3	;call to abstracted procedure
  3780  04C6  1D03               	skipz
  3781  04C7  2CCA               	goto	u2545
  3782  04C8  0822               	movf	??_compe,w
  3783  04C9  0224               	subwf	??_compe+2,w
  3784  04CA                     u2545:	
  3785  04CA  1C03               	skipc
  3786  04CB  3400               	retlw	0
  3787  04CC  3401               	retlw	1
  3788  04CD                     L16:	
  3789                           ;smartkey.C: 233: if((b-a)<=dt) return 1;
  3790                           
  3791  04CD  0220               	subwf	compe@b,w
  3792  04CE  00A2               	movwf	??_compe
  3793  04CF  01A3               	clrf	??_compe+1
  3794  04D0  1C03               	skipc
  3795  04D1  03A3               	decf	??_compe+1,f
  3796  04D2  1BA0               	btfsc	compe@b,7
  3797  04D3  03A3               	decf	??_compe+1,f
  3798  04D4  1BA7               	btfsc	compe@a,7
  3799  04D5  0AA3               	incf	??_compe+1,f
  3800  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  3801  04D7  24EA               	fcall	PL3	;call to abstracted procedure
  3802  04D8  1D03               	skipz
  3803  04D9  2CCA               	goto	u2545
  3804  04DA  0822               	movf	??_compe,w
  3805  04DB  0224               	subwf	??_compe+2,w
  3806  04DC  2CCA               	goto	u2545
  3807  04DD                     l6384:	
  3808                           ;smartkey.C: 230: else return 0;
  3809                           
  3810                           
  3811                           ;smartkey.C: 232: else if(a<b){
  3812  04DD  0827               	movf	compe@a,w
  3813  04DE  3A80               	xorlw	128
  3814  04DF  00A2               	movwf	??_compe
  3815  04E0  0820               	movf	compe@b,w
  3816  04E1  3A80               	xorlw	128
  3817  04E2  02A2               	subwf	??_compe,f
  3818                           
  3819                           ;smartkey.C: 236: else if(a==b){
  3820  04E3  0827               	movf	compe@a,w
  3821  04E4  1C03               	btfss	3,0
  3822  04E5  2CCD               	goto	L16
  3823  04E6  0620               	xorwf	compe@b,w
  3824  04E7  1903               	btfsc	3,2
  3825  04E8  3401               	retlw	1
  3826  04E9  3400               	retlw	0
  3827  04EA                     __end_of_compe:	
  3828  04EA                     PL3:	
  3829  04EA  0821               	movf	compe@dt,w
  3830  04EB  00A4               	movwf	??_compe+2
  3831  04EC  01A5               	clrf	??_compe+3
  3832  04ED  1BA4               	btfsc	??_compe+2,7
  3833  04EE  03A5               	decf	??_compe+3,f
  3834  04EF  0825               	movf	??_compe+3,w
  3835  04F0  3A80               	xorlw	128
  3836  04F1  00A6               	movwf	??_compe+4
  3837  04F2  0823               	movf	??_compe+1,w
  3838  04F3  3A80               	xorlw	128
  3839  04F4  0226               	subwf	??_compe+4,w
  3840  04F5  0008               	return
  3841                           
  3842                           	psect	text875
  3843  06CD                     __ptext875:	
  3844 ;; =============== function _compe ends ============
  3845                           
  3846                           
  3847 ;; *************** function _setState *****************
  3848 ;; Defined at:
  3849 ;;		line 220 in file "smartkey.C"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  stt             1    wreg     unsigned char 
  3852 ;;  _tOut           2    0[BANK0 ] unsigned int 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;  stt             1    2[BANK0 ] unsigned char 
  3855 ;; Return value:  Size  Location     Type
  3856 ;;		None               void
  3857 ;; Registers used:
  3858 ;;		wreg, status,2
  3859 ;; Tracked objects:
  3860 ;;		On entry : 20/0
  3861 ;;		On exit  : 20/0
  3862 ;;		Unchanged: FFFDF/0
  3863 ;; Data sizes:     COMMON   BANK0   BANK1
  3864 ;;      Params:         0       2       0
  3865 ;;      Locals:         0       1       0
  3866 ;;      Temps:          0       0       0
  3867 ;;      Totals:         0       3       0
  3868 ;;Total ram usage:        3 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    2
  3871 ;; This function calls:
  3872 ;;		Nothing
  3873 ;; This function is called by:
  3874 ;;		_main
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877  06CD                     _setState:	
  3878                           
  3879                           ; Regs used in _setState: [wreg+status,2]
  3880                           ;setState@stt stored from wreg
  3881  06CD  00A2               	movwf	setState@stt
  3882                           
  3883                           ;smartkey.C: 221: mtOldState = mtState;
  3884  06CE  0874               	movf	_mtState,w
  3885  06CF  00CC               	movwf	_mtOldState
  3886                           
  3887                           ;smartkey.C: 222: mtState = stt;
  3888  06D0  0822               	movf	setState@stt,w
  3889  06D1  00F4               	movwf	_mtState
  3890                           
  3891                           ;smartkey.C: 223: timeTick =0;
  3892  06D2  01F0               	clrf	_timeTick
  3893  06D3  01F1               	clrf	_timeTick+1
  3894                           
  3895                           ;smartkey.C: 224: timeOut = _tOut;
  3896  06D4  0821               	movf	setState@_tOut+1,w
  3897  06D5  00C8               	movwf	_timeOut+1
  3898  06D6  0820               	movf	setState@_tOut,w
  3899  06D7  00C7               	movwf	_timeOut
  3900  06D8  0008               	return
  3901  06D9                     __end_of_setState:	
  3902                           
  3903                           	psect	text876
  3904  06EE                     __ptext876:	
  3905 ;; =============== function _setState ends ============
  3906                           
  3907                           
  3908 ;; *************** function _beepOn *****************
  3909 ;; Defined at:
  3910 ;;		line 172 in file "smartkey.C"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;		None               void
  3917 ;; Registers used:
  3918 ;;		None
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/20
  3921 ;;		On exit  : 20/20
  3922 ;;		Unchanged: FFFDF/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1
  3924 ;;      Params:         0       0       0
  3925 ;;      Locals:         0       0       0
  3926 ;;      Temps:          0       0       0
  3927 ;;      Totals:         0       0       0
  3928 ;;Total ram usage:        0 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    2
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937  06EE                     _beepOn:	
  3938                           
  3939                           ;smartkey.C: 173: TMR2ON = 1;
  3940                           
  3941                           ; Regs used in _beepOn: []
  3942  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  3943  06EF  1512               	bsf	18,2
  3944                           
  3945                           ;smartkey.C: 174: TRISA &= 0xf7;
  3946  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  3947  06F1  1185               	bcf	5,3	;volatile
  3948  06F2  0008               	return
  3949  06F3                     __end_of_beepOn:	
  3950                           
  3951                           	psect	text877
  3952  06F3                     __ptext877:	
  3953 ;; =============== function _beepOn ends ============
  3954                           
  3955                           
  3956 ;; *************** function _beepOff *****************
  3957 ;; Defined at:
  3958 ;;		line 169 in file "smartkey.C"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;		None               void
  3965 ;; Registers used:
  3966 ;;		None
  3967 ;; Tracked objects:
  3968 ;;		On entry : 20/0
  3969 ;;		On exit  : 20/20
  3970 ;;		Unchanged: FFFDF/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1
  3972 ;;      Params:         0       0       0
  3973 ;;      Locals:         0       0       0
  3974 ;;      Temps:          0       0       0
  3975 ;;      Totals:         0       0       0
  3976 ;;Total ram usage:        0 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    2
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_main
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985  06F3                     _beepOff:	
  3986                           
  3987                           ;smartkey.C: 170: TMR2ON = 0;RA3 =0;TRISA |= 0x08;
  3988                           
  3989                           ; Regs used in _beepOff: []
  3990  06F3  1112               	bcf	18,2
  3991  06F4  1185               	bcf	5,3
  3992  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  3993  06F6  1585               	bsf	5,3	;volatile
  3994  06F7  0008               	return
  3995  06F8                     __end_of_beepOff:	
  3996                           
  3997                           	psect	text878
  3998  0681                     __ptext878:	
  3999 ;; =============== function _beepOff ends ============
  4000                           
  4001                           
  4002 ;; *************** function _delay_x10ms *****************
  4003 ;; Defined at:
  4004 ;;		line 164 in file "smartkey.C"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  t               2    0[BANK0 ] unsigned int 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  set             2    2[BANK0 ] unsigned int 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;		None               void
  4011 ;; Registers used:
  4012 ;;		wreg
  4013 ;; Tracked objects:
  4014 ;;		On entry : 20/0
  4015 ;;		On exit  : 20/0
  4016 ;;		Unchanged: FFFDF/0
  4017 ;; Data sizes:     COMMON   BANK0   BANK1
  4018 ;;      Params:         0       2       0
  4019 ;;      Locals:         0       2       0
  4020 ;;      Temps:          0       0       0
  4021 ;;      Totals:         0       4       0
  4022 ;;Total ram usage:        4 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    2
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_beep
  4029 ;;		_main
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032  0681                     _delay_x10ms:	
  4033                           
  4034                           ;smartkey.C: 165: unsigned int set = t + timeTick;
  4035                           
  4036                           ; Regs used in _delay_x10ms: [wreg]
  4037  0681  0821               	movf	delay_x10ms@t+1,w
  4038  0682  00A3               	movwf	delay_x10ms@set+1
  4039  0683  0820               	movf	delay_x10ms@t,w
  4040  0684  00A2               	movwf	delay_x10ms@set
  4041  0685  0870               	movf	_timeTick,w
  4042  0686  07A2               	addwf	delay_x10ms@set,f
  4043  0687  1803               	skipnc
  4044  0688  0AA3               	incf	delay_x10ms@set+1,f
  4045  0689  0871               	movf	_timeTick+1,w
  4046  068A  07A3               	addwf	delay_x10ms@set+1,f
  4047  068B                     l6358:	
  4048                           ;smartkey.C: 166: while(timeTick < set);
  4049                           
  4050  068B  0823               	movf	delay_x10ms@set+1,w
  4051  068C  0271               	subwf	_timeTick+1,w
  4052  068D  1D03               	skipz
  4053  068E  2E91               	goto	u2515
  4054  068F  0822               	movf	delay_x10ms@set,w
  4055  0690  0270               	subwf	_timeTick,w
  4056  0691                     u2515:	
  4057  0691  1803               	btfsc	3,0
  4058  0692  0008               	return
  4059  0693  2E8B               	goto	l6358
  4060  0694                     __end_of_delay_x10ms:	
  4061                           
  4062                           	psect	text879
  4063  060F                     __ptext879:	
  4064 ;; =============== function _delay_x10ms ends ============
  4065                           
  4066                           
  4067 ;; *************** function _WRITE_EEPROM *****************
  4068 ;; Defined at:
  4069 ;;		line 205 in file "smartkey.C"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  EEAddr          1    wreg     unsigned char 
  4072 ;;  EEData          1    0[BANK0 ] unsigned char 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  EEAddr          1    1[BANK0 ] unsigned char 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;		None               void
  4077 ;; Registers used:
  4078 ;;		wreg
  4079 ;; Tracked objects:
  4080 ;;		On entry : 20/0
  4081 ;;		On exit  : 20/20
  4082 ;;		Unchanged: FFE00/0
  4083 ;; Data sizes:     COMMON   BANK0   BANK1
  4084 ;;      Params:         0       1       0
  4085 ;;      Locals:         0       1       0
  4086 ;;      Temps:          0       0       0
  4087 ;;      Totals:         0       2       0
  4088 ;;Total ram usage:        2 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    2
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_main
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097  060F                     _WRITE_EEPROM:	
  4098                           
  4099                           ; Regs used in _WRITE_EEPROM: [wreg]
  4100                           ;WRITE_EEPROM@EEAddr stored from wreg
  4101  060F  00A1               	movwf	WRITE_EEPROM@EEAddr
  4102                           
  4103                           ;smartkey.C: 206: GIE = 0;
  4104  0610  138B               	bcf	11,7
  4105  0611                     l874:	
  4106                           ;smartkey.C: 207: while(GIE) asm("clrwdt");
  4107                           
  4108  0611  1F8B               	btfss	11,7
  4109  0612  2E15               	goto	l6350
  4110  0613  0064               	clrwdt	;#
  4111  0614  2E11               	goto	l874
  4112  0615                     l6350:	
  4113                           
  4114                           ;smartkey.C: 208: EEADR = EEAddr;
  4115  0615  1283               	bcf	3,5	;RP0=0, select bank0
  4116  0616  0821               	movf	WRITE_EEPROM@EEAddr,w
  4117  0617  1683               	bsf	3,5	;RP0=1, select bank1
  4118  0618  009B               	movwf	27	;volatile
  4119                           
  4120                           ;smartkey.C: 209: EEDAT = EEData;
  4121  0619  1283               	bcf	3,5	;RP0=0, select bank0
  4122  061A  0820               	movf	WRITE_EEPROM@EEData,w
  4123  061B  1683               	bsf	3,5	;RP0=1, select bank1
  4124  061C  009A               	movwf	26	;volatile
  4125  061D  3034               	movlw	52
  4126                           
  4127                           ;smartkey.C: 210: EEIF = 0;
  4128  061E  1283               	bcf	3,5	;RP0=0, select bank0
  4129  061F  138C               	bcf	12,7
  4130                           
  4131                           ;smartkey.C: 211: EECON1 = 0x34;
  4132  0620  1683               	bsf	3,5	;RP0=1, select bank1
  4133  0621  009C               	movwf	28	;volatile
  4134                           
  4135                           ;smartkey.C: 212: WR = 1;
  4136  0622  141D               	bsf	29,0
  4137  0623                     l877:	
  4138                           ;smartkey.C: 213: while(WR) asm("clrwdt");
  4139                           
  4140  0623  1683               	bsf	3,5	;RP0=1, select bank1
  4141  0624  1C1D               	btfss	29,0
  4142  0625  2E28               	goto	l879
  4143  0626  0064               	clrwdt	;#
  4144  0627  2E23               	goto	l877
  4145  0628                     l879:	
  4146                           
  4147                           ;smartkey.C: 215: GIE = 1;
  4148  0628  178B               	bsf	11,7
  4149  0629  0008               	return
  4150  062A                     __end_of_WRITE_EEPROM:	
  4151                           
  4152                           	psect	text880
  4153  06C0                     __ptext880:	
  4154 ;; =============== function _WRITE_EEPROM ends ============
  4155                           
  4156                           
  4157 ;; *************** function _READ_EEPROM *****************
  4158 ;; Defined at:
  4159 ;;		line 194 in file "smartkey.C"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  EEAddr          1    wreg     unsigned char 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  EEAddr          1    0[BANK0 ] unsigned char 
  4164 ;;  ReEepromData    1    1[BANK0 ] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      unsigned char 
  4167 ;; Registers used:
  4168 ;;		wreg
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/20
  4171 ;;		On exit  : 20/0
  4172 ;;		Unchanged: FFFDF/0
  4173 ;; Data sizes:     COMMON   BANK0   BANK1
  4174 ;;      Params:         0       0       0
  4175 ;;      Locals:         0       2       0
  4176 ;;      Temps:          0       0       0
  4177 ;;      Totals:         0       2       0
  4178 ;;Total ram usage:        2 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    2
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_main
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187  06C0                     _READ_EEPROM:	
  4188                           
  4189                           ; Regs used in _READ_EEPROM: [wreg]
  4190                           ;READ_EEPROM@EEAddr stored from wreg
  4191  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  4192  06C1  00A0               	movwf	READ_EEPROM@EEAddr
  4193                           
  4194                           ;smartkey.C: 195: unsigned char ReEepromData;
  4195                           ;smartkey.C: 197: EEADR = EEAddr;
  4196  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  4197  06C3  009B               	movwf	27	;volatile
  4198                           
  4199                           ;smartkey.C: 198: RD = 1;
  4200  06C4  141C               	bsf	28,0
  4201                           
  4202                           ;smartkey.C: 199: ReEepromData = EEDAT;
  4203  06C5  081A               	movf	26,w	;volatile
  4204  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  4205  06C7  00A1               	movwf	READ_EEPROM@ReEepromData
  4206                           
  4207                           ;smartkey.C: 200: RD = 0;
  4208  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  4209  06C9  101C               	bcf	28,0
  4210                           
  4211                           ;smartkey.C: 201: return ReEepromData;
  4212  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  4213  06CB  0821               	movf	READ_EEPROM@ReEepromData,w
  4214  06CC  0008               	return
  4215  06CD                     __end_of_READ_EEPROM:	
  4216                           
  4217                           	psect	text881
  4218  03E6                     __ptext881:	
  4219 ;; =============== function _READ_EEPROM ends ============
  4220                           
  4221                           
  4222 ;; *************** function _ISR *****************
  4223 ;; Defined at:
  4224 ;;		line 38 in file "smartkey.C"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;		None
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;  tmp             1    4[COMMON] unsigned char 
  4229 ;;  tmp             1    0        unsigned char 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;		None               void
  4232 ;; Registers used:
  4233 ;;		wreg, status,2, status,0, pclath, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: FFE00/0
  4238 ;; Data sizes:     COMMON   BANK0   BANK1
  4239 ;;      Params:         0       0       0
  4240 ;;      Locals:         1       0       0
  4241 ;;      Temps:          2       0       0
  4242 ;;      Totals:         3       0       0
  4243 ;;Total ram usage:        3 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:    1
  4246 ;; This function calls:
  4247 ;;		i1_READ_EEPROM
  4248 ;;		i1_WRITE_EEPROM
  4249 ;; This function is called by:
  4250 ;;		Interrupt level 1
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253  03E6                     _ISR:	
  4254                           
  4255                           ;smartkey.C: 42: if(PAIE&&PAIF){
  4256  03E6  198B               	btfsc	11,3
  4257  03E7  1C0B               	btfss	11,0
  4258  03E8  2BF7               	goto	i1l5442
  4259                           
  4260                           ;smartkey.C: 44: tmp = PORTA;
  4261  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  4262  03EA  0805               	movf	5,w	;volatile
  4263                           
  4264                           ;smartkey.C: 45: PAIF = 0;
  4265  03EB  100B               	bcf	11,0
  4266                           
  4267                           ;smartkey.C: 47: if(RA5){
  4268  03EC  1E85               	btfss	5,5
  4269  03ED  2BF6               	goto	i1l5440
  4270                           
  4271                           ;smartkey.C: 49: if(mode_chek == 0){
  4272  03EE  08F3               	movf	_mode_chek,f
  4273  03EF  1D03               	skipz
  4274  03F0  2BF7               	goto	i1l5442
  4275                           
  4276                           ;smartkey.C: 50: cntCyc = 0;
  4277  03F1  01F2               	clrf	_cntCyc
  4278                           
  4279                           ;smartkey.C: 51: cntOff = 0;
  4280  03F2  01CA               	clrf	_cntOff
  4281                           
  4282                           ;smartkey.C: 53: mode_chek = 1;
  4283  03F3  01F3               	clrf	_mode_chek
  4284  03F4  0AF3               	incf	_mode_chek,f
  4285  03F5  2BF7               	goto	i1l5442
  4286  03F6                     i1l5440:	
  4287                           
  4288                           ;smartkey.C: 58: else{
  4289                           ;smartkey.C: 59: cntOff = 0;
  4290  03F6  01CA               	clrf	_cntOff
  4291  03F7                     i1l5442:	
  4292                           
  4293                           ;smartkey.C: 61: }
  4294                           ;smartkey.C: 63: }
  4295                           ;smartkey.C: 66: if(INTE&&INTF){
  4296  03F7  1A0B               	btfsc	11,4
  4297  03F8  1C8B               	btfss	11,1
  4298  03F9  2C0D               	goto	i1l829
  4299                           
  4300                           ;smartkey.C: 67: unsigned char tmp;
  4301                           ;smartkey.C: 68: INTF = 0;
  4302  03FA  108B               	bcf	11,1
  4303                           
  4304                           ;smartkey.C: 70: if( RA2==0){
  4305  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  4306  03FC  1905               	btfsc	5,2
  4307  03FD  2C0D               	goto	i1l829
  4308                           
  4309                           ;smartkey.C: 72: if(timeTick <0x20){
  4310  03FE  3000               	movlw	0
  4311  03FF  0271               	subwf	_timeTick+1,w
  4312  0400  3020               	movlw	32
  4313  0401  1903               	skipnz
  4314  0402  0270               	subwf	_timeTick,w
  4315  0403  1803               	skipnc
  4316  0404  2C0C               	goto	i1l831
  4317                           
  4318                           ;smartkey.C: 73: tmp = READ_EEPROM(0x40);
  4319  0405  3040               	movlw	64
  4320  0406  26E1               	fcall	i1_READ_EEPROM
  4321  0407  00F9               	movwf	ISR@tmp_1138
  4322                           
  4323                           ;smartkey.C: 74: WRITE_EEPROM(0x40,tmp+1);
  4324  0408  0A79               	incf	ISR@tmp_1138,w
  4325  0409  00F5               	movwf	?i1_WRITE_EEPROM
  4326  040A  3040               	movlw	64
  4327  040B  262A               	fcall	i1_WRITE_EEPROM
  4328  040C                     i1l831:	
  4329  040C  2C0C               	goto	i1l831
  4330  040D                     i1l829:	
  4331                           
  4332                           ;smartkey.C: 83: }
  4333                           ;smartkey.C: 85: }
  4334                           ;smartkey.C: 88: if (T0IE && T0IF) {
  4335  040D  1A8B               	btfsc	11,5
  4336  040E  1D0B               	btfss	11,2
  4337  040F  2C5C               	goto	i1l5500
  4338  0410  30B3               	movlw	179
  4339                           
  4340                           ;smartkey.C: 89: T0IF = 0;
  4341  0411  110B               	bcf	11,2
  4342                           
  4343                           ;smartkey.C: 90: TMR0 = 179;
  4344  0412  1283               	bcf	3,5	;RP0=0, select bank0
  4345  0413  0081               	movwf	1	;volatile
  4346                           
  4347                           ;smartkey.C: 96: if( mode_chek == 1){
  4348  0414  0B73               	decfsz	_mode_chek,w
  4349  0415  2C2E               	goto	i1l5480
  4350                           
  4351                           ;smartkey.C: 98: cntCyc++;
  4352  0416  0AF2               	incf	_cntCyc,f
  4353                           
  4354                           ;smartkey.C: 100: if(RA5==0){
  4355  0417  1A85               	btfsc	5,5
  4356  0418  2C2E               	goto	i1l5480
  4357  0419  3010               	movlw	16
  4358                           
  4359                           ;smartkey.C: 102: cntOff++;
  4360  041A  0ACA               	incf	_cntOff,f
  4361                           
  4362                           ;smartkey.C: 105: if(cntOff > 15){
  4363  041B  024A               	subwf	_cntOff,w
  4364  041C  1C03               	skipc
  4365  041D  2C2E               	goto	i1l5480
  4366  041E  3010               	movlw	16
  4367                           
  4368                           ;smartkey.C: 107: mode_chek = 0;
  4369  041F  01F3               	clrf	_mode_chek
  4370                           
  4371                           ;smartkey.C: 109: if((cntCyc>15) &&(cntCyc<50)) {
  4372  0420  0272               	subwf	_cntCyc,w
  4373  0421  3032               	movlw	50
  4374  0422  1C03               	skipc
  4375  0423  2C2A               	goto	L18
  4376  0424  0272               	subwf	_cntCyc,w
  4377  0425  1803               	skipnc
  4378  0426  2C29               	goto	i1l5476
  4379                           
  4380                           ;smartkey.C: 110: RegStatus |= (0x40);
  4381  0427  1749               	bsf	_RegStatus,6
  4382                           
  4383                           ;smartkey.C: 111: } else if (cntCyc>=50){
  4384  0428  2C2D               	goto	i1l840
  4385  0429                     i1l5476:	
  4386  0429  3032               	movlw	50
  4387  042A                     L18:	
  4388  042A  0272               	subwf	_cntCyc,w
  4389  042B  1803               	btfsc	3,0
  4390                           
  4391                           ;smartkey.C: 112: RegStatus &= ~(0x40);
  4392  042C  1349               	bcf	_RegStatus,6
  4393  042D                     i1l840:	
  4394                           
  4395                           ;smartkey.C: 113: }
  4396                           ;smartkey.C: 116: RegStatus |= 0x80;
  4397  042D  17C9               	bsf	_RegStatus,7
  4398  042E                     i1l5480:	
  4399                           
  4400                           ;smartkey.C: 117: }
  4401                           ;smartkey.C: 119: }
  4402                           ;smartkey.C: 129: }
  4403                           ;smartkey.C: 132: timeTick++;
  4404  042E  0AF0               	incf	_timeTick,f
  4405  042F  1903               	skipnz
  4406  0430  0AF1               	incf	_timeTick+1,f
  4407                           
  4408                           ;smartkey.C: 134: if((mtState == 4)||(mtState == 3)){
  4409  0431  0874               	movf	_mtState,w
  4410  0432  3A04               	xorlw	4
  4411  0433  1903               	skipnz
  4412  0434  2C39               	goto	i1l5486
  4413  0435  0874               	movf	_mtState,w
  4414  0436  3A03               	xorlw	3
  4415  0437  1D03               	skipz
  4416  0438  2C5C               	goto	i1l5500
  4417  0439                     i1l5486:	
  4418                           
  4419                           ;smartkey.C: 136: if(timeTick > cntTmp){
  4420  0439  0871               	movf	_timeTick+1,w
  4421  043A  0246               	subwf	_cntTmp+1,w
  4422  043B  1D03               	skipz
  4423  043C  2C3F               	goto	u144_25
  4424  043D  0870               	movf	_timeTick,w
  4425  043E  0245               	subwf	_cntTmp,w
  4426  043F                     u144_25:	
  4427  043F  1803               	skipnc
  4428  0440  2C5C               	goto	i1l5500
  4429                           
  4430                           ;smartkey.C: 137: cntTmp = timeTick+38;
  4431  0441  0871               	movf	_timeTick+1,w
  4432  0442  00C6               	movwf	_cntTmp+1
  4433  0443  0870               	movf	_timeTick,w
  4434  0444  00C5               	movwf	_cntTmp
  4435  0445  3026               	movlw	38
  4436  0446  07C5               	addwf	_cntTmp,f
  4437  0447  1803               	skipnc
  4438  0448  0AC6               	incf	_cntTmp+1,f
  4439                           
  4440                           ;smartkey.C: 138: if(cntTmp<=timeOut)
  4441  0449  0846               	movf	_cntTmp+1,w
  4442  044A  0248               	subwf	_timeOut+1,w
  4443  044B  1D03               	skipz
  4444  044C  2C4F               	goto	u145_25
  4445  044D  0845               	movf	_cntTmp,w
  4446  044E  0247               	subwf	_timeOut,w
  4447  044F                     u145_25:	
  4448                           
  4449                           ;smartkey.C: 139: {
  4450                           ;smartkey.C: 140: TMR2IE = 0;
  4451  044F  1683               	bsf	3,5	;RP0=1, select bank1
  4452  0450  1C03               	skipc
  4453  0451  2C5D               	goto	L19
  4454  0452  108C               	bcf	12,1
  4455                           
  4456                           ;smartkey.C: 142: if (PR2L == 20)
  4457  0453  0811               	movf	17,w	;volatile
  4458  0454  3A14               	xorlw	20
  4459  0455  1D03               	skipz
  4460  0456  2C59               	goto	i1l5496
  4461                           
  4462                           ;smartkey.C: 143: PR2L = 25;
  4463  0457  3019               	movlw	25
  4464  0458  2C5A               	goto	L17
  4465  0459                     i1l5496:	
  4466                           
  4467                           ;smartkey.C: 144: else
  4468                           ;smartkey.C: 145: PR2L = 20;
  4469  0459  3014               	movlw	20
  4470  045A                     L17:	
  4471  045A  0091               	movwf	17	;volatile
  4472                           
  4473                           ;smartkey.C: 146: TMR2IE = 1;
  4474  045B  148C               	bsf	12,1
  4475  045C                     i1l5500:	
  4476                           
  4477                           ;smartkey.C: 147: }
  4478                           ;smartkey.C: 148: }
  4479                           ;smartkey.C: 149: }
  4480                           ;smartkey.C: 152: }
  4481                           ;smartkey.C: 155: if(TMR2IE&&TMR2IF)
  4482  045C  1683               	bsf	3,5	;RP0=1, select bank1
  4483  045D                     L19:	
  4484  045D  1C8C               	btfss	12,1
  4485  045E  2C65               	goto	i1l850
  4486  045F  1283               	bcf	3,5	;RP0=0, select bank0
  4487  0460  1C8C               	btfss	12,1
  4488  0461  2C65               	goto	i1l850
  4489  0462  3008               	movlw	8
  4490                           
  4491                           ;smartkey.C: 156: {
  4492                           ;smartkey.C: 157: TMR2IF = 0;
  4493  0463  108C               	bcf	12,1
  4494                           
  4495                           ;smartkey.C: 158: RA3 =~ RA3;
  4496  0464  0685               	xorwf	5,f
  4497  0465                     i1l850:	
  4498  0465  0878               	movf	??_ISR+1,w
  4499  0466  008A               	movwf	10
  4500  0467  0E77               	swapf	??_ISR^(0+-128),w
  4501  0468  0083               	movwf	3
  4502  0469  0EFE               	swapf	126,f
  4503  046A  0E7E               	swapf	126,w
  4504  046B  0009               	retfie
  4505  046C                     __end_of_ISR:	
  4506                           
  4507                           	psect	intentry
  4508  0004                     __pintentry:	
  4509                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4510                           
  4511  0004                     interrupt_function:	
  4512  007E                     saved_w	set	btemp
  4513  0004  00FE               	movwf	btemp
  4514  0005  0E03               	swapf	3,w
  4515  0006  00F7               	movwf	??_ISR
  4516  0007  080A               	movf	10,w
  4517  0008  00F8               	movwf	??_ISR+1
  4518  0009  2BE6               	ljmp	_ISR
  4519                           
  4520                           	psect	text882
  4521  062A                     __ptext882:	
  4522 ;; =============== function _ISR ends ============
  4523                           
  4524                           
  4525 ;; *************** function i1_WRITE_EEPROM *****************
  4526 ;; Defined at:
  4527 ;;		line 205 in file "smartkey.C"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  WRITE_EEPROM    1    wreg     unsigned char 
  4530 ;;  WRITE_EEPROM    1    0[COMMON] unsigned char 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;  WRITE_EEPROM    1    1[COMMON] unsigned char 
  4533 ;; Return value:  Size  Location     Type
  4534 ;;		None               void
  4535 ;; Registers used:
  4536 ;;		wreg
  4537 ;; Tracked objects:
  4538 ;;		On entry : 20/20
  4539 ;;		On exit  : 20/20
  4540 ;;		Unchanged: FFE00/0
  4541 ;; Data sizes:     COMMON   BANK0   BANK1
  4542 ;;      Params:         1       0       0
  4543 ;;      Locals:         1       0       0
  4544 ;;      Temps:          0       0       0
  4545 ;;      Totals:         2       0       0
  4546 ;;Total ram usage:        2 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_ISR
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554  062A                     i1_WRITE_EEPROM:	
  4555                           
  4556                           ; Regs used in i1_WRITE_EEPROM: [wreg]
  4557                           ;i1WRITE_EEPROM@EEAddr stored from wreg
  4558  062A  00F6               	movwf	i1WRITE_EEPROM@EEAddr
  4559                           
  4560                           ;smartkey.C: 206: GIE = 0;
  4561  062B  138B               	bcf	11,7
  4562  062C                     i1l874:	
  4563                           ;smartkey.C: 207: while(GIE) asm("clrwdt");
  4564                           
  4565  062C  1F8B               	btfss	11,7
  4566  062D  2E30               	goto	i1l5680
  4567  062E  0064               	clrwdt	;#
  4568  062F  2E2C               	goto	i1l874
  4569  0630                     i1l5680:	
  4570                           
  4571                           ;smartkey.C: 208: EEADR = EEAddr;
  4572  0630  0876               	movf	i1WRITE_EEPROM@EEAddr,w
  4573  0631  1683               	bsf	3,5	;RP0=1, select bank1
  4574  0632  009B               	movwf	27	;volatile
  4575                           
  4576                           ;smartkey.C: 209: EEDAT = EEData;
  4577  0633  0875               	movf	i1WRITE_EEPROM@EEData,w
  4578  0634  009A               	movwf	26	;volatile
  4579  0635  3034               	movlw	52
  4580                           
  4581                           ;smartkey.C: 210: EEIF = 0;
  4582  0636  1283               	bcf	3,5	;RP0=0, select bank0
  4583  0637  138C               	bcf	12,7
  4584                           
  4585                           ;smartkey.C: 211: EECON1 = 0x34;
  4586  0638  1683               	bsf	3,5	;RP0=1, select bank1
  4587  0639  009C               	movwf	28	;volatile
  4588                           
  4589                           ;smartkey.C: 212: WR = 1;
  4590  063A  141D               	bsf	29,0
  4591  063B                     i1l877:	
  4592                           ;smartkey.C: 213: while(WR) asm("clrwdt");
  4593                           
  4594  063B  1683               	bsf	3,5	;RP0=1, select bank1
  4595  063C  1C1D               	btfss	29,0
  4596  063D  2E40               	goto	i1l879
  4597  063E  0064               	clrwdt	;#
  4598  063F  2E3B               	goto	i1l877
  4599  0640                     i1l879:	
  4600                           
  4601                           ;smartkey.C: 215: GIE = 1;
  4602  0640  178B               	bsf	11,7
  4603  0641  0008               	return
  4604  0642                     __end_ofi1_WRITE_EEPROM:	
  4605                           
  4606                           	psect	text883
  4607  06E1                     __ptext883:	
  4608 ;; =============== function i1_WRITE_EEPROM ends ============
  4609                           
  4610                           
  4611 ;; *************** function i1_READ_EEPROM *****************
  4612 ;; Defined at:
  4613 ;;		line 194 in file "smartkey.C"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  READ_EEPROM     1    wreg     unsigned char 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  READ_EEPROM     1    0[COMMON] unsigned char 
  4618 ;;  READ_EEPROM     1    1[COMMON] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      unsigned char 
  4621 ;; Registers used:
  4622 ;;		wreg
  4623 ;; Tracked objects:
  4624 ;;		On entry : 20/0
  4625 ;;		On exit  : 20/20
  4626 ;;		Unchanged: FFFDF/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1
  4628 ;;      Params:         0       0       0
  4629 ;;      Locals:         2       0       0
  4630 ;;      Temps:          0       0       0
  4631 ;;      Totals:         2       0       0
  4632 ;;Total ram usage:        2 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		_ISR
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640  06E1                     i1_READ_EEPROM:	
  4641                           
  4642                           ; Regs used in i1_READ_EEPROM: [wreg]
  4643                           ;i1READ_EEPROM@EEAddr stored from wreg
  4644  06E1  00F5               	movwf	i1READ_EEPROM@EEAddr
  4645                           
  4646                           ;smartkey.C: 195: unsigned char ReEepromData;
  4647                           ;smartkey.C: 197: EEADR = EEAddr;
  4648  06E2  1683               	bsf	3,5	;RP0=1, select bank1
  4649  06E3  009B               	movwf	27	;volatile
  4650                           
  4651                           ;smartkey.C: 198: RD = 1;
  4652  06E4  141C               	bsf	28,0
  4653                           
  4654                           ;smartkey.C: 199: ReEepromData = EEDAT;
  4655  06E5  081A               	movf	26,w	;volatile
  4656  06E6  00F6               	movwf	i1READ_EEPROM@ReEepromData
  4657                           
  4658                           ;smartkey.C: 200: RD = 0;
  4659  06E7  101C               	bcf	28,0
  4660                           
  4661                           ;smartkey.C: 201: return ReEepromData;
  4662  06E8  0008               	return
  4663  06E9                     __end_ofi1_READ_EEPROM:	
  4664                           
  4665                           	psect	text884
  4666  0000                     __ptext884:	
  4667 ;; =============== function i1_READ_EEPROM ends ============
  4668                           
  4669  007E                     btemp	set	126	;btemp
  4670  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Mar 20 13:44:42 2020

                        pc 0002                         _RD 04E0                         _WR 04E8  
             ___awdiv@sign 0025      __size_of_WRITE_EEPROM 001B                         fsr 0004  
                      _C1R 08CA                        _C2R 08D2                        l941 01E1  
                      l925 0196                        l862 0000                        l871 0000  
                      l951 0278                        l880 0000                        l856 0000  
                      l874 0611                        l954 025D                        l859 0000  
                      l883 0000                        l971 02DA                        l955 0248  
                      l868 0000                        l877 0623                        l879 0628  
                      l993 03E3                        _GIE 005F                        _RA2 002A  
                      _RA3 002B                        _RC0 0038                        _RC1 0039  
                      _RA5 002D                        _RA6 002E                        _RA7 002F  
             ?_swI2C_Start 0075                        _HTS 047A                        _ISR 03E6  
                      _SR0 0CF6                        _SR1 0CF7                        _VR0 08C0  
                      _VR1 08C1                        _VR2 08C2                        _VR3 08C3  
                      _VRR 08C5                        fsr0 0004                        indf 0000  
           _swI2C_ReadByte 04F6                       S7150 06E9                       ?_ISR 0075  
                     _C1OE 08CD                       _C2OE 08D5                       l2600 0503  
                     _C1ON 08CF                       l2602 0000                       _C2ON 08D7  
                     l4234 0000                       l1790 0000                       l2583 0000  
                     l1784 06DD                       l7000 0000                       l1793 0000  
                     l2586 0000                       l7010 0000                       l7002 0000  
                     l1787 0000                       l2595 0540                       l1796 0000  
                     l7020 0000                       l2589 0000                       l2597 0000  
                     l7110 03DD                       l7030 0000                       l7022 0000  
                     l7014 0000                       l7104 0000                       l7032 0000  
                     l7016 0000                       l7024 0334                       l6410 0000  
                     l7106 0000                       l7050 0000                       l7042 0000  
                     l7018 0000                       l6340 0000                       l6412 0000  
                     l6420 0000                       l7108 0000                       l7052 0000  
                     l7036 0000                       l6342 0000                       l6350 0615  
                     l6414 0000                       l6422 0000                       l6430 0000  
                     l6510 0000                       l6502 0000                       l7070 0000  
                     l7062 0000                       l7046 0000                       l6344 0000  
                     l6352 0000                       l6360 0000                       l6416 0000  
                     l6408 0000                       l6424 0000                       l6440 0000  
                     l6432 0000                       l6512 0000                       l6504 0000  
                     l6520 0000                       l7072 038D                       l7048 0000  
                     l7056 0371                       l6354 0000                       l6362 0000  
                     l6370 0000                       l6418 0000                       l6450 0000  
                     l6442 0000                       l6434 0000                       l6426 0000  
                     l6506 0000                       l6514 0643                       l6522 0000  
                     l6530 0000                       l7090 0000                       l7066 0000  
                     l7074 038E                       l6348 0000                       l6356 0000  
                     l6364 0000                       l6452 0000                       l6444 0000  
                     l6436 0000                       l6428 0000                       l6460 0000  
                     l6508 0000                       l6516 0000                       l6524 0000  
                     l6532 0000                       l6540 0000                       l6612 05D1  
                     l7092 0000                       l7084 0000                       l7076 0000  
                     l7068 0000                       l6700 0000                       l6358 068B  
                     l6366 0000                       l6454 0000                       l6446 0000  
                     l6438 0000                       l6470 0000                       l6518 0000  
                     l6526 0000                       l6534 0000                       l6542 0000  
                     l6614 05BA                       l7078 0392                       l6710 0000  
                     l6702 0058                       l6368 0000                       l6384 04DD  
                     l6456 0000                       l6448 0000                       l6472 047F  
                     l6464 0000                       l6528 0000                       l6536 0000  
                     l6560 0000                       l6552 0000                       l6544 0000  
                     l6616 05D3                       l6608 0000                       l6632 0000  
                     l7096 0000                       l7088 03A9                       l6800 0192  
                     l6720 007A                       l6712 0000                       l6482 048D  
                     l6474 0000                       l6466 0476                       l6458 0000  
                     l6538 0000                       l6562 0000                       l6554 0000  
                     l6546 0000                       l6570 0000                       l6618 0000  
                     l6650 0000                       l6642 0000                       l6810 01A8  
                     l6802 0000                       l6722 0000                       l6714 0000  
                     l6706 0000                       l6492 0000                       l6484 0000  
                     l6564 0000                       l6556 0000                       l6548 0000  
                     l6572 0000                       l6644 0585                       l6804 019A  
                     l6732 008E                       l6740 00A4                       l6708 0000  
                     l6716 0073                       l6494 04A4                       l6566 0000  
                     l6558 0000                       l6590 0000                       l6582 0000  
                     l6574 0000                       l6910 0000                       l6902 0260  
                     l6830 01C9                       l6822 01B8                       l6806 0000  
                     l6750 00B3                       l6734 0091                       l6726 0000  
                     l6718 0000                       l6670 0000                       l6496 0000  
                     l6488 0000                       l6592 0000                       l6584 0000  
                     l6576 0000                       l6648 0000                       l6904 0000  
                     l6840 01DA                       l6808 0000                       l6744 00AB  
                     l6736 0000                       l6728 0000                       l6680 0000  
                     l6672 0000                       l6498 04AC                       l6594 0000  
                     l6586 0000                       l6578 0000                       l6930 0290  
                     l6906 0000                       l6850 01F0                       l6842 0000  
                     l6834 0000                       l6826 0000                       l6818 01B1  
                     l6770 0000                       l6762 0000                       l6754 00CD  
                     l6746 0000                       l6738 0000                       l6690 0000  
                     l6682 0000                       l6674 0000                       l6588 0000  
                     l6940 0000                       l6932 0000                       l6924 0286  
                     l6908 0000                       l6860 0201                       l6852 0000  
                     l6844 0000                       l6836 0000                       l6916 0270  
                     l6780 0122                       l6772 0000                       l6764 00E7  
                     l6756 0000                       l6692 0000                       l6684 0000  
                     l6676 0000                       l6668 0000                       l6598 0000  
                     l6942 0000                       l6934 0000                       l6926 0000  
                     l6870 0000                       l6846 0000                       l6854 01FE  
                     l6918 0279                       l6790 0000                       l6774 00F5  
                     l6782 0130                       l6766 0000                       l6694 0000  
                     l6686 0000                       l6678 0000                       l6960 0000  
                     l6952 02B3                       l6936 0000                       l6928 0000  
                     l6872 0000                       l6864 0000                       l6856 0000  
                     l6880 022B                       l6696 0000                       l6688 0000  
                     l6954 0000                       l6962 02CA                       l6946 0000  
                     l6938 0000                       l6890 0000                       l6882 0236  
                     l6874 0222                       l6786 0137                       l6778 0000  
                     l6980 0000                       l6956 0000                       l6948 02AB  
                     l6892 0000                       l6884 0000                       l6876 0000  
                     l6868 0211                       l6796 0179                       l6982 0000  
                     l6966 0000                       l6958 0000                       l6894 0000  
                     l6798 0000                       l6984 0000                       l6968 0000  
                     l6992 02E1                       l6896 0000                       l6978 0000  
                     l6994 02EF                       l6998 0000                       _EEIF 0067  
                     _ANS0 08F0                       _ANS1 08F1                       _ANS2 08F2  
                     _ANS3 08F3                       _ANS4 08F4                       _ANS5 08F5  
                     _ANS6 08F6                       _ANS7 08F7                       _ANS8 08F8  
                     _ANS9 08F9                       _T0IE 005D                       _T0IF 005A  
                     _T0ON 00FB                       _IOCB 0116                       u2515 0691  
                     u3235 02F6                       _PAIE 005B                       _PAIF 0058  
                     _PIE1 008C                       u2545 04CA                       u3185 0283  
                     u2635 0496                       u3507 009E                       u3517 00BA  
                     u2734 0527                       u3607 054C                       u2815 0592  
                     u3527 0129                       u2680 0545                       u3617 0552  
                     u3385 0399                       u3537 018C                       u3707 05E2  
                     u3627 055F                       u3547 04FF                       _PEIE 005E  
                     u3717 05E7                       u3637 0565                       u3557 0506  
                     u3477 0020                       _INTE 005C                       u2694 0547  
                     _INTF 0059                       u3727 05EC                       u3647 06B7  
                     u3567 0515                       u3487 003E                       u3737 05F1  
                     u3657 06BD                       u3577 052A                       u3497 0053  
                     u3667 0672                       u3587 0530                       _PR2H 0092  
                     u3677 0678                       u3597 053C                       u3687 067E  
                     u2975 0168                       _PR2L 0091                       u3697 05DB  
                     u2985 0174                       _PIR1 000C                       _TMR0 0001  
                     _STRA 0CE8                       _STRB 0CE9                       _STRC 0CEA  
                     _STRD 0CEB                       _WREN 0C62                       _WPUA 0095  
                     _WPUB 0115                       _WPUC 0093               ?_READ_EEPROM 0075  
                     _beep 0642            __end_of_AccRead 059D                       _main 000B  
                     btemp 007E                       start 000A               _WRITE_EEPROM 060F  
                    ??_ISR 0077                      _C1CH0 08C8                      _C1CH1 08C9  
                    _C2CH0 08D0                      _C2CH1 08D1                      ?_beep 0024  
                    _C1SEN 0CF5                      _C2REN 0CF4                      _C1POL 08CC  
                    _C2POL 08D4                      _C1OUT 08CE                      _C2OUT 08D6  
                    ?_main 0075            __end_of___awdiv 04B1                      _EEADR 009B  
                    _EEDAT 009A                      _ANS10 08FA                      _ANS11 08FB  
                    _EEPGD 0C67     __end_of_swI2C_ReadByte 0535                      _ANSEL 011E  
             AccWrite@rAdd 0028            ___awdiv@divisor 0020                      _IOCA5 04B5  
                    _IOCB4 08B4                      _IOCB5 08B5                      _IOCB6 08B6  
                    _IOCB7 08B7                      _T1GSS 08D9                      i1l831 040C  
                    i1l840 042D                      i1l850 0465                      i1l829 040D  
                    i1l871 0000                      i1l880 0000                      i1l874 062C  
                    i1l877 063B                      i1l879 0640            ___awdiv@counter 0024  
                    _MSCON 001B            __end_of_beepOff 06F8                      _VP6EN 08C4  
                    _TMR2H 0013                      _TMR2L 0011                      _PSRCA 0088  
                    _PSRCC 0094                      _PORTA 0005                      _PORTC 0007  
                    _SRCON 019E                      _PULSR 0CF2                      _PULSS 0CF3  
                    _TRISA 0085                      _TRISC 0087                      _VRCON 0118  
                    _WPUB4 08AC                      _WPUB5 08AD                      _WPUB6 08AE  
                    _WPUB7 08AF                      _compe 04B1           __end_of_AccWrite 05D5  
                    pclath 000A                      status 0003                      wtemp0 007E  
          _swI2C_WriteByte 0535       __size_of_delay_x10ms 0013             i1_WRITE_EEPROM 062A  
             __end_of_beep 0658               __end_of_main 03E6                     ??_beep 0025  
                   ??_main 002C            ?_swI2C_ReadByte 0075              main@reAlertOn 0040  
                   _C1VREN 08C7                     _C2VREN 08C6                     _C2SYNC 08D8  
                   ?_compe 0020                  ??_AccRead 0027                     _EEADRH 010F  
                   _EEDATH 010E                     _EECON1 009C           ___awdiv@dividend 0022  
                   _ANSELH 011F                     _MC1OUT 08DF                     _MC2OUT 08DE  
                   _T0CON0 001F                     _T2CON0 0012                     i1l5500 045C  
                   i1l5430 0000                     i1l5440 03F6                     i1l5432 0000  
                   i1l5424 0000                     i1l5506 0000                     i1l5442 03F7  
                   i1l5460 0000                     i1l5452 0000                     i1l5470 0000  
                   i1l5462 0000                     i1l5438 0000                     i1l5480 042E  
                   i1l5482 0000                     i1l5466 0000                     i1l5458 0000  
                   i1l5492 0000                     i1l5476 0429                     i1l5670 0000  
                   i1l5486 0439                     i1l5672 0000                     i1l5680 0630  
                   i1l5496 0459                     i1l5674 0000                     i1l5682 0000  
                   _INTEDG 040E                     i1l5684 0000                     i1l5678 0000  
                   u144_25 043F                     _INTCON 000B                     u145_25 044F  
                   _OSCCON 008F                     _TMR2IE 0461                     _TMR2IF 0061  
                   _PSINKA 0097                     _PSINKC 009F                     _OPTION 0081  
                   _TMR2ON 0092     __end_ofi1_WRITE_EEPROM 0642            swI2C_ReadByte@i 0023  
                   _beepOn 06EE                  ??___awdiv 0024                     _cntCyc 0072  
                   _cntOff 004A                     _cntTmp 0045                  ??_beepOff 0020  
         ___awdiv@quotient 0026           __end_of_int_init 060F                     compe@a 0027  
                   compe@b 0020     __size_ofi1_READ_EEPROM 0008           __end_of_setState 06D9  
            main@vibrateOn 002F                     saved_w 007E       __size_of_swI2C_Start 0013  
  __end_of_swI2C_WriteByte 0572           __end_of_sys_init 06E1       i1WRITE_EEPROM@EEAddr 0076  
     i1WRITE_EEPROM@EEData 0075       __size_of_READ_EEPROM 000D            ?i1_WRITE_EEPROM 0075  
           __pcstackCOMMON 0075              __end_of_compe 04EA                  ?_AccWrite 0023  
              ISR@tmp_1138 0079                    ??_compe 0022                 __pbssBANK0 0045  
       __size_of_gpio_init 0016    READ_EEPROM@ReEepromData 0021              i1_READ_EEPROM 06E1  
               __pmaintext 000B                    ?_beepOn 0075                 __pintentry 0004  
i1READ_EEPROM@ReEepromData 0076                    _CM1CON0 0119                    _CM2CON0 011A  
                  _CM2CON1 011B                 ??_AccWrite 0026                    _AccRead 0572  
                  _PSTRCON 019D                 _swI2C_Init 05D5                    _STRSYNC 0CEC  
               _swI2C_Stop 06B3           ?_swI2C_WriteByte 0075             ?i1_READ_EEPROM 0075  
                AccWrite@i 0029                  ?_int_init 0075                setState@stt 0022  
                ?_setState 0020                 _mtOldState 004C                    ___awdiv 046C  
         ??_swI2C_ReadByte 0020            __size_of_beepOn 0005                    _beepOff 06F3  
                  beep@rep 0024          __end_of_gpio_init 066E                  ?_sys_init 0075  
             __size_of_ISR 0086                    _mtState 0074                    _timeOut 0047  
                  compe@dt 0021                    main@buf 003A       end_of_initialization 06B1  
               _lostDetect 004B              ??_delay_x10ms 0022                 ??_int_init 0020  
               ??_setState 0022                AccRead@rAdd 002A                 _timer_init 0694  
               ??_sys_init 0020                ?_swI2C_Init 0075            ??i1_READ_EEPROM 0075  
              ?_swI2C_Stop 0075                 main@acXOld 0034                 main@acYOld 0033  
         ??i1_WRITE_EEPROM 0076                 main@acXsum 0038                 main@acYsum 0036  
               main@isFall 0032         WRITE_EEPROM@EEAddr 0021         WRITE_EEPROM@EEData 0020  
               main@isWait 0030        __end_of_delay_x10ms 0694                AccWrite@dat 0023  
              AccWrite@len 0025             __end_of_beepOn 06F3              ??_swI2C_Start 0020  
        __size_of_AccWrite 0028        start_initialization 06A4                __end_of_ISR 046C  
            setState@_tOut 0020                  _RegStatus 0049              ??_READ_EEPROM 0020  
            ?_WRITE_EEPROM 0020                   ??_beepOn 0020          READ_EEPROM@EEAddr 0020  
      __size_of_swI2C_Init 001F        __size_of_swI2C_Stop 000D                ?_timer_init 0075  
              __pbssCOMMON 0070              __pcstackBANK0 0020                   ?_AccRead 0024  
      __end_of_swI2C_Start 0681                _delay_x10ms 0681             ??_WRITE_EEPROM 0021  
        __size_of_int_init 001B        __end_of_READ_EEPROM 06CD           swI2C_WriteByte@i 0022  
                 ?___awdiv 0020          __size_of_setState 000C                  __ptext860 0000  
                __ptext861 0572                  __ptext870 046C                  __ptext862 05AD  
                __ptext871 05F4                  __ptext863 04F6                  __ptext880 06C0  
                __ptext872 0694                  __ptext864 0535                  __ptext881 03E6  
                __ptext873 0658                  __ptext865 06B3                  __ptext882 062A  
                __ptext874 04B1                  __ptext866 066E                  __ptext883 06E1  
                __ptext875 06CD                  __ptext867 05D5                  __ptext884 0000  
                __ptext876 06EE                  __ptext868 06D9                  __ptext877 06F3  
                __ptext869 0642                  __ptext878 0681                  __ptext879 060F  
                beep@delay 0025                   ?_beepOff 0075                   AccRead@i 002B  
       swI2C_WriteByte@dat 0021                  __pswtext1 06E9          __size_of_sys_init 0008  
                _gpio_init 0658             __size_of_compe 0039                  _mode_chek 0073  
        interrupt_function 0004        __size_of_timer_init 0010   __size_of_swI2C_WriteByte 003D  
               AccRead@dat 0024                 AccRead@len 0026               delay_x10ms@t 0020  
                 _AccWrite 05AD                _swI2C_Start 066E                  main@tmp16 0042  
                main@mpuOk 0035                 ?_gpio_init 0075               ??_swI2C_Init 0020  
         __size_of_AccRead 002B               ??_swI2C_Stop 0020                _READ_EEPROM 06C0  
        swI2C_ReadByte@Ack 0021          swI2C_ReadByte@dat 0022           __size_of___awdiv 0045  
         __size_of_beepOff 0005         __end_of_swI2C_Init 05F4         __end_of_swI2C_Stop 06C0  
     __end_of_WRITE_EEPROM 062A    __size_of_swI2C_ReadByte 003F      __end_ofi1_READ_EEPROM 06E9  
            __size_of_beep 0016              __size_of_main 03DB                   _int_init 05F4  
                 _setState 06CD                   _timeTick 0070                   main@isSw 0041  
                 main@tmp8 0044          ??_swI2C_WriteByte 0020               ??_timer_init 0020  
                 _sys_init 06D9                ??_gpio_init 0020                   intlevel1 0000  
             ?_delay_x10ms 0020         __end_of_timer_init 06A4    __size_ofi1_WRITE_EEPROM 0018  
      i1READ_EEPROM@EEAddr 0075             delay_x10ms@set 0022  
