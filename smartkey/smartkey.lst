

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sat Feb 08 11:15:24 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text860,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	text861,local,class=CODE,delta=2
    13                           	psect	text862,local,class=CODE,delta=2
    14                           	psect	text863,local,class=CODE,delta=2
    15                           	psect	text864,local,class=CODE,delta=2
    16                           	psect	text865,local,class=CODE,delta=2
    17                           	psect	text866,local,class=CODE,delta=2
    18                           	psect	text867,local,class=CODE,delta=2
    19                           	psect	text868,local,class=CODE,delta=2
    20                           	psect	text869,local,class=CODE,delta=2
    21                           	psect	text870,local,class=CODE,delta=2
    22                           	psect	text871,local,class=CODE,delta=2
    23                           	psect	text872,local,class=CODE,delta=2
    24                           	psect	text873,local,class=CODE,delta=2
    25                           	psect	text874,local,class=CODE,delta=2
    26                           	psect	text875,local,class=CODE,delta=2
    27                           	psect	text876,local,class=CODE,delta=2
    28                           	psect	text877,local,class=CODE,delta=2
    29                           	psect	text878,local,class=CODE,delta=2
    30                           	psect	text879,local,class=CODE,delta=2
    31                           	psect	text880,local,class=CODE,delta=2
    32                           	psect	text881,local,class=CODE,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text882,local,class=CODE,delta=2
    35                           	psect	text883,local,class=CODE,delta=2
    36                           	psect	text884,local,class=CODE,delta=2
    37                           	psect	pa_nodes,global,class=CODE,delta=2
    38                           	dabs	1,0x19D,1
    39                           	dabs	1,0x19E,1
    40                           	dabs	1,0x19E,1
    41                           	dabs	1,0x19E,1
    42                           	dabs	1,0x18C,1
    43                           	dabs	1,0x19E,1
    44                           	dabs	1,0x19E,1
    45                           	dabs	1,0x19E,1
    46                           	dabs	1,0x19E,1
    47                           	dabs	1,0x19D,1
    48                           	dabs	1,0x19D,1
    49                           	dabs	1,0x19D,1
    50                           	dabs	1,0x19D,1
    51                           	dabs	1,0x19D,1
    52                           	dabs	1,0x18C,1
    53                           	dabs	1,0x7E,2
    54  000A                     
    55                           	psect	text860
    56  0000                     __ptext860:	
    57  019D                     _PSTRCON	set	413	;_PSTRCON
    58  019E                     _SRCON	set	414	;_SRCON
    59  0CF5                     _C1SEN	set	3317	;_C1SEN
    60  0CF4                     _C2REN	set	3316	;_C2REN
    61  0C67                     _EEPGD	set	3175	;_EEPGD
    62  0CF2                     _PULSR	set	3314	;_PULSR
    63  0CF3                     _PULSS	set	3315	;_PULSS
    64  0CF6                     _SR0	set	3318	;_SR0
    65  0CF7                     _SR1	set	3319	;_SR1
    66  0CE8                     _STRA	set	3304	;_STRA
    67  0CE9                     _STRB	set	3305	;_STRB
    68  0CEA                     _STRC	set	3306	;_STRC
    69  0CEB                     _STRD	set	3307	;_STRD
    70  0CEC                     _STRSYNC	set	3308	;_STRSYNC
    71  0C62                     _WREN	set	3170	;_WREN
    72  000B                     _INTCON	set	11
    73  000C                     _PIR1	set	12
    74  0005                     _PORTA	set	5
    75  0007                     _PORTC	set	7
    76  0010                     _T1CON	set	16
    77  0012                     _T2CON	set	18
    78  000F                     _TMR1H	set	15
    79  000E                     _TMR1L	set	14
    80  0011                     _TMR2	set	17
    81  0067                     _EEIF	set	103
    82  005F                     _GIE	set	95
    83  005C                     _INTE	set	92
    84  0059                     _INTF	set	89
    85  005B                     _PAIE	set	91
    86  0058                     _PAIF	set	88
    87  005E                     _PEIE	set	94
    88  0028                     _RA0	set	40
    89  0029                     _RA1	set	41
    90  002C                     _RA4	set	44
    91  002E                     _RA6	set	46
    92  002F                     _RA7	set	47
    93  0039                     _RC1	set	57
    94  003A                     _RC2	set	58
    95  003C                     _RC4	set	60
    96  0060                     _TMR1IF	set	96
    97  0080                     _TMR1ON	set	128
    98  0061                     _TMR2IF	set	97
    99  0092                     _TMR2ON	set	146
   100  009B                     _EEADR	set	155
   101  009C                     _EECON1	set	156
   102  009A                     _EEDAT	set	154
   103  008F                     _OSCCON	set	143
   104  008C                     _PIE1	set	140
   105  0092                     _PR2	set	146
   106  0085                     _TRISA	set	133
   107  0087                     _TRISC	set	135
   108  0095                     _WPUA	set	149
   109  0088                     _WPUC	set	136
   110  047A                     _HTS	set	1146
   111  040E                     _INTEDG	set	1038
   112  04B6                     _IOCA6	set	1206
   113  04E0                     _RD	set	1248
   114  0460                     _TMR1IE	set	1120
   115  0461                     _TMR2IE	set	1121
   116  04E8                     _WR	set	1256
   117                           
   118                           	psect	cinit
   119  06CC                     start_initialization:	
   120                           
   121                           ; Clear objects allocated to COMMON
   122  06CC  01F0               	clrf	__pbssCOMMON& (0+127)
   123  06CD  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   124  06CE  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   125  06CF  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   126  06D0  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   127                           
   128                           ; Clear objects allocated to BANK0
   129  06D1  01C5               	clrf	__pbssBANK0& (0+127)
   130  06D2  01C6               	clrf	(__pbssBANK0+1)& (0+127)
   131  06D3  01C7               	clrf	(__pbssBANK0+2)& (0+127)
   132  06D4  01C8               	clrf	(__pbssBANK0+3)& (0+127)
   133  06D5  01C9               	clrf	(__pbssBANK0+4)& (0+127)
   134  06D6  01CA               	clrf	(__pbssBANK0+5)& (0+127)
   135  06D7  01CB               	clrf	(__pbssBANK0+6)& (0+127)
   136  06D8  01CC               	clrf	(__pbssBANK0+7)& (0+127)
   137  06D9                     end_of_initialization:	
   138                           ;End of C runtime variable initialization code
   139                           
   140  06D9  0183               	clrf	3
   141  06DA  280B               	ljmp	_main	;jump to C main() function
   142                           
   143                           	psect	bssCOMMON
   144  0070                     __pbssCOMMON:	
   145  0070                     _timeTick:	
   146  0070                     	ds	2
   147  0072                     _cntCyc:	
   148  0072                     	ds	1
   149  0073                     _mode_chek:	
   150  0073                     	ds	1
   151  0074                     _mtState:	
   152  0074                     	ds	1
   153                           
   154                           	psect	bssBANK0
   155  0045                     __pbssBANK0:	
   156  0045                     _cntTmp:	
   157  0045                     	ds	2
   158  0047                     _timeOut:	
   159  0047                     	ds	2
   160  0049                     _RegStatus:	
   161  0049                     	ds	1
   162  004A                     _cntOff:	
   163  004A                     	ds	1
   164  004B                     _lostDetect:	
   165  004B                     	ds	1
   166  004C                     _mtOldState:	
   167  004C                     	ds	1
   168                           
   169                           	psect	cstackCOMMON
   170  0075                     __pcstackCOMMON:	
   171  0075                     ?_sys_init:	
   172  0075                     ?_gpio_init:	
   173                           ; 0 bytes @ 0x0
   174                           
   175  0075                     ?_int_init:	
   176                           ; 0 bytes @ 0x0
   177                           
   178  0075                     ?_timer_init:	
   179                           ; 0 bytes @ 0x0
   180                           
   181  0075                     ?_swI2C_Init:	
   182                           ; 0 bytes @ 0x0
   183                           
   184  0075                     ?_ISR:	
   185                           ; 0 bytes @ 0x0
   186                           
   187  0075                     ?_beepOff:	
   188                           ; 0 bytes @ 0x0
   189                           
   190  0075                     ?_beepOn:	
   191                           ; 0 bytes @ 0x0
   192                           
   193  0075                     ?_main:	
   194                           ; 0 bytes @ 0x0
   195                           
   196  0075                     ?_swI2C_Start:	
   197                           ; 0 bytes @ 0x0
   198                           
   199  0075                     ?_swI2C_Stop:	
   200                           ; 0 bytes @ 0x0
   201                           
   202  0075                     ??i1_READ_EEPROM:	
   203                           ; 0 bytes @ 0x0
   204                           
   205  0075                     ?i1_WRITE_EEPROM:	
   206                           ; 0 bytes @ 0x0
   207                           
   208  0075                     ?_READ_EEPROM:	
   209                           ; 0 bytes @ 0x0
   210                           
   211  0075                     ?_swI2C_WriteByte:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0075                     ?_swI2C_ReadByte:	
   215                           ; 1 bytes @ 0x0
   216                           
   217  0075                     ?i1_READ_EEPROM:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0075                     i1READ_EEPROM@EEAddr:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0075                     i1WRITE_EEPROM@EEData:	
   224                           ; 1 bytes @ 0x0
   225                           
   226                           
   227                           ; 1 bytes @ 0x0
   228  0075                     	ds	1
   229  0076                     ??i1_WRITE_EEPROM:	
   230  0076                     i1READ_EEPROM@ReEepromData:	
   231                           ; 0 bytes @ 0x1
   232                           
   233  0076                     i1WRITE_EEPROM@EEAddr:	
   234                           ; 1 bytes @ 0x1
   235                           
   236                           
   237                           ; 1 bytes @ 0x1
   238  0076                     	ds	1
   239  0077                     ??_ISR:	
   240                           
   241                           ; 0 bytes @ 0x2
   242  0077                     	ds	2
   243  0079                     ISR@tmp_1057:	
   244                           
   245                           ; 1 bytes @ 0x4
   246  0079                     	ds	1
   247                           
   248                           	psect	cstackBANK0
   249  0020                     __pcstackBANK0:	
   250  0020                     ??_READ_EEPROM:	
   251  0020                     ?_WRITE_EEPROM:	
   252                           ; 0 bytes @ 0x0
   253                           
   254  0020                     ??_sys_init:	
   255                           ; 0 bytes @ 0x0
   256                           
   257  0020                     ??_gpio_init:	
   258                           ; 0 bytes @ 0x0
   259                           
   260  0020                     ??_int_init:	
   261                           ; 0 bytes @ 0x0
   262                           
   263  0020                     ??_timer_init:	
   264                           ; 0 bytes @ 0x0
   265                           
   266  0020                     ??_swI2C_Init:	
   267                           ; 0 bytes @ 0x0
   268                           
   269  0020                     ?_delay_x10ms:	
   270                           ; 0 bytes @ 0x0
   271                           
   272  0020                     ??_beepOff:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0020                     ??_beepOn:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0020                     ?_setState:	
   279                           ; 0 bytes @ 0x0
   280                           
   281  0020                     ??_swI2C_Start:	
   282                           ; 0 bytes @ 0x0
   283                           
   284  0020                     ??_swI2C_Stop:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0020                     ??_swI2C_WriteByte:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0020                     ??_swI2C_ReadByte:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0020                     ?_compe:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0020                     ?___awdiv:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0020                     READ_EEPROM@EEAddr:	
   300                           ; 2 bytes @ 0x0
   301                           
   302  0020                     WRITE_EEPROM@EEData:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0020                     compe@b:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0020                     delay_x10ms@t:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0020                     setState@_tOut:	
   312                           ; 2 bytes @ 0x0
   313                           
   314  0020                     ___awdiv@divisor:	
   315                           ; 2 bytes @ 0x0
   316                           
   317                           
   318                           ; 2 bytes @ 0x0
   319  0020                     	ds	1
   320  0021                     ??_WRITE_EEPROM:	
   321  0021                     READ_EEPROM@ReEepromData:	
   322                           ; 0 bytes @ 0x1
   323                           
   324  0021                     WRITE_EEPROM@EEAddr:	
   325                           ; 1 bytes @ 0x1
   326                           
   327  0021                     compe@dt:	
   328                           ; 1 bytes @ 0x1
   329                           
   330  0021                     swI2C_WriteByte@dat:	
   331                           ; 1 bytes @ 0x1
   332                           
   333  0021                     swI2C_ReadByte@Ack:	
   334                           ; 1 bytes @ 0x1
   335                           
   336                           
   337                           ; 1 bytes @ 0x1
   338  0021                     	ds	1
   339  0022                     ??_delay_x10ms:	
   340  0022                     ??_setState:	
   341                           ; 0 bytes @ 0x2
   342                           
   343  0022                     ??_compe:	
   344                           ; 0 bytes @ 0x2
   345                           
   346  0022                     setState@stt:	
   347                           ; 0 bytes @ 0x2
   348                           
   349  0022                     swI2C_WriteByte@i:	
   350                           ; 1 bytes @ 0x2
   351                           
   352  0022                     swI2C_ReadByte@dat:	
   353                           ; 1 bytes @ 0x2
   354                           
   355  0022                     delay_x10ms@set:	
   356                           ; 1 bytes @ 0x2
   357                           
   358  0022                     ___awdiv@dividend:	
   359                           ; 2 bytes @ 0x2
   360                           
   361                           
   362                           ; 2 bytes @ 0x2
   363  0022                     	ds	1
   364  0023                     ?_AccWrite:	
   365  0023                     swI2C_ReadByte@i:	
   366                           ; 1 bytes @ 0x3
   367                           
   368  0023                     AccWrite@dat:	
   369                           ; 1 bytes @ 0x3
   370                           
   371                           
   372                           ; 2 bytes @ 0x3
   373  0023                     	ds	1
   374  0024                     ?_beep:	
   375  0024                     ??___awdiv:	
   376                           ; 0 bytes @ 0x4
   377                           
   378  0024                     ?_AccRead:	
   379                           ; 0 bytes @ 0x4
   380                           
   381  0024                     beep@rep:	
   382                           ; 1 bytes @ 0x4
   383                           
   384  0024                     ___awdiv@counter:	
   385                           ; 1 bytes @ 0x4
   386                           
   387  0024                     AccRead@dat:	
   388                           ; 1 bytes @ 0x4
   389                           
   390                           
   391                           ; 2 bytes @ 0x4
   392  0024                     	ds	1
   393  0025                     ??_beep:	
   394  0025                     beep@delay:	
   395                           ; 0 bytes @ 0x5
   396                           
   397  0025                     AccWrite@len:	
   398                           ; 1 bytes @ 0x5
   399                           
   400  0025                     ___awdiv@sign:	
   401                           ; 1 bytes @ 0x5
   402                           
   403                           
   404                           ; 1 bytes @ 0x5
   405  0025                     	ds	1
   406  0026                     ??_AccWrite:	
   407  0026                     AccRead@len:	
   408                           ; 0 bytes @ 0x6
   409                           
   410  0026                     ___awdiv@quotient:	
   411                           ; 1 bytes @ 0x6
   412                           
   413                           
   414                           ; 2 bytes @ 0x6
   415  0026                     	ds	1
   416  0027                     ??_AccRead:	
   417  0027                     compe@a:	
   418                           ; 0 bytes @ 0x7
   419                           
   420                           
   421                           ; 1 bytes @ 0x7
   422  0027                     	ds	1
   423  0028                     AccWrite@rAdd:	
   424                           
   425                           ; 1 bytes @ 0x8
   426  0028                     	ds	1
   427  0029                     AccWrite@i:	
   428                           
   429                           ; 1 bytes @ 0x9
   430  0029                     	ds	1
   431  002A                     AccRead@rAdd:	
   432                           
   433                           ; 1 bytes @ 0xA
   434  002A                     	ds	1
   435  002B                     AccRead@i:	
   436                           
   437                           ; 1 bytes @ 0xB
   438  002B                     	ds	1
   439  002C                     ??_main:	
   440                           
   441                           ; 0 bytes @ 0xC
   442  002C                     	ds	3
   443  002F                     main@isWait:	
   444                           
   445                           ; 2 bytes @ 0xF
   446  002F                     	ds	2
   447  0031                     main@isFall:	
   448                           
   449                           ; 1 bytes @ 0x11
   450  0031                     	ds	1
   451  0032                     main@acYOld:	
   452                           
   453                           ; 1 bytes @ 0x12
   454  0032                     	ds	1
   455  0033                     main@acXOld:	
   456                           
   457                           ; 1 bytes @ 0x13
   458  0033                     	ds	1
   459  0034                     main@vibrateOn:	
   460                           
   461                           ; 1 bytes @ 0x14
   462  0034                     	ds	1
   463  0035                     main@buf:	
   464                           
   465                           ; 6 bytes @ 0x15
   466  0035                     	ds	6
   467  003B                     main@reAlertOn:	
   468                           
   469                           ; 1 bytes @ 0x1B
   470  003B                     	ds	1
   471  003C                     main@mpuOk:	
   472                           
   473                           ; 1 bytes @ 0x1C
   474  003C                     	ds	1
   475  003D                     main@acYsum:	
   476                           
   477                           ; 2 bytes @ 0x1D
   478  003D                     	ds	2
   479  003F                     main@acXsum:	
   480                           
   481                           ; 2 bytes @ 0x1F
   482  003F                     	ds	2
   483  0041                     main@isSw:	
   484                           
   485                           ; 1 bytes @ 0x21
   486  0041                     	ds	1
   487  0042                     main@tmp16:	
   488                           
   489                           ; 2 bytes @ 0x22
   490  0042                     	ds	2
   491  0044                     main@tmp8:	
   492                           
   493                           ; 1 bytes @ 0x24
   494  0044                     	ds	1
   495                           
   496                           	psect	maintext
   497  000B                     __pmaintext:	
   498 ;;Data sizes: Strings 0, constant 0, data 0, bss 13, persistent 0 stack 0
   499 ;;Auto spaces:   Size  Autos    Used
   500 ;; COMMON          14      5      10
   501 ;; BANK0           80     37      45
   502 ;; BANK1           32      0       0
   503 ;;
   504 ;; Pointer list with targets:
   505 ;; ?___awdiv	int  size(1) Largest target is 0
   506 ;;
   507 ;; AccRead@dat	PTR unsigned char  size(2) Largest target is 256
   508 ;;		 -> RAM(DATA[256]), main@buf(BANK0[6]), 
   509 ;;
   510 ;; AccWrite@dat	PTR unsigned char  size(2) Largest target is 256
   511 ;;		 -> RAM(DATA[256]), 
   512 ;;
   513 ;;
   514 ;; Critical Paths under _main in COMMON
   515 ;;
   516 ;;   None.
   517 ;;
   518 ;; Critical Paths under _ISR in COMMON
   519 ;;
   520 ;;   _ISR->i1_READ_EEPROM
   521 ;;   _ISR->i1_WRITE_EEPROM
   522 ;;
   523 ;; Critical Paths under _main in BANK0
   524 ;;
   525 ;;   _main->_AccRead
   526 ;;   _AccRead->_swI2C_ReadByte
   527 ;;   _AccWrite->_swI2C_WriteByte
   528 ;;   _beep->_delay_x10ms
   529 ;;
   530 ;; Critical Paths under _ISR in BANK0
   531 ;;
   532 ;;   None.
   533 ;;
   534 ;; Critical Paths under _main in BANK1
   535 ;;
   536 ;;   None.
   537 ;;
   538 ;; Critical Paths under _ISR in BANK1
   539 ;;
   540 ;;   None.
   541 ;;
   542 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   543 ;;
   544 ;;
   545 ;;Call Graph Tables:
   546 ;;
   547 ;; ---------------------------------------------------------------------------------
   548 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   549 ;; ---------------------------------------------------------------------------------
   550 ;; (0) _main                                                26    26      0    4115
   551 ;;                                             12 BANK0     25    25      0
   552 ;;                           _sys_init
   553 ;;                          _gpio_init
   554 ;;                           _int_init
   555 ;;                         _timer_init
   556 ;;                         _swI2C_Init
   557 ;;                           _setState
   558 ;;                       _WRITE_EEPROM
   559 ;;                        _READ_EEPROM
   560 ;;                             _beepOn
   561 ;;                               _beep
   562 ;;                           _AccWrite
   563 ;;                            _AccRead
   564 ;;                            ___awdiv
   565 ;;                            _beepOff
   566 ;;                        _delay_x10ms
   567 ;;                              _compe
   568 ;; ---------------------------------------------------------------------------------
   569 ;; (1) _AccRead                                              8     5      3     532
   570 ;;                                              4 BANK0      8     5      3
   571 ;;                        _swI2C_Start
   572 ;;                    _swI2C_WriteByte
   573 ;;                     _swI2C_ReadByte
   574 ;;                         _swI2C_Stop
   575 ;; ---------------------------------------------------------------------------------
   576 ;; (1) _AccWrite                                             7     4      3     300
   577 ;;                                              3 BANK0      7     4      3
   578 ;;                        _swI2C_Start
   579 ;;                    _swI2C_WriteByte
   580 ;;                         _swI2C_Stop
   581 ;; ---------------------------------------------------------------------------------
   582 ;; (2) _swI2C_ReadByte                                       4     4      0     170
   583 ;;                                              0 BANK0      4     4      0
   584 ;; ---------------------------------------------------------------------------------
   585 ;; (2) _swI2C_WriteByte                                      3     3      0     139
   586 ;;                                              0 BANK0      3     3      0
   587 ;; ---------------------------------------------------------------------------------
   588 ;; (2) _swI2C_Stop                                           1     1      0       0
   589 ;;                                              0 BANK0      1     1      0
   590 ;; ---------------------------------------------------------------------------------
   591 ;; (2) _swI2C_Start                                          1     1      0       0
   592 ;;                                              0 BANK0      1     1      0
   593 ;; ---------------------------------------------------------------------------------
   594 ;; (1) _swI2C_Init                                           1     1      0       0
   595 ;;                                              0 BANK0      1     1      0
   596 ;; ---------------------------------------------------------------------------------
   597 ;; (1) _sys_init                                             0     0      0       0
   598 ;; ---------------------------------------------------------------------------------
   599 ;; (1) _beep                                                 2     1      1     130
   600 ;;                                              4 BANK0      2     1      1
   601 ;;                        _delay_x10ms
   602 ;; ---------------------------------------------------------------------------------
   603 ;; (1) ___awdiv                                              8     4      4     445
   604 ;;                                              0 BANK0      8     4      4
   605 ;; ---------------------------------------------------------------------------------
   606 ;; (1) _timer_init                                           0     0      0       0
   607 ;; ---------------------------------------------------------------------------------
   608 ;; (1) _int_init                                             1     1      0       0
   609 ;; ---------------------------------------------------------------------------------
   610 ;; (1) _gpio_init                                            0     0      0       0
   611 ;; ---------------------------------------------------------------------------------
   612 ;; (1) _compe                                                8     6      2     372
   613 ;;                                              0 BANK0      8     6      2
   614 ;; ---------------------------------------------------------------------------------
   615 ;; (1) _setState                                             3     1      2      62
   616 ;;                                              0 BANK0      3     1      2
   617 ;; ---------------------------------------------------------------------------------
   618 ;; (1) _beepOn                                               0     0      0       0
   619 ;; ---------------------------------------------------------------------------------
   620 ;; (1) _beepOff                                              0     0      0       0
   621 ;; ---------------------------------------------------------------------------------
   622 ;; (1) _delay_x10ms                                          4     2      2      68
   623 ;;                                              0 BANK0      4     2      2
   624 ;; ---------------------------------------------------------------------------------
   625 ;; (1) _WRITE_EEPROM                                         2     1      1      62
   626 ;;                                              0 BANK0      2     1      1
   627 ;; ---------------------------------------------------------------------------------
   628 ;; (1) _READ_EEPROM                                          2     2      0      65
   629 ;;                                              0 BANK0      2     2      0
   630 ;; ---------------------------------------------------------------------------------
   631 ;; Estimated maximum stack depth 2
   632 ;; ---------------------------------------------------------------------------------
   633 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   634 ;; ---------------------------------------------------------------------------------
   635 ;; (3) _ISR                                                  4     4      0     317
   636 ;;                                              2 COMMON     3     3      0
   637 ;;                      i1_READ_EEPROM
   638 ;;                     i1_WRITE_EEPROM
   639 ;; ---------------------------------------------------------------------------------
   640 ;; (4) i1_WRITE_EEPROM                                       2     1      1     146
   641 ;;                                              0 COMMON     2     1      1
   642 ;; ---------------------------------------------------------------------------------
   643 ;; (4) i1_READ_EEPROM                                        2     2      0     148
   644 ;;                                              0 COMMON     2     2      0
   645 ;; ---------------------------------------------------------------------------------
   646 ;; Estimated maximum stack depth 4
   647 ;; ---------------------------------------------------------------------------------
   648 ;; Call Graph Graphs:
   649 ;; _main (ROOT)
   650 ;;   _sys_init
   651 ;;   _gpio_init
   652 ;;   _int_init
   653 ;;   _timer_init
   654 ;;   _swI2C_Init
   655 ;;   _setState
   656 ;;   _WRITE_EEPROM
   657 ;;   _READ_EEPROM
   658 ;;   _beepOn
   659 ;;   _beep
   660 ;;     _delay_x10ms
   661 ;;   _AccWrite
   662 ;;     _swI2C_Start
   663 ;;     _swI2C_WriteByte
   664 ;;     _swI2C_Stop
   665 ;;   _AccRead
   666 ;;     _swI2C_Start
   667 ;;     _swI2C_WriteByte
   668 ;;     _swI2C_ReadByte
   669 ;;     _swI2C_Stop
   670 ;;   ___awdiv
   671 ;;   _beepOff
   672 ;;   _delay_x10ms
   673 ;;   _compe
   674 ;;
   675 ;; _ISR (ROOT)
   676 ;;   i1_READ_EEPROM
   677 ;;   i1_WRITE_EEPROM
   678 ;;
   679 ;; Address spaces:
   680 ;;Name               Size   Autos  Total    Cost      Usage
   681 ;;BITCOMMON            E      0       0       0        0.0%
   682 ;;EEDATA              80      0       0       0        0.0%
   683 ;;NULL                 0      0       0       0        0.0%
   684 ;;CODE                 0      0       0       0        0.0%
   685 ;;COMMON               E      5       A       1       71.4%
   686 ;;BITSFR0              0      0       0       1        0.0%
   687 ;;SFR0                 0      0       0       1        0.0%
   688 ;;BITSFR1              0      0       0       2        0.0%
   689 ;;SFR1                 0      0       0       2        0.0%
   690 ;;STACK                0      0       6       2        0.0%
   691 ;;BITBANK0            50      0       0       3        0.0%
   692 ;;BANK0               50     25      2D       4       56.3%
   693 ;;BITBANK1            20      0       0       5        0.0%
   694 ;;BITSFR2              0      0       0       5        0.0%
   695 ;;SFR2                 0      0       0       5        0.0%
   696 ;;BANK1               20      0       0       6        0.0%
   697 ;;ABS                  0      0      37       7        0.0%
   698 ;;DATA                 0      0      3D       8        0.0%
   699                           
   700                           
   701 ;; *************** function _main *****************
   702 ;; Defined at:
   703 ;;		line 249 in file "smartkey.C"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  buf             6   21[BANK0 ] char [6]
   708 ;;  tmp16           2   34[BANK0 ] unsigned int 
   709 ;;  acXsum          2   31[BANK0 ] int 
   710 ;;  acYsum          2   29[BANK0 ] int 
   711 ;;  isWait          2   15[BANK0 ] unsigned int 
   712 ;;  tmp8            1   36[BANK0 ] unsigned char 
   713 ;;  isSw            1   33[BANK0 ] unsigned char 
   714 ;;  mpuOk           1   28[BANK0 ] unsigned char 
   715 ;;  reAlertOn       1   27[BANK0 ] unsigned char 
   716 ;;  vibrateOn       1   20[BANK0 ] unsigned char 
   717 ;;  acXOld          1   19[BANK0 ] char 
   718 ;;  acYOld          1   18[BANK0 ] char 
   719 ;;  isFall          1   17[BANK0 ] unsigned char 
   720 ;;  accSet          1    0        unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;		None               void
   723 ;; Registers used:
   724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 17F/0
   727 ;;		On exit  : 60/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1
   730 ;;      Params:         0       0       0
   731 ;;      Locals:         0      22       0
   732 ;;      Temps:          0       3       0
   733 ;;      Totals:         0      25       0
   734 ;;Total ram usage:       25 bytes
   735 ;; Hardware stack levels required when called:    4
   736 ;; This function calls:
   737 ;;		_sys_init
   738 ;;		_gpio_init
   739 ;;		_int_init
   740 ;;		_timer_init
   741 ;;		_swI2C_Init
   742 ;;		_setState
   743 ;;		_WRITE_EEPROM
   744 ;;		_READ_EEPROM
   745 ;;		_beepOn
   746 ;;		_beep
   747 ;;		_AccWrite
   748 ;;		_AccRead
   749 ;;		___awdiv
   750 ;;		_beepOff
   751 ;;		_delay_x10ms
   752 ;;		_compe
   753 ;; This function is called by:
   754 ;;		Startup code after reset
   755 ;; This function uses a non-reentrant model
   756 ;;
   757  000B                     _main:	
   758                           
   759                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   760  000B  3007               	movlw	7	;#
   761  000C  0099               	movwf	25	;#
   762                           
   763                           ;smartkey.C: 256: unsigned char reAlertOn=0,tmp8,isSw=0,isFall=0,mpuOk=0,vibrateOn=0,acc
      +                          Set=0;
   764  000D  1283               	bcf	3,5	;RP0=0, select bank0
   765  000E  1303               	bcf	3,6	;RP1=0, select bank0
   766  000F  01BB               	clrf	main@reAlertOn
   767  0010  01C1               	clrf	main@isSw
   768  0011  01B1               	clrf	main@isFall
   769  0012  01B4               	clrf	main@vibrateOn
   770                           
   771                           ;smartkey.C: 257: unsigned int isWait =0;
   772  0013  01AF               	clrf	main@isWait
   773  0014  01B0               	clrf	main@isWait+1
   774                           
   775                           ;smartkey.C: 258: signed int acYsum=0,acXsum=0;
   776  0015  01BD               	clrf	main@acYsum
   777  0016  01BE               	clrf	main@acYsum+1
   778  0017  01BF               	clrf	main@acXsum
   779  0018  01C0               	clrf	main@acXsum+1
   780                           
   781                           ;smartkey.C: 259: unsigned int tmp16=0;
   782  0019  01C2               	clrf	main@tmp16
   783  001A  01C3               	clrf	main@tmp16+1
   784  001B  0064               	clrwdt	;#
   785                           
   786                           ;smartkey.C: 265: sys_init();
   787  001C  2720               	fcall	_sys_init
   788                           
   789                           ;smartkey.C: 266: gpio_init();
   790  001D  26F8               	fcall	_gpio_init
   791                           
   792                           ;smartkey.C: 267: int_init();
   793  001E  265A               	fcall	_int_init
   794                           
   795                           ;smartkey.C: 268: timer_init();
   796  001F  26DB               	fcall	_timer_init
   797                           
   798                           ;smartkey.C: 270: _delay((unsigned long)((100)*(4000000/4000.0)));
   799  0020  3082               	movlw	130
   800  0021  00AD               	movwf	??_main+1
   801  0022  30DD               	movlw	221
   802  0023  00AC               	movwf	??_main
   803  0024                     u3537:	
   804  0024  0BAC               	decfsz	??_main,f
   805  0025  2824               	goto	u3537
   806  0026  0BAD               	decfsz	??_main+1,f
   807  0027  2824               	goto	u3537
   808  0028  2829               	nop2
   809  0029  3082               	movlw	130
   810                           
   811                           ;smartkey.C: 271: RA7 =1;
   812  002A  1283               	bcf	3,5	;RP0=0, select bank0
   813  002B  1303               	bcf	3,6	;RP1=0, select bank0
   814  002C  1785               	bsf	5,7
   815                           
   816                           ;smartkey.C: 272: _delay((unsigned long)((100)*(4000000/4000.0)));
   817  002D  00AD               	movwf	??_main+1
   818  002E  30DD               	movlw	221
   819  002F  00AC               	movwf	??_main
   820  0030                     u3547:	
   821  0030  0BAC               	decfsz	??_main,f
   822  0031  2830               	goto	u3547
   823  0032  0BAD               	decfsz	??_main+1,f
   824  0033  2830               	goto	u3547
   825  0034  2835               	nop2
   826                           
   827                           ;smartkey.C: 274: PAIE = 1;
   828  0035  158B               	bsf	11,3
   829                           
   830                           ;smartkey.C: 276: RegStatus = 0;
   831  0036  1283               	bcf	3,5	;RP0=0, select bank0
   832  0037  1303               	bcf	3,6	;RP1=0, select bank0
   833  0038  01C9               	clrf	_RegStatus
   834                           
   835                           ;smartkey.C: 278: swI2C_Init();
   836  0039  263E               	fcall	_swI2C_Init
   837  003A  3000               	movlw	0
   838                           
   839                           ;smartkey.C: 281: setState(0,0);
   840  003B  1283               	bcf	3,5	;RP0=0, select bank0
   841  003C  1303               	bcf	3,6	;RP1=0, select bank0
   842  003D  01A0               	clrf	?_setState
   843  003E  01A1               	clrf	?_setState+1
   844  003F  2714               	fcall	_setState
   845                           
   846                           ;smartkey.C: 283: WRITE_EEPROM(0x7F,0xAA);
   847  0040  30AA               	movlw	170
   848  0041  00A0               	movwf	?_WRITE_EEPROM
   849  0042  307F               	movlw	127
   850  0043  2621               	fcall	_WRITE_EEPROM
   851                           
   852                           ;smartkey.C: 284: WRITE_EEPROM(0x7F,0xAA);
   853  0044  30AA               	movlw	170
   854  0045  1283               	bcf	3,5	;RP0=0, select bank0
   855  0046  00A0               	movwf	?_WRITE_EEPROM
   856  0047  307F               	movlw	127
   857  0048  2621               	fcall	_WRITE_EEPROM
   858                           
   859                           ;smartkey.C: 288: _delay((unsigned long)((200)*(4000000/4000.0)));
   860  0049  3002               	movlw	2
   861  004A  1283               	bcf	3,5	;RP0=0, select bank0
   862  004B  00AE               	movwf	??_main+2
   863  004C  3004               	movlw	4
   864  004D  00AD               	movwf	??_main+1
   865  004E  30BA               	movlw	186
   866  004F  00AC               	movwf	??_main
   867  0050                     u3557:	
   868  0050  0BAC               	decfsz	??_main,f
   869  0051  2850               	goto	u3557
   870  0052  0BAD               	decfsz	??_main+1,f
   871  0053  2850               	goto	u3557
   872  0054  0BAE               	decfsz	??_main+2,f
   873  0055  2850               	goto	u3557
   874  0056  0064               	clrwdt
   875                           
   876                           ;smartkey.C: 290: tmp8= READ_EEPROM(0x08);
   877  0057  3008               	movlw	8
   878  0058  2706               	fcall	_READ_EEPROM
   879  0059  00C4               	movwf	main@tmp8
   880                           
   881                           ;smartkey.C: 291: if(tmp8==0xff) {WRITE_EEPROM(0x08,0);_delay((unsigned long)((2)*(40000
      +                          00/4000.0)));}
   882  005A  3AFF               	xorlw	255
   883  005B  1D03               	skipz
   884  005C  286A               	goto	l6198
   885  005D  3008               	movlw	8
   886  005E  01A0               	clrf	?_WRITE_EEPROM
   887  005F  2621               	fcall	_WRITE_EEPROM
   888  0060  3003               	movlw	3
   889  0061  1283               	bcf	3,5	;RP0=0, select bank0
   890  0062  00AD               	movwf	??_main+1
   891  0063  3097               	movlw	151
   892  0064  00AC               	movwf	??_main
   893  0065                     u3567:	
   894  0065  0BAC               	decfsz	??_main,f
   895  0066  2865               	goto	u3567
   896  0067  0BAD               	decfsz	??_main+1,f
   897  0068  2865               	goto	u3567
   898  0069  286A               	nop2
   899  006A                     l6198:	
   900                           
   901                           ;smartkey.C: 293: if(tmp8==0xcc){
   902  006A  1283               	bcf	3,5	;RP0=0, select bank0
   903  006B  1303               	bcf	3,6	;RP1=0, select bank0
   904  006C  0844               	movf	main@tmp8,w
   905  006D  3ACC               	xorlw	204
   906  006E  1D03               	skipz
   907  006F  2886               	goto	l6212
   908  0070  3008               	movlw	8
   909                           
   910                           ;smartkey.C: 294: RegStatus &=~(0x20);
   911  0071  12C9               	bcf	_RegStatus,5
   912                           
   913                           ;smartkey.C: 295: setState(3,1800);
   914  0072  00A0               	movwf	?_setState
   915  0073  3007               	movlw	7
   916  0074  00A1               	movwf	?_setState+1
   917  0075  3003               	movlw	3
   918  0076  2714               	fcall	_setState
   919                           
   920                           ;smartkey.C: 296: mtOldState = 1;
   921  0077  01CC               	clrf	_mtOldState
   922  0078  0ACC               	incf	_mtOldState,f
   923                           
   924                           ;smartkey.C: 297: cntTmp = timeTick+50;
   925  0079  0871               	movf	_timeTick+1,w
   926  007A  00C6               	movwf	_cntTmp+1
   927  007B  0870               	movf	_timeTick,w
   928  007C  00C5               	movwf	_cntTmp
   929  007D  3032               	movlw	50
   930  007E  07C5               	addwf	_cntTmp,f
   931  007F  1803               	skipnc
   932  0080  0AC6               	incf	_cntTmp+1,f
   933                           
   934                           ;smartkey.C: 298: PR2 =12;
   935  0081  300C               	movlw	12
   936  0082  1683               	bsf	3,5	;RP0=1, select bank1
   937  0083  0092               	movwf	18	;volatile
   938                           
   939                           ;smartkey.C: 299: beepOn();
   940  0084  2737               	fcall	_beepOn
   941                           
   942                           ;smartkey.C: 300: } else {
   943  0085  288D               	goto	l6216
   944  0086                     l6212:	
   945                           
   946                           ;smartkey.C: 301: setState(2,400);
   947  0086  3090               	movlw	144
   948  0087  00A0               	movwf	?_setState
   949  0088  3001               	movlw	1
   950  0089  00A1               	movwf	?_setState+1
   951  008A  3002               	movlw	2
   952  008B  2714               	fcall	_setState
   953                           
   954                           ;smartkey.C: 303: mtOldState = 0;
   955  008C  01CC               	clrf	_mtOldState
   956  008D                     l6216:	
   957                           
   958                           ;smartkey.C: 307: }
   959                           ;smartkey.C: 310: tmp8 = READ_EEPROM(0x40);
   960  008D  3040               	movlw	64
   961  008E  2706               	fcall	_READ_EEPROM
   962  008F  00C4               	movwf	main@tmp8
   963                           
   964                           ;smartkey.C: 311: if(tmp8==8){
   965  0090  3A08               	xorlw	8
   966                           
   967                           ;smartkey.C: 312: tmp8= READ_EEPROM(0x41);
   968  0091  3041               	movlw	65
   969  0092  1D03               	skipz
   970  0093  28B2               	goto	L7
   971  0094  2706               	fcall	_READ_EEPROM
   972  0095  00C4               	movwf	main@tmp8
   973  0096  3019               	movlw	25
   974                           
   975                           ;smartkey.C: 313: beep(25,1);
   976  0097  01A4               	clrf	?_beep
   977  0098  0AA4               	incf	?_beep,f
   978  0099  268E               	fcall	_beep
   979                           
   980                           ;smartkey.C: 314: if(tmp8){
   981  009A  0844               	movf	main@tmp8,w
   982  009B  3041               	movlw	65
   983  009C  1903               	btfsc	3,2
   984  009D  28A0               	goto	L8
   985                           
   986                           ;smartkey.C: 315: WRITE_EEPROM(0x41,0);
   987  009E  01A0               	clrf	?_WRITE_EEPROM
   988  009F  28A2               	goto	L1
   989  00A0                     L8:	
   990                           ;smartkey.C: 316: }
   991                           
   992                           
   993                           ;smartkey.C: 317: else {
   994                           ;smartkey.C: 318: WRITE_EEPROM(0x41,0x1);
   995  00A0  01A0               	clrf	?_WRITE_EEPROM
   996  00A1  0AA0               	incf	?_WRITE_EEPROM,f
   997  00A2                     L1:	
   998  00A2  2621               	fcall	_WRITE_EEPROM
   999  00A3  3040               	movlw	64
  1000                           
  1001                           ;smartkey.C: 320: }
  1002                           ;smartkey.C: 321: WRITE_EEPROM(0x40,0);
  1003  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1004  00A5  01A0               	clrf	?_WRITE_EEPROM
  1005  00A6  2621               	fcall	_WRITE_EEPROM
  1006                           
  1007                           ;smartkey.C: 323: _delay((unsigned long)((100)*(4000000/4000.0)));
  1008  00A7  3082               	movlw	130
  1009  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1010  00A9  00AD               	movwf	??_main+1
  1011  00AA  30DD               	movlw	221
  1012  00AB  00AC               	movwf	??_main
  1013  00AC                     u3577:	
  1014  00AC  0BAC               	decfsz	??_main,f
  1015  00AD  28AC               	goto	u3577
  1016  00AE  0BAD               	decfsz	??_main+1,f
  1017  00AF  28AC               	goto	u3577
  1018  00B0  28B1               	nop2
  1019                           
  1020                           ;smartkey.C: 324: }
  1021                           ;smartkey.C: 330: tmp8 = READ_EEPROM(0x41);
  1022  00B1  3041               	movlw	65
  1023  00B2                     L7:	
  1024  00B2  2706               	fcall	_READ_EEPROM
  1025  00B3  00C4               	movwf	main@tmp8
  1026                           
  1027                           ;smartkey.C: 331: if(tmp8){
  1028  00B4  0844               	movf	main@tmp8,w
  1029  00B5  1903               	btfsc	3,2
  1030  00B6  28D5               	goto	l6244
  1031                           
  1032                           ;smartkey.C: 332: RC4 =1;RC2 =1;
  1033  00B7  1607               	bsf	7,4
  1034  00B8  1507               	bsf	7,2
  1035  00B9                     l6240:	
  1036                           
  1037                           ;smartkey.C: 334: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1038  00B9  3006               	movlw	6
  1039  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1040  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1041  00BC  00AE               	movwf	??_main+2
  1042  00BD  3013               	movlw	19
  1043  00BE  00AD               	movwf	??_main+1
  1044  00BF  30B1               	movlw	177
  1045  00C0  00AC               	movwf	??_main
  1046  00C1                     u3587:	
  1047  00C1  0BAC               	decfsz	??_main,f
  1048  00C2  28C1               	goto	u3587
  1049  00C3  0BAD               	decfsz	??_main+1,f
  1050  00C4  28C1               	goto	u3587
  1051  00C5  0BAE               	decfsz	??_main+2,f
  1052  00C6  28C1               	goto	u3587
  1053  00C7  28C8               	nop2
  1054                           
  1055                           ;smartkey.C: 335: if(timeTick >300) WRITE_EEPROM(0x40,0);
  1056  00C8  3001               	movlw	1
  1057  00C9  0271               	subwf	_timeTick+1,w
  1058  00CA  302D               	movlw	45
  1059  00CB  1903               	skipnz
  1060  00CC  0270               	subwf	_timeTick,w
  1061  00CD  1C03               	skipc
  1062  00CE  28B9               	goto	l6240
  1063  00CF  3040               	movlw	64
  1064  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1065  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1066  00D2  01A0               	clrf	?_WRITE_EEPROM
  1067  00D3  2621               	fcall	_WRITE_EEPROM
  1068  00D4  28B9               	goto	l6240
  1069  00D5                     l6244:	
  1070                           
  1071                           ;smartkey.C: 336: }
  1072                           ;smartkey.C: 337: }
  1073                           ;smartkey.C: 357: {
  1074                           ;smartkey.C: 358: buf[0] = 0x28;
  1075  00D5  3028               	movlw	40
  1076  00D6  00B5               	movwf	main@buf
  1077                           
  1078                           ;smartkey.C: 359: buf[1] = 0x87;
  1079  00D7  3087               	movlw	-121
  1080  00D8  00B6               	movwf	main@buf+1
  1081                           
  1082                           ;smartkey.C: 360: if(AccWrite(0x6b,(unsigned char)buf,2)==0) mpuOk =1;
  1083  00D9  3035               	movlw	main@buf& (0+255)
  1084  00DA  00AC               	movwf	??_main
  1085  00DB  01AD               	clrf	??_main+1
  1086  00DC  00A3               	movwf	?_AccWrite
  1087  00DD  082D               	movf	??_main+1,w
  1088  00DE  00A4               	movwf	?_AccWrite+1
  1089  00DF  3002               	movlw	2
  1090  00E0  00A5               	movwf	?_AccWrite+2
  1091  00E1  306B               	movlw	107
  1092  00E2  25F9               	fcall	_AccWrite
  1093  00E3  3800               	iorlw	0
  1094  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1095  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1096  00E6  1D03               	skipz
  1097  00E7  28EB               	goto	L9
  1098  00E8  01BC               	clrf	main@mpuOk
  1099  00E9  0ABC               	incf	main@mpuOk,f
  1100  00EA  28EC               	goto	l6252
  1101  00EB                     L9:	
  1102                           ;smartkey.C: 361: else mpuOk =0;
  1103                           
  1104  00EB  01BC               	clrf	main@mpuOk
  1105  00EC                     l6252:	
  1106                           
  1107                           ;smartkey.C: 363: _delay((unsigned long)((100)*(4000000/4000.0)));
  1108  00EC  3082               	movlw	130
  1109  00ED  00AD               	movwf	??_main+1
  1110  00EE  30DD               	movlw	221
  1111  00EF  00AC               	movwf	??_main
  1112  00F0                     u3597:	
  1113  00F0  0BAC               	decfsz	??_main,f
  1114  00F1  28F0               	goto	u3597
  1115  00F2  0BAD               	decfsz	??_main+1,f
  1116  00F3  28F0               	goto	u3597
  1117  00F4  28F5               	nop2
  1118                           
  1119                           ;smartkey.C: 364: }
  1120                           ;smartkey.C: 365: if(mpuOk ==0){beep(10,2);}
  1121  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1122  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1123  00F7  08BC               	movf	main@mpuOk,f
  1124  00F8  1D03               	skipz
  1125  00F9  28FE               	goto	l6258
  1126  00FA  3002               	movlw	2
  1127  00FB  00A4               	movwf	?_beep
  1128  00FC  300A               	movlw	10
  1129  00FD  268E               	fcall	_beep
  1130  00FE                     l6258:	
  1131                           
  1132                           ;smartkey.C: 370: tmp8= READ_EEPROM(0x40);
  1133  00FE  3040               	movlw	64
  1134  00FF  2706               	fcall	_READ_EEPROM
  1135  0100  00C4               	movwf	main@tmp8
  1136                           
  1137                           ;smartkey.C: 371: if(tmp8==6 && mpuOk ==1)
  1138  0101  3A06               	xorlw	6
  1139  0102  1D03               	skipz
  1140  0103  29B8               	goto	l6298
  1141  0104  0B3C               	decfsz	main@mpuOk,w
  1142  0105  29B8               	goto	l6298
  1143  0106  3003               	movlw	3
  1144                           
  1145                           ;smartkey.C: 372: {
  1146                           ;smartkey.C: 373: tmp8=0; beep(10,3);
  1147  0107  01C4               	clrf	main@tmp8
  1148  0108  00A4               	movwf	?_beep
  1149  0109  300A               	movlw	10
  1150  010A  268E               	fcall	_beep
  1151                           
  1152                           ;smartkey.C: 374: while((RC1 )&&(tmp8<11))
  1153  010B  2949               	goto	l6276
  1154  010C                     l6268:	
  1155                           
  1156                           ;smartkey.C: 375: {
  1157                           ;smartkey.C: 376: if(AccRead(0x3b,(unsigned char)buf,6)==0){
  1158  010C  3035               	movlw	main@buf& (0+255)
  1159  010D  00AC               	movwf	??_main
  1160  010E  01AD               	clrf	??_main+1
  1161  010F  00A4               	movwf	?_AccRead
  1162  0110  082D               	movf	??_main+1,w
  1163  0111  00A5               	movwf	?_AccRead+1
  1164  0112  3006               	movlw	6
  1165  0113  00A6               	movwf	?_AccRead+2
  1166  0114  303B               	movlw	59
  1167  0115  25BE               	fcall	_AccRead
  1168  0116  3800               	iorlw	0
  1169  0117  1D03               	skipz
  1170  0118  293A               	goto	l6274
  1171                           
  1172                           ;smartkey.C: 378: acXsum += buf[0];
  1173  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1174  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1175  011B  0835               	movf	main@buf,w
  1176  011C  00AC               	movwf	??_main
  1177  011D  01AD               	clrf	??_main+1
  1178  011E  1BAC               	btfsc	??_main,7
  1179  011F  03AD               	decf	??_main+1,f
  1180  0120  07BF               	addwf	main@acXsum,f
  1181  0121  1803               	skipnc
  1182  0122  0AC0               	incf	main@acXsum+1,f
  1183  0123  082D               	movf	??_main+1,w
  1184  0124  07C0               	addwf	main@acXsum+1,f
  1185                           
  1186                           ;smartkey.C: 379: acYsum += buf[2];
  1187  0125  0837               	movf	main@buf+2,w
  1188  0126  00AC               	movwf	??_main
  1189  0127  01AD               	clrf	??_main+1
  1190  0128  1BAC               	btfsc	??_main,7
  1191  0129  03AD               	decf	??_main+1,f
  1192  012A  07BD               	addwf	main@acYsum,f
  1193  012B  1803               	skipnc
  1194  012C  0ABE               	incf	main@acYsum+1,f
  1195  012D  082D               	movf	??_main+1,w
  1196  012E  07BE               	addwf	main@acYsum+1,f
  1197                           
  1198                           ;smartkey.C: 380: tmp16 = (signed int)tmp16 + buf[4];
  1199  012F  0839               	movf	main@buf+4,w
  1200  0130  00AC               	movwf	??_main
  1201  0131  01AD               	clrf	??_main+1
  1202  0132  1BAC               	btfsc	??_main,7
  1203  0133  03AD               	decf	??_main+1,f
  1204  0134  07C2               	addwf	main@tmp16,f
  1205  0135  1803               	skipnc
  1206  0136  0AC3               	incf	main@tmp16+1,f
  1207  0137  082D               	movf	??_main+1,w
  1208  0138  07C3               	addwf	main@tmp16+1,f
  1209                           
  1210                           ;smartkey.C: 381: tmp8++;
  1211  0139  0AC4               	incf	main@tmp8,f
  1212  013A                     l6274:	
  1213                           
  1214                           ;smartkey.C: 382: }
  1215                           ;smartkey.C: 383: _delay((unsigned long)((500)*(4000000/4000.0)));
  1216  013A  3003               	movlw	3
  1217  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1218  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1219  013D  00AE               	movwf	??_main+2
  1220  013E  308A               	movlw	138
  1221  013F  00AD               	movwf	??_main+1
  1222  0140  3056               	movlw	86
  1223  0141  00AC               	movwf	??_main
  1224  0142                     u3607:	
  1225  0142  0BAC               	decfsz	??_main,f
  1226  0143  2942               	goto	u3607
  1227  0144  0BAD               	decfsz	??_main+1,f
  1228  0145  2942               	goto	u3607
  1229  0146  0BAE               	decfsz	??_main+2,f
  1230  0147  2942               	goto	u3607
  1231  0148  2949               	nop2
  1232  0149                     l6276:	
  1233  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1234  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1235  014B  1C87               	btfss	7,1
  1236  014C  2951               	goto	l6280
  1237  014D  300B               	movlw	11
  1238  014E  0244               	subwf	main@tmp8,w
  1239  014F  1C03               	skipc
  1240  0150  290C               	goto	l6268
  1241  0151                     l6280:	
  1242                           
  1243                           ;smartkey.C: 385: }
  1244                           ;smartkey.C: 387: if(tmp8==11){
  1245  0151  0844               	movf	main@tmp8,w
  1246  0152  3A0B               	xorlw	11
  1247  0153  1D03               	skipz
  1248  0154  29AF               	goto	l6294
  1249                           
  1250                           ;smartkey.C: 388: acXsum =acXsum/10;
  1251  0155  300A               	movlw	10
  1252  0156  00A0               	movwf	?___awdiv
  1253  0157  01A1               	clrf	?___awdiv+1
  1254  0158  0840               	movf	main@acXsum+1,w
  1255  0159  00A3               	movwf	?___awdiv+3
  1256  015A  083F               	movf	main@acXsum,w
  1257  015B  00A2               	movwf	?___awdiv+2
  1258  015C  2536               	fcall	___awdiv
  1259  015D  0821               	movf	?___awdiv+1,w
  1260  015E  00C0               	movwf	main@acXsum+1
  1261  015F  0820               	movf	?___awdiv,w
  1262  0160  00BF               	movwf	main@acXsum
  1263                           
  1264                           ;smartkey.C: 389: acYsum = acYsum/10;
  1265  0161  300A               	movlw	10
  1266  0162  00A0               	movwf	?___awdiv
  1267  0163  01A1               	clrf	?___awdiv+1
  1268  0164  083E               	movf	main@acYsum+1,w
  1269  0165  00A3               	movwf	?___awdiv+3
  1270  0166  083D               	movf	main@acYsum,w
  1271  0167  00A2               	movwf	?___awdiv+2
  1272  0168  2536               	fcall	___awdiv
  1273  0169  0821               	movf	?___awdiv+1,w
  1274  016A  00BE               	movwf	main@acYsum+1
  1275  016B  0820               	movf	?___awdiv,w
  1276  016C  00BD               	movwf	main@acYsum
  1277                           
  1278                           ;smartkey.C: 390: tmp16 = (signed int)tmp16/10;
  1279  016D  300A               	movlw	10
  1280  016E  00A0               	movwf	?___awdiv
  1281  016F  01A1               	clrf	?___awdiv+1
  1282  0170  0843               	movf	main@tmp16+1,w
  1283  0171  00A3               	movwf	?___awdiv+3
  1284  0172  0842               	movf	main@tmp16,w
  1285  0173  00A2               	movwf	?___awdiv+2
  1286  0174  2536               	fcall	___awdiv
  1287  0175  0821               	movf	?___awdiv+1,w
  1288  0176  00C3               	movwf	main@tmp16+1
  1289  0177  0820               	movf	?___awdiv,w
  1290  0178  00C2               	movwf	main@tmp16
  1291                           
  1292                           ;smartkey.C: 392: if(((signed int)tmp16 > (-31)) && ((signed int)tmp16 < 31)){
  1293  0179  0843               	movf	main@tmp16+1,w
  1294  017A  3A80               	xorlw	128
  1295  017B  00FF               	movwf	127
  1296  017C  307F               	movlw	127
  1297  017D  027F               	subwf	127,w
  1298  017E  1D03               	skipz
  1299  017F  2982               	goto	u3005
  1300  0180  30E2               	movlw	226
  1301  0181  0242               	subwf	main@tmp16,w
  1302  0182                     u3005:	
  1303  0182  1C03               	skipc
  1304  0183  2995               	goto	l6290
  1305  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0185  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0186  0843               	movf	main@tmp16+1,w
  1308  0187  3A80               	xorlw	128
  1309  0188  00FF               	movwf	127
  1310  0189  3080               	movlw	128
  1311  018A  027F               	subwf	127,w
  1312  018B  1D03               	skipz
  1313  018C  298F               	goto	u3015
  1314  018D  301F               	movlw	31
  1315  018E  0242               	subwf	main@tmp16,w
  1316  018F                     u3015:	
  1317  018F  1803               	skipnc
  1318  0190  2995               	goto	l6290
  1319                           
  1320                           ;smartkey.C: 393: beep(10,2);
  1321  0191  3002               	movlw	2
  1322  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0194  29B0               	goto	L2
  1325  0195                     l6290:	
  1326                           ;smartkey.C: 394: }
  1327                           
  1328                           
  1329                           ;smartkey.C: 395: else
  1330                           ;smartkey.C: 397: {
  1331                           ;smartkey.C: 398: beep(10,3);
  1332  0195  3003               	movlw	3
  1333  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1334  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1335  0198  00A4               	movwf	?_beep
  1336  0199  300A               	movlw	10
  1337  019A  268E               	fcall	_beep
  1338                           
  1339                           ;smartkey.C: 399: WRITE_EEPROM(0x10,(unsigned char)acXsum);
  1340  019B  083F               	movf	main@acXsum,w
  1341  019C  00A0               	movwf	?_WRITE_EEPROM
  1342  019D  3010               	movlw	16
  1343  019E  2621               	fcall	_WRITE_EEPROM
  1344                           
  1345                           ;smartkey.C: 400: WRITE_EEPROM(0x11,(unsigned char)acYsum);
  1346  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1347  01A0  083D               	movf	main@acYsum,w
  1348  01A1  00A0               	movwf	?_WRITE_EEPROM
  1349  01A2  3011               	movlw	17
  1350  01A3  2621               	fcall	_WRITE_EEPROM
  1351                           
  1352                           ;smartkey.C: 401: _delay((unsigned long)((100)*(4000000/4000.0)));
  1353  01A4  3082               	movlw	130
  1354  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1355  01A6  00AD               	movwf	??_main+1
  1356  01A7  30DD               	movlw	221
  1357  01A8  00AC               	movwf	??_main
  1358  01A9                     u3617:	
  1359  01A9  0BAC               	decfsz	??_main,f
  1360  01AA  29A9               	goto	u3617
  1361  01AB  0BAD               	decfsz	??_main+1,f
  1362  01AC  29A9               	goto	u3617
  1363  01AD  29AE               	nop2
  1364  01AE  29B3               	goto	l786
  1365  01AF                     l6294:	
  1366                           
  1367                           ;smartkey.C: 405: beep(10,2);
  1368  01AF  3002               	movlw	2
  1369  01B0                     L2:	
  1370  01B0  00A4               	movwf	?_beep
  1371  01B1  300A               	movlw	10
  1372  01B2  268E               	fcall	_beep
  1373  01B3                     l786:	
  1374  01B3  3040               	movlw	64
  1375                           
  1376                           ;smartkey.C: 406: }
  1377                           ;smartkey.C: 407: WRITE_EEPROM(0x40,0);
  1378  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1379  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1380  01B6  01A0               	clrf	?_WRITE_EEPROM
  1381  01B7  2621               	fcall	_WRITE_EEPROM
  1382  01B8                     l6298:	
  1383                           
  1384                           ;smartkey.C: 409: }
  1385                           ;smartkey.C: 411: acXsum = (signed char)READ_EEPROM(0x10);
  1386  01B8  3010               	movlw	16
  1387  01B9  2706               	fcall	_READ_EEPROM
  1388  01BA  00BF               	movwf	main@acXsum
  1389  01BB  01C0               	clrf	main@acXsum+1
  1390  01BC  1BBF               	btfsc	main@acXsum,7
  1391  01BD  03C0               	decf	main@acXsum+1,f
  1392                           
  1393                           ;smartkey.C: 412: acYsum = (signed char)READ_EEPROM(0x11);
  1394  01BE  3011               	movlw	17
  1395  01BF  2706               	fcall	_READ_EEPROM
  1396  01C0  00BD               	movwf	main@acYsum
  1397  01C1  01BE               	clrf	main@acYsum+1
  1398  01C2  1BBD               	btfsc	main@acYsum,7
  1399  01C3  03BE               	decf	main@acYsum+1,f
  1400                           
  1401                           ;smartkey.C: 414: timeTick = 0;
  1402  01C4  01F0               	clrf	_timeTick
  1403  01C5  01F1               	clrf	_timeTick+1
  1404  01C6                     l6304:	
  1405                           
  1406                           ;smartkey.C: 423: if(mode_chek == 0)
  1407  01C6  08F3               	movf	_mode_chek,f
  1408  01C7  1903               	btfsc	3,2
  1409                           
  1410                           ;smartkey.C: 424: {
  1411                           ;smartkey.C: 426: if(RegStatus & 0x80)
  1412  01C8  1FC9               	btfss	_RegStatus,7
  1413  01C9  2A97               	goto	l6412
  1414                           
  1415                           ;smartkey.C: 427: {
  1416                           ;smartkey.C: 428: PAIE = 0;
  1417  01CA  118B               	bcf	11,3
  1418                           
  1419                           ;smartkey.C: 431: RegStatus &= (~0x80);
  1420  01CB  13C9               	bcf	_RegStatus,7
  1421                           
  1422                           ;smartkey.C: 443: {
  1423                           ;smartkey.C: 445: if ((RegStatus & 0x40) !=0){
  1424  01CC  1B49               	btfsc	_RegStatus,6
  1425  01CD  2A49               	goto	l6374
  1426  01CE  2A8E               	goto	l6410
  1427  01CF                     l6312:	
  1428                           
  1429                           ;smartkey.C: 451: lostDetect =0;
  1430  01CF  01CB               	clrf	_lostDetect
  1431  01D0                     L4:	
  1432  01D0  3028               	movlw	40
  1433                           
  1434                           ;smartkey.C: 452: timeTick =0;
  1435  01D1  01F0               	clrf	_timeTick
  1436  01D2  01F1               	clrf	_timeTick+1
  1437                           
  1438                           ;smartkey.C: 453: tmp16 = 40;
  1439  01D3  00C2               	movwf	main@tmp16
  1440  01D4  01C3               	clrf	main@tmp16+1
  1441                           
  1442                           ;smartkey.C: 454: break;
  1443  01D5  2A96               	goto	l812
  1444  01D6                     l6316:	
  1445                           
  1446                           ;smartkey.C: 457: if(timeTick >30){
  1447  01D6  3000               	movlw	0
  1448  01D7  0271               	subwf	_timeTick+1,w
  1449  01D8  301F               	movlw	31
  1450  01D9  1903               	skipnz
  1451  01DA  0270               	subwf	_timeTick,w
  1452  01DB  1C03               	skipc
  1453  01DC  2A96               	goto	l812
  1454  01DD  3008               	movlw	8
  1455                           
  1456                           ;smartkey.C: 458: timeTick =0;
  1457  01DE  01F0               	clrf	_timeTick
  1458  01DF  01F1               	clrf	_timeTick+1
  1459                           
  1460                           ;smartkey.C: 460: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1461  01E0  2706               	fcall	_READ_EEPROM
  1462  01E1  3ACC               	xorlw	204
  1463  01E2  1D03               	skipz
  1464  01E3  29E7               	goto	l6324
  1465  01E4  3008               	movlw	8
  1466  01E5  01A0               	clrf	?_WRITE_EEPROM
  1467  01E6  2621               	fcall	_WRITE_EEPROM
  1468  01E7                     l6324:	
  1469                           
  1470                           ;smartkey.C: 462: if((mtOldState == 3)){
  1471  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1472  01E8  084C               	movf	_mtOldState,w
  1473  01E9  3A03               	xorlw	3
  1474  01EA  1D03               	skipz
  1475  01EB  29F8               	goto	l6334
  1476                           
  1477                           ;smartkey.C: 463: beepOn();TMR2ON = 0; beep(10,1);
  1478  01EC  2737               	fcall	_beepOn
  1479  01ED  300A               	movlw	10
  1480  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1481  01EF  1112               	bcf	18,2
  1482  01F0  01A4               	clrf	?_beep
  1483  01F1  0AA4               	incf	?_beep,f
  1484  01F2  268E               	fcall	_beep
  1485  01F3                     L3:	
  1486                           
  1487                           ;smartkey.C: 464: if(reAlertOn)reAlertOn =0;
  1488  01F3  083B               	movf	main@reAlertOn,w
  1489  01F4  1903               	btfsc	3,2
  1490  01F5  2A96               	goto	l812
  1491  01F6  01BB               	clrf	main@reAlertOn
  1492  01F7  2A96               	goto	l812
  1493  01F8                     l6334:	
  1494                           
  1495                           ;smartkey.C: 466: else if((mtOldState == 0)||(mtOldState == 4)){
  1496  01F8  084C               	movf	_mtOldState,w
  1497  01F9  1903               	btfsc	3,2
  1498  01FA  29FF               	goto	l802
  1499  01FB  084C               	movf	_mtOldState,w
  1500  01FC  3A04               	xorlw	4
  1501  01FD  1D03               	skipz
  1502  01FE  2A1C               	goto	l6348
  1503  01FF                     l802:	
  1504  01FF  30AC               	movlw	172
  1505                           
  1506                           ;smartkey.C: 467: RegStatus |=(0x20);
  1507  0200  16C9               	bsf	_RegStatus,5
  1508                           
  1509                           ;smartkey.C: 468: setState(1,3500);
  1510  0201  00A0               	movwf	?_setState
  1511  0202  300D               	movlw	13
  1512  0203  00A1               	movwf	?_setState+1
  1513  0204  3001               	movlw	1
  1514  0205  2714               	fcall	_setState
  1515                           
  1516                           ;smartkey.C: 469: if(READ_EEPROM(0x40))WRITE_EEPROM(0x40,0);
  1517  0206  3040               	movlw	64
  1518  0207  2706               	fcall	_READ_EEPROM
  1519  0208  3A00               	xorlw	0
  1520  0209  1903               	skipnz
  1521  020A  2A0E               	goto	l6344
  1522  020B  3040               	movlw	64
  1523  020C  01A0               	clrf	?_WRITE_EEPROM
  1524  020D  2621               	fcall	_WRITE_EEPROM
  1525  020E                     l6344:	
  1526                           
  1527                           ;smartkey.C: 470: tmp16 = timeTick+40;
  1528  020E  0871               	movf	_timeTick+1,w
  1529  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0210  00C3               	movwf	main@tmp16+1
  1531  0211  0870               	movf	_timeTick,w
  1532  0212  00C2               	movwf	main@tmp16
  1533  0213  3028               	movlw	40
  1534  0214  07C2               	addwf	main@tmp16,f
  1535  0215  1803               	skipnc
  1536  0216  0AC3               	incf	main@tmp16+1,f
  1537  0217  300A               	movlw	10
  1538                           
  1539                           ;smartkey.C: 471: beep(10,1);
  1540  0218  01A4               	clrf	?_beep
  1541  0219  0AA4               	incf	?_beep,f
  1542  021A  268E               	fcall	_beep
  1543                           
  1544                           ;smartkey.C: 472: }
  1545  021B  2A96               	goto	l812
  1546  021C                     l6348:	
  1547                           
  1548                           ;smartkey.C: 473: else if((mtOldState == 1)){
  1549  021C  0B4C               	decfsz	_mtOldState,w
  1550  021D  2A96               	goto	l812
  1551  021E  29F3               	goto	L3
  1552  021F                     l6354:	
  1553                           ;smartkey.C: 476: }
  1554                           ;smartkey.C: 477: }
  1555                           ;smartkey.C: 478: break;
  1556                           
  1557                           ;smartkey.C: 475: if(reAlertOn)reAlertOn =0;
  1558                           
  1559                           
  1560                           ;smartkey.C: 481: if(timeTick > 200)
  1561  021F  3000               	movlw	0
  1562  0220  0271               	subwf	_timeTick+1,w
  1563  0221  30C9               	movlw	201
  1564  0222  1903               	skipnz
  1565  0223  0270               	subwf	_timeTick,w
  1566  0224  1C03               	skipc
  1567  0225  2A96               	goto	l812
  1568                           
  1569                           ;smartkey.C: 482: {
  1570                           ;smartkey.C: 483: beepOff();
  1571  0226  273C               	fcall	_beepOff
  1572                           
  1573                           ;smartkey.C: 484: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1574  0227  3008               	movlw	8
  1575  0228  2706               	fcall	_READ_EEPROM
  1576  0229  3ACC               	xorlw	204
  1577  022A  1D03               	skipz
  1578  022B  2A2F               	goto	l6362
  1579  022C  3008               	movlw	8
  1580  022D  01A0               	clrf	?_WRITE_EEPROM
  1581  022E  2621               	fcall	_WRITE_EEPROM
  1582  022F                     l6362:	
  1583  022F  30AC               	movlw	172
  1584                           
  1585                           ;smartkey.C: 485: RegStatus |=(0x20);
  1586  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0231  16C9               	bsf	_RegStatus,5
  1588                           
  1589                           ;smartkey.C: 486: setState(1,3500);
  1590  0232  00A0               	movwf	?_setState
  1591  0233  300D               	movlw	13
  1592  0234  00A1               	movwf	?_setState+1
  1593  0235  3001               	movlw	1
  1594  0236  2714               	fcall	_setState
  1595                           
  1596                           ;smartkey.C: 488: tmp16 = timeTick+40;
  1597  0237  0871               	movf	_timeTick+1,w
  1598  0238  00C3               	movwf	main@tmp16+1
  1599  0239  0870               	movf	_timeTick,w
  1600  023A  00C2               	movwf	main@tmp16
  1601  023B  3028               	movlw	40
  1602  023C  07C2               	addwf	main@tmp16,f
  1603  023D  1803               	skipnc
  1604  023E  0AC3               	incf	main@tmp16+1,f
  1605  023F  2A96               	goto	l812
  1606  0240                     l6368:	
  1607                           
  1608                           ;smartkey.C: 494: beepOff();
  1609  0240  273C               	fcall	_beepOff
  1610                           
  1611                           ;smartkey.C: 495: setState(2,300);
  1612  0241  302C               	movlw	44
  1613  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0243  00A0               	movwf	?_setState
  1615  0244  3001               	movlw	1
  1616  0245  00A1               	movwf	?_setState+1
  1617  0246  3002               	movlw	2
  1618  0247  2714               	fcall	_setState
  1619                           
  1620                           ;smartkey.C: 496: break;
  1621  0248  2A96               	goto	l812
  1622  0249                     l6374:	
  1623  0249  0874               	movf	_mtState,w
  1624                           
  1625                           ; Switch size 1, requested type "space"
  1626                           ; Number of cases is 5, Range of values is 0 to 4
  1627                           ; switch strategies available:
  1628                           ; Name         Instructions Cycles
  1629                           ; direct_byte           11     6 (fixed)
  1630                           ; simple_byte           16     9 (average)
  1631                           ; jumptable            260     6 (fixed)
  1632                           ; rangetable             9     6 (fixed)
  1633                           ; spacedrange           16     9 (fixed)
  1634                           ; locatedrange           5     3 (fixed)
  1635                           ;	Chosen strategy is direct_byte
  1636  024A  0084               	movwf	4
  1637  024B  3005               	movlw	5
  1638  024C  0204               	subwf	4,w
  1639  024D  1803               	skipnc
  1640  024E  2A96               	goto	l812
  1641  024F  3007               	movlw	high S6658
  1642  0250  008A               	movwf	10
  1643  0251  3032               	movlw	low S6658
  1644  0252  0704               	addwf	4,w
  1645  0253  0082               	movwf	2
  1646  0254                     l6376:	
  1647                           
  1648                           ;smartkey.C: 513: {
  1649                           ;smartkey.C: 515: if(lostDetect==1 && timeTick< 1500)
  1650  0254  0B4B               	decfsz	_lostDetect,w
  1651  0255  2A7B               	goto	l815
  1652  0256  3005               	movlw	5
  1653  0257  0271               	subwf	_timeTick+1,w
  1654  0258  30DC               	movlw	220
  1655  0259  1903               	skipnz
  1656  025A  0270               	subwf	_timeTick,w
  1657  025B  1803               	skipnc
  1658  025C  2A7B               	goto	l815
  1659                           
  1660                           ;smartkey.C: 516: {
  1661                           ;smartkey.C: 517: if(READ_EEPROM(0x08)==0x00) WRITE_EEPROM(0x08,0xcc);
  1662  025D  3008               	movlw	8
  1663  025E  2706               	fcall	_READ_EEPROM
  1664  025F  3800               	iorlw	0
  1665  0260  1D03               	skipz
  1666  0261  2A66               	goto	l816
  1667  0262  30CC               	movlw	204
  1668  0263  00A0               	movwf	?_WRITE_EEPROM
  1669  0264  3008               	movlw	8
  1670  0265  2621               	fcall	_WRITE_EEPROM
  1671  0266                     l816:	
  1672                           
  1673                           ;smartkey.C: 519: setState(3,1800);
  1674  0266  3008               	movlw	8
  1675  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0268  00A0               	movwf	?_setState
  1677  0269  3007               	movlw	7
  1678  026A  00A1               	movwf	?_setState+1
  1679  026B  3003               	movlw	3
  1680  026C  2714               	fcall	_setState
  1681                           
  1682                           ;smartkey.C: 520: cntTmp = timeTick+40;
  1683  026D  0871               	movf	_timeTick+1,w
  1684  026E  00C6               	movwf	_cntTmp+1
  1685  026F  0870               	movf	_timeTick,w
  1686  0270  00C5               	movwf	_cntTmp
  1687  0271  3028               	movlw	40
  1688  0272  07C5               	addwf	_cntTmp,f
  1689  0273  1803               	skipnc
  1690  0274  0AC6               	incf	_cntTmp+1,f
  1691                           
  1692                           ;smartkey.C: 521: PR2 =11;
  1693  0275  300B               	movlw	11
  1694  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1695  0277  0092               	movwf	18	;volatile
  1696                           
  1697                           ;smartkey.C: 522: beepOn();
  1698  0278  2737               	fcall	_beepOn
  1699                           
  1700                           ;smartkey.C: 523: lostDetect =0;
  1701  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1702  027A  29CF               	goto	l6312
  1703  027B                     l815:	
  1704                           ;smartkey.C: 524: }
  1705                           
  1706                           
  1707                           ;smartkey.C: 525: else {
  1708                           ;smartkey.C: 526: lostDetect =1;
  1709  027B  01CB               	clrf	_lostDetect
  1710  027C  0ACB               	incf	_lostDetect,f
  1711  027D  29D0               	goto	L4
  1712  027E                     l6396:	
  1713                           ;smartkey.C: 529: }
  1714                           ;smartkey.C: 530: timeTick =0;
  1715                           
  1716                           
  1717                           ;smartkey.C: 536: {
  1718                           ;smartkey.C: 537: timeTick =0;
  1719  027E  01F0               	clrf	_timeTick
  1720  027F  01F1               	clrf	_timeTick+1
  1721                           
  1722                           ;smartkey.C: 538: beepOn();TMR2ON = 0;
  1723  0280  2737               	fcall	_beepOn
  1724  0281  3002               	movlw	2
  1725  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1726  0283  1112               	bcf	18,2
  1727                           
  1728                           ;smartkey.C: 539: beep(10,2);
  1729  0284  00A4               	movwf	?_beep
  1730  0285  300A               	movlw	10
  1731  0286  268E               	fcall	_beep
  1732                           
  1733                           ;smartkey.C: 540: if(mtOldState == 3){reAlertOn =1;}
  1734  0287  084C               	movf	_mtOldState,w
  1735  0288  3A03               	xorlw	3
  1736  0289  1D03               	skipz
  1737  028A  2A96               	goto	l812
  1738  028B  01BB               	clrf	main@reAlertOn
  1739  028C  0ABB               	incf	main@reAlertOn,f
  1740  028D  2A96               	goto	l812
  1741  028E                     l6410:	
  1742  028E  0874               	movf	_mtState,w
  1743                           
  1744                           ; Switch size 1, requested type "space"
  1745                           ; Number of cases is 2, Range of values is 1 to 2
  1746                           ; switch strategies available:
  1747                           ; Name         Instructions Cycles
  1748                           ; simple_byte            7     4 (average)
  1749                           ; direct_byte           11     9 (fixed)
  1750                           ; jumptable            263     9 (fixed)
  1751                           ;	Chosen strategy is simple_byte
  1752  028F  3A01               	xorlw	1	; case 1
  1753  0290  1903               	skipnz
  1754  0291  2A54               	goto	l6376
  1755  0292  3A03               	xorlw	3	; case 2
  1756  0293  1903               	skipnz
  1757  0294  2A7E               	goto	l6396
  1758  0295  2A96               	goto	l812
  1759  0296                     l812:	
  1760                           
  1761                           ;smartkey.C: 544: }
  1762                           ;smartkey.C: 546: }
  1763                           ;smartkey.C: 548: PAIE = 1;
  1764  0296  158B               	bsf	11,3
  1765  0297                     l6412:	
  1766                           
  1767                           ;smartkey.C: 549: }
  1768                           ;smartkey.C: 551: }
  1769                           ;smartkey.C: 555: {
  1770                           ;smartkey.C: 556: if((timeOut!=0)&&( timeTick >timeOut)){
  1771  0297  0848               	movf	_timeOut+1,w
  1772  0298  0447               	iorwf	_timeOut,w
  1773  0299  1903               	skipnz
  1774  029A  2B0F               	goto	l6492
  1775  029B  0871               	movf	_timeTick+1,w
  1776  029C  0248               	subwf	_timeOut+1,w
  1777  029D  1D03               	skipz
  1778  029E  2AA1               	goto	u3215
  1779  029F  0870               	movf	_timeTick,w
  1780  02A0  0247               	subwf	_timeOut,w
  1781  02A1                     u3215:	
  1782  02A1  1C03               	btfss	3,0
  1783  02A2  2B01               	goto	l6490
  1784  02A3  2B0F               	goto	l6492
  1785  02A4                     l6418:	
  1786                           
  1787                           ;smartkey.C: 567: beepOff();
  1788  02A4  273C               	fcall	_beepOff
  1789  02A5  302C               	movlw	44
  1790                           
  1791                           ;smartkey.C: 568: RegStatus &=(~0x20);
  1792  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1793  02A7  12C9               	bcf	_RegStatus,5
  1794                           
  1795                           ;smartkey.C: 569: setState(2,300);
  1796  02A8  00A0               	movwf	?_setState
  1797  02A9  3001               	movlw	1
  1798  02AA  00A1               	movwf	?_setState+1
  1799  02AB  3002               	movlw	2
  1800  02AC  2714               	fcall	_setState
  1801                           
  1802                           ;smartkey.C: 570: break;
  1803  02AD  2B0F               	goto	l6492
  1804  02AE                     l6424:	
  1805                           
  1806                           ;smartkey.C: 572: beepOff();
  1807  02AE  273C               	fcall	_beepOff
  1808                           
  1809                           ;smartkey.C: 573: delay_x10ms(20);
  1810  02AF  3014               	movlw	20
  1811  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1812  02B1  00A0               	movwf	?_delay_x10ms
  1813  02B2  01A1               	clrf	?_delay_x10ms+1
  1814  02B3  26B9               	fcall	_delay_x10ms
  1815  02B4                     L5:	
  1816                           
  1817                           ;smartkey.C: 574: beepOn();TMR2ON = 0;reAlertOn =0;
  1818  02B4  2737               	fcall	_beepOn
  1819  02B5  301E               	movlw	30
  1820  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1821  02B7  1112               	bcf	18,2
  1822  02B8  01BB               	clrf	main@reAlertOn
  1823  02B9  01A4               	clrf	?_beep
  1824  02BA  0AA4               	incf	?_beep,f
  1825  02BB  268E               	fcall	_beep
  1826  02BC  3000               	movlw	0
  1827                           
  1828                           ;smartkey.C: 576: setState(0,0);
  1829  02BD  01A0               	clrf	?_setState
  1830  02BE  01A1               	clrf	?_setState+1
  1831  02BF  2714               	fcall	_setState
  1832                           
  1833                           ;smartkey.C: 577: RA7 =0;
  1834  02C0  1385               	bcf	5,7
  1835  02C1                     l6440:	
  1836                           
  1837                           ;smartkey.C: 578: tmp16 = timeTick+40;
  1838  02C1  0871               	movf	_timeTick+1,w
  1839  02C2  00C3               	movwf	main@tmp16+1
  1840  02C3  0870               	movf	_timeTick,w
  1841  02C4  00C2               	movwf	main@tmp16
  1842  02C5  3028               	movlw	40
  1843  02C6  07C2               	addwf	main@tmp16,f
  1844  02C7  1803               	skipnc
  1845  02C8  0AC3               	incf	main@tmp16+1,f
  1846                           
  1847                           ;smartkey.C: 579: break;
  1848  02C9  2B0F               	goto	l6492
  1849  02CA                     l6444:	
  1850                           
  1851                           ;smartkey.C: 582: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1852  02CA  3008               	movlw	8
  1853  02CB  2706               	fcall	_READ_EEPROM
  1854  02CC  3ACC               	xorlw	204
  1855  02CD  1D03               	skipz
  1856  02CE  2AD2               	goto	l6448
  1857  02CF  3008               	movlw	8
  1858  02D0  01A0               	clrf	?_WRITE_EEPROM
  1859  02D1  2621               	fcall	_WRITE_EEPROM
  1860  02D2                     l6448:	
  1861                           
  1862                           ;smartkey.C: 584: if(reAlertOn){
  1863  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1864  02D3  083B               	movf	main@reAlertOn,w
  1865  02D4  1903               	btfsc	3,2
  1866  02D5  2AE9               	goto	l6458
  1867                           
  1868                           ;smartkey.C: 585: setState(4,6000);
  1869  02D6  3070               	movlw	112
  1870  02D7  00A0               	movwf	?_setState
  1871  02D8  3017               	movlw	23
  1872  02D9  00A1               	movwf	?_setState+1
  1873  02DA  3004               	movlw	4
  1874  02DB  2714               	fcall	_setState
  1875                           
  1876                           ;smartkey.C: 586: cntTmp = timeTick+40;
  1877  02DC  0871               	movf	_timeTick+1,w
  1878  02DD  00C6               	movwf	_cntTmp+1
  1879  02DE  0870               	movf	_timeTick,w
  1880  02DF  00C5               	movwf	_cntTmp
  1881  02E0  3028               	movlw	40
  1882  02E1  07C5               	addwf	_cntTmp,f
  1883  02E2  1803               	skipnc
  1884  02E3  0AC6               	incf	_cntTmp+1,f
  1885                           
  1886                           ;smartkey.C: 587: PR2 =11;
  1887  02E4  300B               	movlw	11
  1888  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  1889  02E6  0092               	movwf	18	;volatile
  1890                           
  1891                           ;smartkey.C: 588: beepOn();
  1892  02E7  2737               	fcall	_beepOn
  1893                           
  1894                           ;smartkey.C: 590: }else if(mtOldState == 0){
  1895  02E8  2B0F               	goto	l6492
  1896  02E9                     l6458:	
  1897  02E9  08CC               	movf	_mtOldState,f
  1898  02EA  1D03               	skipz
  1899  02EB  2AB4               	goto	L5
  1900                           
  1901                           ;smartkey.C: 592: beep(10,5);
  1902  02EC  3005               	movlw	5
  1903  02ED  00A4               	movwf	?_beep
  1904  02EE  300A               	movlw	10
  1905  02EF  268E               	fcall	_beep
  1906  02F0  3040               	movlw	64
  1907                           
  1908                           ;smartkey.C: 593: RegStatus |=(0x20);
  1909  02F1  16C9               	bsf	_RegStatus,5
  1910                           
  1911                           ;smartkey.C: 596: if(READ_EEPROM(0x40))WRITE_EEPROM(0x40,0);
  1912  02F2  2706               	fcall	_READ_EEPROM
  1913  02F3  3A00               	xorlw	0
  1914  02F4  1903               	skipnz
  1915  02F5  2AF9               	goto	l832
  1916  02F6  3040               	movlw	64
  1917  02F7  01A0               	clrf	?_WRITE_EEPROM
  1918  02F8  2621               	fcall	_WRITE_EEPROM
  1919  02F9                     l832:	
  1920                           
  1921                           ;smartkey.C: 598: setState(1,3500);
  1922  02F9  30AC               	movlw	172
  1923  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1924  02FB  00A0               	movwf	?_setState
  1925  02FC  300D               	movlw	13
  1926  02FD  00A1               	movwf	?_setState+1
  1927  02FE  3001               	movlw	1
  1928  02FF  2714               	fcall	_setState
  1929  0300  2AC1               	goto	l6440
  1930  0301                     l6490:	
  1931                           ;smartkey.C: 605: setState(0,0);
  1932                           
  1933                           ;smartkey.C: 604: beep(30,1);
  1934                           
  1935                           ;smartkey.C: 603: reAlertOn =0;
  1936                           
  1937                           ;smartkey.C: 602: beepOn();TMR2ON = 0;
  1938                           
  1939  0301  0874               	movf	_mtState,w
  1940                           
  1941                           ; Switch size 1, requested type "space"
  1942                           ; Number of cases is 4, Range of values is 1 to 4
  1943                           ; switch strategies available:
  1944                           ; Name         Instructions Cycles
  1945                           ; simple_byte           13     7 (average)
  1946                           ; direct_byte           13     9 (fixed)
  1947                           ; jumptable            263     9 (fixed)
  1948                           ;	Chosen strategy is simple_byte
  1949  0302  3A01               	xorlw	1	; case 1
  1950  0303  1903               	skipnz
  1951  0304  2B0F               	goto	l6492
  1952  0305  3A03               	xorlw	3	; case 2
  1953  0306  1903               	skipnz
  1954  0307  2ACA               	goto	l6444
  1955  0308  3A01               	xorlw	1	; case 3
  1956  0309  1903               	skipnz
  1957  030A  2AA4               	goto	l6418
  1958  030B  3A07               	xorlw	7	; case 4
  1959  030C  1903               	skipnz
  1960  030D  2AAE               	goto	l6424
  1961  030E  2B0F               	goto	l6492
  1962  030F                     l6492:	
  1963                           
  1964                           ;smartkey.C: 611: }
  1965                           ;smartkey.C: 613: }
  1966                           ;smartkey.C: 615: if((timeTick>tmp16) && (mtState == 1) && mpuOk ==1){
  1967  030F  0871               	movf	_timeTick+1,w
  1968  0310  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0311  0243               	subwf	main@tmp16+1,w
  1970  0312  1D03               	skipz
  1971  0313  2B16               	goto	u3265
  1972  0314  0870               	movf	_timeTick,w
  1973  0315  0242               	subwf	main@tmp16,w
  1974  0316                     u3265:	
  1975  0316  1803               	skipnc
  1976  0317  2BAE               	goto	l6570
  1977  0318  0B74               	decfsz	_mtState,w
  1978  0319  2BAE               	goto	l6570
  1979  031A  0B3C               	decfsz	main@mpuOk,w
  1980  031B  2BAE               	goto	l6570
  1981                           
  1982                           ;smartkey.C: 616: tmp16 = timeTick+40;
  1983  031C  0871               	movf	_timeTick+1,w
  1984  031D  00C3               	movwf	main@tmp16+1
  1985  031E  0870               	movf	_timeTick,w
  1986  031F  00C2               	movwf	main@tmp16
  1987  0320  3028               	movlw	40
  1988  0321  07C2               	addwf	main@tmp16,f
  1989  0322  1803               	skipnc
  1990  0323  0AC3               	incf	main@tmp16+1,f
  1991                           
  1992                           ;smartkey.C: 617: if(AccRead(0x3b,buf,6)==0){
  1993  0324  3035               	movlw	main@buf& (0+255)
  1994  0325  00A4               	movwf	?_AccRead
  1995  0326  3006               	movlw	6
  1996  0327  01A5               	clrf	?_AccRead+1
  1997  0328  00A6               	movwf	?_AccRead+2
  1998  0329  303B               	movlw	59
  1999  032A  25BE               	fcall	_AccRead
  2000  032B  3800               	iorlw	0
  2001  032C  1D03               	skipz
  2002  032D  2BAE               	goto	l6570
  2003                           
  2004                           ;smartkey.C: 619: if(compe(buf[0], (signed char)acXsum,5) && compe(buf[2], (signed char)
      +                          acYsum,5)){
  2005  032E  1283               	bcf	3,5	;RP0=0, select bank0
  2006  032F  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0330  083F               	movf	main@acXsum,w
  2008  0331  00A0               	movwf	?_compe
  2009  0332  3005               	movlw	5
  2010  0333  00A1               	movwf	?_compe+1
  2011  0334  0835               	movf	main@buf,w
  2012  0335  24AB               	fcall	_compe
  2013  0336  3A00               	xorlw	0
  2014  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0339  1903               	skipnz
  2017  033A  2B5C               	goto	L10
  2018  033B  083D               	movf	main@acYsum,w
  2019  033C  00A0               	movwf	?_compe
  2020  033D  3005               	movlw	5
  2021  033E  00A1               	movwf	?_compe+1
  2022  033F  0837               	movf	main@buf+2,w
  2023  0340  24AB               	fcall	_compe
  2024  0341  3A00               	xorlw	0
  2025                           
  2026                           ;smartkey.C: 621: isSw++;
  2027  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2029  0344  1903               	skipnz
  2030  0345  2B5C               	goto	L10
  2031  0346  302D               	movlw	45
  2032  0347  0AC1               	incf	main@isSw,f
  2033                           
  2034                           ;smartkey.C: 622: if(isSw >44){
  2035  0348  0241               	subwf	main@isSw,w
  2036  0349  1C03               	skipc
  2037  034A  2B4F               	goto	l6518
  2038  034B  3002               	movlw	2
  2039                           
  2040                           ;smartkey.C: 623: isSw =0;
  2041  034C  01C1               	clrf	main@isSw
  2042                           
  2043                           ;smartkey.C: 624: vibrateOn=2;
  2044  034D  00B4               	movwf	main@vibrateOn
  2045  034E  2B84               	goto	L6
  2046  034F                     l6518:	
  2047                           ;smartkey.C: 627: }
  2048                           
  2049                           ;smartkey.C: 626: setState(2,300);
  2050                           
  2051                           ;smartkey.C: 625: RegStatus &=(~0x20);
  2052                           
  2053                           
  2054                           ;smartkey.C: 628: else if(isSw > 25){
  2055  034F  301A               	movlw	26
  2056  0350  0241               	subwf	main@isSw,w
  2057  0351  1803               	btfsc	3,0
  2058                           
  2059                           ;smartkey.C: 629: if(isSw%2==0){
  2060  0352  1841               	btfsc	main@isSw,0
  2061  0353  2B8B               	goto	l6548
  2062                           
  2063                           ;smartkey.C: 630: beepOn();TMR2ON = 0; beep(7,1);
  2064  0354  2737               	fcall	_beepOn
  2065  0355  3007               	movlw	7
  2066  0356  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0357  1112               	bcf	18,2
  2068  0358  01A4               	clrf	?_beep
  2069  0359  0AA4               	incf	?_beep,f
  2070  035A  268E               	fcall	_beep
  2071  035B  2B8B               	goto	l6548
  2072  035C                     L10:	
  2073                           ;smartkey.C: 635: else{
  2074                           ;smartkey.C: 636: isSw =0;
  2075                           
  2076                           ;smartkey.C: 631: }
  2077                           ;smartkey.C: 632: }
  2078                           ;smartkey.C: 634: }
  2079                           
  2080  035C  01C1               	clrf	main@isSw
  2081                           
  2082                           ;smartkey.C: 639: if(compe(buf[0], acXOld,2) && compe(buf[2], acYOld,2)){
  2083  035D  0833               	movf	main@acXOld,w
  2084  035E  00A0               	movwf	?_compe
  2085  035F  3002               	movlw	2
  2086  0360  00A1               	movwf	?_compe+1
  2087  0361  0835               	movf	main@buf,w
  2088  0362  24AB               	fcall	_compe
  2089  0363  3A00               	xorlw	0
  2090  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2091  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2092  0366  1903               	skipnz
  2093  0367  2B8D               	goto	L11
  2094  0368  0832               	movf	main@acYOld,w
  2095  0369  00A0               	movwf	?_compe
  2096  036A  3002               	movlw	2
  2097  036B  00A1               	movwf	?_compe+1
  2098  036C  0837               	movf	main@buf+2,w
  2099  036D  24AB               	fcall	_compe
  2100  036E  3A00               	xorlw	0
  2101                           
  2102                           ;smartkey.C: 640: isWait++;
  2103  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2104  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2105  0371  1903               	skipnz
  2106  0372  2B8D               	goto	L11
  2107  0373  0AAF               	incf	main@isWait,f
  2108  0374  1903               	skipnz
  2109  0375  0AB0               	incf	main@isWait+1,f
  2110                           
  2111                           ;smartkey.C: 641: if(isWait==450){
  2112  0376  0330               	decf	main@isWait+1,w
  2113  0377  30C2               	movlw	194
  2114  0378  1903               	skipnz
  2115  0379  062F               	xorwf	main@isWait,w
  2116  037A  1D03               	skipz
  2117  037B  2B8B               	goto	l6548
  2118  037C  3002               	movlw	2
  2119                           
  2120                           ;smartkey.C: 642: isWait = 0;
  2121  037D  01AF               	clrf	main@isWait
  2122  037E  01B0               	clrf	main@isWait+1
  2123                           
  2124                           ;smartkey.C: 643: beep(7,2);
  2125  037F  00A4               	movwf	?_beep
  2126  0380  3007               	movlw	7
  2127  0381  268E               	fcall	_beep
  2128                           
  2129                           ;smartkey.C: 644: vibrateOn=1;
  2130  0382  01B4               	clrf	main@vibrateOn
  2131  0383  0AB4               	incf	main@vibrateOn,f
  2132  0384                     L6:	
  2133  0384  302C               	movlw	44
  2134                           
  2135                           ;smartkey.C: 645: RegStatus &=(~0x20);
  2136  0385  12C9               	bcf	_RegStatus,5
  2137                           
  2138                           ;smartkey.C: 646: setState(2,300);
  2139  0386  00A0               	movwf	?_setState
  2140  0387  3001               	movlw	1
  2141  0388  00A1               	movwf	?_setState+1
  2142  0389  3002               	movlw	2
  2143  038A  2714               	fcall	_setState
  2144  038B                     l6548:	
  2145                           
  2146                           ;smartkey.C: 647: }
  2147                           ;smartkey.C: 648: }
  2148                           ;smartkey.C: 650: }
  2149                           ;smartkey.C: 652: if( (buf[4] > -31) && (buf[4] < 31)) {
  2150  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2151  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2152  038D                     L11:	
  2153  038D  0839               	movf	main@buf+4,w
  2154  038E  3A80               	xorlw	128
  2155  038F  3E9E               	addlw	158
  2156  0390  1C03               	skipc
  2157  0391  2BA9               	goto	l6564
  2158  0392  0839               	movf	main@buf+4,w
  2159  0393  3A80               	xorlw	128
  2160  0394  3E61               	addlw	-159
  2161  0395  1803               	skipnc
  2162  0396  2BA9               	goto	l6564
  2163  0397  3005               	movlw	5
  2164                           
  2165                           ;smartkey.C: 653: isFall++;
  2166  0398  0AB1               	incf	main@isFall,f
  2167                           
  2168                           ;smartkey.C: 654: if(isFall >4){
  2169  0399  0231               	subwf	main@isFall,w
  2170  039A  1C03               	skipc
  2171  039B  2BAA               	goto	l6566
  2172  039C  3002               	movlw	2
  2173                           
  2174                           ;smartkey.C: 655: isFall =0;
  2175  039D  01B1               	clrf	main@isFall
  2176                           
  2177                           ;smartkey.C: 656: beep(7,2);
  2178  039E  00A4               	movwf	?_beep
  2179  039F  3007               	movlw	7
  2180  03A0  268E               	fcall	_beep
  2181  03A1  302C               	movlw	44
  2182                           
  2183                           ;smartkey.C: 657: RegStatus &=(~0x20);
  2184  03A2  12C9               	bcf	_RegStatus,5
  2185                           
  2186                           ;smartkey.C: 658: setState(2,300);
  2187  03A3  00A0               	movwf	?_setState
  2188  03A4  3001               	movlw	1
  2189  03A5  00A1               	movwf	?_setState+1
  2190  03A6  3002               	movlw	2
  2191  03A7  2714               	fcall	_setState
  2192  03A8  2BAA               	goto	l6566
  2193  03A9                     l6564:	
  2194                           
  2195                           ;smartkey.C: 661: else{
  2196                           ;smartkey.C: 662: isFall=0;
  2197  03A9  01B1               	clrf	main@isFall
  2198  03AA                     l6566:	
  2199                           
  2200                           ;smartkey.C: 663: }
  2201                           ;smartkey.C: 665: acYOld = buf[2];acXOld = buf[0];
  2202  03AA  0837               	movf	main@buf+2,w
  2203  03AB  00B2               	movwf	main@acYOld
  2204  03AC  0835               	movf	main@buf,w
  2205  03AD  00B3               	movwf	main@acXOld
  2206  03AE                     l6570:	
  2207                           
  2208                           ;smartkey.C: 666: }
  2209                           ;smartkey.C: 668: }
  2210                           ;smartkey.C: 671: if((timeTick>tmp16) && (mtState == 0 ) && mpuOk ==1){
  2211  03AE  0871               	movf	_timeTick+1,w
  2212  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2213  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2214  03B1  0243               	subwf	main@tmp16+1,w
  2215  03B2  1D03               	skipz
  2216  03B3  2BB6               	goto	u3415
  2217  03B4  0870               	movf	_timeTick,w
  2218  03B5  0242               	subwf	main@tmp16,w
  2219  03B6                     u3415:	
  2220  03B6  1803               	skipnc
  2221  03B7  2C16               	goto	l6618
  2222  03B8  08F4               	movf	_mtState,f
  2223  03B9  1D03               	skipz
  2224  03BA  2C16               	goto	l6618
  2225  03BB  0B3C               	decfsz	main@mpuOk,w
  2226  03BC  2C16               	goto	l6618
  2227                           
  2228                           ;smartkey.C: 673: if(timeTick >65000) timeTick =0;
  2229  03BD  30FD               	movlw	253
  2230  03BE  0271               	subwf	_timeTick+1,w
  2231  03BF  30E9               	movlw	233
  2232  03C0  1903               	skipnz
  2233  03C1  0270               	subwf	_timeTick,w
  2234  03C2  1C03               	skipc
  2235  03C3  2BC6               	goto	l6580
  2236  03C4  01F0               	clrf	_timeTick
  2237  03C5  01F1               	clrf	_timeTick+1
  2238  03C6                     l6580:	
  2239                           
  2240                           ;smartkey.C: 674: tmp16 = timeTick+40;
  2241  03C6  0871               	movf	_timeTick+1,w
  2242  03C7  00C3               	movwf	main@tmp16+1
  2243  03C8  0870               	movf	_timeTick,w
  2244  03C9  00C2               	movwf	main@tmp16
  2245  03CA  3028               	movlw	40
  2246  03CB  07C2               	addwf	main@tmp16,f
  2247  03CC  1803               	skipnc
  2248  03CD  0AC3               	incf	main@tmp16+1,f
  2249                           
  2250                           ;smartkey.C: 676: if(AccRead(0x3b,buf,6)==0){
  2251  03CE  3035               	movlw	main@buf& (0+255)
  2252  03CF  00A4               	movwf	?_AccRead
  2253  03D0  3006               	movlw	6
  2254  03D1  01A5               	clrf	?_AccRead+1
  2255  03D2  00A6               	movwf	?_AccRead+2
  2256  03D3  303B               	movlw	59
  2257  03D4  25BE               	fcall	_AccRead
  2258  03D5  3800               	iorlw	0
  2259                           
  2260                           ;smartkey.C: 677: if(vibrateOn==1){
  2261  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2262  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2263  03D8  1D03               	skipz
  2264  03D9  2C18               	goto	L12
  2265  03DA  0B34               	decfsz	main@vibrateOn,w
  2266  03DB  2BF4               	goto	l6602
  2267                           
  2268                           ;smartkey.C: 678: if(compe(buf[0],acXOld ,2) && compe(buf[2],acYOld ,2)){
  2269  03DC  0833               	movf	main@acXOld,w
  2270  03DD  00A0               	movwf	?_compe
  2271  03DE  3002               	movlw	2
  2272  03DF  00A1               	movwf	?_compe+1
  2273  03E0  0835               	movf	main@buf,w
  2274  03E1  24AB               	fcall	_compe
  2275  03E2  3A00               	xorlw	0
  2276  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2277  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2278  03E5  1903               	skipnz
  2279  03E6  2C0E               	goto	L13
  2280  03E7  0832               	movf	main@acYOld,w
  2281  03E8  00A0               	movwf	?_compe
  2282  03E9  3002               	movlw	2
  2283  03EA  00A1               	movwf	?_compe+1
  2284  03EB  0837               	movf	main@buf+2,w
  2285  03EC  24AB               	fcall	_compe
  2286  03ED  3A00               	xorlw	0
  2287  03EE  1903               	skipnz
  2288  03EF  2C0C               	goto	l6610
  2289  03F0                     l6592:	
  2290                           
  2291                           ;smartkey.C: 680: isSw=0;
  2292  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2293  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2294  03F2  01C1               	clrf	main@isSw
  2295                           
  2296                           ;smartkey.C: 683: }
  2297  03F3  2C16               	goto	l6618
  2298  03F4                     l6602:	
  2299                           ;smartkey.C: 688: {
  2300                           ;smartkey.C: 689: beepOn();TMR2ON = 0; beep(7,3);
  2301                           
  2302                           ;smartkey.C: 684: else{
  2303                           ;smartkey.C: 685: isSw++;
  2304                           
  2305                           
  2306                           ;smartkey.C: 693: else if(vibrateOn==2){
  2307  03F4  0834               	movf	main@vibrateOn,w
  2308  03F5  3A02               	xorlw	2
  2309  03F6  1D03               	skipz
  2310  03F7  2C16               	goto	l6618
  2311                           
  2312                           ;smartkey.C: 694: if(compe(buf[0],(signed char)acXsum ,5) && compe(buf[2],(signed char)a
      +                          cYsum ,5)){
  2313  03F8  083F               	movf	main@acXsum,w
  2314  03F9  00A0               	movwf	?_compe
  2315  03FA  3005               	movlw	5
  2316  03FB  00A1               	movwf	?_compe+1
  2317  03FC  0835               	movf	main@buf,w
  2318  03FD  24AB               	fcall	_compe
  2319  03FE  3A00               	xorlw	0
  2320  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2321  0400  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0401  1903               	skipnz
  2323  0402  2C0E               	goto	L13
  2324  0403  083D               	movf	main@acYsum,w
  2325  0404  00A0               	movwf	?_compe
  2326  0405  3005               	movlw	5
  2327  0406  00A1               	movwf	?_compe+1
  2328  0407  0837               	movf	main@buf+2,w
  2329  0408  24AB               	fcall	_compe
  2330  0409  3A00               	xorlw	0
  2331  040A  1D03               	btfss	3,2
  2332  040B  2BF0               	goto	l6592
  2333  040C                     l6610:	
  2334                           
  2335                           ;smartkey.C: 700: else{
  2336                           ;smartkey.C: 701: isSw++;
  2337  040C  1283               	bcf	3,5	;RP0=0, select bank0
  2338  040D  1303               	bcf	3,6	;RP1=0, select bank0
  2339  040E                     L13:	
  2340  040E  0AC1               	incf	main@isSw,f
  2341                           
  2342                           ;smartkey.C: 704: {
  2343                           ;smartkey.C: 705: beepOn();TMR2ON = 0; beep(7,3);
  2344  040F  2737               	fcall	_beepOn
  2345  0410  3003               	movlw	3
  2346  0411  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0412  1112               	bcf	18,2
  2348  0413  00A4               	movwf	?_beep
  2349  0414  3007               	movlw	7
  2350  0415  268E               	fcall	_beep
  2351  0416                     l6618:	
  2352                           
  2353                           ;smartkey.C: 706: }
  2354                           ;smartkey.C: 707: }
  2355                           ;smartkey.C: 708: }
  2356                           ;smartkey.C: 710: }
  2357                           ;smartkey.C: 713: }
  2358                           ;smartkey.C: 715: if(RegStatus & 0x20) {RC4 =1;RC2 =1;}
  2359  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0418                     L12:	
  2362  0418  1EC9               	btfss	_RegStatus,5
  2363  0419  2C1D               	goto	l857
  2364  041A  1607               	bsf	7,4
  2365  041B  1507               	bsf	7,2
  2366  041C  29C6               	goto	l6304
  2367  041D                     l857:	
  2368                           
  2369                           ;smartkey.C: 716: else {RC4 =0;RC2 =0;}
  2370  041D  1207               	bcf	7,4
  2371  041E  1107               	bcf	7,2
  2372  041F  29C6               	goto	l6304
  2373  0420                     __end_of_main:	
  2374                           
  2375                           	psect	swtext1
  2376  0732                     __pswtext1:	
  2377  0732                     S6658:	
  2378  0732  2A96               	ljmp	l812
  2379  0733  29CF               	ljmp	l6312
  2380  0734  29D6               	ljmp	l6316
  2381  0735  2A1F               	ljmp	l6354
  2382  0736  2A40               	ljmp	l6368
  2383                           
  2384                           	psect	text861
  2385  05BE                     __ptext861:	
  2386 ;; =============== function _main ends ============
  2387                           
  2388                           
  2389 ;; *************** function _AccRead *****************
  2390 ;; Defined at:
  2391 ;;		line 31 in file "mpu6x.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  rAdd            1    wreg     unsigned char 
  2394 ;;  dat             2    4[BANK0 ] PTR unsigned char 
  2395 ;;		 -> RAM(256), main@buf(6), 
  2396 ;;  len             1    6[BANK0 ] unsigned char 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  rAdd            1   10[BANK0 ] unsigned char 
  2399 ;;  i               1   11[BANK0 ] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      unsigned char 
  2402 ;; Registers used:
  2403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 60/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1
  2409 ;;      Params:         0       3       0
  2410 ;;      Locals:         0       2       0
  2411 ;;      Temps:          0       3       0
  2412 ;;      Totals:         0       8       0
  2413 ;;Total ram usage:        8 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    3
  2416 ;; This function calls:
  2417 ;;		_swI2C_Start
  2418 ;;		_swI2C_WriteByte
  2419 ;;		_swI2C_ReadByte
  2420 ;;		_swI2C_Stop
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425  05BE                     _AccRead:	
  2426                           
  2427                           ; Regs used in _AccRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2428                           ;AccRead@rAdd stored from wreg
  2429  05BE  00AA               	movwf	AccRead@rAdd
  2430                           
  2431                           ;mpu6x.c: 32: unsigned char i;
  2432                           ;mpu6x.c: 34: swI2C_Start();
  2433  05BF  26A4               	fcall	_swI2C_Start
  2434                           
  2435                           ;mpu6x.c: 36: if(swI2C_WriteByte(0x68<<1)== 0 )
  2436  05C0  30D0               	movlw	208
  2437  05C1  257B               	fcall	_swI2C_WriteByte
  2438  05C2  3800               	iorlw	0
  2439  05C3  1D03               	skipz
  2440  05C4  3401               	retlw	1
  2441                           
  2442                           ;mpu6x.c: 37: {
  2443                           ;mpu6x.c: 38: if(swI2C_WriteByte(rAdd)==0 )
  2444  05C5  082A               	movf	AccRead@rAdd,w
  2445  05C6  257B               	fcall	_swI2C_WriteByte
  2446  05C7  3800               	iorlw	0
  2447  05C8  1D03               	skipz
  2448  05C9  3402               	retlw	2
  2449                           
  2450                           ;mpu6x.c: 39: {
  2451                           ;mpu6x.c: 40: swI2C_Start();
  2452  05CA  26A4               	fcall	_swI2C_Start
  2453                           
  2454                           ;mpu6x.c: 41: if(swI2C_WriteByte((0x68<<1)|1)== 0 ){
  2455  05CB  30D1               	movlw	209
  2456  05CC  257B               	fcall	_swI2C_WriteByte
  2457  05CD  3800               	iorlw	0
  2458  05CE  1D03               	skipz
  2459  05CF  3401               	retlw	1
  2460                           
  2461                           ;mpu6x.c: 43: for(i=0; i<(len-1);i++){
  2462  05D0  01AB               	clrf	AccRead@i
  2463  05D1                     l6134:	
  2464  05D1  0826               	movf	AccRead@len,w
  2465  05D2  3EFF               	addlw	255
  2466  05D3  00A7               	movwf	??_AccRead
  2467  05D4  30FF               	movlw	255
  2468  05D5  1803               	skipnc
  2469  05D6  3000               	movlw	0
  2470  05D7  00A8               	movwf	??_AccRead+1
  2471  05D8  3A80               	xorlw	128
  2472  05D9  3C80               	sublw	128
  2473  05DA  1D03               	skipz
  2474  05DB  2DDE               	goto	u2855
  2475  05DC  0827               	movf	??_AccRead,w
  2476  05DD  022B               	subwf	AccRead@i,w
  2477  05DE                     u2855:	
  2478                           
  2479                           ;mpu6x.c: 44: dat[i]=swI2C_ReadByte(1);
  2480  05DE  3001               	movlw	1
  2481  05DF  1803               	btfsc	3,0
  2482  05E0  2DE5               	goto	L14
  2483  05E1  24F1               	fcall	_swI2C_ReadByte
  2484  05E2  25E9               	fcall	PL2	;call to abstracted procedure
  2485  05E3  0AAB               	incf	AccRead@i,f
  2486  05E4  2DD1               	goto	l6134
  2487  05E5                     L14:	
  2488                           ;mpu6x.c: 45: }
  2489                           ;mpu6x.c: 46: dat[i]=swI2C_ReadByte(1);
  2490                           
  2491  05E5  24F1               	fcall	_swI2C_ReadByte
  2492  05E6  25E9               	fcall	PL2	;call to abstracted procedure
  2493                           
  2494                           ;mpu6x.c: 47: swI2C_Stop();
  2495  05E7  26EA               	fcall	_swI2C_Stop
  2496                           
  2497                           ;mpu6x.c: 48: return 0;
  2498  05E8  3400               	retlw	0
  2499  05E9                     __end_of_AccRead:	
  2500                           ;mpu6x.c: 54: else
  2501                           ;mpu6x.c: 55: return 2;
  2502                           
  2503                           ;mpu6x.c: 51: else
  2504                           ;mpu6x.c: 52: return 1;
  2505                           
  2506  05E9                     PL2:	
  2507  05E9  00A7               	movwf	??_AccRead
  2508  05EA  082B               	movf	AccRead@i,w
  2509  05EB  0724               	addwf	AccRead@dat,w
  2510  05EC  00A8               	movwf	??_AccRead+1
  2511  05ED  0825               	movf	AccRead@dat+1,w
  2512  05EE  1803               	skipnc
  2513  05EF  3E01               	addlw	1
  2514  05F0  00A9               	movwf	??_AccRead+2
  2515  05F1  0828               	movf	??_AccRead+1,w
  2516  05F2  0084               	movwf	4
  2517  05F3  1383               	bcf	3,7
  2518  05F4  1829               	btfsc	??_AccRead+2,0
  2519  05F5  1783               	bsf	3,7
  2520  05F6  0827               	movf	??_AccRead,w
  2521  05F7  0080               	movwf	0
  2522  05F8  0008               	return
  2523                           
  2524                           	psect	text862
  2525  05F9                     __ptext862:	
  2526 ;; =============== function _AccRead ends ============
  2527                           
  2528                           
  2529 ;; *************** function _AccWrite *****************
  2530 ;; Defined at:
  2531 ;;		line 4 in file "mpu6x.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  rAdd            1    wreg     unsigned char 
  2534 ;;  dat             2    3[BANK0 ] PTR unsigned char 
  2535 ;;		 -> RAM(256), 
  2536 ;;  len             1    5[BANK0 ] unsigned char 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  rAdd            1    8[BANK0 ] unsigned char 
  2539 ;;  i               1    9[BANK0 ] unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      unsigned char 
  2542 ;; Registers used:
  2543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 60/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1
  2549 ;;      Params:         0       3       0
  2550 ;;      Locals:         0       2       0
  2551 ;;      Temps:          0       2       0
  2552 ;;      Totals:         0       7       0
  2553 ;;Total ram usage:        7 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    3
  2556 ;; This function calls:
  2557 ;;		_swI2C_Start
  2558 ;;		_swI2C_WriteByte
  2559 ;;		_swI2C_Stop
  2560 ;; This function is called by:
  2561 ;;		_main
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564  05F9                     _AccWrite:	
  2565                           
  2566                           ; Regs used in _AccWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2567                           ;AccWrite@rAdd stored from wreg
  2568  05F9  00A8               	movwf	AccWrite@rAdd
  2569                           
  2570                           ;mpu6x.c: 5: unsigned char i;
  2571                           ;mpu6x.c: 6: swI2C_Start();
  2572  05FA  26A4               	fcall	_swI2C_Start
  2573                           
  2574                           ;mpu6x.c: 8: if(swI2C_WriteByte(0x68<<1)== 0 )
  2575  05FB  30D0               	movlw	208
  2576  05FC  257B               	fcall	_swI2C_WriteByte
  2577  05FD  3800               	iorlw	0
  2578  05FE  1D03               	skipz
  2579  05FF  3401               	retlw	1
  2580                           
  2581                           ;mpu6x.c: 9: {
  2582                           ;mpu6x.c: 10: if(swI2C_WriteByte(rAdd)==0 )
  2583  0600  0828               	movf	AccWrite@rAdd,w
  2584  0601  257B               	fcall	_swI2C_WriteByte
  2585  0602  3800               	iorlw	0
  2586  0603  1D03               	skipz
  2587  0604  3402               	retlw	2
  2588                           
  2589                           ;mpu6x.c: 11: {
  2590                           ;mpu6x.c: 12: for(i=0; i<len;i++){
  2591  0605  01A9               	clrf	AccWrite@i
  2592  0606                     l6104:	
  2593  0606  0825               	movf	AccWrite@len,w
  2594  0607  0229               	subwf	AccWrite@i,w
  2595  0608  1803               	btfsc	3,0
  2596  0609  2E1F               	goto	l6106
  2597                           
  2598                           ;mpu6x.c: 13: if(swI2C_WriteByte(dat[i])==1 ){
  2599  060A  0829               	movf	AccWrite@i,w
  2600  060B  0723               	addwf	AccWrite@dat,w
  2601  060C  00A6               	movwf	??_AccWrite
  2602  060D  0824               	movf	AccWrite@dat+1,w
  2603  060E  1803               	skipnc
  2604  060F  3E01               	addlw	1
  2605  0610  00A7               	movwf	??_AccWrite+1
  2606  0611  0826               	movf	??_AccWrite,w
  2607  0612  0084               	movwf	4
  2608  0613  1783               	bsf	3,7
  2609  0614  1C27               	btfss	??_AccWrite+1,0
  2610  0615  1383               	bcf	3,7
  2611  0616  0800               	movf	0,w
  2612  0617  257B               	fcall	_swI2C_WriteByte
  2613  0618  3A01               	xorlw	1
  2614  0619  1D03               	skipz
  2615  061A  2E1D               	goto	l6102
  2616                           
  2617                           ;mpu6x.c: 14: swI2C_Stop();
  2618  061B  26EA               	fcall	_swI2C_Stop
  2619                           
  2620                           ;mpu6x.c: 15: return 3;
  2621  061C  3403               	retlw	3
  2622  061D                     l6102:	
  2623  061D  0AA9               	incf	AccWrite@i,f
  2624  061E  2E06               	goto	l6104
  2625  061F                     l6106:	
  2626                           
  2627                           ;mpu6x.c: 16: }
  2628                           ;mpu6x.c: 17: }
  2629                           ;mpu6x.c: 18: swI2C_Stop();
  2630  061F  26EA               	fcall	_swI2C_Stop
  2631                           
  2632                           ;mpu6x.c: 19: return 0;
  2633  0620  3400               	retlw	0
  2634  0621                     __end_of_AccWrite:	
  2635                           ;mpu6x.c: 24: else
  2636                           ;mpu6x.c: 25: return 1;
  2637                           
  2638                           ;mpu6x.c: 21: else
  2639                           ;mpu6x.c: 22: return 2;
  2640                           
  2641                           
  2642                           	psect	text863
  2643  04F1                     __ptext863:	
  2644 ;; =============== function _AccWrite ends ============
  2645                           
  2646                           
  2647 ;; *************** function _swI2C_ReadByte *****************
  2648 ;; Defined at:
  2649 ;;		line 112 in file "SWI2C.C"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  Ack             1    wreg     unsigned char 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  Ack             1    1[BANK0 ] unsigned char 
  2654 ;;  i               1    3[BANK0 ] unsigned char 
  2655 ;;  dat             1    2[BANK0 ] unsigned char 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      unsigned char 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 60/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMMON   BANK0   BANK1
  2665 ;;      Params:         0       0       0
  2666 ;;      Locals:         0       3       0
  2667 ;;      Temps:          0       1       0
  2668 ;;      Totals:         0       4       0
  2669 ;;Total ram usage:        4 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    2
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_AccRead
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678  04F1                     _swI2C_ReadByte:	
  2679                           
  2680                           ; Regs used in _swI2C_ReadByte: [wreg+status,2+status,0]
  2681                           ;swI2C_ReadByte@Ack stored from wreg
  2682  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2683  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2684  04F3  00A1               	movwf	swI2C_ReadByte@Ack
  2685  04F4  01A2               	clrf	swI2C_ReadByte@dat
  2686                           
  2687                           ;SWI2C.C: 115: RA0 = 0;
  2688  04F5  1005               	bcf	5,0
  2689                           
  2690                           ;SWI2C.C: 116: TRISA |=0x02;;
  2691  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  2692  04F7  1485               	bsf	5,1	;volatile
  2693                           
  2694                           ;SWI2C.C: 117: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2695  04F8  2CF9               	nop2	;2 cycle nop
  2696  04F9  2CFA               	nop2	;2 cycle nop
  2697  04FA  2CFB               	nop2	;2 cycle nop
  2698  04FB  2CFC               	nop2	;2 cycle nop
  2699                           
  2700                           ;SWI2C.C: 118: for(i=0;i<8;i++)
  2701  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2702  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2703  04FE  01A3               	clrf	swI2C_ReadByte@i
  2704  04FF                     l2192:	
  2705                           
  2706                           ;SWI2C.C: 119: {
  2707                           ;SWI2C.C: 120: RA0 = 1;
  2708  04FF  1405               	bsf	5,0
  2709                           
  2710                           ;SWI2C.C: 121: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2711  0500  2D01               	nop2	;2 cycle nop
  2712  0501  2D02               	nop2	;2 cycle nop
  2713  0502  2D03               	nop2	;2 cycle nop
  2714  0503  2D04               	nop2	;2 cycle nop
  2715                           
  2716                           ;SWI2C.C: 122: dat = dat<<1 |(RA1 & 1 );
  2717  0504  3000               	movlw	0
  2718  0505  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0506  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0507  1885               	btfsc	5,1
  2721  0508  3001               	movlw	1
  2722  0509  3901               	andlw	1
  2723  050A  00A0               	movwf	??_swI2C_ReadByte
  2724  050B  1003               	clrc
  2725  050C  0D22               	rlf	swI2C_ReadByte@dat,w
  2726  050D  0420               	iorwf	??_swI2C_ReadByte,w
  2727  050E  00A2               	movwf	swI2C_ReadByte@dat
  2728                           
  2729                           ;SWI2C.C: 125: RA0 = 0;
  2730  050F  1005               	bcf	5,0
  2731                           
  2732                           ;SWI2C.C: 126: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2733  0510  2D11               	nop2	;2 cycle nop
  2734  0511  2D12               	nop2	;2 cycle nop
  2735  0512  2D13               	nop2	;2 cycle nop
  2736  0513  2D14               	nop2	;2 cycle nop
  2737  0514  3008               	movlw	8
  2738  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0517  0AA3               	incf	swI2C_ReadByte@i,f
  2741  0518  0223               	subwf	swI2C_ReadByte@i,w
  2742  0519  1C03               	skipc
  2743  051A  2CFF               	goto	l2192
  2744                           
  2745                           ;SWI2C.C: 127: }
  2746                           ;SWI2C.C: 129: TRISA &=0xfD;;
  2747  051B  1683               	bsf	3,5	;RP0=1, select bank1
  2748  051C  1085               	bcf	5,1	;volatile
  2749                           
  2750                           ;SWI2C.C: 131: RA1 = (Ack) ? 0 : 1;
  2751  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2752  051E  08A1               	movf	swI2C_ReadByte@Ack,f
  2753  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0520  1303               	bcf	3,6	;RP1=0, select bank0
  2755  0521  1D03               	btfss	3,2
  2756  0522  2D25               	goto	L15
  2757  0523  1485               	bsf	5,1
  2758  0524  2D26               	goto	u2774
  2759  0525                     L15:	
  2760  0525  1085               	bcf	5,1
  2761  0526                     u2774:	
  2762                           
  2763                           ;SWI2C.C: 132: RA0 = 1;
  2764  0526  1405               	bsf	5,0
  2765                           
  2766                           ;SWI2C.C: 133: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2767  0527  2D28               	nop2	;2 cycle nop
  2768  0528  2D29               	nop2	;2 cycle nop
  2769  0529  2D2A               	nop2	;2 cycle nop
  2770  052A  2D2B               	nop2	;2 cycle nop
  2771                           
  2772                           ;SWI2C.C: 134: RA0 = 0;
  2773  052B  1283               	bcf	3,5	;RP0=0, select bank0
  2774  052C  1303               	bcf	3,6	;RP1=0, select bank0
  2775  052D  1005               	bcf	5,0
  2776                           
  2777                           ;SWI2C.C: 135: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2778  052E  2D2F               	nop2	;2 cycle nop
  2779  052F  2D30               	nop2	;2 cycle nop
  2780  0530  2D31               	nop2	;2 cycle nop
  2781  0531  2D32               	nop2	;2 cycle nop
  2782                           
  2783                           ;SWI2C.C: 136: return dat;
  2784  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2786  0534  0822               	movf	swI2C_ReadByte@dat,w
  2787  0535  0008               	return
  2788  0536                     __end_of_swI2C_ReadByte:	
  2789                           
  2790                           	psect	text864
  2791  057B                     __ptext864:	
  2792 ;; =============== function _swI2C_ReadByte ends ============
  2793                           
  2794                           
  2795 ;; *************** function _swI2C_WriteByte *****************
  2796 ;; Defined at:
  2797 ;;		line 86 in file "SWI2C.C"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  dat             1    wreg     unsigned char 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;  dat             1    1[BANK0 ] unsigned char 
  2802 ;;  i               1    2[BANK0 ] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      unsigned char 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 60/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1
  2812 ;;      Params:         0       0       0
  2813 ;;      Locals:         0       2       0
  2814 ;;      Temps:          0       1       0
  2815 ;;      Totals:         0       3       0
  2816 ;;Total ram usage:        3 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    2
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_AccWrite
  2823 ;;		_AccRead
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826  057B                     _swI2C_WriteByte:	
  2827                           
  2828                           ; Regs used in _swI2C_WriteByte: [wreg+status,2+status,0]
  2829                           ;swI2C_WriteByte@dat stored from wreg
  2830  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2831  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2832  057D  00A1               	movwf	swI2C_WriteByte@dat
  2833                           
  2834                           ;SWI2C.C: 89: TRISA &=0xfD;;
  2835  057E  1683               	bsf	3,5	;RP0=1, select bank1
  2836  057F  1085               	bcf	5,1	;volatile
  2837                           
  2838                           ;SWI2C.C: 90: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2839  0580  2D81               	nop2	;2 cycle nop
  2840  0581  2D82               	nop2	;2 cycle nop
  2841  0582  2D83               	nop2	;2 cycle nop
  2842  0583  2D84               	nop2	;2 cycle nop
  2843                           
  2844                           ;SWI2C.C: 91: for(i=0;i<8;i++)
  2845  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0586  01A2               	clrf	swI2C_WriteByte@i
  2848  0587                     l2187:	
  2849                           
  2850                           ;SWI2C.C: 92: {
  2851                           ;SWI2C.C: 93: RA1 = (dat&0x80) ? 1:0;
  2852  0587  1FA1               	btfss	swI2C_WriteByte@dat,7
  2853  0588  2D8D               	goto	u2720
  2854  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2855  058A  1303               	bcf	3,6	;RP1=0, select bank0
  2856  058B  1485               	bsf	5,1
  2857  058C  2D90               	goto	u2734
  2858  058D                     u2720:	
  2859  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2860  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2861  058F  1085               	bcf	5,1
  2862  0590                     u2734:	
  2863                           
  2864                           ;SWI2C.C: 94: dat<<=1;
  2865  0590  1003               	clrc
  2866  0591  0DA1               	rlf	swI2C_WriteByte@dat,f
  2867                           
  2868                           ;SWI2C.C: 95: RA0 = 1;
  2869  0592  1405               	bsf	5,0
  2870                           
  2871                           ;SWI2C.C: 96: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2872  0593  2D94               	nop2	;2 cycle nop
  2873  0594  2D95               	nop2	;2 cycle nop
  2874  0595  2D96               	nop2	;2 cycle nop
  2875  0596  2D97               	nop2	;2 cycle nop
  2876                           
  2877                           ;SWI2C.C: 97: RA0 = 0;
  2878  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2879  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2880  0599  1005               	bcf	5,0
  2881                           
  2882                           ;SWI2C.C: 98: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2883  059A  2D9B               	nop2	;2 cycle nop
  2884  059B  2D9C               	nop2	;2 cycle nop
  2885  059C  2D9D               	nop2	;2 cycle nop
  2886  059D  2D9E               	nop2	;2 cycle nop
  2887  059E  3008               	movlw	8
  2888  059F  1283               	bcf	3,5	;RP0=0, select bank0
  2889  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  2890  05A1  0AA2               	incf	swI2C_WriteByte@i,f
  2891  05A2  0222               	subwf	swI2C_WriteByte@i,w
  2892  05A3  1C03               	skipc
  2893  05A4  2D87               	goto	l2187
  2894                           
  2895                           ;SWI2C.C: 99: }
  2896                           ;SWI2C.C: 101: TRISA |=0x02;;
  2897  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  2898  05A6  1485               	bsf	5,1	;volatile
  2899                           
  2900                           ;SWI2C.C: 102: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2901  05A7  2DA8               	nop2	;2 cycle nop
  2902  05A8  2DA9               	nop2	;2 cycle nop
  2903  05A9  2DAA               	nop2	;2 cycle nop
  2904  05AA  2DAB               	nop2	;2 cycle nop
  2905                           
  2906                           ;SWI2C.C: 103: RA0 = 1;
  2907  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2908  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2909  05AD  1405               	bsf	5,0
  2910                           
  2911                           ;SWI2C.C: 104: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2912  05AE  2DAF               	nop2	;2 cycle nop
  2913  05AF  2DB0               	nop2	;2 cycle nop
  2914  05B0  2DB1               	nop2	;2 cycle nop
  2915  05B1  2DB2               	nop2	;2 cycle nop
  2916                           
  2917                           ;SWI2C.C: 105: i= RA1;
  2918  05B2  3000               	movlw	0
  2919  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  2920  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  2921  05B5  1885               	btfsc	5,1
  2922  05B6  3001               	movlw	1
  2923  05B7  00A2               	movwf	swI2C_WriteByte@i
  2924                           
  2925                           ;SWI2C.C: 106: RA0 = 0;
  2926  05B8  1005               	bcf	5,0
  2927                           
  2928                           ;SWI2C.C: 107: TRISA &=0xfD;;
  2929  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  2930  05BA  1085               	bcf	5,1	;volatile
  2931                           
  2932                           ;SWI2C.C: 108: return i;
  2933  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2934  05BC  0822               	movf	swI2C_WriteByte@i,w
  2935  05BD  0008               	return
  2936  05BE                     __end_of_swI2C_WriteByte:	
  2937                           
  2938                           	psect	text865
  2939  06EA                     __ptext865:	
  2940 ;; =============== function _swI2C_WriteByte ends ============
  2941                           
  2942                           
  2943 ;; *************** function _swI2C_Stop *****************
  2944 ;; Defined at:
  2945 ;;		line 35 in file "SWI2C.C"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;		None
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;		None
  2950 ;; Return value:  Size  Location     Type
  2951 ;;		None               void
  2952 ;; Registers used:
  2953 ;;		wreg
  2954 ;; Tracked objects:
  2955 ;;		On entry : 60/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMMON   BANK0   BANK1
  2959 ;;      Params:         0       0       0
  2960 ;;      Locals:         0       0       0
  2961 ;;      Temps:          0       1       0
  2962 ;;      Totals:         0       1       0
  2963 ;;Total ram usage:        1 bytes
  2964 ;; Hardware stack levels used:    1
  2965 ;; Hardware stack levels required when called:    2
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_AccWrite
  2970 ;;		_AccRead
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973  06EA                     _swI2C_Stop:	
  2974                           
  2975                           ;SWI2C.C: 37: RA1 = 0;
  2976                           
  2977                           ; Regs used in _swI2C_Stop: [wreg]
  2978  06EA  1085               	bcf	5,1
  2979                           
  2980                           ;SWI2C.C: 38: RA0 = 1;
  2981  06EB  1405               	bsf	5,0
  2982                           
  2983                           ;SWI2C.C: 39: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2984  06EC  2EED               	nop2	;2 cycle nop
  2985  06ED  2EEE               	nop2	;2 cycle nop
  2986  06EE  2EEF               	nop2	;2 cycle nop
  2987  06EF  2EF0               	nop2	;2 cycle nop
  2988                           
  2989                           ;SWI2C.C: 40: RA1 = 1;
  2990  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  2991  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  2992  06F2  1485               	bsf	5,1
  2993                           
  2994                           ;SWI2C.C: 41: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  2995  06F3  2EF4               	nop2	;2 cycle nop
  2996  06F4  2EF5               	nop2	;2 cycle nop
  2997  06F5  2EF6               	nop2	;2 cycle nop
  2998  06F6  2EF7               	nop2	;2 cycle nop
  2999  06F7  0008               	return
  3000  06F8                     __end_of_swI2C_Stop:	
  3001                           
  3002                           	psect	text866
  3003  06A4                     __ptext866:	
  3004 ;; =============== function _swI2C_Stop ends ============
  3005                           
  3006                           
  3007 ;; *************** function _swI2C_Start *****************
  3008 ;; Defined at:
  3009 ;;		line 22 in file "SWI2C.C"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;		None               void
  3016 ;; Registers used:
  3017 ;;		wreg
  3018 ;; Tracked objects:
  3019 ;;		On entry : 60/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1
  3023 ;;      Params:         0       0       0
  3024 ;;      Locals:         0       0       0
  3025 ;;      Temps:          0       1       0
  3026 ;;      Totals:         0       1       0
  3027 ;;Total ram usage:        1 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    2
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_AccWrite
  3034 ;;		_AccRead
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037  06A4                     _swI2C_Start:	
  3038                           
  3039                           ;SWI2C.C: 24: RA0 = 1;
  3040                           
  3041                           ; Regs used in _swI2C_Start: [wreg]
  3042  06A4  1405               	bsf	5,0
  3043                           
  3044                           ;SWI2C.C: 26: RA1 = 1;
  3045  06A5  1485               	bsf	5,1
  3046                           
  3047                           ;SWI2C.C: 27: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  3048  06A6  2EA7               	nop2	;2 cycle nop
  3049  06A7  2EA8               	nop2	;2 cycle nop
  3050  06A8  2EA9               	nop2	;2 cycle nop
  3051  06A9  2EAA               	nop2	;2 cycle nop
  3052                           
  3053                           ;SWI2C.C: 28: RA1 = 0;
  3054  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  3055  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  3056  06AC  1085               	bcf	5,1
  3057                           
  3058                           ;SWI2C.C: 29: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  3059  06AD  2EAE               	nop2	;2 cycle nop
  3060  06AE  2EAF               	nop2	;2 cycle nop
  3061  06AF  2EB0               	nop2	;2 cycle nop
  3062  06B0  2EB1               	nop2	;2 cycle nop
  3063                           
  3064                           ;SWI2C.C: 30: RA0 = 0;
  3065  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  3066  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  3067  06B3  1005               	bcf	5,0
  3068                           
  3069                           ;SWI2C.C: 31: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  3070  06B4  2EB5               	nop2	;2 cycle nop
  3071  06B5  2EB6               	nop2	;2 cycle nop
  3072  06B6  2EB7               	nop2	;2 cycle nop
  3073  06B7  2EB8               	nop2	;2 cycle nop
  3074  06B8  0008               	return
  3075  06B9                     __end_of_swI2C_Start:	
  3076                           
  3077                           	psect	text867
  3078  063E                     __ptext867:	
  3079 ;; =============== function _swI2C_Start ends ============
  3080                           
  3081                           
  3082 ;; *************** function _swI2C_Init *****************
  3083 ;; Defined at:
  3084 ;;		line 8 in file "SWI2C.C"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;		None               void
  3091 ;; Registers used:
  3092 ;;		wreg
  3093 ;; Tracked objects:
  3094 ;;		On entry : 60/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1
  3098 ;;      Params:         0       0       0
  3099 ;;      Locals:         0       0       0
  3100 ;;      Temps:          0       1       0
  3101 ;;      Totals:         0       1       0
  3102 ;;Total ram usage:        1 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    2
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_main
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111  063E                     _swI2C_Init:	
  3112                           
  3113                           ;SWI2C.C: 10: TRISA &=0xfD;;
  3114                           
  3115                           ; Regs used in _swI2C_Init: [wreg]
  3116  063E  1683               	bsf	3,5	;RP0=1, select bank1
  3117  063F  1085               	bcf	5,1	;volatile
  3118                           
  3119                           ;SWI2C.C: 11: TRISA &=0xfe;;
  3120  0640  1005               	bcf	5,0	;volatile
  3121                           
  3122                           ;SWI2C.C: 12: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  3123  0641  2E42               	nop2	;2 cycle nop
  3124  0642  2E43               	nop2	;2 cycle nop
  3125  0643  2E44               	nop2	;2 cycle nop
  3126  0644  2E45               	nop2	;2 cycle nop
  3127                           
  3128                           ;SWI2C.C: 13: RA0 = 1;
  3129  0645  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0646  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0647  1405               	bsf	5,0
  3132                           
  3133                           ;SWI2C.C: 14: RA1 = 1;
  3134  0648  1485               	bsf	5,1
  3135                           
  3136                           ;SWI2C.C: 15: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  3137  0649  2E4A               	nop2	;2 cycle nop
  3138  064A  2E4B               	nop2	;2 cycle nop
  3139  064B  2E4C               	nop2	;2 cycle nop
  3140  064C  2E4D               	nop2	;2 cycle nop
  3141                           
  3142                           ;SWI2C.C: 16: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  3143  064D  2E4E               	nop2	;2 cycle nop
  3144  064E  2E4F               	nop2	;2 cycle nop
  3145  064F  2E50               	nop2	;2 cycle nop
  3146  0650  2E51               	nop2	;2 cycle nop
  3147                           
  3148                           ;SWI2C.C: 17: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  3149  0651  2E52               	nop2	;2 cycle nop
  3150  0652  2E53               	nop2	;2 cycle nop
  3151  0653  2E54               	nop2	;2 cycle nop
  3152  0654  2E55               	nop2	;2 cycle nop
  3153                           
  3154                           ;SWI2C.C: 18: _delay((unsigned long)((8)*(4000000/4000000.0)));;
  3155  0655  2E56               	nop2	;2 cycle nop
  3156  0656  2E57               	nop2	;2 cycle nop
  3157  0657  2E58               	nop2	;2 cycle nop
  3158  0658  2E59               	nop2	;2 cycle nop
  3159  0659  0008               	return
  3160  065A                     __end_of_swI2C_Init:	
  3161                           
  3162                           	psect	text868
  3163  0720                     __ptext868:	
  3164 ;; =============== function _swI2C_Init ends ============
  3165                           
  3166                           
  3167 ;; *************** function _sys_init *****************
  3168 ;; Defined at:
  3169 ;;		line 3 in file "sysinit.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;		None               void
  3176 ;; Registers used:
  3177 ;;		wreg
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 60/20
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1
  3183 ;;      Params:         0       0       0
  3184 ;;      Locals:         0       0       0
  3185 ;;      Temps:          0       0       0
  3186 ;;      Totals:         0       0       0
  3187 ;;Total ram usage:        0 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    2
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196  0720                     _sys_init:	
  3197                           
  3198                           ;sysinit.c: 21: OSCCON = 0B01010001;
  3199                           
  3200                           ; Regs used in _sys_init: [wreg]
  3201  0720  3051               	movlw	81
  3202  0721  1683               	bsf	3,5	;RP0=1, select bank1
  3203  0722  1303               	bcf	3,6	;RP1=0, select bank1
  3204  0723  008F               	movwf	15	;volatile
  3205                           
  3206                           ;sysinit.c: 22: _nop();
  3207  0724  0000               	nop
  3208  0725                     l1512:	
  3209                           ;sysinit.c: 28: while(HTS==0);
  3210                           
  3211  0725  1683               	bsf	3,5	;RP0=1, select bank1
  3212  0726  1303               	bcf	3,6	;RP1=0, select bank1
  3213  0727  190F               	btfsc	15,2
  3214  0728  0008               	return
  3215  0729  2F25               	goto	l1512
  3216  072A                     __end_of_sys_init:	
  3217                           
  3218                           	psect	text869
  3219  068E                     __ptext869:	
  3220 ;; =============== function _sys_init ends ============
  3221                           
  3222                           
  3223 ;; *************** function _beep *****************
  3224 ;; Defined at:
  3225 ;;		line 184 in file "smartkey.C"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  delay           1    wreg     unsigned char 
  3228 ;;  rep             1    4[BANK0 ] unsigned char 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  delay           1    5[BANK0 ] unsigned char 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;		None               void
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0, pclath, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 60/0
  3237 ;;		On exit  : 60/0
  3238 ;;		Unchanged: FFF9F/0
  3239 ;; Data sizes:     COMMON   BANK0   BANK1
  3240 ;;      Params:         0       1       0
  3241 ;;      Locals:         0       1       0
  3242 ;;      Temps:          0       0       0
  3243 ;;      Totals:         0       2       0
  3244 ;;Total ram usage:        2 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    3
  3247 ;; This function calls:
  3248 ;;		_delay_x10ms
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253  068E                     _beep:	
  3254                           
  3255                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  3256                           ;beep@delay stored from wreg
  3257  068E  00A5               	movwf	beep@delay
  3258  068F                     l6004:	
  3259                           ;smartkey.C: 185: {
  3260                           ;smartkey.C: 186: while(rep--){
  3261                           
  3262  068F  03A4               	decf	beep@rep,f
  3263  0690  0824               	movf	beep@rep,w
  3264  0691  3AFF               	xorlw	255
  3265  0692  1903               	btfsc	3,2
  3266  0693  0008               	return
  3267  0694  300C               	movlw	12
  3268                           
  3269                           ;smartkey.C: 187: TMR2ON = 1;
  3270  0695  1512               	bsf	18,2
  3271                           
  3272                           ;smartkey.C: 188: PR2 = 12;
  3273  0696  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0697  0092               	movwf	18	;volatile
  3275                           
  3276                           ;smartkey.C: 189: delay_x10ms(delay);
  3277  0698  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0699  0825               	movf	beep@delay,w
  3279  069A  00A0               	movwf	?_delay_x10ms
  3280  069B  01A1               	clrf	?_delay_x10ms+1
  3281  069C  26B9               	fcall	_delay_x10ms
  3282  069D  3014               	movlw	20
  3283                           
  3284                           ;smartkey.C: 190: TMR2ON = 0;RA4 =0;
  3285  069E  1112               	bcf	18,2
  3286  069F  1205               	bcf	5,4
  3287                           
  3288                           ;smartkey.C: 191: delay_x10ms(20);
  3289  06A0  00A0               	movwf	?_delay_x10ms
  3290  06A1  01A1               	clrf	?_delay_x10ms+1
  3291  06A2  26B9               	fcall	_delay_x10ms
  3292  06A3  2E8F               	goto	l6004
  3293  06A4                     __end_of_beep:	
  3294                           
  3295                           	psect	text870
  3296  0536                     __ptext870:	
  3297 ;; =============== function _beep ends ============
  3298                           
  3299                           
  3300 ;; *************** function ___awdiv *****************
  3301 ;; Defined at:
  3302 ;;		line 5 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\awdiv.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  divisor         2    0[BANK0 ] int 
  3305 ;;  dividend        2    2[BANK0 ] int 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  quotient        2    6[BANK0 ] int 
  3308 ;;  sign            1    5[BANK0 ] unsigned char 
  3309 ;;  counter         1    4[BANK0 ] unsigned char 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  2    0[BANK0 ] int 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0
  3314 ;; Tracked objects:
  3315 ;;		On entry : 60/0
  3316 ;;		On exit  : 60/0
  3317 ;;		Unchanged: FFF9F/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1
  3319 ;;      Params:         0       4       0
  3320 ;;      Locals:         0       4       0
  3321 ;;      Temps:          0       0       0
  3322 ;;      Totals:         0       8       0
  3323 ;;Total ram usage:        8 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    2
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_main
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332  0536                     ___awdiv:	
  3333                           
  3334                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3335  0536  01A5               	clrf	___awdiv@sign
  3336  0537  1FA1               	btfss	___awdiv@divisor+1,7
  3337  0538  2D40               	goto	l5956
  3338  0539  09A0               	comf	___awdiv@divisor,f
  3339  053A  09A1               	comf	___awdiv@divisor+1,f
  3340  053B  0AA0               	incf	___awdiv@divisor,f
  3341  053C  1903               	skipnz
  3342  053D  0AA1               	incf	___awdiv@divisor+1,f
  3343  053E  01A5               	clrf	___awdiv@sign
  3344  053F  0AA5               	incf	___awdiv@sign,f
  3345  0540                     l5956:	
  3346  0540  1FA3               	btfss	___awdiv@dividend+1,7
  3347  0541  2D49               	goto	l5962
  3348  0542  09A2               	comf	___awdiv@dividend,f
  3349  0543  09A3               	comf	___awdiv@dividend+1,f
  3350  0544  0AA2               	incf	___awdiv@dividend,f
  3351  0545  1903               	skipnz
  3352  0546  0AA3               	incf	___awdiv@dividend+1,f
  3353  0547  3001               	movlw	1
  3354  0548  06A5               	xorwf	___awdiv@sign,f
  3355  0549                     l5962:	
  3356  0549  01A6               	clrf	___awdiv@quotient
  3357  054A  01A7               	clrf	___awdiv@quotient+1
  3358  054B  0821               	movf	___awdiv@divisor+1,w
  3359  054C  0420               	iorwf	___awdiv@divisor,w
  3360  054D  1903               	skipnz
  3361  054E  2D6E               	goto	l5984
  3362  054F  01A4               	clrf	___awdiv@counter
  3363  0550                     L16:	
  3364  0550  0AA4               	incf	___awdiv@counter,f
  3365  0551  1BA1               	btfsc	___awdiv@divisor+1,7
  3366  0552  2D57               	goto	l5972
  3367  0553  1003               	clrc
  3368  0554  0DA0               	rlf	___awdiv@divisor,f
  3369  0555  0DA1               	rlf	___awdiv@divisor+1,f
  3370  0556  2D50               	goto	L16
  3371  0557                     l5972:	
  3372  0557  1003               	clrc
  3373  0558  0DA6               	rlf	___awdiv@quotient,f
  3374  0559  0DA7               	rlf	___awdiv@quotient+1,f
  3375  055A  0821               	movf	___awdiv@divisor+1,w
  3376  055B  0223               	subwf	___awdiv@dividend+1,w
  3377  055C  1D03               	skipz
  3378  055D  2D60               	goto	u2675
  3379  055E  0820               	movf	___awdiv@divisor,w
  3380  055F  0222               	subwf	___awdiv@dividend,w
  3381  0560                     u2675:	
  3382  0560  1C03               	skipc
  3383  0561  2D6A               	goto	L17
  3384  0562  0820               	movf	___awdiv@divisor,w
  3385  0563  02A2               	subwf	___awdiv@dividend,f
  3386  0564  0821               	movf	___awdiv@divisor+1,w
  3387  0565  1C03               	skipc
  3388  0566  03A3               	decf	___awdiv@dividend+1,f
  3389  0567  02A3               	subwf	___awdiv@dividend+1,f
  3390  0568  1426               	bsf	___awdiv@quotient,0
  3391  0569  1003               	clrc
  3392  056A                     L17:	
  3393  056A  0CA1               	rrf	___awdiv@divisor+1,f
  3394  056B  0CA0               	rrf	___awdiv@divisor,f
  3395  056C  0BA4               	decfsz	___awdiv@counter,f
  3396  056D  2D57               	goto	l5972
  3397  056E                     l5984:	
  3398  056E  0825               	movf	___awdiv@sign,w
  3399  056F  1903               	btfsc	3,2
  3400  0570  2D76               	goto	l5988
  3401  0571  09A6               	comf	___awdiv@quotient,f
  3402  0572  09A7               	comf	___awdiv@quotient+1,f
  3403  0573  0AA6               	incf	___awdiv@quotient,f
  3404  0574  1903               	skipnz
  3405  0575  0AA7               	incf	___awdiv@quotient+1,f
  3406  0576                     l5988:	
  3407  0576  0827               	movf	___awdiv@quotient+1,w
  3408  0577  00A1               	movwf	?___awdiv+1
  3409  0578  0826               	movf	___awdiv@quotient,w
  3410  0579  00A0               	movwf	?___awdiv
  3411  057A  0008               	return
  3412  057B                     __end_of___awdiv:	
  3413                           
  3414                           	psect	text871
  3415  06DB                     __ptext871:	
  3416 ;; =============== function ___awdiv ends ============
  3417                           
  3418                           
  3419 ;; *************** function _timer_init *****************
  3420 ;; Defined at:
  3421 ;;		line 45 in file "sysinit.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;		None               void
  3428 ;; Registers used:
  3429 ;;		wreg, status,2
  3430 ;; Tracked objects:
  3431 ;;		On entry : 60/20
  3432 ;;		On exit  : 60/0
  3433 ;;		Unchanged: FFF9F/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1
  3435 ;;      Params:         0       0       0
  3436 ;;      Locals:         0       0       0
  3437 ;;      Temps:          0       0       0
  3438 ;;      Totals:         0       0       0
  3439 ;;Total ram usage:        0 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    2
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_main
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448  06DB                     _timer_init:	
  3449                           
  3450                           ;sysinit.c: 55: TMR2 = 0;
  3451                           
  3452                           ; Regs used in _timer_init: [wreg+status,2]
  3453  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  3454  06DC  0191               	clrf	17	;volatile
  3455                           
  3456                           ;sysinit.c: 56: PR2 = 0;
  3457  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  3458  06DE  0192               	clrf	18	;volatile
  3459                           
  3460                           ;sysinit.c: 57: T2CON = 0B00101001;
  3461  06DF  3029               	movlw	41
  3462  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  3463  06E1  0092               	movwf	18	;volatile
  3464                           
  3465                           ;sysinit.c: 60: TMR1H = -5000>>8;
  3466  06E2  30EC               	movlw	236
  3467  06E3  008F               	movwf	15	;volatile
  3468                           
  3469                           ;sysinit.c: 61: TMR1L = -5000;
  3470  06E4  3078               	movlw	120
  3471  06E5  008E               	movwf	14	;volatile
  3472                           
  3473                           ;sysinit.c: 62: T1CON = 0B00100001;
  3474  06E6  3021               	movlw	33
  3475  06E7  0090               	movwf	16	;volatile
  3476                           
  3477                           ;sysinit.c: 63: TMR1ON = 1;
  3478  06E8  1410               	bsf	16,0
  3479  06E9  0008               	return
  3480  06EA                     __end_of_timer_init:	
  3481                           
  3482                           	psect	text872
  3483  065A                     __ptext872:	
  3484 ;; =============== function _timer_init ends ============
  3485                           
  3486                           
  3487 ;; *************** function _int_init *****************
  3488 ;; Defined at:
  3489 ;;		line 67 in file "sysinit.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  tmp             1    0        unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;		None               void
  3496 ;; Registers used:
  3497 ;;		wreg, status,2
  3498 ;; Tracked objects:
  3499 ;;		On entry : 60/20
  3500 ;;		On exit  : 60/20
  3501 ;;		Unchanged: FFF9F/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1
  3503 ;;      Params:         0       0       0
  3504 ;;      Locals:         0       0       0
  3505 ;;      Temps:          0       0       0
  3506 ;;      Totals:         0       0       0
  3507 ;;Total ram usage:        0 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    2
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516  065A                     _int_init:	
  3517                           
  3518                           ;sysinit.c: 72: INTCON = 0B00000000;
  3519                           
  3520                           ; Regs used in _int_init: [wreg+status,2]
  3521  065A  018B               	clrf	11	;volatile
  3522                           
  3523                           ;sysinit.c: 73: PIE1 = 0B00000000;
  3524  065B  018C               	clrf	12	;volatile
  3525                           
  3526                           ;sysinit.c: 74: PIR1 = 0B00000000;
  3527  065C  1283               	bcf	3,5	;RP0=0, select bank0
  3528  065D  018C               	clrf	12	;volatile
  3529                           
  3530                           ;sysinit.c: 76: IOCA6 = 1;
  3531  065E  1683               	bsf	3,5	;RP0=1, select bank1
  3532  065F  1716               	bsf	22,6
  3533                           
  3534                           ;sysinit.c: 77: tmp = PORTA;
  3535  0660  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0661  0805               	movf	5,w	;volatile
  3537                           
  3538                           ;sysinit.c: 78: PAIF = 0;
  3539  0662  100B               	bcf	11,0
  3540                           
  3541                           ;sysinit.c: 79: PAIE = 0;
  3542  0663  118B               	bcf	11,3
  3543                           
  3544                           ;sysinit.c: 82: INTEDG = 0;
  3545  0664  1683               	bsf	3,5	;RP0=1, select bank1
  3546  0665  1301               	bcf	1,6
  3547                           
  3548                           ;sysinit.c: 83: INTF = 0;
  3549  0666  108B               	bcf	11,1
  3550                           
  3551                           ;sysinit.c: 84: INTE = 1;
  3552  0667  160B               	bsf	11,4
  3553                           
  3554                           ;sysinit.c: 86: TMR2IF = 0;
  3555  0668  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0669  108C               	bcf	12,1
  3557                           
  3558                           ;sysinit.c: 87: TMR2IE = 1;
  3559  066A  1683               	bsf	3,5	;RP0=1, select bank1
  3560  066B  148C               	bsf	12,1
  3561                           
  3562                           ;sysinit.c: 88: TMR2ON = 0;
  3563  066C  1283               	bcf	3,5	;RP0=0, select bank0
  3564  066D  1112               	bcf	18,2
  3565                           
  3566                           ;sysinit.c: 90: TMR1IF = 0;
  3567  066E  100C               	bcf	12,0
  3568                           
  3569                           ;sysinit.c: 91: TMR1IE = 1;
  3570  066F  1683               	bsf	3,5	;RP0=1, select bank1
  3571  0670  140C               	bsf	12,0
  3572                           
  3573                           ;sysinit.c: 94: PEIE = 1;
  3574  0671  170B               	bsf	11,6
  3575                           
  3576                           ;sysinit.c: 96: GIE = 1;
  3577  0672  178B               	bsf	11,7
  3578  0673  0008               	return
  3579  0674                     __end_of_int_init:	
  3580                           
  3581                           	psect	text873
  3582  06F8                     __ptext873:	
  3583 ;; =============== function _int_init ends ============
  3584                           
  3585                           
  3586 ;; *************** function _gpio_init *****************
  3587 ;; Defined at:
  3588 ;;		line 32 in file "sysinit.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;		None               void
  3595 ;; Registers used:
  3596 ;;		wreg, status,2
  3597 ;; Tracked objects:
  3598 ;;		On entry : 60/20
  3599 ;;		On exit  : 60/20
  3600 ;;		Unchanged: FFF9F/0
  3601 ;; Data sizes:     COMMON   BANK0   BANK1
  3602 ;;      Params:         0       0       0
  3603 ;;      Locals:         0       0       0
  3604 ;;      Temps:          0       0       0
  3605 ;;      Totals:         0       0       0
  3606 ;;Total ram usage:        0 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    2
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_main
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615  06F8                     _gpio_init:	
  3616                           
  3617                           ;sysinit.c: 34: PORTA = 0B00000000;
  3618                           
  3619                           ; Regs used in _gpio_init: [wreg+status,2]
  3620  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  3621  06F9  0185               	clrf	5	;volatile
  3622                           
  3623                           ;sysinit.c: 35: TRISA = 0B01101110;
  3624  06FA  306E               	movlw	110
  3625  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  3626  06FC  0085               	movwf	5	;volatile
  3627                           
  3628                           ;sysinit.c: 36: WPUA = 0B10000000;
  3629  06FD  3080               	movlw	128
  3630  06FE  0095               	movwf	21	;volatile
  3631                           
  3632                           ;sysinit.c: 38: PORTC = 0B00000000;
  3633  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  3634  0700  0187               	clrf	7	;volatile
  3635                           
  3636                           ;sysinit.c: 39: TRISC = 0B11101011;
  3637  0701  30EB               	movlw	235
  3638  0702  1683               	bsf	3,5	;RP0=1, select bank1
  3639  0703  0087               	movwf	7	;volatile
  3640                           
  3641                           ;sysinit.c: 40: WPUC = 0B00000000;
  3642  0704  0188               	clrf	8	;volatile
  3643  0705  0008               	return
  3644  0706                     __end_of_gpio_init:	
  3645                           
  3646                           	psect	text874
  3647  04AB                     __ptext874:	
  3648 ;; =============== function _gpio_init ends ============
  3649                           
  3650                           
  3651 ;; *************** function _compe *****************
  3652 ;; Defined at:
  3653 ;;		line 232 in file "smartkey.C"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  a               1    wreg     char 
  3656 ;;  b               1    0[BANK0 ] char 
  3657 ;;  dt              1    1[BANK0 ] char 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  a               1    7[BANK0 ] char 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      unsigned char 
  3662 ;; Registers used:
  3663 ;;		wreg
  3664 ;; Tracked objects:
  3665 ;;		On entry : 60/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: FFE00/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1
  3669 ;;      Params:         0       2       0
  3670 ;;      Locals:         0       1       0
  3671 ;;      Temps:          0       5       0
  3672 ;;      Totals:         0       8       0
  3673 ;;Total ram usage:        8 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    2
  3676 ;; This function calls:
  3677 ;;		Nothing
  3678 ;; This function is called by:
  3679 ;;		_main
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682  04AB                     _compe:	
  3683                           
  3684                           ; Regs used in _compe: [wreg]
  3685                           ;compe@a stored from wreg
  3686  04AB  00A7               	movwf	compe@a
  3687                           
  3688                           ;smartkey.C: 234: if(a>b){
  3689  04AC  0820               	movf	compe@b,w
  3690  04AD  3A80               	xorlw	128
  3691  04AE  00A2               	movwf	??_compe
  3692  04AF  0827               	movf	compe@a,w
  3693  04B0  3A80               	xorlw	128
  3694  04B1  02A2               	subwf	??_compe,f
  3695  04B2  1803               	skipnc
  3696  04B3  2CD7               	goto	l5872
  3697                           
  3698                           ;smartkey.C: 235: if((a-b)<=dt) return 1;
  3699  04B4  0820               	movf	compe@b,w
  3700  04B5  0227               	subwf	compe@a,w
  3701  04B6  00A2               	movwf	??_compe
  3702  04B7  01A3               	clrf	??_compe+1
  3703  04B8  1C03               	skipc
  3704  04B9  03A3               	decf	??_compe+1,f
  3705  04BA  1BA7               	btfsc	compe@a,7
  3706  04BB  03A3               	decf	??_compe+1,f
  3707  04BC  1BA0               	btfsc	compe@b,7
  3708  04BD  0AA3               	incf	??_compe+1,f
  3709  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  3710  04BF  24E4               	fcall	PL3	;call to abstracted procedure
  3711  04C0  1D03               	skipz
  3712  04C1  2CC4               	goto	u2585
  3713  04C2  0822               	movf	??_compe,w
  3714  04C3  0224               	subwf	??_compe+2,w
  3715  04C4                     u2585:	
  3716  04C4  1C03               	skipc
  3717  04C5  3400               	retlw	0
  3718  04C6  3401               	retlw	1
  3719  04C7                     L18:	
  3720                           ;smartkey.C: 239: if((b-a)<=dt) return 1;
  3721                           
  3722  04C7  0220               	subwf	compe@b,w
  3723  04C8  00A2               	movwf	??_compe
  3724  04C9  01A3               	clrf	??_compe+1
  3725  04CA  1C03               	skipc
  3726  04CB  03A3               	decf	??_compe+1,f
  3727  04CC  1BA0               	btfsc	compe@b,7
  3728  04CD  03A3               	decf	??_compe+1,f
  3729  04CE  1BA7               	btfsc	compe@a,7
  3730  04CF  0AA3               	incf	??_compe+1,f
  3731  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  3732  04D1  24E4               	fcall	PL3	;call to abstracted procedure
  3733  04D2  1D03               	skipz
  3734  04D3  2CC4               	goto	u2585
  3735  04D4  0822               	movf	??_compe,w
  3736  04D5  0224               	subwf	??_compe+2,w
  3737  04D6  2CC4               	goto	u2585
  3738  04D7                     l5872:	
  3739                           ;smartkey.C: 236: else return 0;
  3740                           
  3741                           
  3742                           ;smartkey.C: 238: else if(a<b){
  3743  04D7  0827               	movf	compe@a,w
  3744  04D8  3A80               	xorlw	128
  3745  04D9  00A2               	movwf	??_compe
  3746  04DA  0820               	movf	compe@b,w
  3747  04DB  3A80               	xorlw	128
  3748  04DC  02A2               	subwf	??_compe,f
  3749                           
  3750                           ;smartkey.C: 242: else if(a==b){
  3751  04DD  0827               	movf	compe@a,w
  3752  04DE  1C03               	btfss	3,0
  3753  04DF  2CC7               	goto	L18
  3754  04E0  0620               	xorwf	compe@b,w
  3755  04E1  1903               	btfsc	3,2
  3756  04E2  3401               	retlw	1
  3757  04E3  3400               	retlw	0
  3758  04E4                     __end_of_compe:	
  3759  04E4                     PL3:	
  3760  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  3761  04E5  0821               	movf	compe@dt,w
  3762  04E6  00A4               	movwf	??_compe+2
  3763  04E7  01A5               	clrf	??_compe+3
  3764  04E8  1BA4               	btfsc	??_compe+2,7
  3765  04E9  03A5               	decf	??_compe+3,f
  3766  04EA  0825               	movf	??_compe+3,w
  3767  04EB  3A80               	xorlw	128
  3768  04EC  00A6               	movwf	??_compe+4
  3769  04ED  0823               	movf	??_compe+1,w
  3770  04EE  3A80               	xorlw	128
  3771  04EF  0226               	subwf	??_compe+4,w
  3772  04F0  0008               	return
  3773                           
  3774                           	psect	text875
  3775  0714                     __ptext875:	
  3776 ;; =============== function _compe ends ============
  3777                           
  3778                           
  3779 ;; *************** function _setState *****************
  3780 ;; Defined at:
  3781 ;;		line 226 in file "smartkey.C"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  stt             1    wreg     unsigned char 
  3784 ;;  _tOut           2    0[BANK0 ] unsigned int 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  stt             1    2[BANK0 ] unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;		None               void
  3789 ;; Registers used:
  3790 ;;		wreg, status,2
  3791 ;; Tracked objects:
  3792 ;;		On entry : 60/0
  3793 ;;		On exit  : 60/0
  3794 ;;		Unchanged: FFF9F/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1
  3796 ;;      Params:         0       2       0
  3797 ;;      Locals:         0       1       0
  3798 ;;      Temps:          0       0       0
  3799 ;;      Totals:         0       3       0
  3800 ;;Total ram usage:        3 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    2
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_main
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809  0714                     _setState:	
  3810                           
  3811                           ; Regs used in _setState: [wreg+status,2]
  3812                           ;setState@stt stored from wreg
  3813  0714  00A2               	movwf	setState@stt
  3814                           
  3815                           ;smartkey.C: 227: mtOldState = mtState;
  3816  0715  0874               	movf	_mtState,w
  3817  0716  00CC               	movwf	_mtOldState
  3818                           
  3819                           ;smartkey.C: 228: mtState = stt;
  3820  0717  0822               	movf	setState@stt,w
  3821  0718  00F4               	movwf	_mtState
  3822                           
  3823                           ;smartkey.C: 229: timeTick =0;
  3824  0719  01F0               	clrf	_timeTick
  3825  071A  01F1               	clrf	_timeTick+1
  3826                           
  3827                           ;smartkey.C: 230: timeOut = _tOut;
  3828  071B  0821               	movf	setState@_tOut+1,w
  3829  071C  00C8               	movwf	_timeOut+1
  3830  071D  0820               	movf	setState@_tOut,w
  3831  071E  00C7               	movwf	_timeOut
  3832  071F  0008               	return
  3833  0720                     __end_of_setState:	
  3834                           
  3835                           	psect	text876
  3836  0737                     __ptext876:	
  3837 ;; =============== function _setState ends ============
  3838                           
  3839                           
  3840 ;; *************** function _beepOn *****************
  3841 ;; Defined at:
  3842 ;;		line 180 in file "smartkey.C"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;		None
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;		None               void
  3849 ;; Registers used:
  3850 ;;		None
  3851 ;; Tracked objects:
  3852 ;;		On entry : 40/20
  3853 ;;		On exit  : 60/20
  3854 ;;		Unchanged: FFF9F/0
  3855 ;; Data sizes:     COMMON   BANK0   BANK1
  3856 ;;      Params:         0       0       0
  3857 ;;      Locals:         0       0       0
  3858 ;;      Temps:          0       0       0
  3859 ;;      Totals:         0       0       0
  3860 ;;Total ram usage:        0 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:    2
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_main
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869  0737                     _beepOn:	
  3870                           
  3871                           ;smartkey.C: 181: TMR2ON = 1;
  3872                           
  3873                           ; Regs used in _beepOn: []
  3874  0737  1283               	bcf	3,5	;RP0=0, select bank0
  3875  0738  1512               	bsf	18,2
  3876                           
  3877                           ;smartkey.C: 182: TRISA &= 0xef;
  3878  0739  1683               	bsf	3,5	;RP0=1, select bank1
  3879  073A  1205               	bcf	5,4	;volatile
  3880  073B  0008               	return
  3881  073C                     __end_of_beepOn:	
  3882                           
  3883                           	psect	text877
  3884  073C                     __ptext877:	
  3885 ;; =============== function _beepOn ends ============
  3886                           
  3887                           
  3888 ;; *************** function _beepOff *****************
  3889 ;; Defined at:
  3890 ;;		line 177 in file "smartkey.C"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;		None
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;		None               void
  3897 ;; Registers used:
  3898 ;;		None
  3899 ;; Tracked objects:
  3900 ;;		On entry : 60/0
  3901 ;;		On exit  : 60/20
  3902 ;;		Unchanged: FFF9F/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1
  3904 ;;      Params:         0       0       0
  3905 ;;      Locals:         0       0       0
  3906 ;;      Temps:          0       0       0
  3907 ;;      Totals:         0       0       0
  3908 ;;Total ram usage:        0 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    2
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_main
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917  073C                     _beepOff:	
  3918                           
  3919                           ;smartkey.C: 178: TMR2ON = 0;RA4 =0;TRISA |= 0x10;
  3920                           
  3921                           ; Regs used in _beepOff: []
  3922  073C  1112               	bcf	18,2
  3923  073D  1205               	bcf	5,4
  3924  073E  1683               	bsf	3,5	;RP0=1, select bank1
  3925  073F  1605               	bsf	5,4	;volatile
  3926  0740  0008               	return
  3927  0741                     __end_of_beepOff:	
  3928                           
  3929                           	psect	text878
  3930  06B9                     __ptext878:	
  3931 ;; =============== function _beepOff ends ============
  3932                           
  3933                           
  3934 ;; *************** function _delay_x10ms *****************
  3935 ;; Defined at:
  3936 ;;		line 172 in file "smartkey.C"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  t               2    0[BANK0 ] unsigned int 
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;  set             2    2[BANK0 ] unsigned int 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;		None               void
  3943 ;; Registers used:
  3944 ;;		wreg
  3945 ;; Tracked objects:
  3946 ;;		On entry : 60/0
  3947 ;;		On exit  : 60/0
  3948 ;;		Unchanged: FFF9F/0
  3949 ;; Data sizes:     COMMON   BANK0   BANK1
  3950 ;;      Params:         0       2       0
  3951 ;;      Locals:         0       2       0
  3952 ;;      Temps:          0       0       0
  3953 ;;      Totals:         0       4       0
  3954 ;;Total ram usage:        4 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; Hardware stack levels required when called:    2
  3957 ;; This function calls:
  3958 ;;		Nothing
  3959 ;; This function is called by:
  3960 ;;		_beep
  3961 ;;		_main
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964  06B9                     _delay_x10ms:	
  3965                           
  3966                           ;smartkey.C: 173: unsigned int set = t + timeTick;
  3967                           
  3968                           ; Regs used in _delay_x10ms: [wreg]
  3969  06B9  0821               	movf	delay_x10ms@t+1,w
  3970  06BA  00A3               	movwf	delay_x10ms@set+1
  3971  06BB  0820               	movf	delay_x10ms@t,w
  3972  06BC  00A2               	movwf	delay_x10ms@set
  3973  06BD  0870               	movf	_timeTick,w
  3974  06BE  07A2               	addwf	delay_x10ms@set,f
  3975  06BF  1803               	skipnc
  3976  06C0  0AA3               	incf	delay_x10ms@set+1,f
  3977  06C1  0871               	movf	_timeTick+1,w
  3978  06C2  07A3               	addwf	delay_x10ms@set+1,f
  3979  06C3                     l5846:	
  3980                           ;smartkey.C: 174: while(timeTick < set);
  3981                           
  3982  06C3  0823               	movf	delay_x10ms@set+1,w
  3983  06C4  0271               	subwf	_timeTick+1,w
  3984  06C5  1D03               	skipz
  3985  06C6  2EC9               	goto	u2555
  3986  06C7  0822               	movf	delay_x10ms@set,w
  3987  06C8  0270               	subwf	_timeTick,w
  3988  06C9                     u2555:	
  3989  06C9  1803               	btfsc	3,0
  3990  06CA  0008               	return
  3991  06CB  2EC3               	goto	l5846
  3992  06CC                     __end_of_delay_x10ms:	
  3993                           
  3994                           	psect	text879
  3995  0621                     __ptext879:	
  3996 ;; =============== function _delay_x10ms ends ============
  3997                           
  3998                           
  3999 ;; *************** function _WRITE_EEPROM *****************
  4000 ;; Defined at:
  4001 ;;		line 211 in file "smartkey.C"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  EEAddr          1    wreg     unsigned char 
  4004 ;;  EEData          1    0[BANK0 ] unsigned char 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  EEAddr          1    1[BANK0 ] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;		None               void
  4009 ;; Registers used:
  4010 ;;		wreg
  4011 ;; Tracked objects:
  4012 ;;		On entry : 60/0
  4013 ;;		On exit  : 60/20
  4014 ;;		Unchanged: FFE00/0
  4015 ;; Data sizes:     COMMON   BANK0   BANK1
  4016 ;;      Params:         0       1       0
  4017 ;;      Locals:         0       1       0
  4018 ;;      Temps:          0       0       0
  4019 ;;      Totals:         0       2       0
  4020 ;;Total ram usage:        2 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:    2
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_main
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029  0621                     _WRITE_EEPROM:	
  4030                           
  4031                           ; Regs used in _WRITE_EEPROM: [wreg]
  4032                           ;WRITE_EEPROM@EEAddr stored from wreg
  4033  0621  00A1               	movwf	WRITE_EEPROM@EEAddr
  4034                           
  4035                           ;smartkey.C: 212: GIE = 0;
  4036  0622  138B               	bcf	11,7
  4037  0623                     l738:	
  4038                           ;smartkey.C: 213: while(GIE) asm("clrwdt");
  4039                           
  4040  0623  1F8B               	btfss	11,7
  4041  0624  2E27               	goto	l5838
  4042  0625  0064               	clrwdt	;#
  4043  0626  2E23               	goto	l738
  4044  0627                     l5838:	
  4045                           
  4046                           ;smartkey.C: 214: EEADR = EEAddr;
  4047  0627  1283               	bcf	3,5	;RP0=0, select bank0
  4048  0628  1303               	bcf	3,6	;RP1=0, select bank0
  4049  0629  0821               	movf	WRITE_EEPROM@EEAddr,w
  4050  062A  1683               	bsf	3,5	;RP0=1, select bank1
  4051  062B  009B               	movwf	27	;volatile
  4052                           
  4053                           ;smartkey.C: 215: EEDAT = EEData;
  4054  062C  1283               	bcf	3,5	;RP0=0, select bank0
  4055  062D  0820               	movf	WRITE_EEPROM@EEData,w
  4056  062E  1683               	bsf	3,5	;RP0=1, select bank1
  4057  062F  009A               	movwf	26	;volatile
  4058  0630  3034               	movlw	52
  4059                           
  4060                           ;smartkey.C: 216: EEIF = 0;
  4061  0631  1283               	bcf	3,5	;RP0=0, select bank0
  4062  0632  138C               	bcf	12,7
  4063                           
  4064                           ;smartkey.C: 217: EECON1 = 0x34;
  4065  0633  1683               	bsf	3,5	;RP0=1, select bank1
  4066  0634  009C               	movwf	28	;volatile
  4067                           
  4068                           ;smartkey.C: 218: WR = 1;
  4069  0635  141D               	bsf	29,0
  4070  0636                     l741:	
  4071                           ;smartkey.C: 219: while(WR) asm("clrwdt");
  4072                           
  4073  0636  1683               	bsf	3,5	;RP0=1, select bank1
  4074  0637  1303               	bcf	3,6	;RP1=0, select bank1
  4075  0638  1C1D               	btfss	29,0
  4076  0639  2E3C               	goto	l743
  4077  063A  0064               	clrwdt	;#
  4078  063B  2E36               	goto	l741
  4079  063C                     l743:	
  4080                           
  4081                           ;smartkey.C: 221: GIE = 1;
  4082  063C  178B               	bsf	11,7
  4083  063D  0008               	return
  4084  063E                     __end_of_WRITE_EEPROM:	
  4085                           
  4086                           	psect	text880
  4087  0706                     __ptext880:	
  4088 ;; =============== function _WRITE_EEPROM ends ============
  4089                           
  4090                           
  4091 ;; *************** function _READ_EEPROM *****************
  4092 ;; Defined at:
  4093 ;;		line 200 in file "smartkey.C"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  EEAddr          1    wreg     unsigned char 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  EEAddr          1    0[BANK0 ] unsigned char 
  4098 ;;  ReEepromData    1    1[BANK0 ] unsigned char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      unsigned char 
  4101 ;; Registers used:
  4102 ;;		wreg
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/20
  4105 ;;		On exit  : 60/0
  4106 ;;		Unchanged: FFF9F/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1
  4108 ;;      Params:         0       0       0
  4109 ;;      Locals:         0       2       0
  4110 ;;      Temps:          0       0       0
  4111 ;;      Totals:         0       2       0
  4112 ;;Total ram usage:        2 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    2
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_main
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121  0706                     _READ_EEPROM:	
  4122                           
  4123                           ; Regs used in _READ_EEPROM: [wreg]
  4124                           ;READ_EEPROM@EEAddr stored from wreg
  4125  0706  1283               	bcf	3,5	;RP0=0, select bank0
  4126  0707  1303               	bcf	3,6	;RP1=0, select bank0
  4127  0708  00A0               	movwf	READ_EEPROM@EEAddr
  4128                           
  4129                           ;smartkey.C: 201: unsigned char ReEepromData;
  4130                           ;smartkey.C: 203: EEADR = EEAddr;
  4131  0709  1683               	bsf	3,5	;RP0=1, select bank1
  4132  070A  009B               	movwf	27	;volatile
  4133                           
  4134                           ;smartkey.C: 204: RD = 1;
  4135  070B  141C               	bsf	28,0
  4136                           
  4137                           ;smartkey.C: 205: ReEepromData = EEDAT;
  4138  070C  081A               	movf	26,w	;volatile
  4139  070D  1283               	bcf	3,5	;RP0=0, select bank0
  4140  070E  00A1               	movwf	READ_EEPROM@ReEepromData
  4141                           
  4142                           ;smartkey.C: 206: RD = 0;
  4143  070F  1683               	bsf	3,5	;RP0=1, select bank1
  4144  0710  101C               	bcf	28,0
  4145                           
  4146                           ;smartkey.C: 207: return ReEepromData;
  4147  0711  1283               	bcf	3,5	;RP0=0, select bank0
  4148  0712  0821               	movf	READ_EEPROM@ReEepromData,w
  4149  0713  0008               	return
  4150  0714                     __end_of_READ_EEPROM:	
  4151                           
  4152                           	psect	text881
  4153  0420                     __ptext881:	
  4154 ;; =============== function _READ_EEPROM ends ============
  4155                           
  4156                           
  4157 ;; *************** function _ISR *****************
  4158 ;; Defined at:
  4159 ;;		line 46 in file "smartkey.C"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  tmp             1    4[COMMON] unsigned char 
  4164 ;;  tmp             1    0        unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;		None               void
  4167 ;; Registers used:
  4168 ;;		wreg, status,2, status,0, pclath, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 40/0
  4172 ;;		Unchanged: FFE00/0
  4173 ;; Data sizes:     COMMON   BANK0   BANK1
  4174 ;;      Params:         0       0       0
  4175 ;;      Locals:         1       0       0
  4176 ;;      Temps:          2       0       0
  4177 ;;      Totals:         3       0       0
  4178 ;;Total ram usage:        3 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    1
  4181 ;; This function calls:
  4182 ;;		i1_READ_EEPROM
  4183 ;;		i1_WRITE_EEPROM
  4184 ;; This function is called by:
  4185 ;;		Interrupt level 1
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188  0420                     _ISR:	
  4189                           
  4190                           ;smartkey.C: 50: if(PAIE&&PAIF){
  4191  0420  198B               	btfsc	11,3
  4192  0421  1C0B               	btfss	11,0
  4193  0422  2C32               	goto	i1l4914
  4194                           
  4195                           ;smartkey.C: 52: tmp = PORTA;
  4196  0423  1283               	bcf	3,5	;RP0=0, select bank0
  4197  0424  1303               	bcf	3,6	;RP1=0, select bank0
  4198  0425  0805               	movf	5,w	;volatile
  4199                           
  4200                           ;smartkey.C: 53: PAIF = 0;
  4201  0426  100B               	bcf	11,0
  4202                           
  4203                           ;smartkey.C: 55: if(RA6){
  4204  0427  1F05               	btfss	5,6
  4205  0428  2C31               	goto	i1l4912
  4206                           
  4207                           ;smartkey.C: 57: if(mode_chek == 0){
  4208  0429  08F3               	movf	_mode_chek,f
  4209  042A  1D03               	skipz
  4210  042B  2C32               	goto	i1l4914
  4211                           
  4212                           ;smartkey.C: 58: cntCyc = 0;
  4213  042C  01F2               	clrf	_cntCyc
  4214                           
  4215                           ;smartkey.C: 59: cntOff = 0;
  4216  042D  01CA               	clrf	_cntOff
  4217                           
  4218                           ;smartkey.C: 61: mode_chek = 1;
  4219  042E  01F3               	clrf	_mode_chek
  4220  042F  0AF3               	incf	_mode_chek,f
  4221  0430  2C32               	goto	i1l4914
  4222  0431                     i1l4912:	
  4223                           
  4224                           ;smartkey.C: 66: else{
  4225                           ;smartkey.C: 67: cntOff = 0;
  4226  0431  01CA               	clrf	_cntOff
  4227  0432                     i1l4914:	
  4228                           
  4229                           ;smartkey.C: 69: }
  4230                           ;smartkey.C: 71: }
  4231                           ;smartkey.C: 74: if(INTE&&INTF){
  4232  0432  1A0B               	btfsc	11,4
  4233  0433  1C8B               	btfss	11,1
  4234  0434  2C49               	goto	i1l693
  4235                           
  4236                           ;smartkey.C: 75: unsigned char tmp;
  4237                           ;smartkey.C: 76: INTF = 0;
  4238  0435  108B               	bcf	11,1
  4239                           
  4240                           ;smartkey.C: 78: if( RC1==0){
  4241  0436  1283               	bcf	3,5	;RP0=0, select bank0
  4242  0437  1303               	bcf	3,6	;RP1=0, select bank0
  4243  0438  1887               	btfsc	7,1
  4244  0439  2C49               	goto	i1l693
  4245                           
  4246                           ;smartkey.C: 80: if(timeTick <0x20){
  4247  043A  3000               	movlw	0
  4248  043B  0271               	subwf	_timeTick+1,w
  4249  043C  3020               	movlw	32
  4250  043D  1903               	skipnz
  4251  043E  0270               	subwf	_timeTick,w
  4252  043F  1803               	skipnc
  4253  0440  2C48               	goto	i1l695
  4254                           
  4255                           ;smartkey.C: 81: tmp = READ_EEPROM(0x40);
  4256  0441  3040               	movlw	64
  4257  0442  272A               	fcall	i1_READ_EEPROM
  4258  0443  00F9               	movwf	ISR@tmp_1057
  4259                           
  4260                           ;smartkey.C: 82: WRITE_EEPROM(0x40,tmp+1);
  4261  0444  0A79               	incf	ISR@tmp_1057,w
  4262  0445  00F5               	movwf	?i1_WRITE_EEPROM
  4263  0446  3040               	movlw	64
  4264  0447  2674               	fcall	i1_WRITE_EEPROM
  4265  0448                     i1l695:	
  4266  0448  2C48               	goto	i1l695
  4267  0449                     i1l693:	
  4268                           
  4269                           ;smartkey.C: 91: }
  4270                           ;smartkey.C: 93: }
  4271                           ;smartkey.C: 96: if(TMR1IE&&TMR1IF){
  4272  0449  1683               	bsf	3,5	;RP0=1, select bank1
  4273  044A  1303               	bcf	3,6	;RP1=0, select bank1
  4274  044B  1C0C               	btfss	12,0
  4275  044C  2C9B               	goto	i1l4968
  4276  044D  1283               	bcf	3,5	;RP0=0, select bank0
  4277  044E  1C0C               	btfss	12,0
  4278  044F  2C9B               	goto	i1l4968
  4279  0450  30EC               	movlw	236
  4280                           
  4281                           ;smartkey.C: 98: TMR1IF = 0;
  4282  0451  100C               	bcf	12,0
  4283                           
  4284                           ;smartkey.C: 100: TMR1H = -5000>>8;
  4285  0452  008F               	movwf	15	;volatile
  4286                           
  4287                           ;smartkey.C: 101: TMR1L = -5000;
  4288  0453  3078               	movlw	120
  4289  0454  008E               	movwf	14	;volatile
  4290                           
  4291                           ;smartkey.C: 107: if( mode_chek == 1){
  4292  0455  0B73               	decfsz	_mode_chek,w
  4293  0456  2C6F               	goto	i1l4952
  4294                           
  4295                           ;smartkey.C: 109: cntCyc++;
  4296  0457  0AF2               	incf	_cntCyc,f
  4297                           
  4298                           ;smartkey.C: 111: if(RA6==0){
  4299  0458  1B05               	btfsc	5,6
  4300  0459  2C6F               	goto	i1l4952
  4301  045A  3010               	movlw	16
  4302                           
  4303                           ;smartkey.C: 113: cntOff++;
  4304  045B  0ACA               	incf	_cntOff,f
  4305                           
  4306                           ;smartkey.C: 116: if(cntOff > 15){
  4307  045C  024A               	subwf	_cntOff,w
  4308  045D  1C03               	skipc
  4309  045E  2C6F               	goto	i1l4952
  4310  045F  3010               	movlw	16
  4311                           
  4312                           ;smartkey.C: 118: mode_chek = 0;
  4313  0460  01F3               	clrf	_mode_chek
  4314                           
  4315                           ;smartkey.C: 120: if((cntCyc>15) &&(cntCyc<50)) {
  4316  0461  0272               	subwf	_cntCyc,w
  4317  0462  3032               	movlw	50
  4318  0463  1C03               	skipc
  4319  0464  2C6B               	goto	L20
  4320  0465  0272               	subwf	_cntCyc,w
  4321  0466  1803               	skipnc
  4322  0467  2C6A               	goto	i1l4948
  4323                           
  4324                           ;smartkey.C: 121: RegStatus |= (0x40);
  4325  0468  1749               	bsf	_RegStatus,6
  4326                           
  4327                           ;smartkey.C: 122: } else if (cntCyc>=50){
  4328  0469  2C6E               	goto	i1l704
  4329  046A                     i1l4948:	
  4330  046A  3032               	movlw	50
  4331  046B                     L20:	
  4332  046B  0272               	subwf	_cntCyc,w
  4333  046C  1803               	btfsc	3,0
  4334                           
  4335                           ;smartkey.C: 123: RegStatus &= ~(0x40);
  4336  046D  1349               	bcf	_RegStatus,6
  4337  046E                     i1l704:	
  4338                           
  4339                           ;smartkey.C: 124: }
  4340                           ;smartkey.C: 127: RegStatus |= 0x80;
  4341  046E  17C9               	bsf	_RegStatus,7
  4342  046F                     i1l4952:	
  4343                           
  4344                           ;smartkey.C: 128: }
  4345                           ;smartkey.C: 130: }
  4346                           ;smartkey.C: 140: }
  4347                           ;smartkey.C: 143: timeTick++;
  4348  046F  0AF0               	incf	_timeTick,f
  4349  0470  1903               	skipnz
  4350  0471  0AF1               	incf	_timeTick+1,f
  4351                           
  4352                           ;smartkey.C: 145: if((mtState == 4)||(mtState == 3)){
  4353  0472  0874               	movf	_mtState,w
  4354  0473  3A04               	xorlw	4
  4355  0474  1903               	skipnz
  4356  0475  2C7A               	goto	i1l4958
  4357  0476  0874               	movf	_mtState,w
  4358  0477  3A03               	xorlw	3
  4359  0478  1D03               	skipz
  4360  0479  2C9B               	goto	i1l4968
  4361  047A                     i1l4958:	
  4362                           
  4363                           ;smartkey.C: 147: if(timeTick > cntTmp){
  4364  047A  0871               	movf	_timeTick+1,w
  4365  047B  0246               	subwf	_cntTmp+1,w
  4366  047C  1D03               	skipz
  4367  047D  2C80               	goto	u146_25
  4368  047E  0870               	movf	_timeTick,w
  4369  047F  0245               	subwf	_cntTmp,w
  4370  0480                     u146_25:	
  4371  0480  1803               	skipnc
  4372  0481  2C9B               	goto	i1l4968
  4373                           
  4374                           ;smartkey.C: 148: cntTmp = timeTick+40;
  4375  0482  0871               	movf	_timeTick+1,w
  4376  0483  00C6               	movwf	_cntTmp+1
  4377  0484  0870               	movf	_timeTick,w
  4378  0485  00C5               	movwf	_cntTmp
  4379  0486  3028               	movlw	40
  4380  0487  07C5               	addwf	_cntTmp,f
  4381  0488  1803               	skipnc
  4382  0489  0AC6               	incf	_cntTmp+1,f
  4383                           
  4384                           ;smartkey.C: 149: if(cntTmp<=timeOut)
  4385  048A  0846               	movf	_cntTmp+1,w
  4386  048B  0248               	subwf	_timeOut+1,w
  4387  048C  1D03               	skipz
  4388  048D  2C90               	goto	u147_25
  4389  048E  0845               	movf	_cntTmp,w
  4390  048F  0247               	subwf	_timeOut,w
  4391  0490                     u147_25:	
  4392                           
  4393                           ;smartkey.C: 150: {
  4394                           ;smartkey.C: 151: if(PR2 == 11)
  4395  0490  1683               	bsf	3,5	;RP0=1, select bank1
  4396  0491  1C03               	skipc
  4397  0492  2C9C               	goto	L21
  4398  0493  0812               	movf	18,w	;volatile
  4399  0494  3A0B               	xorlw	11
  4400  0495  1D03               	skipz
  4401  0496  2C99               	goto	i1l4966
  4402                           
  4403                           ;smartkey.C: 152: PR2 = 30;
  4404  0497  301E               	movlw	30
  4405  0498  2C9A               	goto	L19
  4406  0499                     i1l4966:	
  4407                           
  4408                           ;smartkey.C: 153: else
  4409                           ;smartkey.C: 154: PR2 = 11;
  4410  0499  300B               	movlw	11
  4411  049A                     L19:	
  4412  049A  0092               	movwf	18	;volatile
  4413  049B                     i1l4968:	
  4414                           
  4415                           ;smartkey.C: 155: }
  4416                           ;smartkey.C: 156: }
  4417                           ;smartkey.C: 157: }
  4418                           ;smartkey.C: 160: }
  4419                           ;smartkey.C: 163: if(TMR2IE&&TMR2IF)
  4420  049B  1683               	bsf	3,5	;RP0=1, select bank1
  4421  049C                     L21:	
  4422  049C  1C8C               	btfss	12,1
  4423  049D  2CA4               	goto	i1l714
  4424  049E  1283               	bcf	3,5	;RP0=0, select bank0
  4425  049F  1C8C               	btfss	12,1
  4426  04A0  2CA4               	goto	i1l714
  4427  04A1  3010               	movlw	16
  4428                           
  4429                           ;smartkey.C: 164: {
  4430                           ;smartkey.C: 165: TMR2IF = 0;
  4431  04A2  108C               	bcf	12,1
  4432                           
  4433                           ;smartkey.C: 166: RA4 =~ RA4;
  4434  04A3  0685               	xorwf	5,f
  4435  04A4                     i1l714:	
  4436  04A4  0878               	movf	??_ISR+1,w
  4437  04A5  008A               	movwf	10
  4438  04A6  0E77               	swapf	??_ISR^(0+-128),w
  4439  04A7  0083               	movwf	3
  4440  04A8  0EFE               	swapf	126,f
  4441  04A9  0E7E               	swapf	126,w
  4442  04AA  0009               	retfie
  4443  04AB                     __end_of_ISR:	
  4444                           
  4445                           	psect	intentry
  4446  0004                     __pintentry:	
  4447                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4448                           
  4449  0004                     interrupt_function:	
  4450  007E                     saved_w	set	btemp
  4451  0004  00FE               	movwf	btemp
  4452  0005  0E03               	swapf	3,w
  4453  0006  00F7               	movwf	??_ISR
  4454  0007  080A               	movf	10,w
  4455  0008  00F8               	movwf	??_ISR+1
  4456  0009  2C20               	ljmp	_ISR
  4457                           
  4458                           	psect	text882
  4459  0674                     __ptext882:	
  4460 ;; =============== function _ISR ends ============
  4461                           
  4462                           
  4463 ;; *************** function i1_WRITE_EEPROM *****************
  4464 ;; Defined at:
  4465 ;;		line 211 in file "smartkey.C"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  WRITE_EEPROM    1    wreg     unsigned char 
  4468 ;;  WRITE_EEPROM    1    0[COMMON] unsigned char 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  WRITE_EEPROM    1    1[COMMON] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;		None               void
  4473 ;; Registers used:
  4474 ;;		wreg
  4475 ;; Tracked objects:
  4476 ;;		On entry : 60/20
  4477 ;;		On exit  : 60/20
  4478 ;;		Unchanged: FFE00/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1
  4480 ;;      Params:         1       0       0
  4481 ;;      Locals:         1       0       0
  4482 ;;      Temps:          0       0       0
  4483 ;;      Totals:         2       0       0
  4484 ;;Total ram usage:        2 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_ISR
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492  0674                     i1_WRITE_EEPROM:	
  4493                           
  4494                           ; Regs used in i1_WRITE_EEPROM: [wreg]
  4495                           ;i1WRITE_EEPROM@EEAddr stored from wreg
  4496  0674  00F6               	movwf	i1WRITE_EEPROM@EEAddr
  4497                           
  4498                           ;smartkey.C: 212: GIE = 0;
  4499  0675  138B               	bcf	11,7
  4500  0676                     i1l738:	
  4501                           ;smartkey.C: 213: while(GIE) asm("clrwdt");
  4502                           
  4503  0676  1F8B               	btfss	11,7
  4504  0677  2E7A               	goto	i1l5150
  4505  0678  0064               	clrwdt	;#
  4506  0679  2E76               	goto	i1l738
  4507  067A                     i1l5150:	
  4508                           
  4509                           ;smartkey.C: 214: EEADR = EEAddr;
  4510  067A  0876               	movf	i1WRITE_EEPROM@EEAddr,w
  4511  067B  1683               	bsf	3,5	;RP0=1, select bank1
  4512  067C  1303               	bcf	3,6	;RP1=0, select bank1
  4513  067D  009B               	movwf	27	;volatile
  4514                           
  4515                           ;smartkey.C: 215: EEDAT = EEData;
  4516  067E  0875               	movf	i1WRITE_EEPROM@EEData,w
  4517  067F  009A               	movwf	26	;volatile
  4518  0680  3034               	movlw	52
  4519                           
  4520                           ;smartkey.C: 216: EEIF = 0;
  4521  0681  1283               	bcf	3,5	;RP0=0, select bank0
  4522  0682  138C               	bcf	12,7
  4523                           
  4524                           ;smartkey.C: 217: EECON1 = 0x34;
  4525  0683  1683               	bsf	3,5	;RP0=1, select bank1
  4526  0684  009C               	movwf	28	;volatile
  4527                           
  4528                           ;smartkey.C: 218: WR = 1;
  4529  0685  141D               	bsf	29,0
  4530  0686                     i1l741:	
  4531                           ;smartkey.C: 219: while(WR) asm("clrwdt");
  4532                           
  4533  0686  1683               	bsf	3,5	;RP0=1, select bank1
  4534  0687  1303               	bcf	3,6	;RP1=0, select bank1
  4535  0688  1C1D               	btfss	29,0
  4536  0689  2E8C               	goto	i1l743
  4537  068A  0064               	clrwdt	;#
  4538  068B  2E86               	goto	i1l741
  4539  068C                     i1l743:	
  4540                           
  4541                           ;smartkey.C: 221: GIE = 1;
  4542  068C  178B               	bsf	11,7
  4543  068D  0008               	return
  4544  068E                     __end_ofi1_WRITE_EEPROM:	
  4545                           
  4546                           	psect	text883
  4547  072A                     __ptext883:	
  4548 ;; =============== function i1_WRITE_EEPROM ends ============
  4549                           
  4550                           
  4551 ;; *************** function i1_READ_EEPROM *****************
  4552 ;; Defined at:
  4553 ;;		line 200 in file "smartkey.C"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  READ_EEPROM     1    wreg     unsigned char 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  READ_EEPROM     1    0[COMMON] unsigned char 
  4558 ;;  READ_EEPROM     1    1[COMMON] unsigned char 
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      unsigned char 
  4561 ;; Registers used:
  4562 ;;		wreg
  4563 ;; Tracked objects:
  4564 ;;		On entry : 60/0
  4565 ;;		On exit  : 60/20
  4566 ;;		Unchanged: FFF9F/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1
  4568 ;;      Params:         0       0       0
  4569 ;;      Locals:         2       0       0
  4570 ;;      Temps:          0       0       0
  4571 ;;      Totals:         2       0       0
  4572 ;;Total ram usage:        2 bytes
  4573 ;; Hardware stack levels used:    1
  4574 ;; This function calls:
  4575 ;;		Nothing
  4576 ;; This function is called by:
  4577 ;;		_ISR
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580  072A                     i1_READ_EEPROM:	
  4581                           
  4582                           ; Regs used in i1_READ_EEPROM: [wreg]
  4583                           ;i1READ_EEPROM@EEAddr stored from wreg
  4584  072A  00F5               	movwf	i1READ_EEPROM@EEAddr
  4585                           
  4586                           ;smartkey.C: 201: unsigned char ReEepromData;
  4587                           ;smartkey.C: 203: EEADR = EEAddr;
  4588  072B  1683               	bsf	3,5	;RP0=1, select bank1
  4589  072C  009B               	movwf	27	;volatile
  4590                           
  4591                           ;smartkey.C: 204: RD = 1;
  4592  072D  141C               	bsf	28,0
  4593                           
  4594                           ;smartkey.C: 205: ReEepromData = EEDAT;
  4595  072E  081A               	movf	26,w	;volatile
  4596  072F  00F6               	movwf	i1READ_EEPROM@ReEepromData
  4597                           
  4598                           ;smartkey.C: 206: RD = 0;
  4599  0730  101C               	bcf	28,0
  4600                           
  4601                           ;smartkey.C: 207: return ReEepromData;
  4602  0731  0008               	return
  4603  0732                     __end_ofi1_READ_EEPROM:	
  4604                           
  4605                           	psect	text884
  4606  0000                     __ptext884:	
  4607 ;; =============== function i1_READ_EEPROM ends ============
  4608                           
  4609  007E                     btemp	set	126	;btemp
  4610  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Feb 08 11:15:24 2020

                        pc 0002                         _RD 04E0                         _WR 04E8  
             ___awdiv@sign 0025      __size_of_WRITE_EEPROM 001D                         fsr 0004  
                      l720 0000                        l802 01FF                        l723 0000  
                      l732 0000                        l812 0296                        l741 0636  
                      l726 0000                        l735 0000                        l743 063C  
                      l815 027B                        l744 0000                        l832 02F9  
                      l816 0266                        l738 0623                        l747 0000  
                      l857 041D                        l786 01B3                        _GIE 005F  
                      _RA0 0028                        _RA1 0029                        _RA4 002C  
                      _RC1 0039                        _RC2 003A                        _RA6 002E  
                      _RA7 002F                        _RC4 003C               ?_swI2C_Start 0075  
                      _PR2 0092                        _HTS 047A                        _ISR 0420  
                      _SR0 0CF6                        _SR1 0CF7                        fsr0 0004  
                      indf 0000             _swI2C_ReadByte 04F1                       S6658 0732  
                     ?_ISR 0075                       l1512 0725                       l1521 0000  
                     l1515 0000                       l1524 0000                       l2181 0000  
                     l1518 0000                       l2175 0000                       l2192 04FF  
                     l2178 0000                       l2194 0000                       l2187 0587  
                     l2189 0000                       l6000 0000                       l6002 0000  
                     l6010 0000                       l6004 068F                       l6012 0000  
                     l6020 0000                       l6006 0000                       l6014 0000  
                     l6022 0000                       l6030 0000                       l6102 061D  
                     l6008 0000                       l6016 0000                       l6024 0000  
                     l6032 0000                       l6104 0606                       l6018 0000  
                     l6026 0000                       l6050 0000                       l6042 0000  
                     l6034 0000                       l6106 061F                       l6122 0000  
                     l6210 0000                       l6202 0000                       l6028 0000  
                     l6052 0000                       l6044 0000                       l6036 0000  
                     l6060 0000                       l6108 0000                       l6140 0000  
                     l6132 0000                       l6300 0000                       l6204 0000  
                     l6212 0086                       l6054 0000                       l6046 0000  
                     l6038 0000                       l6062 0000                       l6134 05D1  
                     l6302 0000                       l6230 0000                       l6222 0000  
                     l6214 0000                       l6206 0000                       l6056 0000  
                     l6048 0000                       l6080 0000                       l6072 0000  
                     l6064 0000                       l6400 0000                       l6320 0000  
                     l6312 01CF                       l6304 01C6                       l6240 00B9  
                     l6232 0000                       l6224 0000                       l6216 008D  
                     l6208 0000                       l6160 0000                       l3690 0000  
                     l6082 0000                       l6074 0000                       l6066 0000  
                     l6138 0000                       l6402 0000                       l6330 0000  
                     l6410 028E                       l6226 0000                       l6218 0000  
                     l6170 0000                       l6162 0000                       l6084 0000  
                     l6076 0000                       l6068 0000                       l6500 0000  
                     l6420 0000                       l6404 0000                       l6340 0000  
                     l6324 01E7                       l6316 01D6                       l6412 0297  
                     l6260 0000                       l6252 00EC                       l6244 00D5  
                     l6236 0000                       l6180 0000                       l6172 0000  
                     l6164 0000                       l6078 0000                       l6430 0000  
                     l6422 0000                       l6350 0000                       l6334 01F8  
                     l6254 0000                       l6246 0000                       l6238 0000  
                     l6190 0000                       l6182 0000                       l6174 0000  
                     l6166 0000                       l6158 0000                       l6088 0000  
                     l6600 0000                       l6512 0000                       l6440 02C1  
                     l6432 0000                       l6424 02AE                       l6344 020E  
                     l6336 0000                       l6328 0000                       l6280 0151  
                     l6272 0000                       l6264 0000                       l6192 0000  
                     l6184 0000                       l6176 0000                       l6168 0000  
                     l6098 0000                       l6610 040C                       l6602 03F4  
                     l6530 0000                       l6514 0000                       l6450 0000  
                     l6442 0000                       l6434 0000                       l6426 0000  
                     l6418 02A4                       l6370 0000                       l6362 022F  
                     l6354 021F                       l6346 0000                       l6338 0000  
                     l6290 0195                       l6274 013A                       l6266 0000  
                     l6258 00FE                       l6186 0000                       l6178 0000  
                     l5900 0000                       l6612 0000                       l6540 0000  
                     l6524 0000                       l6516 0000                       l6508 0000  
                     l6452 0000                       l6444 02CA                       l6436 0000  
                     l6428 0000                       l6364 0000                       l6348 021C  
                     l6292 0000                       l6284 0000                       l6268 010C  
                     l6276 0149                       l6196 0000                       l6188 0000  
                     l5830 0000                       l5902 0000                       l5910 0000  
                     l6614 0000                       l6542 0000                       l6526 0000  
                     l6518 034F                       l6462 0000                       l6454 0000  
                     l6390 0000                       l6366 0000                       l6358 0000  
                     l6374 0249                       l6294 01AF                       l6198 006A  
                     l5832 0000                       l5840 0000                       l5904 0000  
                     l5920 0000                       l5912 0000                       l6616 0000  
                     l6560 0000                       l6544 0000                       l6536 0000  
                     l6480 0000                       l6464 0000                       l6456 0000  
                     l6448 02D2                       l6384 0000                       l6376 0254  
                     l6368 0240                       l6296 0000                       l5842 0000  
                     l5850 0000                       l5930 0000                       l5922 0000  
                     l5914 0000                       l5906 0000                       l6618 0416  
                     l6562 0000                       l6554 0000                       l6570 03AE  
                     l6474 0000                       l6458 02E9                       l6490 0301  
                     l6386 0000                       l6378 0000                       l6298 01B8  
                     l5828 0000                       l5836 0000                       l5844 0000  
                     l5852 0000                       l5932 0000                       l5924 0000  
                     l5916 0000                       l5908 0000                       l5940 0000  
                     l6580 03C6                       l6564 03A9                       l6548 038B  
                     l6476 0000                       l6492 030F                       l6396 027E  
                     l6388 0000                       l5838 0627                       l5846 06C3  
                     l5854 0000                       l5934 0000                       l5926 0000  
                     l5918 0000                       l5942 0000                       l5950 0000  
                     l6582 0000                       l6558 0000                       l6566 03AA  
                     l6478 0000                       l6398 0000                       l5848 0000  
                     l5856 0000                       l5872 04D7                       l5928 0000  
                     l5944 0000                       l5936 0000                       l5960 0000  
                     l6592 03F0                       l6584 0000                       l6576 0000  
                     l6568 0000                       l6496 0000                       l5858 0000  
                     l5946 0000                       l5938 0000                       l5962 0549  
                     l5954 0000                       l6498 0000                       l5972 0557  
                     l5964 0000                       l5956 0540                       l5948 0000  
                     l6596 0000                       l6588 0000                       l5982 0000  
                     l5974 0000                       l6598 0000                       l5896 0000  
                     l5984 056E                       l5992 0000                       l5898 0000  
                     l5986 0000                       l5978 0000                       l5994 0000  
                     l5988 0576                       l5996 0000                       l5998 0000  
                     _EEIF 0067                       u3005 0182                       u3015 018F  
                     u3215 02A1                       _PAIE 005B                       _PAIF 0058  
                     u3415 03B6                       _PIE1 008C                       u2720 058D  
                     u3265 0316                       u2555 06C9                       u2734 0590  
                     u3607 0142                       u2585 04C4                       u3617 01A9  
                     u3537 0024                       u2675 0560                       u3547 0030  
                     _PEIE 005E                       u3557 0050                       _INTE 005C  
                     u2774 0526                       _INTF 0059                       u2855 05DE  
                     u3567 0065                       u3577 00AC                       u3587 00C1  
                     u3597 00F0                       _PIR1 000C                       _TMR2 0011  
                     _STRA 0CE8                       _STRB 0CE9                       _STRC 0CEA  
                     _STRD 0CEB                       _WREN 0C62                       _WPUA 0095  
                     _WPUC 0088               ?_READ_EEPROM 0075                       _beep 068E  
          __end_of_AccRead 05E9                       _main 000B                       btemp 007E  
                     start 000A               _WRITE_EEPROM 0621                      ??_ISR 0077  
                    ?_beep 0024                      _C1SEN 0CF5                      _C2REN 0CF4  
                    ?_main 0075            __end_of___awdiv 057B                      _EEADR 009B  
                    _EEDAT 009A                      _EEPGD 0C67     __end_of_swI2C_ReadByte 0536  
             AccWrite@rAdd 0028            ___awdiv@divisor 0020                      _T1CON 0010  
                    _T2CON 0012                      _IOCA6 04B6                      i1l704 046E  
                    i1l714 04A4                      i1l741 0686                      i1l735 0000  
                    i1l743 068C                      i1l744 0000                      i1l738 0676  
                    i1l693 0449                      i1l695 0448            ___awdiv@counter 0024  
          __end_of_beepOff 0741                      _TMR1H 000F                      _TMR1L 000E  
                    _PORTA 0005                      _PORTC 0007                      _SRCON 019E  
                    _PULSR 0CF2                      _PULSS 0CF3                      _TRISA 0085  
                    _TRISC 0087                      _compe 04AB           __end_of_AccWrite 0621  
                    pclath 000A                      status 0003                      wtemp0 007E  
          _swI2C_WriteByte 057B       __size_of_delay_x10ms 0013             i1_WRITE_EEPROM 0674  
             __end_of_beep 06A4               __end_of_main 0420                     ??_beep 0025  
                   ??_main 002C            ?_swI2C_ReadByte 0075              main@reAlertOn 003B  
                   ?_compe 0020                  ??_AccRead 0027                     _EECON1 009C  
         ___awdiv@dividend 0022                     i1l5140 0000                     i1l5142 0000  
                   i1l5150 067A                     i1l5144 0000                     i1l5152 0000  
                   i1l5154 0000                     i1l5148 0000                     i1l4910 0000  
                   i1l4902 0000                     i1l4912 0431                     i1l4904 0000  
                   i1l4930 0000                     i1l4914 0432                     i1l4932 0000  
                   i1l4924 0000                     i1l4942 0000                     i1l4934 0000  
                   i1l4952 046F                     i1l4954 0000                     i1l4938 0000  
                   _INTEDG 040E                     i1l4948 046A                     i1l4974 0000  
                   i1l4966 0499                     i1l4958 047A                     i1l4968 049B  
                   i1l4896 0000                     _INTCON 000B                     u146_25 0480  
                   u147_25 0490                     _OSCCON 008F                     _TMR1IE 0460  
                   _TMR1IF 0060                     _TMR2IE 0461                     _TMR2IF 0061  
                   _TMR1ON 0080                     _TMR2ON 0092     __end_ofi1_WRITE_EEPROM 068E  
          swI2C_ReadByte@i 0023                     _beepOn 0737                  ??___awdiv 0024  
                   _cntCyc 0072                     _cntOff 004A                     _cntTmp 0045  
                ??_beepOff 0020           ___awdiv@quotient 0026           __end_of_int_init 0674  
                   compe@a 0027                     compe@b 0020     __size_ofi1_READ_EEPROM 0008  
         __end_of_setState 0720              main@vibrateOn 0034                     saved_w 007E  
     __size_of_swI2C_Start 0015    __end_of_swI2C_WriteByte 05BE           __end_of_sys_init 072A  
     i1WRITE_EEPROM@EEAddr 0076       i1WRITE_EEPROM@EEData 0075       __size_of_READ_EEPROM 000E  
          ?i1_WRITE_EEPROM 0075             __pcstackCOMMON 0075              __end_of_compe 04E4  
                ?_AccWrite 0023                ISR@tmp_1057 0079                    ??_compe 0022  
               __pbssBANK0 0045         __size_of_gpio_init 000E    READ_EEPROM@ReEepromData 0021  
            i1_READ_EEPROM 072A                 __pmaintext 000B                    ?_beepOn 0075  
               __pintentry 0004  i1READ_EEPROM@ReEepromData 0076                 ??_AccWrite 0026  
                  _AccRead 05BE                    _PSTRCON 019D                 _swI2C_Init 063E  
                  _STRSYNC 0CEC                 _swI2C_Stop 06EA           ?_swI2C_WriteByte 0075  
           ?i1_READ_EEPROM 0075                  AccWrite@i 0029                  ?_int_init 0075  
              setState@stt 0022                  ?_setState 0020                 _mtOldState 004C  
                  ___awdiv 0536           ??_swI2C_ReadByte 0020            __size_of_beepOn 0005  
                  _beepOff 073C                    beep@rep 0024          __end_of_gpio_init 0706  
                ?_sys_init 0075               __size_of_ISR 008B                    _mtState 0074  
                  _timeOut 0047                    compe@dt 0021                    main@buf 0035  
     end_of_initialization 06D9                 _lostDetect 004B              ??_delay_x10ms 0022  
               ??_int_init 0020                 ??_setState 0022                AccRead@rAdd 002A  
               _timer_init 06DB                 ??_sys_init 0020                ?_swI2C_Init 0075  
          ??i1_READ_EEPROM 0075                ?_swI2C_Stop 0075                 main@acXOld 0033  
               main@acYOld 0032           ??i1_WRITE_EEPROM 0076                 main@acXsum 003F  
               main@acYsum 003D                 main@isFall 0031         WRITE_EEPROM@EEAddr 0021  
       WRITE_EEPROM@EEData 0020                 main@isWait 002F        __end_of_delay_x10ms 06CC  
              AccWrite@dat 0023                AccWrite@len 0025             __end_of_beepOn 073C  
            ??_swI2C_Start 0020          __size_of_AccWrite 0028        start_initialization 06CC  
              __end_of_ISR 04AB              setState@_tOut 0020                  _RegStatus 0049  
            ??_READ_EEPROM 0020              ?_WRITE_EEPROM 0020                   ??_beepOn 0020  
        READ_EEPROM@EEAddr 0020        __size_of_swI2C_Init 001C        __size_of_swI2C_Stop 000E  
              ?_timer_init 0075                __pbssCOMMON 0070              __pcstackBANK0 0020  
                 ?_AccRead 0024        __end_of_swI2C_Start 06B9                _delay_x10ms 06B9  
           ??_WRITE_EEPROM 0021          __size_of_int_init 001A        __end_of_READ_EEPROM 0714  
         swI2C_WriteByte@i 0022                   ?___awdiv 0020          __size_of_setState 000C  
                __ptext860 0000                  __ptext861 05BE                  __ptext870 0536  
                __ptext862 05F9                  __ptext871 06DB                  __ptext863 04F1  
                __ptext880 0706                  __ptext872 065A                  __ptext864 057B  
                __ptext881 0420                  __ptext873 06F8                  __ptext865 06EA  
                __ptext882 0674                  __ptext874 04AB                  __ptext866 06A4  
                __ptext883 072A                  __ptext875 0714                  __ptext867 063E  
                __ptext884 0000                  __ptext876 0737                  __ptext868 0720  
                __ptext877 073C                  __ptext869 068E                  __ptext878 06B9  
                __ptext879 0621                  beep@delay 0025                   ?_beepOff 0075  
                 AccRead@i 002B         swI2C_WriteByte@dat 0021                  __pswtext1 0732  
        __size_of_sys_init 000A                  _gpio_init 06F8             __size_of_compe 0039  
                _mode_chek 0073          interrupt_function 0004        __size_of_timer_init 000F  
 __size_of_swI2C_WriteByte 0043                 AccRead@dat 0024                 AccRead@len 0026  
             delay_x10ms@t 0020                   _AccWrite 05F9                _swI2C_Start 06A4  
                main@tmp16 0042                  main@mpuOk 003C                 ?_gpio_init 0075  
             ??_swI2C_Init 0020           __size_of_AccRead 002B               ??_swI2C_Stop 0020  
              _READ_EEPROM 0706          swI2C_ReadByte@Ack 0021          swI2C_ReadByte@dat 0022  
         __size_of___awdiv 0045           __size_of_beepOff 0005         __end_of_swI2C_Init 065A  
       __end_of_swI2C_Stop 06F8       __end_of_WRITE_EEPROM 063E    __size_of_swI2C_ReadByte 0045  
    __end_ofi1_READ_EEPROM 0732              __size_of_beep 0016              __size_of_main 0415  
                 _int_init 065A                   _setState 0714                   _timeTick 0070  
                 main@isSw 0041                   main@tmp8 0044          ??_swI2C_WriteByte 0020  
             ??_timer_init 0020                   _sys_init 0720                ??_gpio_init 0020  
                 intlevel1 0000               ?_delay_x10ms 0020         __end_of_timer_init 06EA  
  __size_ofi1_WRITE_EEPROM 001A        i1READ_EEPROM@EEAddr 0075             delay_x10ms@set 0022  
