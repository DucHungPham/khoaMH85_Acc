

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Apr 10 13:50:48 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text859,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	text860,local,class=CODE,delta=2
    13                           	psect	text861,local,class=CODE,delta=2
    14                           	psect	text862,local,class=CODE,delta=2
    15                           	psect	text863,local,class=CODE,delta=2
    16                           	psect	text864,local,class=CODE,delta=2
    17                           	psect	text865,local,class=CODE,delta=2
    18                           	psect	text866,local,class=CODE,delta=2
    19                           	psect	text867,local,class=CODE,delta=2
    20                           	psect	text868,local,class=CODE,delta=2
    21                           	psect	text869,local,class=CODE,delta=2
    22                           	psect	text870,local,class=CODE,delta=2
    23                           	psect	text871,local,class=CODE,delta=2
    24                           	psect	text872,local,class=CODE,delta=2
    25                           	psect	text873,local,class=CODE,delta=2
    26                           	psect	text874,local,class=CODE,delta=2
    27                           	psect	text875,local,class=CODE,delta=2
    28                           	psect	text876,local,class=CODE,delta=2
    29                           	psect	text877,local,class=CODE,delta=2
    30                           	psect	text878,local,class=CODE,delta=2
    31                           	psect	text879,local,class=CODE,delta=2
    32                           	psect	text880,local,class=CODE,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text881,local,class=CODE,delta=2
    35                           	psect	text882,local,class=CODE,delta=2
    36                           	psect	text883,local,class=CODE,delta=2
    37                           	psect	pa_nodes,global,class=CODE,delta=2
    38                           	dabs	1,0x11E,1
    39                           	dabs	1,0x11F,1
    40                           	dabs	1,0x119,1
    41                           	dabs	1,0x11A,1
    42                           	dabs	1,0x11B,1
    43                           	dabs	1,0x10F,1
    44                           	dabs	1,0x10E,1
    45                           	dabs	1,0x116,1
    46                           	dabs	1,0x19D,1
    47                           	dabs	1,0x19E,1
    48                           	dabs	1,0x118,1
    49                           	dabs	1,0x115,1
    50                           	dabs	1,0x11E,1
    51                           	dabs	1,0x11E,1
    52                           	dabs	1,0x11F,1
    53                           	dabs	1,0x11F,1
    54                           	dabs	1,0x11E,1
    55                           	dabs	1,0x11E,1
    56                           	dabs	1,0x11E,1
    57                           	dabs	1,0x11E,1
    58                           	dabs	1,0x11E,1
    59                           	dabs	1,0x11E,1
    60                           	dabs	1,0x11F,1
    61                           	dabs	1,0x11F,1
    62                           	dabs	1,0x119,1
    63                           	dabs	1,0x119,1
    64                           	dabs	1,0x119,1
    65                           	dabs	1,0x119,1
    66                           	dabs	1,0x119,1
    67                           	dabs	1,0x119,1
    68                           	dabs	1,0x119,1
    69                           	dabs	1,0x19E,1
    70                           	dabs	1,0x118,1
    71                           	dabs	1,0x11A,1
    72                           	dabs	1,0x11A,1
    73                           	dabs	1,0x11A,1
    74                           	dabs	1,0x11A,1
    75                           	dabs	1,0x11A,1
    76                           	dabs	1,0x11A,1
    77                           	dabs	1,0x11A,1
    78                           	dabs	1,0x19E,1
    79                           	dabs	1,0x11B,1
    80                           	dabs	1,0x118,1
    81                           	dabs	1,0x18C,1
    82                           	dabs	1,0x116,1
    83                           	dabs	1,0x116,1
    84                           	dabs	1,0x116,1
    85                           	dabs	1,0x116,1
    86                           	dabs	1,0x11B,1
    87                           	dabs	1,0x11B,1
    88                           	dabs	1,0x19E,1
    89                           	dabs	1,0x19E,1
    90                           	dabs	1,0x19E,1
    91                           	dabs	1,0x19E,1
    92                           	dabs	1,0x19D,1
    93                           	dabs	1,0x19D,1
    94                           	dabs	1,0x19D,1
    95                           	dabs	1,0x19D,1
    96                           	dabs	1,0x19D,1
    97                           	dabs	1,0x11B,1
    98                           	dabs	1,0x118,1
    99                           	dabs	1,0x118,1
   100                           	dabs	1,0x118,1
   101                           	dabs	1,0x118,1
   102                           	dabs	1,0x118,1
   103                           	dabs	1,0x118,1
   104                           	dabs	1,0x115,1
   105                           	dabs	1,0x115,1
   106                           	dabs	1,0x115,1
   107                           	dabs	1,0x115,1
   108                           	dabs	1,0x18C,1
   109                           	dabs	1,0x7E,2
   110  000A                     
   111                           	psect	text859
   112  0000                     __ptext859:	
   113  011E                     _ANSEL	set	286	;_ANSEL
   114  011F                     _ANSELH	set	287	;_ANSELH
   115  0119                     _CM1CON0	set	281	;_CM1CON0
   116  011A                     _CM2CON0	set	282	;_CM2CON0
   117  011B                     _CM2CON1	set	283	;_CM2CON1
   118  010F                     _EEADRH	set	271	;_EEADRH
   119  010E                     _EEDATH	set	270	;_EEDATH
   120  0116                     _IOCB	set	278	;_IOCB
   121  019D                     _PSTRCON	set	413	;_PSTRCON
   122  019E                     _SRCON	set	414	;_SRCON
   123  0118                     _VRCON	set	280	;_VRCON
   124  0115                     _WPUB	set	277	;_WPUB
   125  08F0                     _ANS0	set	2288	;_ANS0
   126  08F1                     _ANS1	set	2289	;_ANS1
   127  08FA                     _ANS10	set	2298	;_ANS10
   128  08FB                     _ANS11	set	2299	;_ANS11
   129  08F2                     _ANS2	set	2290	;_ANS2
   130  08F3                     _ANS3	set	2291	;_ANS3
   131  08F4                     _ANS4	set	2292	;_ANS4
   132  08F5                     _ANS5	set	2293	;_ANS5
   133  08F6                     _ANS6	set	2294	;_ANS6
   134  08F7                     _ANS7	set	2295	;_ANS7
   135  08F8                     _ANS8	set	2296	;_ANS8
   136  08F9                     _ANS9	set	2297	;_ANS9
   137  08C8                     _C1CH0	set	2248	;_C1CH0
   138  08C9                     _C1CH1	set	2249	;_C1CH1
   139  08CD                     _C1OE	set	2253	;_C1OE
   140  08CF                     _C1ON	set	2255	;_C1ON
   141  08CE                     _C1OUT	set	2254	;_C1OUT
   142  08CC                     _C1POL	set	2252	;_C1POL
   143  08CA                     _C1R	set	2250	;_C1R
   144  0CF5                     _C1SEN	set	3317	;_C1SEN
   145  08C7                     _C1VREN	set	2247	;_C1VREN
   146  08D0                     _C2CH0	set	2256	;_C2CH0
   147  08D1                     _C2CH1	set	2257	;_C2CH1
   148  08D5                     _C2OE	set	2261	;_C2OE
   149  08D7                     _C2ON	set	2263	;_C2ON
   150  08D6                     _C2OUT	set	2262	;_C2OUT
   151  08D4                     _C2POL	set	2260	;_C2POL
   152  08D2                     _C2R	set	2258	;_C2R
   153  0CF4                     _C2REN	set	3316	;_C2REN
   154  08D8                     _C2SYNC	set	2264	;_C2SYNC
   155  08C6                     _C2VREN	set	2246	;_C2VREN
   156  0C67                     _EEPGD	set	3175	;_EEPGD
   157  08B4                     _IOCB4	set	2228	;_IOCB4
   158  08B5                     _IOCB5	set	2229	;_IOCB5
   159  08B6                     _IOCB6	set	2230	;_IOCB6
   160  08B7                     _IOCB7	set	2231	;_IOCB7
   161  08DF                     _MC1OUT	set	2271	;_MC1OUT
   162  08DE                     _MC2OUT	set	2270	;_MC2OUT
   163  0CF2                     _PULSR	set	3314	;_PULSR
   164  0CF3                     _PULSS	set	3315	;_PULSS
   165  0CF6                     _SR0	set	3318	;_SR0
   166  0CF7                     _SR1	set	3319	;_SR1
   167  0CE8                     _STRA	set	3304	;_STRA
   168  0CE9                     _STRB	set	3305	;_STRB
   169  0CEA                     _STRC	set	3306	;_STRC
   170  0CEB                     _STRD	set	3307	;_STRD
   171  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   172  08D9                     _T1GSS	set	2265	;_T1GSS
   173  08C4                     _VP6EN	set	2244	;_VP6EN
   174  08C0                     _VR0	set	2240	;_VR0
   175  08C1                     _VR1	set	2241	;_VR1
   176  08C2                     _VR2	set	2242	;_VR2
   177  08C3                     _VR3	set	2243	;_VR3
   178  08C5                     _VRR	set	2245	;_VRR
   179  08AC                     _WPUB4	set	2220	;_WPUB4
   180  08AD                     _WPUB5	set	2221	;_WPUB5
   181  08AE                     _WPUB6	set	2222	;_WPUB6
   182  08AF                     _WPUB7	set	2223	;_WPUB7
   183  0C62                     _WREN	set	3170	;_WREN
   184  000B                     _INTCON	set	11
   185  001B                     _MSCON	set	27
   186  000C                     _PIR1	set	12
   187  0005                     _PORTA	set	5
   188  0007                     _PORTC	set	7
   189  001F                     _T0CON0	set	31
   190  0012                     _T2CON0	set	18
   191  0001                     _TMR0	set	1
   192  0013                     _TMR2H	set	19
   193  0011                     _TMR2L	set	17
   194  0067                     _EEIF	set	103
   195  005F                     _GIE	set	95
   196  005C                     _INTE	set	92
   197  0059                     _INTF	set	89
   198  005B                     _PAIE	set	91
   199  0058                     _PAIF	set	88
   200  005E                     _PEIE	set	94
   201  002A                     _RA2	set	42
   202  002B                     _RA3	set	43
   203  002D                     _RA5	set	45
   204  002E                     _RA6	set	46
   205  002F                     _RA7	set	47
   206  0038                     _RC0	set	56
   207  0039                     _RC1	set	57
   208  005D                     _T0IE	set	93
   209  005A                     _T0IF	set	90
   210  00FB                     _T0ON	set	251
   211  0061                     _TMR2IF	set	97
   212  0092                     _TMR2ON	set	146
   213  009B                     _EEADR	set	155
   214  009C                     _EECON1	set	156
   215  009A                     _EEDAT	set	154
   216  0081                     _OPTION	set	129
   217  008F                     _OSCCON	set	143
   218  008C                     _PIE1	set	140
   219  0092                     _PR2H	set	146
   220  0091                     _PR2L	set	145
   221  0097                     _PSINKA	set	151
   222  009F                     _PSINKC	set	159
   223  0088                     _PSRCA	set	136
   224  0094                     _PSRCC	set	148
   225  0085                     _TRISA	set	133
   226  0087                     _TRISC	set	135
   227  0095                     _WPUA	set	149
   228  0093                     _WPUC	set	147
   229  047A                     _HTS	set	1146
   230  040E                     _INTEDG	set	1038
   231  04B5                     _IOCA5	set	1205
   232  04E0                     _RD	set	1248
   233  0461                     _TMR2IE	set	1121
   234  04E8                     _WR	set	1256
   235                           
   236                           	psect	cinit
   237  074F                     start_initialization:	
   238                           
   239                           ; Clear objects allocated to COMMON
   240  074F  01F0               	clrf	__pbssCOMMON& (0+127)
   241  0750  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   242  0751  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   243  0752  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   244  0753  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   245                           
   246                           ; Clear objects allocated to BANK0
   247  0754  01C6               	clrf	__pbssBANK0& (0+127)
   248  0755  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   249  0756  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   250  0757  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   251  0758  01CA               	clrf	(__pbssBANK0+4)& (0+127)
   252  0759  01CB               	clrf	(__pbssBANK0+5)& (0+127)
   253  075A  01CC               	clrf	(__pbssBANK0+6)& (0+127)
   254  075B  01CD               	clrf	(__pbssBANK0+7)& (0+127)
   255  075C                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  075C  0183               	clrf	3
   259  075D  280B               	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMMON
   262  0070                     __pbssCOMMON:	
   263  0070                     _timeTick:	
   264  0070                     	ds	2
   265  0072                     _cntCyc:	
   266  0072                     	ds	1
   267  0073                     _mode_chek:	
   268  0073                     	ds	1
   269  0074                     _mtState:	
   270  0074                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273  0046                     __pbssBANK0:	
   274  0046                     _cntTmp:	
   275  0046                     	ds	2
   276  0048                     _timeOut:	
   277  0048                     	ds	2
   278  004A                     _RegStatus:	
   279  004A                     	ds	1
   280  004B                     _cntOff:	
   281  004B                     	ds	1
   282  004C                     _lostDetect:	
   283  004C                     	ds	1
   284  004D                     _mtOldState:	
   285  004D                     	ds	1
   286                           
   287                           	psect	cstackCOMMON
   288  0075                     __pcstackCOMMON:	
   289  0075                     ?_sys_init:	
   290  0075                     ?_gpio_init:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0075                     ?_timer_init:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0075                     ?_int_init:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0075                     ?_swI2C_Init:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0075                     ?_ISR:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0075                     ?_beepOff:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0075                     ?_beepOn:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0075                     ?_main:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0075                     ?_swI2C_Start:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0075                     ?_swI2C_Stop:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0075                     ??i1_READ_EEPROM:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0075                     ?i1_WRITE_EEPROM:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0075                     ?_READ_EEPROM:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0075                     ?_swI2C_WriteByte:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0075                     ?_swI2C_ReadByte:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0075                     ?i1_READ_EEPROM:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0075                     i1READ_EEPROM@EEAddr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0075                     i1WRITE_EEPROM@EEData:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346  0075                     	ds	1
   347  0076                     ??i1_WRITE_EEPROM:	
   348  0076                     i1READ_EEPROM@ReEepromData:	
   349                           ; 0 bytes @ 0x1
   350                           
   351  0076                     i1WRITE_EEPROM@EEAddr:	
   352                           ; 1 bytes @ 0x1
   353                           
   354                           
   355                           ; 1 bytes @ 0x1
   356  0076                     	ds	1
   357  0077                     ??_ISR:	
   358                           
   359                           ; 0 bytes @ 0x2
   360  0077                     	ds	2
   361  0079                     ISR@tmp_1138:	
   362                           
   363                           ; 1 bytes @ 0x4
   364  0079                     	ds	1
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:	
   368  0020                     ??_READ_EEPROM:	
   369  0020                     ?_WRITE_EEPROM:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0020                     ??_sys_init:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0020                     ??_gpio_init:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0020                     ??_timer_init:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0020                     ??_int_init:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_swI2C_Init:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ?_delay_x10ms:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ??_beepOff:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_beepOn:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ?_setState:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_swI2C_Start:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ??_swI2C_Stop:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ??_swI2C_WriteByte:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ??_swI2C_ReadByte:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0020                     ?_compe:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0020                     ?___awdiv:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0020                     READ_EEPROM@EEAddr:	
   418                           ; 2 bytes @ 0x0
   419                           
   420  0020                     WRITE_EEPROM@EEData:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0020                     compe@b:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0020                     delay_x10ms@t:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0020                     setState@_tOut:	
   430                           ; 2 bytes @ 0x0
   431                           
   432  0020                     ___awdiv@divisor:	
   433                           ; 2 bytes @ 0x0
   434                           
   435                           
   436                           ; 2 bytes @ 0x0
   437  0020                     	ds	1
   438  0021                     ??_WRITE_EEPROM:	
   439  0021                     READ_EEPROM@ReEepromData:	
   440                           ; 0 bytes @ 0x1
   441                           
   442  0021                     WRITE_EEPROM@EEAddr:	
   443                           ; 1 bytes @ 0x1
   444                           
   445  0021                     compe@dt:	
   446                           ; 1 bytes @ 0x1
   447                           
   448  0021                     swI2C_WriteByte@dat:	
   449                           ; 1 bytes @ 0x1
   450                           
   451  0021                     swI2C_ReadByte@Ack:	
   452                           ; 1 bytes @ 0x1
   453                           
   454                           
   455                           ; 1 bytes @ 0x1
   456  0021                     	ds	1
   457  0022                     ??_delay_x10ms:	
   458  0022                     ??_setState:	
   459                           ; 0 bytes @ 0x2
   460                           
   461  0022                     ??_compe:	
   462                           ; 0 bytes @ 0x2
   463                           
   464  0022                     setState@stt:	
   465                           ; 0 bytes @ 0x2
   466                           
   467  0022                     swI2C_WriteByte@i:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0022                     swI2C_ReadByte@dat:	
   471                           ; 1 bytes @ 0x2
   472                           
   473  0022                     delay_x10ms@set:	
   474                           ; 1 bytes @ 0x2
   475                           
   476  0022                     ___awdiv@dividend:	
   477                           ; 2 bytes @ 0x2
   478                           
   479                           
   480                           ; 2 bytes @ 0x2
   481  0022                     	ds	1
   482  0023                     ?_AccWrite:	
   483  0023                     swI2C_ReadByte@i:	
   484                           ; 1 bytes @ 0x3
   485                           
   486  0023                     AccWrite@dat:	
   487                           ; 1 bytes @ 0x3
   488                           
   489                           
   490                           ; 2 bytes @ 0x3
   491  0023                     	ds	1
   492  0024                     ?_beep:	
   493  0024                     ??___awdiv:	
   494                           ; 0 bytes @ 0x4
   495                           
   496  0024                     ?_AccRead:	
   497                           ; 0 bytes @ 0x4
   498                           
   499  0024                     beep@rep:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  0024                     ___awdiv@counter:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0024                     AccRead@dat:	
   506                           ; 1 bytes @ 0x4
   507                           
   508                           
   509                           ; 2 bytes @ 0x4
   510  0024                     	ds	1
   511  0025                     ??_beep:	
   512  0025                     beep@delay:	
   513                           ; 0 bytes @ 0x5
   514                           
   515  0025                     AccWrite@len:	
   516                           ; 1 bytes @ 0x5
   517                           
   518  0025                     ___awdiv@sign:	
   519                           ; 1 bytes @ 0x5
   520                           
   521                           
   522                           ; 1 bytes @ 0x5
   523  0025                     	ds	1
   524  0026                     ??_AccWrite:	
   525  0026                     AccRead@len:	
   526                           ; 0 bytes @ 0x6
   527                           
   528  0026                     ___awdiv@quotient:	
   529                           ; 1 bytes @ 0x6
   530                           
   531                           
   532                           ; 2 bytes @ 0x6
   533  0026                     	ds	1
   534  0027                     ??_AccRead:	
   535  0027                     compe@a:	
   536                           ; 0 bytes @ 0x7
   537                           
   538                           
   539                           ; 1 bytes @ 0x7
   540  0027                     	ds	1
   541  0028                     AccWrite@rAdd:	
   542                           
   543                           ; 1 bytes @ 0x8
   544  0028                     	ds	1
   545  0029                     AccWrite@i:	
   546                           
   547                           ; 1 bytes @ 0x9
   548  0029                     	ds	1
   549  002A                     AccRead@rAdd:	
   550                           
   551                           ; 1 bytes @ 0xA
   552  002A                     	ds	1
   553  002B                     AccRead@i:	
   554                           
   555                           ; 1 bytes @ 0xB
   556  002B                     	ds	1
   557  002C                     ??_main:	
   558                           
   559                           ; 0 bytes @ 0xC
   560  002C                     	ds	3
   561  002F                     main@isWait:	
   562                           
   563                           ; 2 bytes @ 0xF
   564  002F                     	ds	2
   565  0031                     main@isFall:	
   566                           
   567                           ; 1 bytes @ 0x11
   568  0031                     	ds	1
   569  0032                     main@vibrateOn:	
   570                           
   571                           ; 1 bytes @ 0x12
   572  0032                     	ds	1
   573  0033                     main@antenSkip:	
   574                           
   575                           ; 1 bytes @ 0x13
   576  0033                     	ds	1
   577  0034                     main@acYOld:	
   578                           
   579                           ; 1 bytes @ 0x14
   580  0034                     	ds	1
   581  0035                     main@acXOld:	
   582                           
   583                           ; 1 bytes @ 0x15
   584  0035                     	ds	1
   585  0036                     main@accEna:	
   586                           
   587                           ; 1 bytes @ 0x16
   588  0036                     	ds	1
   589  0037                     main@acYsum:	
   590                           
   591                           ; 2 bytes @ 0x17
   592  0037                     	ds	2
   593  0039                     main@acXsum:	
   594                           
   595                           ; 2 bytes @ 0x19
   596  0039                     	ds	2
   597  003B                     main@buf:	
   598                           
   599                           ; 6 bytes @ 0x1B
   600  003B                     	ds	6
   601  0041                     main@reAlertOn:	
   602                           
   603                           ; 1 bytes @ 0x21
   604  0041                     	ds	1
   605  0042                     main@isSw:	
   606                           
   607                           ; 1 bytes @ 0x22
   608  0042                     	ds	1
   609  0043                     main@tmp16:	
   610                           
   611                           ; 2 bytes @ 0x23
   612  0043                     	ds	2
   613  0045                     main@tmp8:	
   614                           
   615                           ; 1 bytes @ 0x25
   616  0045                     	ds	1
   617                           
   618                           	psect	maintext
   619  000B                     __pmaintext:	
   620 ;;Data sizes: Strings 0, constant 0, data 0, bss 13, persistent 0 stack 0
   621 ;;Auto spaces:   Size  Autos    Used
   622 ;; COMMON          14      5      10
   623 ;; BANK0           80     38      46
   624 ;; BANK1           32      0       0
   625 ;;
   626 ;; Pointer list with targets:
   627 ;; ?___awdiv	int  size(1) Largest target is 0
   628 ;;
   629 ;; AccRead@dat	PTR unsigned char  size(2) Largest target is 256
   630 ;;		 -> RAM(DATA[256]), main@buf(BANK0[6]), 
   631 ;;
   632 ;; AccWrite@dat	PTR unsigned char  size(2) Largest target is 256
   633 ;;		 -> RAM(DATA[256]), 
   634 ;;
   635 ;;
   636 ;; Critical Paths under _main in COMMON
   637 ;;
   638 ;;   None.
   639 ;;
   640 ;; Critical Paths under _ISR in COMMON
   641 ;;
   642 ;;   _ISR->i1_READ_EEPROM
   643 ;;   _ISR->i1_WRITE_EEPROM
   644 ;;
   645 ;; Critical Paths under _main in BANK0
   646 ;;
   647 ;;   _main->_AccRead
   648 ;;   _AccRead->_swI2C_ReadByte
   649 ;;   _AccWrite->_swI2C_WriteByte
   650 ;;   _beep->_delay_x10ms
   651 ;;
   652 ;; Critical Paths under _ISR in BANK0
   653 ;;
   654 ;;   None.
   655 ;;
   656 ;; Critical Paths under _main in BANK1
   657 ;;
   658 ;;   None.
   659 ;;
   660 ;; Critical Paths under _ISR in BANK1
   661 ;;
   662 ;;   None.
   663 ;;
   664 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   665 ;;
   666 ;;
   667 ;;Call Graph Tables:
   668 ;;
   669 ;; ---------------------------------------------------------------------------------
   670 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   671 ;; ---------------------------------------------------------------------------------
   672 ;; (0) _main                                                27    27      0    4339
   673 ;;                                             12 BANK0     26    26      0
   674 ;;                           _sys_init
   675 ;;                          _gpio_init
   676 ;;                         _timer_init
   677 ;;                           _int_init
   678 ;;                         _swI2C_Init
   679 ;;                           _setState
   680 ;;                       _WRITE_EEPROM
   681 ;;                        _READ_EEPROM
   682 ;;                             _beepOn
   683 ;;                               _beep
   684 ;;                           _AccWrite
   685 ;;                            _AccRead
   686 ;;                            ___awdiv
   687 ;;                            _beepOff
   688 ;;                        _delay_x10ms
   689 ;;                              _compe
   690 ;; ---------------------------------------------------------------------------------
   691 ;; (1) _AccRead                                              8     5      3     532
   692 ;;                                              4 BANK0      8     5      3
   693 ;;                        _swI2C_Start
   694 ;;                    _swI2C_WriteByte
   695 ;;                     _swI2C_ReadByte
   696 ;;                         _swI2C_Stop
   697 ;; ---------------------------------------------------------------------------------
   698 ;; (1) _AccWrite                                             7     4      3     300
   699 ;;                                              3 BANK0      7     4      3
   700 ;;                        _swI2C_Start
   701 ;;                    _swI2C_WriteByte
   702 ;;                         _swI2C_Stop
   703 ;; ---------------------------------------------------------------------------------
   704 ;; (2) _swI2C_ReadByte                                       4     4      0     170
   705 ;;                                              0 BANK0      4     4      0
   706 ;; ---------------------------------------------------------------------------------
   707 ;; (2) _swI2C_WriteByte                                      3     3      0     139
   708 ;;                                              0 BANK0      3     3      0
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (2) _swI2C_Stop                                           1     1      0       0
   711 ;;                                              0 BANK0      1     1      0
   712 ;; ---------------------------------------------------------------------------------
   713 ;; (2) _swI2C_Start                                          1     1      0       0
   714 ;;                                              0 BANK0      1     1      0
   715 ;; ---------------------------------------------------------------------------------
   716 ;; (1) _swI2C_Init                                           1     1      0       0
   717 ;;                                              0 BANK0      1     1      0
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (1) _sys_init                                             0     0      0       0
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (1) _beep                                                 2     1      1     130
   722 ;;                                              4 BANK0      2     1      1
   723 ;;                        _delay_x10ms
   724 ;; ---------------------------------------------------------------------------------
   725 ;; (1) ___awdiv                                              8     4      4     445
   726 ;;                                              0 BANK0      8     4      4
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (1) _int_init                                             1     1      0       0
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (1) _timer_init                                           0     0      0       0
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (1) _gpio_init                                            0     0      0       0
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (1) _compe                                                8     6      2     372
   735 ;;                                              0 BANK0      8     6      2
   736 ;; ---------------------------------------------------------------------------------
   737 ;; (1) _setState                                             3     1      2      62
   738 ;;                                              0 BANK0      3     1      2
   739 ;; ---------------------------------------------------------------------------------
   740 ;; (1) _beepOn                                               0     0      0       0
   741 ;; ---------------------------------------------------------------------------------
   742 ;; (1) _beepOff                                              0     0      0       0
   743 ;; ---------------------------------------------------------------------------------
   744 ;; (1) _delay_x10ms                                          4     2      2      68
   745 ;;                                              0 BANK0      4     2      2
   746 ;; ---------------------------------------------------------------------------------
   747 ;; (1) _WRITE_EEPROM                                         2     1      1      62
   748 ;;                                              0 BANK0      2     1      1
   749 ;; ---------------------------------------------------------------------------------
   750 ;; (1) _READ_EEPROM                                          2     2      0      65
   751 ;;                                              0 BANK0      2     2      0
   752 ;; ---------------------------------------------------------------------------------
   753 ;; Estimated maximum stack depth 2
   754 ;; ---------------------------------------------------------------------------------
   755 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (3) _ISR                                                  4     4      0     317
   758 ;;                                              2 COMMON     3     3      0
   759 ;;                      i1_READ_EEPROM
   760 ;;                     i1_WRITE_EEPROM
   761 ;; ---------------------------------------------------------------------------------
   762 ;; (4) i1_WRITE_EEPROM                                       2     1      1     146
   763 ;;                                              0 COMMON     2     1      1
   764 ;; ---------------------------------------------------------------------------------
   765 ;; (4) i1_READ_EEPROM                                        2     2      0     148
   766 ;;                                              0 COMMON     2     2      0
   767 ;; ---------------------------------------------------------------------------------
   768 ;; Estimated maximum stack depth 4
   769 ;; ---------------------------------------------------------------------------------
   770 ;; Call Graph Graphs:
   771 ;; _main (ROOT)
   772 ;;   _sys_init
   773 ;;   _gpio_init
   774 ;;   _timer_init
   775 ;;   _int_init
   776 ;;   _swI2C_Init
   777 ;;   _setState
   778 ;;   _WRITE_EEPROM
   779 ;;   _READ_EEPROM
   780 ;;   _beepOn
   781 ;;   _beep
   782 ;;     _delay_x10ms
   783 ;;   _AccWrite
   784 ;;     _swI2C_Start
   785 ;;     _swI2C_WriteByte
   786 ;;     _swI2C_Stop
   787 ;;   _AccRead
   788 ;;     _swI2C_Start
   789 ;;     _swI2C_WriteByte
   790 ;;     _swI2C_ReadByte
   791 ;;     _swI2C_Stop
   792 ;;   ___awdiv
   793 ;;   _beepOff
   794 ;;   _delay_x10ms
   795 ;;   _compe
   796 ;;
   797 ;; _ISR (ROOT)
   798 ;;   i1_READ_EEPROM
   799 ;;   i1_WRITE_EEPROM
   800 ;;
   801 ;; Address spaces:
   802 ;;Name               Size   Autos  Total    Cost      Usage
   803 ;;BITCOMMON            E      0       0       0        0.0%
   804 ;;EEDATA             100      0       0       0        0.0%
   805 ;;NULL                 0      0       0       0        0.0%
   806 ;;CODE                 0      0       0       0        0.0%
   807 ;;COMMON               E      5       A       1       71.4%
   808 ;;BITSFR0              0      0       0       1        0.0%
   809 ;;SFR0                 0      0       0       1        0.0%
   810 ;;BITSFR1              0      0       0       2        0.0%
   811 ;;SFR1                 0      0       0       2        0.0%
   812 ;;STACK                0      0       6       2        0.0%
   813 ;;BITBANK0            50      0       0       3        0.0%
   814 ;;BANK0               50     26      2E       4       57.5%
   815 ;;BANK1               20      0       0       5        0.0%
   816 ;;ABS                  0      0      38       6        0.0%
   817 ;;BITBANK1            20      0       0       7        0.0%
   818 ;;DATA                 0      0      3E       8        0.0%
   819                           
   820                           
   821 ;; *************** function _main *****************
   822 ;; Defined at:
   823 ;;		line 224 in file "smartkey.C"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  buf             6   27[BANK0 ] char [6]
   828 ;;  tmp16           2   35[BANK0 ] unsigned int 
   829 ;;  acXsum          2   25[BANK0 ] int 
   830 ;;  acYsum          2   23[BANK0 ] int 
   831 ;;  isWait          2   15[BANK0 ] unsigned int 
   832 ;;  tmp8            1   37[BANK0 ] unsigned char 
   833 ;;  isSw            1   34[BANK0 ] unsigned char 
   834 ;;  reAlertOn       1   33[BANK0 ] unsigned char 
   835 ;;  accEna          1   22[BANK0 ] unsigned char 
   836 ;;  acXOld          1   21[BANK0 ] char 
   837 ;;  acYOld          1   20[BANK0 ] char 
   838 ;;  antenSkip       1   19[BANK0 ] unsigned char 
   839 ;;  vibrateOn       1   18[BANK0 ] unsigned char 
   840 ;;  isFall          1   17[BANK0 ] unsigned char 
   841 ;;  accSet          1    0        unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;		None               void
   844 ;; Registers used:
   845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 17F/0
   848 ;;		On exit  : 20/20
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1
   851 ;;      Params:         0       0       0
   852 ;;      Locals:         0      23       0
   853 ;;      Temps:          0       3       0
   854 ;;      Totals:         0      26       0
   855 ;;Total ram usage:       26 bytes
   856 ;; Hardware stack levels required when called:    4
   857 ;; This function calls:
   858 ;;		_sys_init
   859 ;;		_gpio_init
   860 ;;		_timer_init
   861 ;;		_int_init
   862 ;;		_swI2C_Init
   863 ;;		_setState
   864 ;;		_WRITE_EEPROM
   865 ;;		_READ_EEPROM
   866 ;;		_beepOn
   867 ;;		_beep
   868 ;;		_AccWrite
   869 ;;		_AccRead
   870 ;;		___awdiv
   871 ;;		_beepOff
   872 ;;		_delay_x10ms
   873 ;;		_compe
   874 ;; This function is called by:
   875 ;;		Startup code after reset
   876 ;; This function uses a non-reentrant model
   877 ;;
   878  000B                     _main:	
   879                           
   880                           ;smartkey.C: 232: unsigned char reAlertOn=0,tmp8,isSw=0,isFall=0,accEna=1,vibrateOn=0,ac
      +                          cSet=0,antenSkip=0;
   881                           
   882                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   883  000B  01C1               	clrf	main@reAlertOn
   884  000C  01C2               	clrf	main@isSw
   885  000D  01B1               	clrf	main@isFall
   886  000E  01B6               	clrf	main@accEna
   887  000F  0AB6               	incf	main@accEna,f
   888  0010  01B2               	clrf	main@vibrateOn
   889  0011  01B3               	clrf	main@antenSkip
   890                           
   891                           ;smartkey.C: 233: unsigned int isWait =0;
   892  0012  01AF               	clrf	main@isWait
   893  0013  01B0               	clrf	main@isWait+1
   894                           
   895                           ;smartkey.C: 234: signed int acYsum=0,acXsum=0;
   896  0014  01B7               	clrf	main@acYsum
   897  0015  01B8               	clrf	main@acYsum+1
   898  0016  01B9               	clrf	main@acXsum
   899  0017  01BA               	clrf	main@acXsum+1
   900                           
   901                           ;smartkey.C: 235: unsigned int tmp16=0;
   902  0018  01C3               	clrf	main@tmp16
   903  0019  01C4               	clrf	main@tmp16+1
   904  001A  0064               	clrwdt	;#
   905                           
   906                           ;smartkey.C: 241: sys_init();
   907  001B  2784               	fcall	_sys_init
   908                           
   909                           ;smartkey.C: 242: gpio_init();
   910  001C  2703               	fcall	_gpio_init
   911                           
   912                           ;smartkey.C: 243: timer_init();
   913  001D  273F               	fcall	_timer_init
   914                           
   915                           ;smartkey.C: 244: int_init();
   916  001E  269F               	fcall	_int_init
   917                           
   918                           ;smartkey.C: 247: _delay((unsigned long)((100)*(4000000/4000.0)));
   919  001F  3082               	movlw	130
   920  0020  00AD               	movwf	??_main+1
   921  0021  30DD               	movlw	221
   922  0022  00AC               	movwf	??_main
   923  0023                     u3837:	
   924  0023  0BAC               	decfsz	??_main,f
   925  0024  2823               	goto	u3837
   926  0025  0BAD               	decfsz	??_main+1,f
   927  0026  2823               	goto	u3837
   928  0027  2828               	nop2
   929                           
   930                           ;smartkey.C: 251: PAIE = 1;
   931  0028  158B               	bsf	11,3
   932                           
   933                           ;smartkey.C: 253: RegStatus = 0;
   934  0029  1283               	bcf	3,5	;RP0=0, select bank0
   935  002A  01CA               	clrf	_RegStatus
   936                           
   937                           ;smartkey.C: 255: swI2C_Init();
   938  002B  2680               	fcall	_swI2C_Init
   939  002C  3000               	movlw	0
   940                           
   941                           ;smartkey.C: 258: setState(0,0);
   942  002D  1283               	bcf	3,5	;RP0=0, select bank0
   943  002E  01A0               	clrf	?_setState
   944  002F  01A1               	clrf	?_setState+1
   945  0030  2778               	fcall	_setState
   946                           
   947                           ;smartkey.C: 260: WRITE_EEPROM(0xFF,0xAA);
   948  0031  30AA               	movlw	170
   949  0032  00A0               	movwf	?_WRITE_EEPROM
   950  0033  30FF               	movlw	255
   951  0034  26BA               	fcall	_WRITE_EEPROM
   952                           
   953                           ;smartkey.C: 261: WRITE_EEPROM(0xFF,0xAA);
   954  0035  30AA               	movlw	170
   955  0036  1283               	bcf	3,5	;RP0=0, select bank0
   956  0037  00A0               	movwf	?_WRITE_EEPROM
   957  0038  30FF               	movlw	255
   958  0039  26BA               	fcall	_WRITE_EEPROM
   959                           
   960                           ;smartkey.C: 264: _delay((unsigned long)((200)*(4000000/4000.0)));
   961  003A  3002               	movlw	2
   962  003B  1283               	bcf	3,5	;RP0=0, select bank0
   963  003C  00AE               	movwf	??_main+2
   964  003D  3004               	movlw	4
   965  003E  00AD               	movwf	??_main+1
   966  003F  30BA               	movlw	186
   967  0040  00AC               	movwf	??_main
   968  0041                     u3847:	
   969  0041  0BAC               	decfsz	??_main,f
   970  0042  2841               	goto	u3847
   971  0043  0BAD               	decfsz	??_main+1,f
   972  0044  2841               	goto	u3847
   973  0045  0BAE               	decfsz	??_main+2,f
   974  0046  2841               	goto	u3847
   975  0047  0064               	clrwdt
   976                           
   977                           ;smartkey.C: 267: tmp8 = READ_EEPROM(0x08);
   978  0048  3008               	movlw	8
   979  0049  276B               	fcall	_READ_EEPROM
   980  004A  00C5               	movwf	main@tmp8
   981                           
   982                           ;smartkey.C: 268: if(tmp8==0xff) {WRITE_EEPROM(0x08,0);_delay((unsigned long)((2)*(40000
      +                          00/4000.0)));}
   983  004B  3AFF               	xorlw	255
   984  004C  1D03               	skipz
   985  004D  285B               	goto	l6880
   986  004E  3008               	movlw	8
   987  004F  01A0               	clrf	?_WRITE_EEPROM
   988  0050  26BA               	fcall	_WRITE_EEPROM
   989  0051  3003               	movlw	3
   990  0052  1283               	bcf	3,5	;RP0=0, select bank0
   991  0053  00AD               	movwf	??_main+1
   992  0054  3097               	movlw	151
   993  0055  00AC               	movwf	??_main
   994  0056                     u3857:	
   995  0056  0BAC               	decfsz	??_main,f
   996  0057  2856               	goto	u3857
   997  0058  0BAD               	decfsz	??_main+1,f
   998  0059  2856               	goto	u3857
   999  005A  285B               	nop2
  1000  005B                     l6880:	
  1001                           
  1002                           ;smartkey.C: 269: if(tmp8==0xcc){
  1003  005B  1283               	bcf	3,5	;RP0=0, select bank0
  1004  005C  0845               	movf	main@tmp8,w
  1005  005D  3ACC               	xorlw	204
  1006  005E  1D03               	skipz
  1007  005F  2876               	goto	l6894
  1008  0060  3008               	movlw	8
  1009                           
  1010                           ;smartkey.C: 270: RegStatus &=~(0x20);
  1011  0061  12CA               	bcf	_RegStatus,5
  1012                           
  1013                           ;smartkey.C: 271: setState(3,1800);
  1014  0062  00A0               	movwf	?_setState
  1015  0063  3007               	movlw	7
  1016  0064  00A1               	movwf	?_setState+1
  1017  0065  3003               	movlw	3
  1018  0066  2778               	fcall	_setState
  1019                           
  1020                           ;smartkey.C: 272: mtOldState = 1;
  1021  0067  01CD               	clrf	_mtOldState
  1022  0068  0ACD               	incf	_mtOldState,f
  1023                           
  1024                           ;smartkey.C: 273: cntTmp = timeTick+50;
  1025  0069  0871               	movf	_timeTick+1,w
  1026  006A  00C7               	movwf	_cntTmp+1
  1027  006B  0870               	movf	_timeTick,w
  1028  006C  00C6               	movwf	_cntTmp
  1029  006D  3032               	movlw	50
  1030  006E  07C6               	addwf	_cntTmp,f
  1031  006F  1803               	skipnc
  1032  0070  0AC7               	incf	_cntTmp+1,f
  1033                           
  1034                           ;smartkey.C: 274: PR2L =12;
  1035  0071  300C               	movlw	12
  1036  0072  1683               	bsf	3,5	;RP0=1, select bank1
  1037  0073  0091               	movwf	17	;volatile
  1038                           
  1039                           ;smartkey.C: 275: beepOn();
  1040  0074  2799               	fcall	_beepOn
  1041                           
  1042                           ;smartkey.C: 276: } else {
  1043  0075  287D               	goto	l6898
  1044  0076                     l6894:	
  1045                           
  1046                           ;smartkey.C: 277: setState(2,400);
  1047  0076  3090               	movlw	144
  1048  0077  00A0               	movwf	?_setState
  1049  0078  3001               	movlw	1
  1050  0079  00A1               	movwf	?_setState+1
  1051  007A  3002               	movlw	2
  1052  007B  2778               	fcall	_setState
  1053                           
  1054                           ;smartkey.C: 278: mtOldState = 0;
  1055  007C  01CD               	clrf	_mtOldState
  1056  007D                     l6898:	
  1057                           
  1058                           ;smartkey.C: 279: }
  1059                           ;smartkey.C: 281: tmp8 = READ_EEPROM(0x3F);
  1060  007D  303F               	movlw	63
  1061  007E  276B               	fcall	_READ_EEPROM
  1062  007F  00C5               	movwf	main@tmp8
  1063                           
  1064                           ;smartkey.C: 282: if(tmp8==6){
  1065  0080  3A06               	xorlw	6
  1066                           
  1067                           ;smartkey.C: 283: tmp8 = READ_EEPROM(0x40);
  1068  0081  3040               	movlw	64
  1069  0082  1D03               	skipz
  1070  0083  28B5               	goto	L6
  1071  0084  276B               	fcall	_READ_EEPROM
  1072  0085  00C5               	movwf	main@tmp8
  1073  0086  303F               	movlw	63
  1074                           
  1075                           ;smartkey.C: 284: WRITE_EEPROM(0x3F,0);
  1076  0087  01A0               	clrf	?_WRITE_EEPROM
  1077  0088  26BA               	fcall	_WRITE_EEPROM
  1078  0089                     l6914:	
  1079                           ;smartkey.C: 285: while( RA2){
  1080                           
  1081  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1082  008A  1D05               	btfss	5,2
  1083  008B  28A7               	goto	l6916
  1084                           
  1085                           ;smartkey.C: 286: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1086  008C  3006               	movlw	6
  1087  008D  00AE               	movwf	??_main+2
  1088  008E  3013               	movlw	19
  1089  008F  00AD               	movwf	??_main+1
  1090  0090  30B1               	movlw	177
  1091  0091  00AC               	movwf	??_main
  1092  0092                     u3867:	
  1093  0092  0BAC               	decfsz	??_main,f
  1094  0093  2892               	goto	u3867
  1095  0094  0BAD               	decfsz	??_main+1,f
  1096  0095  2892               	goto	u3867
  1097  0096  0BAE               	decfsz	??_main+2,f
  1098  0097  2892               	goto	u3867
  1099  0098  2899               	nop2
  1100                           
  1101                           ;smartkey.C: 287: tmp8++;
  1102  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1103  009A  0AC5               	incf	main@tmp8,f
  1104                           
  1105                           ;smartkey.C: 288: if( RA2){
  1106  009B  1D05               	btfss	5,2
  1107  009C  2889               	goto	l6914
  1108                           
  1109                           ;smartkey.C: 289: WRITE_EEPROM(0x40,tmp8);
  1110  009D  0845               	movf	main@tmp8,w
  1111  009E  00A0               	movwf	?_WRITE_EEPROM
  1112  009F  3040               	movlw	64
  1113  00A0  26BA               	fcall	_WRITE_EEPROM
  1114  00A1  300A               	movlw	10
  1115                           
  1116                           ;smartkey.C: 290: beep(10,1);
  1117  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1118  00A3  01A4               	clrf	?_beep
  1119  00A4  0AA4               	incf	?_beep,f
  1120  00A5  26ED               	fcall	_beep
  1121  00A6  2889               	goto	l6914
  1122  00A7                     l6916:	
  1123                           
  1124                           ;smartkey.C: 291: }
  1125                           ;smartkey.C: 292: }
  1126                           ;smartkey.C: 293: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1127  00A7  3006               	movlw	6
  1128  00A8  00AE               	movwf	??_main+2
  1129  00A9  3013               	movlw	19
  1130  00AA  00AD               	movwf	??_main+1
  1131  00AB  30B1               	movlw	177
  1132  00AC  00AC               	movwf	??_main
  1133  00AD                     u3877:	
  1134  00AD  0BAC               	decfsz	??_main,f
  1135  00AE  28AD               	goto	u3877
  1136  00AF  0BAD               	decfsz	??_main+1,f
  1137  00B0  28AD               	goto	u3877
  1138  00B1  0BAE               	decfsz	??_main+2,f
  1139  00B2  28AD               	goto	u3877
  1140  00B3  28B4               	nop2
  1141                           
  1142                           ;smartkey.C: 294: }
  1143                           ;smartkey.C: 296: tmp8 = READ_EEPROM(0x40);
  1144  00B4  3040               	movlw	64
  1145  00B5                     L6:	
  1146  00B5  276B               	fcall	_READ_EEPROM
  1147  00B6  00C5               	movwf	main@tmp8
  1148                           
  1149                           ;smartkey.C: 298: if(tmp8==8){
  1150  00B7  3A08               	xorlw	8
  1151  00B8  1D03               	skipz
  1152  00B9  28DE               	goto	l6938
  1153                           
  1154                           ;smartkey.C: 299: tmp8= READ_EEPROM(0x41);
  1155  00BA  3041               	movlw	65
  1156  00BB  276B               	fcall	_READ_EEPROM
  1157  00BC  00C5               	movwf	main@tmp8
  1158  00BD  3032               	movlw	50
  1159                           
  1160                           ;smartkey.C: 300: beep(50,1);
  1161  00BE  01A4               	clrf	?_beep
  1162  00BF  0AA4               	incf	?_beep,f
  1163  00C0  26ED               	fcall	_beep
  1164                           
  1165                           ;smartkey.C: 301: if((tmp8==1)||(tmp8==0xff))
  1166  00C1  0345               	decf	main@tmp8,w
  1167  00C2  1903               	skipnz
  1168  00C3  28C8               	goto	l6930
  1169  00C4  0845               	movf	main@tmp8,w
  1170  00C5  3AFF               	xorlw	255
  1171  00C6  1D03               	skipz
  1172  00C7  28CB               	goto	l6932
  1173  00C8                     l6930:	
  1174  00C8  3041               	movlw	65
  1175                           
  1176                           ;smartkey.C: 302: WRITE_EEPROM(0x41,0);
  1177  00C9  01A0               	clrf	?_WRITE_EEPROM
  1178  00CA  28CE               	goto	L1
  1179  00CB                     l6932:	
  1180  00CB  3041               	movlw	65
  1181                           
  1182                           ;smartkey.C: 303: else
  1183                           ;smartkey.C: 304: WRITE_EEPROM(0x41,0x1);
  1184  00CC  01A0               	clrf	?_WRITE_EEPROM
  1185  00CD  0AA0               	incf	?_WRITE_EEPROM,f
  1186  00CE                     L1:	
  1187  00CE  26BA               	fcall	_WRITE_EEPROM
  1188  00CF  3040               	movlw	64
  1189                           
  1190                           ;smartkey.C: 305: WRITE_EEPROM(0x40,0);
  1191  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1192  00D1  01A0               	clrf	?_WRITE_EEPROM
  1193  00D2  26BA               	fcall	_WRITE_EEPROM
  1194                           
  1195                           ;smartkey.C: 307: _delay((unsigned long)((100)*(4000000/4000.0)));
  1196  00D3  3082               	movlw	130
  1197  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1198  00D5  00AD               	movwf	??_main+1
  1199  00D6  30DD               	movlw	221
  1200  00D7  00AC               	movwf	??_main
  1201  00D8                     u3887:	
  1202  00D8  0BAC               	decfsz	??_main,f
  1203  00D9  28D8               	goto	u3887
  1204  00DA  0BAD               	decfsz	??_main+1,f
  1205  00DB  28D8               	goto	u3887
  1206  00DC  28DD               	nop2
  1207                           
  1208                           ;smartkey.C: 308: } else if(tmp8==0xff) WRITE_EEPROM(0x40,0);
  1209  00DD  28E5               	goto	l6942
  1210  00DE                     l6938:	
  1211  00DE  0845               	movf	main@tmp8,w
  1212  00DF  3AFF               	xorlw	255
  1213  00E0  1D03               	skipz
  1214  00E1  28E5               	goto	l6942
  1215  00E2  3040               	movlw	64
  1216  00E3  01A0               	clrf	?_WRITE_EEPROM
  1217  00E4  26BA               	fcall	_WRITE_EEPROM
  1218  00E5                     l6942:	
  1219                           
  1220                           ;smartkey.C: 311: tmp8 = READ_EEPROM(0x41);
  1221  00E5  3041               	movlw	65
  1222  00E6  276B               	fcall	_READ_EEPROM
  1223  00E7  00C5               	movwf	main@tmp8
  1224                           
  1225                           ;smartkey.C: 312: if(tmp8==1){
  1226  00E8  0B45               	decfsz	main@tmp8,w
  1227  00E9  28F6               	goto	l6956
  1228  00EA  30AC               	movlw	172
  1229                           
  1230                           ;smartkey.C: 313: RegStatus |=(0x20);
  1231  00EB  16CA               	bsf	_RegStatus,5
  1232                           
  1233                           ;smartkey.C: 314: setState(1,3500);
  1234  00EC  00A0               	movwf	?_setState
  1235  00ED  300D               	movlw	13
  1236  00EE  00A1               	movwf	?_setState+1
  1237  00EF  3001               	movlw	1
  1238  00F0  2778               	fcall	_setState
  1239                           
  1240                           ;smartkey.C: 315: mtOldState = 2;
  1241  00F1  3002               	movlw	2
  1242  00F2  00CD               	movwf	_mtOldState
  1243                           
  1244                           ;smartkey.C: 317: accEna =0;antenSkip =1;
  1245  00F3  01B6               	clrf	main@accEna
  1246  00F4  01B3               	clrf	main@antenSkip
  1247  00F5  0AB3               	incf	main@antenSkip,f
  1248  00F6                     l6956:	
  1249                           
  1250                           ;smartkey.C: 319: }
  1251                           ;smartkey.C: 322: tmp8 = READ_EEPROM(0x40);
  1252  00F6  3040               	movlw	64
  1253  00F7  276B               	fcall	_READ_EEPROM
  1254  00F8  00C5               	movwf	main@tmp8
  1255                           
  1256                           ;smartkey.C: 324: if(tmp8==5){
  1257  00F9  3A05               	xorlw	5
  1258                           
  1259                           ;smartkey.C: 325: tmp8= READ_EEPROM(0x42);
  1260  00FA  3042               	movlw	66
  1261  00FB  1D03               	skipz
  1262  00FC  2925               	goto	L7
  1263  00FD  276B               	fcall	_READ_EEPROM
  1264  00FE  00C5               	movwf	main@tmp8
  1265  00FF  300A               	movlw	10
  1266                           
  1267                           ;smartkey.C: 326: beep(10,1);
  1268  0100  01A4               	clrf	?_beep
  1269  0101  0AA4               	incf	?_beep,f
  1270  0102  26ED               	fcall	_beep
  1271                           
  1272                           ;smartkey.C: 327: if((tmp8==1)||(tmp8==0xff)){
  1273  0103  0345               	decf	main@tmp8,w
  1274  0104  1903               	skipnz
  1275  0105  290A               	goto	l6968
  1276  0106  0845               	movf	main@tmp8,w
  1277  0107  3AFF               	xorlw	255
  1278  0108  1D03               	skipz
  1279  0109  2910               	goto	l6972
  1280  010A                     l6968:	
  1281  010A  3042               	movlw	66
  1282                           
  1283                           ;smartkey.C: 328: WRITE_EEPROM(0x42,0);
  1284  010B  01A0               	clrf	?_WRITE_EEPROM
  1285  010C  26BA               	fcall	_WRITE_EEPROM
  1286                           
  1287                           ;smartkey.C: 329: antenSkip =0;
  1288  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1289  010E  01B3               	clrf	main@antenSkip
  1290                           
  1291                           ;smartkey.C: 330: }
  1292  010F  2917               	goto	l918
  1293  0110                     l6972:	
  1294  0110  3042               	movlw	66
  1295                           
  1296                           ;smartkey.C: 331: else{
  1297                           ;smartkey.C: 332: WRITE_EEPROM(0x42,0x1);
  1298  0111  01A0               	clrf	?_WRITE_EEPROM
  1299  0112  0AA0               	incf	?_WRITE_EEPROM,f
  1300  0113  26BA               	fcall	_WRITE_EEPROM
  1301                           
  1302                           ;smartkey.C: 333: antenSkip =1;
  1303  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0115  01B3               	clrf	main@antenSkip
  1305  0116  0AB3               	incf	main@antenSkip,f
  1306  0117                     l918:	
  1307  0117  3040               	movlw	64
  1308                           
  1309                           ;smartkey.C: 334: }
  1310                           ;smartkey.C: 335: WRITE_EEPROM(0x40,0);
  1311  0118  01A0               	clrf	?_WRITE_EEPROM
  1312  0119  26BA               	fcall	_WRITE_EEPROM
  1313                           
  1314                           ;smartkey.C: 337: _delay((unsigned long)((100)*(4000000/4000.0)));
  1315  011A  3082               	movlw	130
  1316  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1317  011C  00AD               	movwf	??_main+1
  1318  011D  30DD               	movlw	221
  1319  011E  00AC               	movwf	??_main
  1320  011F                     u3897:	
  1321  011F  0BAC               	decfsz	??_main,f
  1322  0120  291F               	goto	u3897
  1323  0121  0BAD               	decfsz	??_main+1,f
  1324  0122  291F               	goto	u3897
  1325  0123  2924               	nop2
  1326                           
  1327                           ;smartkey.C: 338: }
  1328                           ;smartkey.C: 341: tmp8 = READ_EEPROM(0x42);
  1329  0124  3042               	movlw	66
  1330  0125                     L7:	
  1331  0125  276B               	fcall	_READ_EEPROM
  1332  0126  00C5               	movwf	main@tmp8
  1333                           
  1334                           ;smartkey.C: 342: if(tmp8==1){
  1335  0127  0B45               	decfsz	main@tmp8,w
  1336  0128  2940               	goto	l919
  1337  0129  30AC               	movlw	172
  1338                           
  1339                           ;smartkey.C: 343: antenSkip =1;
  1340  012A  01B3               	clrf	main@antenSkip
  1341  012B  0AB3               	incf	main@antenSkip,f
  1342                           
  1343                           ;smartkey.C: 344: RegStatus |=(0x20);
  1344  012C  16CA               	bsf	_RegStatus,5
  1345                           
  1346                           ;smartkey.C: 345: setState(1,3500);
  1347  012D  00A0               	movwf	?_setState
  1348  012E  300D               	movlw	13
  1349  012F  00A1               	movwf	?_setState+1
  1350  0130  3001               	movlw	1
  1351  0131  2778               	fcall	_setState
  1352                           
  1353                           ;smartkey.C: 346: mtOldState = 2;
  1354  0132  3002               	movlw	2
  1355  0133  00CD               	movwf	_mtOldState
  1356                           
  1357                           ;smartkey.C: 347: tmp16 = timeTick+40;
  1358  0134  0871               	movf	_timeTick+1,w
  1359  0135  00C4               	movwf	main@tmp16+1
  1360  0136  0870               	movf	_timeTick,w
  1361  0137  00C3               	movwf	main@tmp16
  1362  0138  3028               	movlw	40
  1363  0139  07C3               	addwf	main@tmp16,f
  1364  013A  1803               	skipnc
  1365  013B  0AC4               	incf	main@tmp16+1,f
  1366  013C  300A               	movlw	10
  1367                           
  1368                           ;smartkey.C: 348: beep(10,1);
  1369  013D  01A4               	clrf	?_beep
  1370  013E  0AA4               	incf	?_beep,f
  1371  013F  26ED               	fcall	_beep
  1372  0140                     l919:	
  1373                           
  1374                           ;smartkey.C: 349: }
  1375                           ;smartkey.C: 352: buf[0] = 0x08;
  1376  0140  3008               	movlw	8
  1377  0141  00BB               	movwf	main@buf
  1378                           
  1379                           ;smartkey.C: 353: buf[1] = 0x4d;
  1380  0142  304D               	movlw	77
  1381  0143  00BC               	movwf	main@buf+1
  1382                           
  1383                           ;smartkey.C: 354: if((AccWrite(0x10,(unsigned char)buf,2)==0)) {
  1384  0144  303B               	movlw	main@buf& (0+255)
  1385  0145  00AC               	movwf	??_main
  1386  0146  01AD               	clrf	??_main+1
  1387  0147  00A3               	movwf	?_AccWrite
  1388  0148  082D               	movf	??_main+1,w
  1389  0149  00A4               	movwf	?_AccWrite+1
  1390  014A  3002               	movlw	2
  1391  014B  00A5               	movwf	?_AccWrite+2
  1392  014C  3010               	movlw	16
  1393  014D  2658               	fcall	_AccWrite
  1394  014E  3800               	iorlw	0
  1395  014F  1903               	btfsc	3,2
  1396  0150  2957               	goto	l7004
  1397  0151  3002               	movlw	2
  1398                           
  1399                           ;smartkey.C: 357: else {
  1400                           ;smartkey.C: 358: accEna =0;
  1401  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0153  01B6               	clrf	main@accEna
  1403                           
  1404                           ;smartkey.C: 359: beep(10,2);
  1405  0154  00A4               	movwf	?_beep
  1406  0155  300A               	movlw	10
  1407  0156  26ED               	fcall	_beep
  1408  0157                     l7004:	
  1409                           
  1410                           ;smartkey.C: 360: }
  1411                           ;smartkey.C: 365: tmp8= READ_EEPROM(0x40);
  1412  0157  3040               	movlw	64
  1413  0158  276B               	fcall	_READ_EEPROM
  1414  0159  00C5               	movwf	main@tmp8
  1415                           
  1416                           ;smartkey.C: 367: if(tmp8==6){
  1417  015A  3A06               	xorlw	6
  1418  015B  1D03               	skipz
  1419  015C  2A0A               	goto	l7044
  1420                           
  1421                           ;smartkey.C: 368: if(accEna ==1){
  1422  015D  0B36               	decfsz	main@accEna,w
  1423  015E  2A06               	goto	l923
  1424  015F  3003               	movlw	3
  1425                           
  1426                           ;smartkey.C: 369: tmp8=0; beep(10,3);
  1427  0160  01C5               	clrf	main@tmp8
  1428  0161  00A4               	movwf	?_beep
  1429  0162  300A               	movlw	10
  1430  0163  26ED               	fcall	_beep
  1431                           
  1432                           ;smartkey.C: 370: while((RA2)&&(tmp8<11)){
  1433  0164  29A0               	goto	l7022
  1434  0165                     l7014:	
  1435                           
  1436                           ;smartkey.C: 371: if(AccRead(0x02,(unsigned char)buf,6)==0){
  1437  0165  303B               	movlw	main@buf& (0+255)
  1438  0166  00AC               	movwf	??_main
  1439  0167  01AD               	clrf	??_main+1
  1440  0168  00A4               	movwf	?_AccRead
  1441  0169  082D               	movf	??_main+1,w
  1442  016A  00A5               	movwf	?_AccRead+1
  1443  016B  3006               	movlw	6
  1444  016C  00A6               	movwf	?_AccRead+2
  1445  016D  3002               	movlw	2
  1446  016E  261D               	fcall	_AccRead
  1447  016F  3800               	iorlw	0
  1448  0170  1D03               	skipz
  1449  0171  2992               	goto	l7020
  1450                           
  1451                           ;smartkey.C: 372: acXsum += buf[1];
  1452  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0173  083C               	movf	main@buf+1,w
  1454  0174  00AC               	movwf	??_main
  1455  0175  01AD               	clrf	??_main+1
  1456  0176  1BAC               	btfsc	??_main,7
  1457  0177  03AD               	decf	??_main+1,f
  1458  0178  07B9               	addwf	main@acXsum,f
  1459  0179  1803               	skipnc
  1460  017A  0ABA               	incf	main@acXsum+1,f
  1461  017B  082D               	movf	??_main+1,w
  1462  017C  07BA               	addwf	main@acXsum+1,f
  1463                           
  1464                           ;smartkey.C: 373: acYsum += buf[3];
  1465  017D  083E               	movf	main@buf+3,w
  1466  017E  00AC               	movwf	??_main
  1467  017F  01AD               	clrf	??_main+1
  1468  0180  1BAC               	btfsc	??_main,7
  1469  0181  03AD               	decf	??_main+1,f
  1470  0182  07B7               	addwf	main@acYsum,f
  1471  0183  1803               	skipnc
  1472  0184  0AB8               	incf	main@acYsum+1,f
  1473  0185  082D               	movf	??_main+1,w
  1474  0186  07B8               	addwf	main@acYsum+1,f
  1475                           
  1476                           ;smartkey.C: 374: tmp16 = (signed int)tmp16 + buf[5];
  1477  0187  0840               	movf	main@buf+5,w
  1478  0188  00AC               	movwf	??_main
  1479  0189  01AD               	clrf	??_main+1
  1480  018A  1BAC               	btfsc	??_main,7
  1481  018B  03AD               	decf	??_main+1,f
  1482  018C  07C3               	addwf	main@tmp16,f
  1483  018D  1803               	skipnc
  1484  018E  0AC4               	incf	main@tmp16+1,f
  1485  018F  082D               	movf	??_main+1,w
  1486  0190  07C4               	addwf	main@tmp16+1,f
  1487                           
  1488                           ;smartkey.C: 375: tmp8++;
  1489  0191  0AC5               	incf	main@tmp8,f
  1490  0192                     l7020:	
  1491                           
  1492                           ;smartkey.C: 376: }
  1493                           ;smartkey.C: 377: _delay((unsigned long)((500)*(4000000/4000.0)));
  1494  0192  3003               	movlw	3
  1495  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1496  0194  00AE               	movwf	??_main+2
  1497  0195  308A               	movlw	138
  1498  0196  00AD               	movwf	??_main+1
  1499  0197  3056               	movlw	86
  1500  0198  00AC               	movwf	??_main
  1501  0199                     u3907:	
  1502  0199  0BAC               	decfsz	??_main,f
  1503  019A  2999               	goto	u3907
  1504  019B  0BAD               	decfsz	??_main+1,f
  1505  019C  2999               	goto	u3907
  1506  019D  0BAE               	decfsz	??_main+2,f
  1507  019E  2999               	goto	u3907
  1508  019F  29A0               	nop2
  1509  01A0                     l7022:	
  1510  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1511  01A1  1D05               	btfss	5,2
  1512  01A2  29A7               	goto	l7026
  1513  01A3  300B               	movlw	11
  1514  01A4  0245               	subwf	main@tmp8,w
  1515  01A5  1C03               	skipc
  1516  01A6  2965               	goto	l7014
  1517  01A7                     l7026:	
  1518                           
  1519                           ;smartkey.C: 378: }
  1520                           ;smartkey.C: 380: if(tmp8==11){
  1521  01A7  0845               	movf	main@tmp8,w
  1522  01A8  3A0B               	xorlw	11
  1523  01A9  1D03               	skipz
  1524  01AA  2A02               	goto	l7040
  1525                           
  1526                           ;smartkey.C: 381: acXsum =acXsum/10;
  1527  01AB  300A               	movlw	10
  1528  01AC  00A0               	movwf	?___awdiv
  1529  01AD  01A1               	clrf	?___awdiv+1
  1530  01AE  083A               	movf	main@acXsum+1,w
  1531  01AF  00A3               	movwf	?___awdiv+3
  1532  01B0  0839               	movf	main@acXsum,w
  1533  01B1  00A2               	movwf	?___awdiv+2
  1534  01B2  2517               	fcall	___awdiv
  1535  01B3  0821               	movf	?___awdiv+1,w
  1536  01B4  00BA               	movwf	main@acXsum+1
  1537  01B5  0820               	movf	?___awdiv,w
  1538  01B6  00B9               	movwf	main@acXsum
  1539                           
  1540                           ;smartkey.C: 382: acYsum = acYsum/10;
  1541  01B7  300A               	movlw	10
  1542  01B8  00A0               	movwf	?___awdiv
  1543  01B9  01A1               	clrf	?___awdiv+1
  1544  01BA  0838               	movf	main@acYsum+1,w
  1545  01BB  00A3               	movwf	?___awdiv+3
  1546  01BC  0837               	movf	main@acYsum,w
  1547  01BD  00A2               	movwf	?___awdiv+2
  1548  01BE  2517               	fcall	___awdiv
  1549  01BF  0821               	movf	?___awdiv+1,w
  1550  01C0  00B8               	movwf	main@acYsum+1
  1551  01C1  0820               	movf	?___awdiv,w
  1552  01C2  00B7               	movwf	main@acYsum
  1553                           
  1554                           ;smartkey.C: 383: tmp16 = (signed int)tmp16/10;
  1555  01C3  300A               	movlw	10
  1556  01C4  00A0               	movwf	?___awdiv
  1557  01C5  01A1               	clrf	?___awdiv+1
  1558  01C6  0844               	movf	main@tmp16+1,w
  1559  01C7  00A3               	movwf	?___awdiv+3
  1560  01C8  0843               	movf	main@tmp16,w
  1561  01C9  00A2               	movwf	?___awdiv+2
  1562  01CA  2517               	fcall	___awdiv
  1563  01CB  0821               	movf	?___awdiv+1,w
  1564  01CC  00C4               	movwf	main@tmp16+1
  1565  01CD  0820               	movf	?___awdiv,w
  1566  01CE  00C3               	movwf	main@tmp16
  1567                           
  1568                           ;smartkey.C: 385: if(((signed int)tmp16 > (-31)) && ((signed int)tmp16 < 31)){
  1569  01CF  0844               	movf	main@tmp16+1,w
  1570  01D0  3A80               	xorlw	128
  1571  01D1  00FF               	movwf	127
  1572  01D2  307F               	movlw	127
  1573  01D3  027F               	subwf	127,w
  1574  01D4  1D03               	skipz
  1575  01D5  29D8               	goto	u3275
  1576  01D6  30E2               	movlw	226
  1577  01D7  0243               	subwf	main@tmp16,w
  1578  01D8                     u3275:	
  1579  01D8  1C03               	skipc
  1580  01D9  29E9               	goto	l7036
  1581  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1582  01DB  0844               	movf	main@tmp16+1,w
  1583  01DC  3A80               	xorlw	128
  1584  01DD  00FF               	movwf	127
  1585  01DE  3080               	movlw	128
  1586  01DF  027F               	subwf	127,w
  1587  01E0  1D03               	skipz
  1588  01E1  29E4               	goto	u3285
  1589  01E2  301F               	movlw	31
  1590  01E3  0243               	subwf	main@tmp16,w
  1591  01E4                     u3285:	
  1592  01E4  1803               	skipnc
  1593  01E5  29E9               	goto	l7036
  1594                           
  1595                           ;smartkey.C: 386: beep(10,2);
  1596  01E6  3002               	movlw	2
  1597  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1598  01E8  2A03               	goto	L2
  1599  01E9                     l7036:	
  1600                           ;smartkey.C: 387: }else{
  1601                           
  1602                           
  1603                           ;smartkey.C: 388: beep(10,3);
  1604  01E9  3003               	movlw	3
  1605  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1606  01EB  00A4               	movwf	?_beep
  1607  01EC  300A               	movlw	10
  1608  01ED  26ED               	fcall	_beep
  1609                           
  1610                           ;smartkey.C: 390: WRITE_EEPROM(0x10,(unsigned char)acXsum);
  1611  01EE  0839               	movf	main@acXsum,w
  1612  01EF  00A0               	movwf	?_WRITE_EEPROM
  1613  01F0  3010               	movlw	16
  1614  01F1  26BA               	fcall	_WRITE_EEPROM
  1615                           
  1616                           ;smartkey.C: 391: WRITE_EEPROM(0x11,(unsigned char)acYsum);
  1617  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1618  01F3  0837               	movf	main@acYsum,w
  1619  01F4  00A0               	movwf	?_WRITE_EEPROM
  1620  01F5  3011               	movlw	17
  1621  01F6  26BA               	fcall	_WRITE_EEPROM
  1622                           
  1623                           ;smartkey.C: 392: _delay((unsigned long)((100)*(4000000/4000.0)));
  1624  01F7  3082               	movlw	130
  1625  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1626  01F9  00AD               	movwf	??_main+1
  1627  01FA  30DD               	movlw	221
  1628  01FB  00AC               	movwf	??_main
  1629  01FC                     u3917:	
  1630  01FC  0BAC               	decfsz	??_main,f
  1631  01FD  29FC               	goto	u3917
  1632  01FE  0BAD               	decfsz	??_main+1,f
  1633  01FF  29FC               	goto	u3917
  1634  0200  2A01               	nop2
  1635  0201  2A06               	goto	l923
  1636  0202                     l7040:	
  1637                           
  1638                           ;smartkey.C: 395: beep(10,2);
  1639  0202  3002               	movlw	2
  1640  0203                     L2:	
  1641  0203  00A4               	movwf	?_beep
  1642  0204  300A               	movlw	10
  1643  0205  26ED               	fcall	_beep
  1644  0206                     l923:	
  1645  0206  3040               	movlw	64
  1646                           
  1647                           ;smartkey.C: 396: }
  1648                           ;smartkey.C: 397: }
  1649                           ;smartkey.C: 398: WRITE_EEPROM(0x40,0);
  1650  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1651  0208  01A0               	clrf	?_WRITE_EEPROM
  1652  0209  26BA               	fcall	_WRITE_EEPROM
  1653  020A                     l7044:	
  1654                           
  1655                           ;smartkey.C: 400: }
  1656                           ;smartkey.C: 403: acXsum = (signed char)READ_EEPROM(0x10);
  1657  020A  3010               	movlw	16
  1658  020B  276B               	fcall	_READ_EEPROM
  1659  020C  00B9               	movwf	main@acXsum
  1660  020D  01BA               	clrf	main@acXsum+1
  1661  020E  1BB9               	btfsc	main@acXsum,7
  1662  020F  03BA               	decf	main@acXsum+1,f
  1663                           
  1664                           ;smartkey.C: 404: acYsum = (signed char)READ_EEPROM(0x11);
  1665  0210  3011               	movlw	17
  1666  0211  276B               	fcall	_READ_EEPROM
  1667  0212  00B7               	movwf	main@acYsum
  1668  0213  01B8               	clrf	main@acYsum+1
  1669  0214  1BB7               	btfsc	main@acYsum,7
  1670  0215  03B8               	decf	main@acYsum+1,f
  1671                           
  1672                           ;smartkey.C: 406: timeTick = 0;
  1673  0216  01F0               	clrf	_timeTick
  1674  0217  01F1               	clrf	_timeTick+1
  1675  0218                     l7050:	
  1676                           
  1677                           ;smartkey.C: 412: if((mode_chek == 0) && (antenSkip ==0)){
  1678  0218  08F3               	movf	_mode_chek,f
  1679  0219  1283               	bcf	3,5	;RP0=0, select bank0
  1680  021A  1D03               	skipz
  1681  021B  2AF5               	goto	L8
  1682  021C  08B3               	movf	main@antenSkip,f
  1683  021D  1903               	btfsc	3,2
  1684                           
  1685                           ;smartkey.C: 413: if(RegStatus & 0x80){
  1686  021E  1FCA               	btfss	_RegStatus,7
  1687  021F  2AF4               	goto	l7162
  1688                           
  1689                           ;smartkey.C: 415: PAIE = 0;
  1690  0220  118B               	bcf	11,3
  1691                           
  1692                           ;smartkey.C: 417: RegStatus &= (~0x80);
  1693  0221  13CA               	bcf	_RegStatus,7
  1694                           
  1695                           ;smartkey.C: 421: if ((RegStatus & 0x40) !=0){
  1696  0222  1B4A               	btfsc	_RegStatus,6
  1697  0223  2A9F               	goto	l7122
  1698  0224  2AEB               	goto	l7160
  1699  0225                     l7060:	
  1700                           
  1701                           ;smartkey.C: 425: lostDetect =0;
  1702  0225  01CC               	clrf	_lostDetect
  1703  0226                     L4:	
  1704  0226  3028               	movlw	40
  1705                           
  1706                           ;smartkey.C: 426: timeTick =0;
  1707  0227  01F0               	clrf	_timeTick
  1708  0228  01F1               	clrf	_timeTick+1
  1709                           
  1710                           ;smartkey.C: 427: tmp16 = 40;
  1711  0229  00C3               	movwf	main@tmp16
  1712  022A  01C4               	clrf	main@tmp16+1
  1713                           
  1714                           ;smartkey.C: 428: break;
  1715  022B  2AF3               	goto	l959
  1716  022C                     l7064:	
  1717                           
  1718                           ;smartkey.C: 431: if(timeTick >30){
  1719  022C  3000               	movlw	0
  1720  022D  0271               	subwf	_timeTick+1,w
  1721  022E  301F               	movlw	31
  1722  022F  1903               	skipnz
  1723  0230  0270               	subwf	_timeTick,w
  1724  0231  1C03               	skipc
  1725  0232  2AF3               	goto	l959
  1726  0233  3008               	movlw	8
  1727                           
  1728                           ;smartkey.C: 432: timeTick =0;
  1729  0234  01F0               	clrf	_timeTick
  1730  0235  01F1               	clrf	_timeTick+1
  1731                           
  1732                           ;smartkey.C: 434: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1733  0236  276B               	fcall	_READ_EEPROM
  1734  0237  3ACC               	xorlw	204
  1735  0238  1D03               	skipz
  1736  0239  2A3D               	goto	l7072
  1737  023A  3008               	movlw	8
  1738  023B  01A0               	clrf	?_WRITE_EEPROM
  1739  023C  26BA               	fcall	_WRITE_EEPROM
  1740  023D                     l7072:	
  1741                           
  1742                           ;smartkey.C: 436: if((mtOldState == 3)){
  1743  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1744  023E  084D               	movf	_mtOldState,w
  1745  023F  3A03               	xorlw	3
  1746  0240  1D03               	skipz
  1747  0241  2A4E               	goto	l7082
  1748                           
  1749                           ;smartkey.C: 437: beepOn();TMR2ON = 0; beep(10,1);
  1750  0242  2799               	fcall	_beepOn
  1751  0243  300A               	movlw	10
  1752  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0245  1112               	bcf	18,2
  1754  0246  01A4               	clrf	?_beep
  1755  0247  0AA4               	incf	?_beep,f
  1756  0248  26ED               	fcall	_beep
  1757  0249                     L3:	
  1758                           
  1759                           ;smartkey.C: 438: if(reAlertOn)reAlertOn =0;
  1760  0249  0841               	movf	main@reAlertOn,w
  1761  024A  1903               	btfsc	3,2
  1762  024B  2AF3               	goto	l959
  1763  024C  01C1               	clrf	main@reAlertOn
  1764  024D  2AF3               	goto	l959
  1765  024E                     l7082:	
  1766                           
  1767                           ;smartkey.C: 440: else if((mtOldState == 0)||(mtOldState == 4)){
  1768  024E  084D               	movf	_mtOldState,w
  1769  024F  1903               	btfsc	3,2
  1770  0250  2A55               	goto	l949
  1771  0251  084D               	movf	_mtOldState,w
  1772  0252  3A04               	xorlw	4
  1773  0253  1D03               	skipz
  1774  0254  2A72               	goto	l7096
  1775  0255                     l949:	
  1776  0255  30AC               	movlw	172
  1777                           
  1778                           ;smartkey.C: 441: RegStatus |=(0x20);
  1779  0256  16CA               	bsf	_RegStatus,5
  1780                           
  1781                           ;smartkey.C: 442: setState(1,3500);
  1782  0257  00A0               	movwf	?_setState
  1783  0258  300D               	movlw	13
  1784  0259  00A1               	movwf	?_setState+1
  1785  025A  3001               	movlw	1
  1786  025B  2778               	fcall	_setState
  1787                           
  1788                           ;smartkey.C: 443: if(READ_EEPROM(0x40))WRITE_EEPROM(0x40,0);
  1789  025C  3040               	movlw	64
  1790  025D  276B               	fcall	_READ_EEPROM
  1791  025E  3A00               	xorlw	0
  1792  025F  1903               	skipnz
  1793  0260  2A64               	goto	l7092
  1794  0261  3040               	movlw	64
  1795  0262  01A0               	clrf	?_WRITE_EEPROM
  1796  0263  26BA               	fcall	_WRITE_EEPROM
  1797  0264                     l7092:	
  1798                           
  1799                           ;smartkey.C: 444: tmp16 = timeTick+40;
  1800  0264  0871               	movf	_timeTick+1,w
  1801  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0266  00C4               	movwf	main@tmp16+1
  1803  0267  0870               	movf	_timeTick,w
  1804  0268  00C3               	movwf	main@tmp16
  1805  0269  3028               	movlw	40
  1806  026A  07C3               	addwf	main@tmp16,f
  1807  026B  1803               	skipnc
  1808  026C  0AC4               	incf	main@tmp16+1,f
  1809  026D  300A               	movlw	10
  1810                           
  1811                           ;smartkey.C: 445: beep(10,1);
  1812  026E  01A4               	clrf	?_beep
  1813  026F  0AA4               	incf	?_beep,f
  1814  0270  26ED               	fcall	_beep
  1815                           
  1816                           ;smartkey.C: 446: }
  1817  0271  2AF3               	goto	l959
  1818  0272                     l7096:	
  1819                           
  1820                           ;smartkey.C: 447: else if((mtOldState == 1)){
  1821  0272  0B4D               	decfsz	_mtOldState,w
  1822  0273  2AF3               	goto	l959
  1823  0274  2A49               	goto	L3
  1824  0275                     l7102:	
  1825                           ;smartkey.C: 450: }
  1826                           ;smartkey.C: 451: }
  1827                           ;smartkey.C: 452: break;
  1828                           
  1829                           ;smartkey.C: 449: if(reAlertOn)reAlertOn =0;
  1830                           
  1831                           
  1832                           ;smartkey.C: 455: if(timeTick > 200){
  1833  0275  3000               	movlw	0
  1834  0276  0271               	subwf	_timeTick+1,w
  1835  0277  30C9               	movlw	201
  1836  0278  1903               	skipnz
  1837  0279  0270               	subwf	_timeTick,w
  1838  027A  1C03               	skipc
  1839  027B  2AF3               	goto	l959
  1840                           
  1841                           ;smartkey.C: 457: beepOff();
  1842  027C  279E               	fcall	_beepOff
  1843                           
  1844                           ;smartkey.C: 458: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1845  027D  3008               	movlw	8
  1846  027E  276B               	fcall	_READ_EEPROM
  1847  027F  3ACC               	xorlw	204
  1848  0280  1D03               	skipz
  1849  0281  2A85               	goto	l7110
  1850  0282  3008               	movlw	8
  1851  0283  01A0               	clrf	?_WRITE_EEPROM
  1852  0284  26BA               	fcall	_WRITE_EEPROM
  1853  0285                     l7110:	
  1854  0285  30AC               	movlw	172
  1855                           
  1856                           ;smartkey.C: 459: RegStatus |=(0x20);
  1857  0286  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0287  16CA               	bsf	_RegStatus,5
  1859                           
  1860                           ;smartkey.C: 460: setState(1,3500);
  1861  0288  00A0               	movwf	?_setState
  1862  0289  300D               	movlw	13
  1863  028A  00A1               	movwf	?_setState+1
  1864  028B  3001               	movlw	1
  1865  028C  2778               	fcall	_setState
  1866                           
  1867                           ;smartkey.C: 462: tmp16 = timeTick+40;
  1868  028D  0871               	movf	_timeTick+1,w
  1869  028E  00C4               	movwf	main@tmp16+1
  1870  028F  0870               	movf	_timeTick,w
  1871  0290  00C3               	movwf	main@tmp16
  1872  0291  3028               	movlw	40
  1873  0292  07C3               	addwf	main@tmp16,f
  1874  0293  1803               	skipnc
  1875  0294  0AC4               	incf	main@tmp16+1,f
  1876  0295  2AF3               	goto	l959
  1877  0296                     l7116:	
  1878                           
  1879                           ;smartkey.C: 468: beepOff();
  1880  0296  279E               	fcall	_beepOff
  1881                           
  1882                           ;smartkey.C: 469: setState(2,300);
  1883  0297  302C               	movlw	44
  1884  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0299  00A0               	movwf	?_setState
  1886  029A  3001               	movlw	1
  1887  029B  00A1               	movwf	?_setState+1
  1888  029C  3002               	movlw	2
  1889  029D  2778               	fcall	_setState
  1890                           
  1891                           ;smartkey.C: 470: break;
  1892  029E  2AF3               	goto	l959
  1893  029F                     l7122:	
  1894  029F  0874               	movf	_mtState,w
  1895                           
  1896                           ; Switch size 1, requested type "space"
  1897                           ; Number of cases is 5, Range of values is 0 to 4
  1898                           ; switch strategies available:
  1899                           ; Name         Instructions Cycles
  1900                           ; direct_byte           11     6 (fixed)
  1901                           ; simple_byte           16     9 (average)
  1902                           ; jumptable            260     6 (fixed)
  1903                           ; rangetable             9     6 (fixed)
  1904                           ; spacedrange           16     9 (fixed)
  1905                           ; locatedrange           5     3 (fixed)
  1906                           ;	Chosen strategy is direct_byte
  1907  02A0  0084               	movwf	4
  1908  02A1  3005               	movlw	5
  1909  02A2  0204               	subwf	4,w
  1910  02A3  1803               	skipnc
  1911  02A4  2AF3               	goto	l959
  1912  02A5  3007               	movlw	high S7410
  1913  02A6  008A               	movwf	10
  1914  02A7  3094               	movlw	low S7410
  1915  02A8  0704               	addwf	4,w
  1916  02A9  0082               	movwf	2
  1917  02AA                     l7124:	
  1918                           
  1919                           ;smartkey.C: 485: if((lostDetect==1) && (timeTick< 1500) &&(timeTick >700))
  1920  02AA  0B4C               	decfsz	_lostDetect,w
  1921  02AB  2AD8               	goto	l962
  1922  02AC  3005               	movlw	5
  1923  02AD  0271               	subwf	_timeTick+1,w
  1924  02AE  30DC               	movlw	220
  1925  02AF  1903               	skipnz
  1926  02B0  0270               	subwf	_timeTick,w
  1927  02B1  1803               	skipnc
  1928  02B2  2AD8               	goto	l962
  1929  02B3  3002               	movlw	2
  1930  02B4  0271               	subwf	_timeTick+1,w
  1931  02B5  30BD               	movlw	189
  1932  02B6  1903               	skipnz
  1933  02B7  0270               	subwf	_timeTick,w
  1934  02B8  1C03               	skipc
  1935  02B9  2AD8               	goto	l962
  1936                           
  1937                           ;smartkey.C: 486: {
  1938                           ;smartkey.C: 487: if(READ_EEPROM(0x08)==0x00) WRITE_EEPROM(0x08,0xcc);
  1939  02BA  3008               	movlw	8
  1940  02BB  276B               	fcall	_READ_EEPROM
  1941  02BC  3800               	iorlw	0
  1942  02BD  1D03               	skipz
  1943  02BE  2AC3               	goto	l963
  1944  02BF  30CC               	movlw	204
  1945  02C0  00A0               	movwf	?_WRITE_EEPROM
  1946  02C1  3008               	movlw	8
  1947  02C2  26BA               	fcall	_WRITE_EEPROM
  1948  02C3                     l963:	
  1949                           
  1950                           ;smartkey.C: 489: setState(3,1800);
  1951  02C3  3008               	movlw	8
  1952  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1953  02C5  00A0               	movwf	?_setState
  1954  02C6  3007               	movlw	7
  1955  02C7  00A1               	movwf	?_setState+1
  1956  02C8  3003               	movlw	3
  1957  02C9  2778               	fcall	_setState
  1958                           
  1959                           ;smartkey.C: 490: cntTmp = timeTick+40;
  1960  02CA  0871               	movf	_timeTick+1,w
  1961  02CB  00C7               	movwf	_cntTmp+1
  1962  02CC  0870               	movf	_timeTick,w
  1963  02CD  00C6               	movwf	_cntTmp
  1964  02CE  3028               	movlw	40
  1965  02CF  07C6               	addwf	_cntTmp,f
  1966  02D0  1803               	skipnc
  1967  02D1  0AC7               	incf	_cntTmp+1,f
  1968                           
  1969                           ;smartkey.C: 491: PR2L =20;
  1970  02D2  3014               	movlw	20
  1971  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  1972  02D4  0091               	movwf	17	;volatile
  1973                           
  1974                           ;smartkey.C: 492: beepOn();
  1975  02D5  2799               	fcall	_beepOn
  1976                           
  1977                           ;smartkey.C: 493: lostDetect =0;
  1978  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  1979  02D7  2A25               	goto	l7060
  1980  02D8                     l962:	
  1981                           ;smartkey.C: 494: }
  1982                           
  1983                           
  1984                           ;smartkey.C: 495: else {
  1985                           ;smartkey.C: 496: lostDetect =1;
  1986  02D8  01CC               	clrf	_lostDetect
  1987  02D9  0ACC               	incf	_lostDetect,f
  1988  02DA  2A26               	goto	L4
  1989  02DB                     l7146:	
  1990                           ;smartkey.C: 499: }
  1991                           ;smartkey.C: 500: timeTick =0;
  1992                           
  1993                           
  1994                           ;smartkey.C: 505: timeTick =0;
  1995  02DB  01F0               	clrf	_timeTick
  1996  02DC  01F1               	clrf	_timeTick+1
  1997                           
  1998                           ;smartkey.C: 506: beepOn();TMR2ON = 0;
  1999  02DD  2799               	fcall	_beepOn
  2000  02DE  3002               	movlw	2
  2001  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2002  02E0  1112               	bcf	18,2
  2003                           
  2004                           ;smartkey.C: 507: beep(10,2);
  2005  02E1  00A4               	movwf	?_beep
  2006  02E2  300A               	movlw	10
  2007  02E3  26ED               	fcall	_beep
  2008                           
  2009                           ;smartkey.C: 508: if(mtOldState == 3){reAlertOn =1;}
  2010  02E4  084D               	movf	_mtOldState,w
  2011  02E5  3A03               	xorlw	3
  2012  02E6  1D03               	skipz
  2013  02E7  2AF3               	goto	l959
  2014  02E8  01C1               	clrf	main@reAlertOn
  2015  02E9  0AC1               	incf	main@reAlertOn,f
  2016  02EA  2AF3               	goto	l959
  2017  02EB                     l7160:	
  2018  02EB  0874               	movf	_mtState,w
  2019                           
  2020                           ; Switch size 1, requested type "space"
  2021                           ; Number of cases is 2, Range of values is 1 to 2
  2022                           ; switch strategies available:
  2023                           ; Name         Instructions Cycles
  2024                           ; simple_byte            7     4 (average)
  2025                           ; direct_byte           11     9 (fixed)
  2026                           ; jumptable            263     9 (fixed)
  2027                           ;	Chosen strategy is simple_byte
  2028  02EC  3A01               	xorlw	1	; case 1
  2029  02ED  1903               	skipnz
  2030  02EE  2AAA               	goto	l7124
  2031  02EF  3A03               	xorlw	3	; case 2
  2032  02F0  1903               	skipnz
  2033  02F1  2ADB               	goto	l7146
  2034  02F2  2AF3               	goto	l959
  2035  02F3                     l959:	
  2036                           
  2037                           ;smartkey.C: 511: }
  2038                           ;smartkey.C: 512: PAIE = 1;
  2039  02F3  158B               	bsf	11,3
  2040  02F4                     l7162:	
  2041                           
  2042                           ;smartkey.C: 513: }
  2043                           ;smartkey.C: 515: }
  2044                           ;smartkey.C: 519: if((timeOut!=0)&&( timeTick >timeOut)){
  2045  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2046  02F5                     L8:	
  2047  02F5  0849               	movf	_timeOut+1,w
  2048  02F6  0448               	iorwf	_timeOut,w
  2049  02F7  1903               	skipnz
  2050  02F8  2B7C               	goto	l7242
  2051  02F9  0871               	movf	_timeTick+1,w
  2052  02FA  0249               	subwf	_timeOut+1,w
  2053  02FB  1D03               	skipz
  2054  02FC  2AFF               	goto	u3505
  2055  02FD  0870               	movf	_timeTick,w
  2056  02FE  0248               	subwf	_timeOut,w
  2057  02FF                     u3505:	
  2058  02FF  1C03               	btfss	3,0
  2059  0300  2B6E               	goto	l7240
  2060  0301  2B7C               	goto	l7242
  2061  0302                     l7168:	
  2062                           
  2063                           ;smartkey.C: 530: beepOff();
  2064  0302  279E               	fcall	_beepOff
  2065  0303  302C               	movlw	44
  2066                           
  2067                           ;smartkey.C: 531: RegStatus &=(~0x20);
  2068  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0305  12CA               	bcf	_RegStatus,5
  2070                           
  2071                           ;smartkey.C: 532: setState(2,300);
  2072  0306  00A0               	movwf	?_setState
  2073  0307  3001               	movlw	1
  2074  0308  00A1               	movwf	?_setState+1
  2075  0309  3002               	movlw	2
  2076  030A  2778               	fcall	_setState
  2077                           
  2078                           ;smartkey.C: 533: break;
  2079  030B  2B7C               	goto	l7242
  2080  030C                     l7174:	
  2081                           
  2082                           ;smartkey.C: 535: beepOff();
  2083  030C  279E               	fcall	_beepOff
  2084                           
  2085                           ;smartkey.C: 536: delay_x10ms(20);
  2086  030D  3014               	movlw	20
  2087  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2088  030F  00A0               	movwf	?_delay_x10ms
  2089  0310  01A1               	clrf	?_delay_x10ms+1
  2090  0311  272C               	fcall	_delay_x10ms
  2091                           
  2092                           ;smartkey.C: 537: beepOn();TMR2ON = 0;reAlertOn =0;
  2093  0312  2799               	fcall	_beepOn
  2094  0313  301E               	movlw	30
  2095  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0315  1112               	bcf	18,2
  2097  0316  01C1               	clrf	main@reAlertOn
  2098  0317  01A4               	clrf	?_beep
  2099  0318  0AA4               	incf	?_beep,f
  2100  0319  26ED               	fcall	_beep
  2101  031A  3000               	movlw	0
  2102                           
  2103                           ;smartkey.C: 539: vibrateOn=1;
  2104  031B  01B2               	clrf	main@vibrateOn
  2105  031C  0AB2               	incf	main@vibrateOn,f
  2106  031D  01A0               	clrf	?_setState
  2107  031E  01A1               	clrf	?_setState+1
  2108  031F                     L5:	
  2109  031F  2778               	fcall	_setState
  2110  0320                     l7190:	
  2111                           
  2112                           ;smartkey.C: 542: tmp16 = timeTick+40;
  2113  0320  0871               	movf	_timeTick+1,w
  2114  0321  00C4               	movwf	main@tmp16+1
  2115  0322  0870               	movf	_timeTick,w
  2116  0323  00C3               	movwf	main@tmp16
  2117  0324  3028               	movlw	40
  2118  0325  07C3               	addwf	main@tmp16,f
  2119  0326  1803               	skipnc
  2120  0327  0AC4               	incf	main@tmp16+1,f
  2121                           
  2122                           ;smartkey.C: 543: break;
  2123  0328  2B7C               	goto	l7242
  2124  0329                     l7194:	
  2125                           
  2126                           ;smartkey.C: 546: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  2127  0329  3008               	movlw	8
  2128  032A  276B               	fcall	_READ_EEPROM
  2129  032B  3ACC               	xorlw	204
  2130  032C  1D03               	skipz
  2131  032D  2B31               	goto	l7198
  2132  032E  3008               	movlw	8
  2133  032F  01A0               	clrf	?_WRITE_EEPROM
  2134  0330  26BA               	fcall	_WRITE_EEPROM
  2135  0331                     l7198:	
  2136                           
  2137                           ;smartkey.C: 548: if(reAlertOn){
  2138  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0332  0841               	movf	main@reAlertOn,w
  2140  0333  1903               	btfsc	3,2
  2141  0334  2B48               	goto	l7208
  2142                           
  2143                           ;smartkey.C: 549: setState(4,6000);
  2144  0335  3070               	movlw	112
  2145  0336  00A0               	movwf	?_setState
  2146  0337  3017               	movlw	23
  2147  0338  00A1               	movwf	?_setState+1
  2148  0339  3004               	movlw	4
  2149  033A  2778               	fcall	_setState
  2150                           
  2151                           ;smartkey.C: 550: cntTmp = timeTick+40;
  2152  033B  0871               	movf	_timeTick+1,w
  2153  033C  00C7               	movwf	_cntTmp+1
  2154  033D  0870               	movf	_timeTick,w
  2155  033E  00C6               	movwf	_cntTmp
  2156  033F  3028               	movlw	40
  2157  0340  07C6               	addwf	_cntTmp,f
  2158  0341  1803               	skipnc
  2159  0342  0AC7               	incf	_cntTmp+1,f
  2160                           
  2161                           ;smartkey.C: 551: PR2L =20;
  2162  0343  3014               	movlw	20
  2163  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2164  0345  0091               	movwf	17	;volatile
  2165                           
  2166                           ;smartkey.C: 552: beepOn();
  2167  0346  2799               	fcall	_beepOn
  2168                           
  2169                           ;smartkey.C: 554: }else if(mtOldState == 0){
  2170  0347  2B7C               	goto	l7242
  2171  0348                     l7208:	
  2172  0348  08CD               	movf	_mtOldState,f
  2173  0349  1D03               	skipz
  2174  034A  2B5F               	goto	l7222
  2175                           
  2176                           ;smartkey.C: 556: beep(10,5);
  2177  034B  3005               	movlw	5
  2178  034C  00A4               	movwf	?_beep
  2179  034D  300A               	movlw	10
  2180  034E  26ED               	fcall	_beep
  2181  034F  3040               	movlw	64
  2182                           
  2183                           ;smartkey.C: 557: RegStatus |=(0x20);
  2184  0350  16CA               	bsf	_RegStatus,5
  2185                           
  2186                           ;smartkey.C: 560: if(READ_EEPROM(0x40))WRITE_EEPROM(0x40,0);
  2187  0351  276B               	fcall	_READ_EEPROM
  2188  0352  3A00               	xorlw	0
  2189  0353  1903               	skipnz
  2190  0354  2B58               	goto	l979
  2191  0355  3040               	movlw	64
  2192  0356  01A0               	clrf	?_WRITE_EEPROM
  2193  0357  26BA               	fcall	_WRITE_EEPROM
  2194  0358                     l979:	
  2195                           
  2196                           ;smartkey.C: 562: setState(1,3500);
  2197  0358  30AC               	movlw	172
  2198  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2199  035A  00A0               	movwf	?_setState
  2200  035B  300D               	movlw	13
  2201  035C  00A1               	movwf	?_setState+1
  2202  035D  3001               	movlw	1
  2203  035E  2B1F               	goto	L5
  2204  035F                     l7222:	
  2205                           
  2206                           ;smartkey.C: 566: beepOn();TMR2ON = 0;
  2207  035F  2799               	fcall	_beepOn
  2208  0360  301E               	movlw	30
  2209  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0362  1112               	bcf	18,2
  2211                           
  2212                           ;smartkey.C: 567: reAlertOn =0;
  2213  0363  01C1               	clrf	main@reAlertOn
  2214  0364  01A4               	clrf	?_beep
  2215  0365  0AA4               	incf	?_beep,f
  2216  0366  26ED               	fcall	_beep
  2217  0367  3000               	movlw	0
  2218                           
  2219                           ;smartkey.C: 569: setState(0,0);
  2220  0368  01A0               	clrf	?_setState
  2221  0369  01A1               	clrf	?_setState+1
  2222  036A  2778               	fcall	_setState
  2223                           
  2224                           ;smartkey.C: 571: vibrateOn=1;
  2225  036B  01B2               	clrf	main@vibrateOn
  2226  036C  0AB2               	incf	main@vibrateOn,f
  2227  036D  2B20               	goto	l7190
  2228  036E                     l7240:	
  2229  036E  0874               	movf	_mtState,w
  2230                           
  2231                           ; Switch size 1, requested type "space"
  2232                           ; Number of cases is 4, Range of values is 1 to 4
  2233                           ; switch strategies available:
  2234                           ; Name         Instructions Cycles
  2235                           ; simple_byte           13     7 (average)
  2236                           ; direct_byte           13     9 (fixed)
  2237                           ; jumptable            263     9 (fixed)
  2238                           ;	Chosen strategy is simple_byte
  2239  036F  3A01               	xorlw	1	; case 1
  2240  0370  1903               	skipnz
  2241  0371  2B7C               	goto	l7242
  2242  0372  3A03               	xorlw	3	; case 2
  2243  0373  1903               	skipnz
  2244  0374  2B29               	goto	l7194
  2245  0375  3A01               	xorlw	1	; case 3
  2246  0376  1903               	skipnz
  2247  0377  2B02               	goto	l7168
  2248  0378  3A07               	xorlw	7	; case 4
  2249  0379  1903               	skipnz
  2250  037A  2B0C               	goto	l7174
  2251  037B  2B7C               	goto	l7242
  2252  037C                     l7242:	
  2253                           
  2254                           ;smartkey.C: 576: }
  2255                           ;smartkey.C: 579: if((timeTick>tmp16) && (mtState == 1) && (accEna ==1)){
  2256  037C  0871               	movf	_timeTick+1,w
  2257  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2258  037E  0244               	subwf	main@tmp16+1,w
  2259  037F  1D03               	skipz
  2260  0380  2B83               	goto	u3555
  2261  0381  0870               	movf	_timeTick,w
  2262  0382  0243               	subwf	main@tmp16,w
  2263  0383                     u3555:	
  2264  0383  1803               	skipnc
  2265  0384  2C1F               	goto	l7326
  2266  0385  0B74               	decfsz	_mtState,w
  2267  0386  2C1F               	goto	l7326
  2268  0387  0B36               	decfsz	main@accEna,w
  2269  0388  2C1F               	goto	l7326
  2270                           
  2271                           ;smartkey.C: 580: tmp16 = timeTick+40;
  2272  0389  0871               	movf	_timeTick+1,w
  2273  038A  00C4               	movwf	main@tmp16+1
  2274  038B  0870               	movf	_timeTick,w
  2275  038C  00C3               	movwf	main@tmp16
  2276  038D  3028               	movlw	40
  2277  038E  07C3               	addwf	main@tmp16,f
  2278  038F  1803               	skipnc
  2279  0390  0AC4               	incf	main@tmp16+1,f
  2280                           
  2281                           ;smartkey.C: 581: if(AccRead(0x02,buf,6)==0){
  2282  0391  303B               	movlw	main@buf& (0+255)
  2283  0392  00A4               	movwf	?_AccRead
  2284  0393  3000               	movlw	0
  2285  0394  00A5               	movwf	?_AccRead+1
  2286  0395  3006               	movlw	6
  2287  0396  00A6               	movwf	?_AccRead+2
  2288  0397  3002               	movlw	2
  2289  0398  261D               	fcall	_AccRead
  2290  0399  3800               	iorlw	0
  2291  039A  1D03               	skipz
  2292  039B  2C1F               	goto	l7326
  2293                           
  2294                           ;smartkey.C: 583: if(compe(buf[1], (signed char)acXsum,5) && compe(buf[3], (signed char)
      +                          acYsum,5)){
  2295  039C  1283               	bcf	3,5	;RP0=0, select bank0
  2296  039D  0839               	movf	main@acXsum,w
  2297  039E  00A0               	movwf	?_compe
  2298  039F  3005               	movlw	5
  2299  03A0  00A1               	movwf	?_compe+1
  2300  03A1  083C               	movf	main@buf+1,w
  2301  03A2  255C               	fcall	_compe
  2302  03A3  3A00               	xorlw	0
  2303  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2304  03A5  1903               	skipnz
  2305  03A6  2BCE               	goto	L9
  2306  03A7  0837               	movf	main@acYsum,w
  2307  03A8  00A0               	movwf	?_compe
  2308  03A9  3005               	movlw	5
  2309  03AA  00A1               	movwf	?_compe+1
  2310  03AB  083E               	movf	main@buf+3,w
  2311  03AC  255C               	fcall	_compe
  2312  03AD  3A00               	xorlw	0
  2313                           
  2314                           ;smartkey.C: 585: isSw++;
  2315  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2316  03AF  1903               	skipnz
  2317  03B0  2BCE               	goto	L9
  2318  03B1  302D               	movlw	45
  2319  03B2  0AC2               	incf	main@isSw,f
  2320                           
  2321                           ;smartkey.C: 586: if(isSw >44){
  2322  03B3  0242               	subwf	main@isSw,w
  2323  03B4  1C03               	skipc
  2324  03B5  2BC1               	goto	l7272
  2325  03B6  302C               	movlw	44
  2326                           
  2327                           ;smartkey.C: 587: isSw =0;
  2328  03B7  01C2               	clrf	main@isSw
  2329                           
  2330                           ;smartkey.C: 588: vibrateOn=1;
  2331  03B8  01B2               	clrf	main@vibrateOn
  2332  03B9  0AB2               	incf	main@vibrateOn,f
  2333                           
  2334                           ;smartkey.C: 591: RegStatus &=(~0x20);
  2335  03BA  12CA               	bcf	_RegStatus,5
  2336                           
  2337                           ;smartkey.C: 592: setState(2,300);
  2338  03BB  00A0               	movwf	?_setState
  2339  03BC  3001               	movlw	1
  2340  03BD  00A1               	movwf	?_setState+1
  2341  03BE  3002               	movlw	2
  2342  03BF  2778               	fcall	_setState
  2343                           
  2344                           ;smartkey.C: 594: }
  2345  03C0  2BFE               	goto	l7304
  2346  03C1                     l7272:	
  2347                           
  2348                           ;smartkey.C: 595: else if(isSw > 25){
  2349  03C1  301A               	movlw	26
  2350  03C2  0242               	subwf	main@isSw,w
  2351  03C3  1803               	btfsc	3,0
  2352                           
  2353                           ;smartkey.C: 596: if(isSw%2==0){
  2354  03C4  1842               	btfsc	main@isSw,0
  2355  03C5  2BFE               	goto	l7304
  2356                           
  2357                           ;smartkey.C: 597: beepOn();TMR2ON = 0; beep(7,1);
  2358  03C6  2799               	fcall	_beepOn
  2359  03C7  3007               	movlw	7
  2360  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2361  03C9  1112               	bcf	18,2
  2362  03CA  01A4               	clrf	?_beep
  2363  03CB  0AA4               	incf	?_beep,f
  2364  03CC  26ED               	fcall	_beep
  2365  03CD  2BFE               	goto	l7304
  2366  03CE                     L9:	
  2367                           ;smartkey.C: 603: else{
  2368                           ;smartkey.C: 604: isSw =0;
  2369                           
  2370                           ;smartkey.C: 598: }
  2371                           ;smartkey.C: 599: }
  2372                           ;smartkey.C: 601: }
  2373                           
  2374  03CE  01C2               	clrf	main@isSw
  2375                           
  2376                           ;smartkey.C: 607: if(compe(buf[1], acXOld,1) && compe(buf[3], acYOld,1)){
  2377  03CF  0835               	movf	main@acXOld,w
  2378  03D0  00A0               	movwf	?_compe
  2379  03D1  01A1               	clrf	?_compe+1
  2380  03D2  0AA1               	incf	?_compe+1,f
  2381  03D3  083C               	movf	main@buf+1,w
  2382  03D4  255C               	fcall	_compe
  2383  03D5  3A00               	xorlw	0
  2384  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2385  03D7  1903               	skipnz
  2386  03D8  2BFC               	goto	L10
  2387  03D9  0834               	movf	main@acYOld,w
  2388  03DA  00A0               	movwf	?_compe
  2389  03DB  01A1               	clrf	?_compe+1
  2390  03DC  0AA1               	incf	?_compe+1,f
  2391  03DD  083E               	movf	main@buf+3,w
  2392  03DE  255C               	fcall	_compe
  2393  03DF  3A00               	xorlw	0
  2394                           
  2395                           ;smartkey.C: 608: isWait++;
  2396  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2397  03E1  1903               	skipnz
  2398  03E2  2BFC               	goto	L10
  2399  03E3  0AAF               	incf	main@isWait,f
  2400  03E4  1903               	skipnz
  2401  03E5  0AB0               	incf	main@isWait+1,f
  2402                           
  2403                           ;smartkey.C: 609: if(isWait==450){
  2404  03E6  0330               	decf	main@isWait+1,w
  2405  03E7  30C2               	movlw	194
  2406  03E8  1903               	skipnz
  2407  03E9  062F               	xorwf	main@isWait,w
  2408  03EA  1D03               	skipz
  2409  03EB  2BFE               	goto	l7304
  2410  03EC  3002               	movlw	2
  2411                           
  2412                           ;smartkey.C: 610: isWait = 0;
  2413  03ED  01AF               	clrf	main@isWait
  2414  03EE  01B0               	clrf	main@isWait+1
  2415                           
  2416                           ;smartkey.C: 611: beep(7,2);
  2417  03EF  00A4               	movwf	?_beep
  2418  03F0  3007               	movlw	7
  2419  03F1  26ED               	fcall	_beep
  2420  03F2  302C               	movlw	44
  2421                           
  2422                           ;smartkey.C: 612: vibrateOn=1;
  2423  03F3  01B2               	clrf	main@vibrateOn
  2424  03F4  0AB2               	incf	main@vibrateOn,f
  2425                           
  2426                           ;smartkey.C: 613: RegStatus &=(~0x20);
  2427  03F5  12CA               	bcf	_RegStatus,5
  2428                           
  2429                           ;smartkey.C: 614: setState(2,300);
  2430  03F6  00A0               	movwf	?_setState
  2431  03F7  3001               	movlw	1
  2432  03F8  00A1               	movwf	?_setState+1
  2433  03F9  3002               	movlw	2
  2434  03FA  2778               	fcall	_setState
  2435  03FB  2BFE               	goto	l7304
  2436  03FC                     L10:	
  2437                           ;smartkey.C: 617: else
  2438                           ;smartkey.C: 618: isWait=0;
  2439                           
  2440  03FC  01AF               	clrf	main@isWait
  2441  03FD  01B0               	clrf	main@isWait+1
  2442  03FE                     l7304:	
  2443                           
  2444                           ;smartkey.C: 619: }
  2445                           ;smartkey.C: 621: if( (buf[5] > -31) && (buf[5] < 31)) {
  2446  03FE  0840               	movf	main@buf+5,w
  2447  03FF  3A80               	xorlw	128
  2448  0400  3E9E               	addlw	158
  2449  0401  1C03               	skipc
  2450  0402  2C1A               	goto	l7320
  2451  0403  0840               	movf	main@buf+5,w
  2452  0404  3A80               	xorlw	128
  2453  0405  3E61               	addlw	-159
  2454  0406  1803               	skipnc
  2455  0407  2C1A               	goto	l7320
  2456  0408  3005               	movlw	5
  2457                           
  2458                           ;smartkey.C: 622: isFall++;
  2459  0409  0AB1               	incf	main@isFall,f
  2460                           
  2461                           ;smartkey.C: 623: if(isFall >4){
  2462  040A  0231               	subwf	main@isFall,w
  2463  040B  1C03               	skipc
  2464  040C  2C1B               	goto	l7322
  2465  040D  3002               	movlw	2
  2466                           
  2467                           ;smartkey.C: 624: isFall =0;
  2468  040E  01B1               	clrf	main@isFall
  2469                           
  2470                           ;smartkey.C: 625: beep(7,2);
  2471  040F  00A4               	movwf	?_beep
  2472  0410  3007               	movlw	7
  2473  0411  26ED               	fcall	_beep
  2474  0412  302C               	movlw	44
  2475                           
  2476                           ;smartkey.C: 626: RegStatus &=(~0x20);
  2477  0413  12CA               	bcf	_RegStatus,5
  2478                           
  2479                           ;smartkey.C: 627: setState(2,300);
  2480  0414  00A0               	movwf	?_setState
  2481  0415  3001               	movlw	1
  2482  0416  00A1               	movwf	?_setState+1
  2483  0417  3002               	movlw	2
  2484  0418  2778               	fcall	_setState
  2485  0419  2C1B               	goto	l7322
  2486  041A                     l7320:	
  2487                           
  2488                           ;smartkey.C: 630: else{
  2489                           ;smartkey.C: 631: isFall=0;
  2490  041A  01B1               	clrf	main@isFall
  2491  041B                     l7322:	
  2492                           
  2493                           ;smartkey.C: 632: }
  2494                           ;smartkey.C: 634: acYOld = buf[3];acXOld = buf[1];
  2495  041B  083E               	movf	main@buf+3,w
  2496  041C  00B4               	movwf	main@acYOld
  2497  041D  083C               	movf	main@buf+1,w
  2498  041E  00B5               	movwf	main@acXOld
  2499  041F                     l7326:	
  2500                           
  2501                           ;smartkey.C: 635: }
  2502                           ;smartkey.C: 636: }
  2503                           ;smartkey.C: 639: if((timeTick>tmp16) && (mtState == 0 ) && (accEna ==1)){
  2504  041F  0871               	movf	_timeTick+1,w
  2505  0420  1283               	bcf	3,5	;RP0=0, select bank0
  2506  0421  0244               	subwf	main@tmp16+1,w
  2507  0422  1D03               	skipz
  2508  0423  2C26               	goto	u3705
  2509  0424  0870               	movf	_timeTick,w
  2510  0425  0243               	subwf	main@tmp16,w
  2511  0426                     u3705:	
  2512  0426  1803               	skipnc
  2513  0427  2C6A               	goto	l7358
  2514  0428  08F4               	movf	_mtState,f
  2515  0429  1D03               	skipz
  2516  042A  2C6A               	goto	l7358
  2517  042B  0B36               	decfsz	main@accEna,w
  2518  042C  2C6A               	goto	l7358
  2519                           
  2520                           ;smartkey.C: 641: if(timeTick >65000) timeTick =0;
  2521  042D  30FD               	movlw	253
  2522  042E  0271               	subwf	_timeTick+1,w
  2523  042F  30E9               	movlw	233
  2524  0430  1903               	skipnz
  2525  0431  0270               	subwf	_timeTick,w
  2526  0432  1C03               	skipc
  2527  0433  2C36               	goto	l7336
  2528  0434  01F0               	clrf	_timeTick
  2529  0435  01F1               	clrf	_timeTick+1
  2530  0436                     l7336:	
  2531                           
  2532                           ;smartkey.C: 642: tmp16 = timeTick+40;
  2533  0436  0871               	movf	_timeTick+1,w
  2534  0437  00C4               	movwf	main@tmp16+1
  2535  0438  0870               	movf	_timeTick,w
  2536  0439  00C3               	movwf	main@tmp16
  2537  043A  3028               	movlw	40
  2538  043B  07C3               	addwf	main@tmp16,f
  2539  043C  1803               	skipnc
  2540  043D  0AC4               	incf	main@tmp16+1,f
  2541                           
  2542                           ;smartkey.C: 644: if(AccRead(0x02,buf,6)==0){
  2543  043E  303B               	movlw	main@buf& (0+255)
  2544  043F  00A4               	movwf	?_AccRead
  2545  0440  3000               	movlw	0
  2546  0441  00A5               	movwf	?_AccRead+1
  2547  0442  3006               	movlw	6
  2548  0443  00A6               	movwf	?_AccRead+2
  2549  0444  3002               	movlw	2
  2550  0445  261D               	fcall	_AccRead
  2551  0446  3800               	iorlw	0
  2552                           
  2553                           ;smartkey.C: 646: if(vibrateOn==1){
  2554  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0448  1D03               	skipz
  2556  0449  2C6B               	goto	L11
  2557  044A  0B32               	decfsz	main@vibrateOn,w
  2558  044B  2C6A               	goto	l7358
  2559                           
  2560                           ;smartkey.C: 647: if(compe(buf[1],acXOld ,3) && compe(buf[3],acYOld ,3)){
  2561  044C  0835               	movf	main@acXOld,w
  2562  044D  00A0               	movwf	?_compe
  2563  044E  3003               	movlw	3
  2564  044F  00A1               	movwf	?_compe+1
  2565  0450  083C               	movf	main@buf+1,w
  2566  0451  255C               	fcall	_compe
  2567  0452  3A00               	xorlw	0
  2568  0453  1283               	bcf	3,5	;RP0=0, select bank0
  2569  0454  1903               	skipnz
  2570  0455  2C62               	goto	L12
  2571  0456  0834               	movf	main@acYOld,w
  2572  0457  00A0               	movwf	?_compe
  2573  0458  3003               	movlw	3
  2574  0459  00A1               	movwf	?_compe+1
  2575  045A  083E               	movf	main@buf+3,w
  2576  045B  255C               	fcall	_compe
  2577  045C  3A00               	xorlw	0
  2578                           
  2579                           ;smartkey.C: 649: isSw=0;
  2580  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2581  045E  1903               	skipnz
  2582  045F  2C62               	goto	L12
  2583  0460  01C2               	clrf	main@isSw
  2584                           
  2585                           ;smartkey.C: 650: }
  2586  0461  2C6A               	goto	l7358
  2587  0462                     L12:	
  2588                           ;smartkey.C: 651: else{
  2589                           ;smartkey.C: 652: isSw++;
  2590                           
  2591  0462  0AC2               	incf	main@isSw,f
  2592                           
  2593                           ;smartkey.C: 654: {
  2594                           ;smartkey.C: 655: beepOn();TMR2ON = 0; beep(7,3);
  2595  0463  2799               	fcall	_beepOn
  2596  0464  3003               	movlw	3
  2597  0465  1283               	bcf	3,5	;RP0=0, select bank0
  2598  0466  1112               	bcf	18,2
  2599  0467  00A4               	movwf	?_beep
  2600  0468  3007               	movlw	7
  2601  0469  26ED               	fcall	_beep
  2602  046A                     l7358:	
  2603                           
  2604                           ;smartkey.C: 656: }
  2605                           ;smartkey.C: 657: }
  2606                           ;smartkey.C: 658: }
  2607                           ;smartkey.C: 659: }
  2608                           ;smartkey.C: 660: }
  2609                           ;smartkey.C: 662: if(RegStatus & 0x20) {RC0 =1;RC1 =1;}
  2610  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2611  046B                     L11:	
  2612  046B  1ECA               	btfss	_RegStatus,5
  2613  046C  2C70               	goto	l1001
  2614  046D  1407               	bsf	7,0
  2615  046E  1487               	bsf	7,1
  2616  046F  2C72               	goto	l7362
  2617  0470                     l1001:	
  2618                           
  2619                           ;smartkey.C: 663: else {RC0 =0;RC1 =0;}
  2620  0470  1007               	bcf	7,0
  2621  0471  1087               	bcf	7,1
  2622  0472                     l7362:	
  2623                           
  2624                           ;smartkey.C: 666: if((timeTick >500)&&(READ_EEPROM(0x3F))) WRITE_EEPROM(0x3F,0);
  2625  0472  3001               	movlw	1
  2626  0473  0271               	subwf	_timeTick+1,w
  2627  0474  30F5               	movlw	245
  2628  0475  1903               	skipnz
  2629  0476  0270               	subwf	_timeTick,w
  2630  0477  1C03               	skipc
  2631  0478  2C81               	goto	l7368
  2632  0479  303F               	movlw	63
  2633  047A  276B               	fcall	_READ_EEPROM
  2634  047B  3A00               	xorlw	0
  2635  047C  1903               	skipnz
  2636  047D  2C81               	goto	l7368
  2637  047E  303F               	movlw	63
  2638  047F  01A0               	clrf	?_WRITE_EEPROM
  2639  0480  26BA               	fcall	_WRITE_EEPROM
  2640  0481                     l7368:	
  2641                           
  2642                           ;smartkey.C: 667: if((timeTick >500)&&(READ_EEPROM(0x40))) WRITE_EEPROM(0x40,0);
  2643  0481  3001               	movlw	1
  2644  0482  0271               	subwf	_timeTick+1,w
  2645  0483  30F5               	movlw	245
  2646  0484  1903               	skipnz
  2647  0485  0270               	subwf	_timeTick,w
  2648  0486  1C03               	skipc
  2649  0487  2A18               	goto	l7050
  2650  0488  3040               	movlw	64
  2651  0489  276B               	fcall	_READ_EEPROM
  2652  048A  3A00               	xorlw	0
  2653  048B  1903               	skipnz
  2654  048C  2A18               	goto	l7050
  2655  048D  3040               	movlw	64
  2656  048E  01A0               	clrf	?_WRITE_EEPROM
  2657  048F  26BA               	fcall	_WRITE_EEPROM
  2658  0490  2A18               	goto	l7050
  2659  0491                     __end_of_main:	
  2660                           
  2661                           	psect	swtext1
  2662  0794                     __pswtext1:	
  2663  0794                     S7410:	
  2664  0794  2AF3               	ljmp	l959
  2665  0795  2A25               	ljmp	l7060
  2666  0796  2A2C               	ljmp	l7064
  2667  0797  2A75               	ljmp	l7102
  2668  0798  2A96               	ljmp	l7116
  2669                           
  2670                           	psect	text860
  2671  061D                     __ptext860:	
  2672 ;; =============== function _main ends ============
  2673                           
  2674                           
  2675 ;; *************** function _AccRead *****************
  2676 ;; Defined at:
  2677 ;;		line 31 in file "mpu6x.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  rAdd            1    wreg     unsigned char 
  2680 ;;  dat             2    4[BANK0 ] PTR unsigned char 
  2681 ;;		 -> RAM(256), main@buf(6), 
  2682 ;;  len             1    6[BANK0 ] unsigned char 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  rAdd            1   10[BANK0 ] unsigned char 
  2685 ;;  i               1   11[BANK0 ] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      unsigned char 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 20/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1
  2695 ;;      Params:         0       3       0
  2696 ;;      Locals:         0       2       0
  2697 ;;      Temps:          0       3       0
  2698 ;;      Totals:         0       8       0
  2699 ;;Total ram usage:        8 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    3
  2702 ;; This function calls:
  2703 ;;		_swI2C_Start
  2704 ;;		_swI2C_WriteByte
  2705 ;;		_swI2C_ReadByte
  2706 ;;		_swI2C_Stop
  2707 ;; This function is called by:
  2708 ;;		_main
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711  061D                     _AccRead:	
  2712                           
  2713                           ; Regs used in _AccRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2714                           ;AccRead@rAdd stored from wreg
  2715  061D  00AA               	movwf	AccRead@rAdd
  2716                           
  2717                           ;mpu6x.c: 32: unsigned char i;
  2718                           ;mpu6x.c: 34: swI2C_Start();
  2719  061E  2719               	fcall	_swI2C_Start
  2720                           
  2721                           ;mpu6x.c: 36: if(swI2C_WriteByte(0x18<<1)== 0 )
  2722  061F  3030               	movlw	48
  2723  0620  25E0               	fcall	_swI2C_WriteByte
  2724  0621  3800               	iorlw	0
  2725  0622  1D03               	skipz
  2726  0623  3401               	retlw	1
  2727                           
  2728                           ;mpu6x.c: 37: {
  2729                           ;mpu6x.c: 38: if(swI2C_WriteByte(rAdd)==0 )
  2730  0624  082A               	movf	AccRead@rAdd,w
  2731  0625  25E0               	fcall	_swI2C_WriteByte
  2732  0626  3800               	iorlw	0
  2733  0627  1D03               	skipz
  2734  0628  3402               	retlw	2
  2735                           
  2736                           ;mpu6x.c: 39: {
  2737                           ;mpu6x.c: 40: swI2C_Start();
  2738  0629  2719               	fcall	_swI2C_Start
  2739                           
  2740                           ;mpu6x.c: 41: if(swI2C_WriteByte((0x18<<1)|1)== 0 ){
  2741  062A  3031               	movlw	49
  2742  062B  25E0               	fcall	_swI2C_WriteByte
  2743  062C  3800               	iorlw	0
  2744  062D  1D03               	skipz
  2745  062E  3401               	retlw	1
  2746                           
  2747                           ;mpu6x.c: 43: for(i=0; i<(len-1);i++){
  2748  062F  01AB               	clrf	AccRead@i
  2749  0630                     l6820:	
  2750  0630  0826               	movf	AccRead@len,w
  2751  0631  3EFF               	addlw	255
  2752  0632  00A7               	movwf	??_AccRead
  2753  0633  30FF               	movlw	255
  2754  0634  1803               	skipnc
  2755  0635  3000               	movlw	0
  2756  0636  00A8               	movwf	??_AccRead+1
  2757  0637  3A80               	xorlw	128
  2758  0638  3C80               	sublw	128
  2759  0639  1D03               	skipz
  2760  063A  2E3D               	goto	u3055
  2761  063B  0827               	movf	??_AccRead,w
  2762  063C  022B               	subwf	AccRead@i,w
  2763  063D                     u3055:	
  2764                           
  2765                           ;mpu6x.c: 44: dat[i]=swI2C_ReadByte(1);
  2766  063D  3001               	movlw	1
  2767  063E  1803               	btfsc	3,0
  2768  063F  2E44               	goto	L13
  2769  0640  25A1               	fcall	_swI2C_ReadByte
  2770  0641  2648               	fcall	PL2	;call to abstracted procedure
  2771  0642  0AAB               	incf	AccRead@i,f
  2772  0643  2E30               	goto	l6820
  2773  0644                     L13:	
  2774                           ;mpu6x.c: 45: }
  2775                           ;mpu6x.c: 46: dat[i]=swI2C_ReadByte(1);
  2776                           
  2777  0644  25A1               	fcall	_swI2C_ReadByte
  2778  0645  2648               	fcall	PL2	;call to abstracted procedure
  2779                           
  2780                           ;mpu6x.c: 47: swI2C_Stop();
  2781  0646  275E               	fcall	_swI2C_Stop
  2782                           
  2783                           ;mpu6x.c: 48: return 0;
  2784  0647  3400               	retlw	0
  2785  0648                     __end_of_AccRead:	
  2786                           ;mpu6x.c: 54: else
  2787                           ;mpu6x.c: 55: return 2;
  2788                           
  2789                           ;mpu6x.c: 51: else
  2790                           ;mpu6x.c: 52: return 1;
  2791                           
  2792  0648                     PL2:	
  2793  0648  00A7               	movwf	??_AccRead
  2794  0649  082B               	movf	AccRead@i,w
  2795  064A  0724               	addwf	AccRead@dat,w
  2796  064B  00A8               	movwf	??_AccRead+1
  2797  064C  0825               	movf	AccRead@dat+1,w
  2798  064D  1803               	skipnc
  2799  064E  3E01               	addlw	1
  2800  064F  00A9               	movwf	??_AccRead+2
  2801  0650  0828               	movf	??_AccRead+1,w
  2802  0651  0084               	movwf	4
  2803  0652  1383               	bcf	3,7
  2804  0653  1829               	btfsc	??_AccRead+2,0
  2805  0654  1783               	bsf	3,7
  2806  0655  0827               	movf	??_AccRead,w
  2807  0656  0080               	movwf	0
  2808  0657  0008               	return
  2809                           
  2810                           	psect	text861
  2811  0658                     __ptext861:	
  2812 ;; =============== function _AccRead ends ============
  2813                           
  2814                           
  2815 ;; *************** function _AccWrite *****************
  2816 ;; Defined at:
  2817 ;;		line 4 in file "mpu6x.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  rAdd            1    wreg     unsigned char 
  2820 ;;  dat             2    3[BANK0 ] PTR unsigned char 
  2821 ;;		 -> RAM(256), 
  2822 ;;  len             1    5[BANK0 ] unsigned char 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  rAdd            1    8[BANK0 ] unsigned char 
  2825 ;;  i               1    9[BANK0 ] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      unsigned char 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 20/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1
  2835 ;;      Params:         0       3       0
  2836 ;;      Locals:         0       2       0
  2837 ;;      Temps:          0       2       0
  2838 ;;      Totals:         0       7       0
  2839 ;;Total ram usage:        7 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    3
  2842 ;; This function calls:
  2843 ;;		_swI2C_Start
  2844 ;;		_swI2C_WriteByte
  2845 ;;		_swI2C_Stop
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850  0658                     _AccWrite:	
  2851                           
  2852                           ; Regs used in _AccWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2853                           ;AccWrite@rAdd stored from wreg
  2854  0658  00A8               	movwf	AccWrite@rAdd
  2855                           
  2856                           ;mpu6x.c: 5: unsigned char i;
  2857                           ;mpu6x.c: 6: swI2C_Start();
  2858  0659  2719               	fcall	_swI2C_Start
  2859                           
  2860                           ;mpu6x.c: 8: if(swI2C_WriteByte(0x18<<1)== 0 )
  2861  065A  3030               	movlw	48
  2862  065B  25E0               	fcall	_swI2C_WriteByte
  2863  065C  3800               	iorlw	0
  2864  065D  1D03               	skipz
  2865  065E  3401               	retlw	1
  2866                           
  2867                           ;mpu6x.c: 9: {
  2868                           ;mpu6x.c: 10: if(swI2C_WriteByte(rAdd)==0 )
  2869  065F  0828               	movf	AccWrite@rAdd,w
  2870  0660  25E0               	fcall	_swI2C_WriteByte
  2871  0661  3800               	iorlw	0
  2872  0662  1D03               	skipz
  2873  0663  3402               	retlw	2
  2874                           
  2875                           ;mpu6x.c: 11: {
  2876                           ;mpu6x.c: 12: for(i=0; i<len;i++){
  2877  0664  01A9               	clrf	AccWrite@i
  2878  0665                     l6790:	
  2879  0665  0825               	movf	AccWrite@len,w
  2880  0666  0229               	subwf	AccWrite@i,w
  2881  0667  1803               	btfsc	3,0
  2882  0668  2E7E               	goto	l6792
  2883                           
  2884                           ;mpu6x.c: 13: if(swI2C_WriteByte(dat[i])==1 ){
  2885  0669  0829               	movf	AccWrite@i,w
  2886  066A  0723               	addwf	AccWrite@dat,w
  2887  066B  00A6               	movwf	??_AccWrite
  2888  066C  0824               	movf	AccWrite@dat+1,w
  2889  066D  1803               	skipnc
  2890  066E  3E01               	addlw	1
  2891  066F  00A7               	movwf	??_AccWrite+1
  2892  0670  0826               	movf	??_AccWrite,w
  2893  0671  0084               	movwf	4
  2894  0672  1783               	bsf	3,7
  2895  0673  1C27               	btfss	??_AccWrite+1,0
  2896  0674  1383               	bcf	3,7
  2897  0675  0800               	movf	0,w
  2898  0676  25E0               	fcall	_swI2C_WriteByte
  2899  0677  3A01               	xorlw	1
  2900  0678  1D03               	skipz
  2901  0679  2E7C               	goto	l6788
  2902                           
  2903                           ;mpu6x.c: 14: swI2C_Stop();
  2904  067A  275E               	fcall	_swI2C_Stop
  2905                           
  2906                           ;mpu6x.c: 15: return 3;
  2907  067B  3403               	retlw	3
  2908  067C                     l6788:	
  2909  067C  0AA9               	incf	AccWrite@i,f
  2910  067D  2E65               	goto	l6790
  2911  067E                     l6792:	
  2912                           
  2913                           ;mpu6x.c: 16: }
  2914                           ;mpu6x.c: 17: }
  2915                           ;mpu6x.c: 18: swI2C_Stop();
  2916  067E  275E               	fcall	_swI2C_Stop
  2917                           
  2918                           ;mpu6x.c: 19: return 0;
  2919  067F  3400               	retlw	0
  2920  0680                     __end_of_AccWrite:	
  2921                           ;mpu6x.c: 24: else
  2922                           ;mpu6x.c: 25: return 1;
  2923                           
  2924                           ;mpu6x.c: 21: else
  2925                           ;mpu6x.c: 22: return 2;
  2926                           
  2927                           
  2928                           	psect	text862
  2929  05A1                     __ptext862:	
  2930 ;; =============== function _AccWrite ends ============
  2931                           
  2932                           
  2933 ;; *************** function _swI2C_ReadByte *****************
  2934 ;; Defined at:
  2935 ;;		line 112 in file "SWI2C.C"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  Ack             1    wreg     unsigned char 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  Ack             1    1[BANK0 ] unsigned char 
  2940 ;;  i               1    3[BANK0 ] unsigned char 
  2941 ;;  dat             1    2[BANK0 ] unsigned char 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      unsigned char 
  2944 ;; Registers used:
  2945 ;;		wreg, status,2, status,0
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 20/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1
  2951 ;;      Params:         0       0       0
  2952 ;;      Locals:         0       3       0
  2953 ;;      Temps:          0       1       0
  2954 ;;      Totals:         0       4       0
  2955 ;;Total ram usage:        4 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    2
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_AccRead
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964  05A1                     _swI2C_ReadByte:	
  2965                           
  2966                           ; Regs used in _swI2C_ReadByte: [wreg+status,2+status,0]
  2967                           ;swI2C_ReadByte@Ack stored from wreg
  2968  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2969  05A2  00A1               	movwf	swI2C_ReadByte@Ack
  2970  05A3  01A2               	clrf	swI2C_ReadByte@dat
  2971                           
  2972                           ;SWI2C.C: 115: RA7 = 0;
  2973  05A4  1385               	bcf	5,7
  2974                           
  2975                           ;SWI2C.C: 116: TRISA |=0x40;;
  2976  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  2977  05A6  1705               	bsf	5,6	;volatile
  2978                           
  2979                           ;SWI2C.C: 117: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2980  05A7  3005               	movlw	5
  2981  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  2982  05A9  00A0               	movwf	??_swI2C_ReadByte
  2983  05AA                     u3927:	
  2984  05AA  0BA0               	decfsz	??_swI2C_ReadByte,f
  2985  05AB  2DAA               	goto	u3927
  2986                           
  2987                           ;SWI2C.C: 118: for(i=0;i<8;i++)
  2988  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  2989  05AD  01A3               	clrf	swI2C_ReadByte@i
  2990  05AE                     l2610:	
  2991  05AE  3005               	movlw	5
  2992                           
  2993                           ;SWI2C.C: 119: {
  2994                           ;SWI2C.C: 120: RA7 = 1;
  2995  05AF  1785               	bsf	5,7
  2996                           
  2997                           ;SWI2C.C: 121: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2998  05B0  00A0               	movwf	??_swI2C_ReadByte
  2999  05B1                     u3937:	
  3000  05B1  0BA0               	decfsz	??_swI2C_ReadByte,f
  3001  05B2  2DB1               	goto	u3937
  3002                           
  3003                           ;SWI2C.C: 122: dat = dat<<1 |(RA6 & 1 );
  3004  05B3  3000               	movlw	0
  3005  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  3006  05B5  1B05               	btfsc	5,6
  3007  05B6  3001               	movlw	1
  3008  05B7  3901               	andlw	1
  3009  05B8  00A0               	movwf	??_swI2C_ReadByte
  3010  05B9  1003               	clrc
  3011  05BA  0D22               	rlf	swI2C_ReadByte@dat,w
  3012  05BB  0420               	iorwf	??_swI2C_ReadByte,w
  3013  05BC  00A2               	movwf	swI2C_ReadByte@dat
  3014  05BD  3005               	movlw	5
  3015                           
  3016                           ;SWI2C.C: 125: RA7 = 0;
  3017  05BE  1385               	bcf	5,7
  3018                           
  3019                           ;SWI2C.C: 126: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3020  05BF  00A0               	movwf	??_swI2C_ReadByte
  3021  05C0                     u3947:	
  3022  05C0  0BA0               	decfsz	??_swI2C_ReadByte,f
  3023  05C1  2DC0               	goto	u3947
  3024  05C2  3008               	movlw	8
  3025  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3026  05C4  0AA3               	incf	swI2C_ReadByte@i,f
  3027  05C5  0223               	subwf	swI2C_ReadByte@i,w
  3028  05C6  1C03               	skipc
  3029  05C7  2DAE               	goto	l2610
  3030                           
  3031                           ;SWI2C.C: 127: }
  3032                           ;SWI2C.C: 129: TRISA &=0xbf;;
  3033  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  3034  05C9  1305               	bcf	5,6	;volatile
  3035                           
  3036                           ;SWI2C.C: 131: RA6 = (Ack) ? 0 : 1;
  3037  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  3038  05CB  08A1               	movf	swI2C_ReadByte@Ack,f
  3039  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  3040  05CD  1D03               	btfss	3,2
  3041  05CE  2DD1               	goto	L14
  3042  05CF  1705               	bsf	5,6
  3043  05D0  2DD2               	goto	u2974
  3044  05D1                     L14:	
  3045  05D1  1305               	bcf	5,6
  3046  05D2                     u2974:	
  3047  05D2  3005               	movlw	5
  3048                           
  3049                           ;SWI2C.C: 132: RA7 = 1;
  3050  05D3  1785               	bsf	5,7
  3051                           
  3052                           ;SWI2C.C: 133: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3053  05D4  00A0               	movwf	??_swI2C_ReadByte
  3054  05D5                     u3957:	
  3055  05D5  0BA0               	decfsz	??_swI2C_ReadByte,f
  3056  05D6  2DD5               	goto	u3957
  3057  05D7  3005               	movlw	5
  3058                           
  3059                           ;SWI2C.C: 134: RA7 = 0;
  3060  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  3061  05D9  1385               	bcf	5,7
  3062                           
  3063                           ;SWI2C.C: 135: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3064  05DA  00A0               	movwf	??_swI2C_ReadByte
  3065  05DB                     u3967:	
  3066  05DB  0BA0               	decfsz	??_swI2C_ReadByte,f
  3067  05DC  2DDB               	goto	u3967
  3068                           
  3069                           ;SWI2C.C: 136: return dat;
  3070  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3071  05DE  0822               	movf	swI2C_ReadByte@dat,w
  3072  05DF  0008               	return
  3073  05E0                     __end_of_swI2C_ReadByte:	
  3074                           
  3075                           	psect	text863
  3076  05E0                     __ptext863:	
  3077 ;; =============== function _swI2C_ReadByte ends ============
  3078                           
  3079                           
  3080 ;; *************** function _swI2C_WriteByte *****************
  3081 ;; Defined at:
  3082 ;;		line 86 in file "SWI2C.C"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  dat             1    wreg     unsigned char 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  dat             1    1[BANK0 ] unsigned char 
  3087 ;;  i               1    2[BANK0 ] unsigned char 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      unsigned char 
  3090 ;; Registers used:
  3091 ;;		wreg, status,2, status,0
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 20/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1
  3097 ;;      Params:         0       0       0
  3098 ;;      Locals:         0       2       0
  3099 ;;      Temps:          0       1       0
  3100 ;;      Totals:         0       3       0
  3101 ;;Total ram usage:        3 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:    2
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_AccWrite
  3108 ;;		_AccRead
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111  05E0                     _swI2C_WriteByte:	
  3112                           
  3113                           ; Regs used in _swI2C_WriteByte: [wreg+status,2+status,0]
  3114                           ;swI2C_WriteByte@dat stored from wreg
  3115  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  3116  05E1  00A1               	movwf	swI2C_WriteByte@dat
  3117                           
  3118                           ;SWI2C.C: 89: TRISA &=0xbf;;
  3119  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  3120  05E3  1305               	bcf	5,6	;volatile
  3121                           
  3122                           ;SWI2C.C: 90: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3123  05E4  3005               	movlw	5
  3124  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3125  05E6  00A0               	movwf	??_swI2C_WriteByte
  3126  05E7                     u3977:	
  3127  05E7  0BA0               	decfsz	??_swI2C_WriteByte,f
  3128  05E8  2DE7               	goto	u3977
  3129                           
  3130                           ;SWI2C.C: 91: for(i=0;i<8;i++)
  3131  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  3132  05EA  01A2               	clrf	swI2C_WriteByte@i
  3133  05EB                     l2605:	
  3134                           
  3135                           ;SWI2C.C: 92: {
  3136                           ;SWI2C.C: 93: RA6 = (dat&0x80) ? 1:0;
  3137  05EB  1FA1               	btfss	swI2C_WriteByte@dat,7
  3138  05EC  2DF0               	goto	u2920
  3139  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  3140  05EE  1705               	bsf	5,6
  3141  05EF  2DF2               	goto	u2934
  3142  05F0                     u2920:	
  3143  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  3144  05F1  1305               	bcf	5,6
  3145  05F2                     u2934:	
  3146  05F2  3005               	movlw	5
  3147                           
  3148                           ;SWI2C.C: 94: dat<<=1;
  3149  05F3  1003               	clrc
  3150  05F4  0DA1               	rlf	swI2C_WriteByte@dat,f
  3151                           
  3152                           ;SWI2C.C: 95: RA7 = 1;
  3153  05F5  1785               	bsf	5,7
  3154                           
  3155                           ;SWI2C.C: 96: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3156  05F6  00A0               	movwf	??_swI2C_WriteByte
  3157  05F7                     u3987:	
  3158  05F7  0BA0               	decfsz	??_swI2C_WriteByte,f
  3159  05F8  2DF7               	goto	u3987
  3160  05F9  3005               	movlw	5
  3161                           
  3162                           ;SWI2C.C: 97: RA7 = 0;
  3163  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3164  05FB  1385               	bcf	5,7
  3165                           
  3166                           ;SWI2C.C: 98: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3167  05FC  00A0               	movwf	??_swI2C_WriteByte
  3168  05FD                     u3997:	
  3169  05FD  0BA0               	decfsz	??_swI2C_WriteByte,f
  3170  05FE  2DFD               	goto	u3997
  3171  05FF  3008               	movlw	8
  3172  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3173  0601  0AA2               	incf	swI2C_WriteByte@i,f
  3174  0602  0222               	subwf	swI2C_WriteByte@i,w
  3175  0603  1C03               	skipc
  3176  0604  2DEB               	goto	l2605
  3177                           
  3178                           ;SWI2C.C: 99: }
  3179                           ;SWI2C.C: 101: TRISA |=0x40;;
  3180  0605  1683               	bsf	3,5	;RP0=1, select bank1
  3181  0606  1705               	bsf	5,6	;volatile
  3182                           
  3183                           ;SWI2C.C: 102: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3184  0607  3005               	movlw	5
  3185  0608  1283               	bcf	3,5	;RP0=0, select bank0
  3186  0609  00A0               	movwf	??_swI2C_WriteByte
  3187  060A                     u4007:	
  3188  060A  0BA0               	decfsz	??_swI2C_WriteByte,f
  3189  060B  2E0A               	goto	u4007
  3190  060C  3005               	movlw	5
  3191                           
  3192                           ;SWI2C.C: 103: RA7 = 1;
  3193  060D  1283               	bcf	3,5	;RP0=0, select bank0
  3194  060E  1785               	bsf	5,7
  3195                           
  3196                           ;SWI2C.C: 104: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3197  060F  00A0               	movwf	??_swI2C_WriteByte
  3198  0610                     u4017:	
  3199  0610  0BA0               	decfsz	??_swI2C_WriteByte,f
  3200  0611  2E10               	goto	u4017
  3201                           
  3202                           ;SWI2C.C: 105: i= RA6;
  3203  0612  3000               	movlw	0
  3204  0613  1283               	bcf	3,5	;RP0=0, select bank0
  3205  0614  1B05               	btfsc	5,6
  3206  0615  3001               	movlw	1
  3207  0616  00A2               	movwf	swI2C_WriteByte@i
  3208                           
  3209                           ;SWI2C.C: 106: RA7 = 0;
  3210  0617  1385               	bcf	5,7
  3211                           
  3212                           ;SWI2C.C: 107: TRISA &=0xbf;;
  3213  0618  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0619  1305               	bcf	5,6	;volatile
  3215                           
  3216                           ;SWI2C.C: 108: return i;
  3217  061A  1283               	bcf	3,5	;RP0=0, select bank0
  3218  061B  0822               	movf	swI2C_WriteByte@i,w
  3219  061C  0008               	return
  3220  061D                     __end_of_swI2C_WriteByte:	
  3221                           
  3222                           	psect	text864
  3223  075E                     __ptext864:	
  3224 ;; =============== function _swI2C_WriteByte ends ============
  3225                           
  3226                           
  3227 ;; *************** function _swI2C_Stop *****************
  3228 ;; Defined at:
  3229 ;;		line 35 in file "SWI2C.C"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;		None               void
  3236 ;; Registers used:
  3237 ;;		wreg
  3238 ;; Tracked objects:
  3239 ;;		On entry : 20/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1
  3243 ;;      Params:         0       0       0
  3244 ;;      Locals:         0       0       0
  3245 ;;      Temps:          0       1       0
  3246 ;;      Totals:         0       1       0
  3247 ;;Total ram usage:        1 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    2
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_AccWrite
  3254 ;;		_AccRead
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257  075E                     _swI2C_Stop:	
  3258  075E  3005               	movlw	5
  3259                           
  3260                           ;SWI2C.C: 37: RA6 = 0;
  3261                           
  3262                           ; Regs used in _swI2C_Stop: [wreg]
  3263  075F  1305               	bcf	5,6
  3264                           
  3265                           ;SWI2C.C: 38: RA7 = 1;
  3266  0760  1785               	bsf	5,7
  3267                           
  3268                           ;SWI2C.C: 39: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3269  0761  00A0               	movwf	??_swI2C_Stop
  3270  0762                     u4027:	
  3271  0762  0BA0               	decfsz	??_swI2C_Stop,f
  3272  0763  2F62               	goto	u4027
  3273  0764  3005               	movlw	5
  3274                           
  3275                           ;SWI2C.C: 40: RA6 = 1;
  3276  0765  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0766  1705               	bsf	5,6
  3278                           
  3279                           ;SWI2C.C: 41: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3280  0767  00A0               	movwf	??_swI2C_Stop
  3281  0768                     u4037:	
  3282  0768  0BA0               	decfsz	??_swI2C_Stop,f
  3283  0769  2F68               	goto	u4037
  3284  076A  0008               	return
  3285  076B                     __end_of_swI2C_Stop:	
  3286                           
  3287                           	psect	text865
  3288  0719                     __ptext865:	
  3289 ;; =============== function _swI2C_Stop ends ============
  3290                           
  3291                           
  3292 ;; *************** function _swI2C_Start *****************
  3293 ;; Defined at:
  3294 ;;		line 22 in file "SWI2C.C"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;		None               void
  3301 ;; Registers used:
  3302 ;;		wreg
  3303 ;; Tracked objects:
  3304 ;;		On entry : 20/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1
  3308 ;;      Params:         0       0       0
  3309 ;;      Locals:         0       0       0
  3310 ;;      Temps:          0       1       0
  3311 ;;      Totals:         0       1       0
  3312 ;;Total ram usage:        1 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    2
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_AccWrite
  3319 ;;		_AccRead
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322  0719                     _swI2C_Start:	
  3323  0719  3005               	movlw	5
  3324                           
  3325                           ;SWI2C.C: 24: RA7 = 1;
  3326                           
  3327                           ; Regs used in _swI2C_Start: [wreg]
  3328  071A  1785               	bsf	5,7
  3329                           
  3330                           ;SWI2C.C: 26: RA6 = 1;
  3331  071B  1705               	bsf	5,6
  3332                           
  3333                           ;SWI2C.C: 27: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3334  071C  00A0               	movwf	??_swI2C_Start
  3335  071D                     u4047:	
  3336  071D  0BA0               	decfsz	??_swI2C_Start,f
  3337  071E  2F1D               	goto	u4047
  3338  071F  3005               	movlw	5
  3339                           
  3340                           ;SWI2C.C: 28: RA6 = 0;
  3341  0720  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0721  1305               	bcf	5,6
  3343                           
  3344                           ;SWI2C.C: 29: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3345  0722  00A0               	movwf	??_swI2C_Start
  3346  0723                     u4057:	
  3347  0723  0BA0               	decfsz	??_swI2C_Start,f
  3348  0724  2F23               	goto	u4057
  3349  0725  3005               	movlw	5
  3350                           
  3351                           ;SWI2C.C: 30: RA7 = 0;
  3352  0726  1283               	bcf	3,5	;RP0=0, select bank0
  3353  0727  1385               	bcf	5,7
  3354                           
  3355                           ;SWI2C.C: 31: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3356  0728  00A0               	movwf	??_swI2C_Start
  3357  0729                     u4067:	
  3358  0729  0BA0               	decfsz	??_swI2C_Start,f
  3359  072A  2F29               	goto	u4067
  3360  072B  0008               	return
  3361  072C                     __end_of_swI2C_Start:	
  3362                           
  3363                           	psect	text866
  3364  0680                     __ptext866:	
  3365 ;; =============== function _swI2C_Start ends ============
  3366                           
  3367                           
  3368 ;; *************** function _swI2C_Init *****************
  3369 ;; Defined at:
  3370 ;;		line 8 in file "SWI2C.C"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;		None               void
  3377 ;; Registers used:
  3378 ;;		wreg
  3379 ;; Tracked objects:
  3380 ;;		On entry : 20/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1
  3384 ;;      Params:         0       0       0
  3385 ;;      Locals:         0       0       0
  3386 ;;      Temps:          0       1       0
  3387 ;;      Totals:         0       1       0
  3388 ;;Total ram usage:        1 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    2
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_main
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397  0680                     _swI2C_Init:	
  3398                           
  3399                           ;SWI2C.C: 10: TRISA &=0xbf;;
  3400                           
  3401                           ; Regs used in _swI2C_Init: [wreg]
  3402  0680  1683               	bsf	3,5	;RP0=1, select bank1
  3403  0681  1305               	bcf	5,6	;volatile
  3404                           
  3405                           ;SWI2C.C: 11: TRISA &=0x7f;;
  3406  0682  1385               	bcf	5,7	;volatile
  3407                           
  3408                           ;SWI2C.C: 12: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3409  0683  3005               	movlw	5
  3410  0684  1283               	bcf	3,5	;RP0=0, select bank0
  3411  0685  00A0               	movwf	??_swI2C_Init
  3412  0686                     u4077:	
  3413  0686  0BA0               	decfsz	??_swI2C_Init,f
  3414  0687  2E86               	goto	u4077
  3415  0688  3005               	movlw	5
  3416                           
  3417                           ;SWI2C.C: 13: RA7 = 1;
  3418  0689  1283               	bcf	3,5	;RP0=0, select bank0
  3419  068A  1785               	bsf	5,7
  3420  068B  1705               	bsf	5,6
  3421                           
  3422                           ;SWI2C.C: 15: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3423  068C  00A0               	movwf	??_swI2C_Init
  3424  068D                     u4087:	
  3425  068D  0BA0               	decfsz	??_swI2C_Init,f
  3426  068E  2E8D               	goto	u4087
  3427                           
  3428                           ;SWI2C.C: 16: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3429  068F  3005               	movlw	5
  3430  0690  1283               	bcf	3,5	;RP0=0, select bank0
  3431  0691  00A0               	movwf	??_swI2C_Init
  3432  0692                     u4097:	
  3433  0692  0BA0               	decfsz	??_swI2C_Init,f
  3434  0693  2E92               	goto	u4097
  3435                           
  3436                           ;SWI2C.C: 17: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3437  0694  3005               	movlw	5
  3438  0695  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0696  00A0               	movwf	??_swI2C_Init
  3440  0697                     u4107:	
  3441  0697  0BA0               	decfsz	??_swI2C_Init,f
  3442  0698  2E97               	goto	u4107
  3443                           
  3444                           ;SWI2C.C: 18: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3445  0699  3005               	movlw	5
  3446  069A  1283               	bcf	3,5	;RP0=0, select bank0
  3447  069B  00A0               	movwf	??_swI2C_Init
  3448  069C                     u4117:	
  3449  069C  0BA0               	decfsz	??_swI2C_Init,f
  3450  069D  2E9C               	goto	u4117
  3451  069E  0008               	return
  3452  069F                     __end_of_swI2C_Init:	
  3453                           
  3454                           	psect	text867
  3455  0784                     __ptext867:	
  3456 ;; =============== function _swI2C_Init ends ============
  3457                           
  3458                           
  3459 ;; *************** function _sys_init *****************
  3460 ;; Defined at:
  3461 ;;		line 3 in file "sysinit.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;		None               void
  3468 ;; Registers used:
  3469 ;;		wreg
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 20/20
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMMON   BANK0   BANK1
  3475 ;;      Params:         0       0       0
  3476 ;;      Locals:         0       0       0
  3477 ;;      Temps:          0       0       0
  3478 ;;      Totals:         0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    2
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_main
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488  0784                     _sys_init:	
  3489                           
  3490                           ;sysinit.c: 21: OSCCON = 0B01010001;
  3491                           
  3492                           ; Regs used in _sys_init: [wreg]
  3493  0784  3051               	movlw	81
  3494  0785  1683               	bsf	3,5	;RP0=1, select bank1
  3495  0786  008F               	movwf	15	;volatile
  3496                           
  3497                           ;sysinit.c: 22: _nop();
  3498  0787  0000               	nop
  3499  0788                     l1794:	
  3500                           ;sysinit.c: 28: while(HTS==0);
  3501                           
  3502  0788  1683               	bsf	3,5	;RP0=1, select bank1
  3503  0789  190F               	btfsc	15,2
  3504  078A  0008               	return
  3505  078B  2F88               	goto	l1794
  3506  078C                     __end_of_sys_init:	
  3507                           
  3508                           	psect	text868
  3509  06ED                     __ptext868:	
  3510 ;; =============== function _sys_init ends ============
  3511                           
  3512                           
  3513 ;; *************** function _beep *****************
  3514 ;; Defined at:
  3515 ;;		line 162 in file "smartkey.C"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  delay           1    wreg     unsigned char 
  3518 ;;  rep             1    4[BANK0 ] unsigned char 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  delay           1    5[BANK0 ] unsigned char 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;		None               void
  3523 ;; Registers used:
  3524 ;;		wreg, status,2, status,0, pclath, cstack
  3525 ;; Tracked objects:
  3526 ;;		On entry : 20/0
  3527 ;;		On exit  : 20/0
  3528 ;;		Unchanged: FFFDF/0
  3529 ;; Data sizes:     COMMON   BANK0   BANK1
  3530 ;;      Params:         0       1       0
  3531 ;;      Locals:         0       1       0
  3532 ;;      Temps:          0       0       0
  3533 ;;      Totals:         0       2       0
  3534 ;;Total ram usage:        2 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:    3
  3537 ;; This function calls:
  3538 ;;		_delay_x10ms
  3539 ;; This function is called by:
  3540 ;;		_main
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543  06ED                     _beep:	
  3544                           
  3545                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  3546                           ;beep@delay stored from wreg
  3547  06ED  00A5               	movwf	beep@delay
  3548  06EE                     l6690:	
  3549                           ;smartkey.C: 163: {
  3550                           ;smartkey.C: 164: while(rep--){
  3551                           
  3552  06EE  03A4               	decf	beep@rep,f
  3553  06EF  0824               	movf	beep@rep,w
  3554  06F0  3AFF               	xorlw	255
  3555  06F1  1903               	btfsc	3,2
  3556  06F2  0008               	return
  3557  06F3  300C               	movlw	12
  3558                           
  3559                           ;smartkey.C: 165: TMR2ON = 1;
  3560  06F4  1512               	bsf	18,2
  3561                           
  3562                           ;smartkey.C: 166: PR2L = 12;
  3563  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  3564  06F6  0091               	movwf	17	;volatile
  3565                           
  3566                           ;smartkey.C: 167: delay_x10ms(delay);
  3567  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  3568  06F8  0825               	movf	beep@delay,w
  3569  06F9  00A0               	movwf	?_delay_x10ms
  3570  06FA  01A1               	clrf	?_delay_x10ms+1
  3571  06FB  272C               	fcall	_delay_x10ms
  3572  06FC  3014               	movlw	20
  3573                           
  3574                           ;smartkey.C: 169: TMR2ON = 0;RA3 =0;
  3575  06FD  1112               	bcf	18,2
  3576  06FE  1185               	bcf	5,3
  3577                           
  3578                           ;smartkey.C: 170: delay_x10ms(20);
  3579  06FF  00A0               	movwf	?_delay_x10ms
  3580  0700  01A1               	clrf	?_delay_x10ms+1
  3581  0701  272C               	fcall	_delay_x10ms
  3582  0702  2EEE               	goto	l6690
  3583  0703                     __end_of_beep:	
  3584                           
  3585                           	psect	text869
  3586  0517                     __ptext869:	
  3587 ;; =============== function _beep ends ============
  3588                           
  3589                           
  3590 ;; *************** function ___awdiv *****************
  3591 ;; Defined at:
  3592 ;;		line 5 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\awdiv.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  divisor         2    0[BANK0 ] int 
  3595 ;;  dividend        2    2[BANK0 ] int 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;  quotient        2    6[BANK0 ] int 
  3598 ;;  sign            1    5[BANK0 ] unsigned char 
  3599 ;;  counter         1    4[BANK0 ] unsigned char 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  2    0[BANK0 ] int 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0
  3604 ;; Tracked objects:
  3605 ;;		On entry : 20/0
  3606 ;;		On exit  : 20/0
  3607 ;;		Unchanged: FFFDF/0
  3608 ;; Data sizes:     COMMON   BANK0   BANK1
  3609 ;;      Params:         0       4       0
  3610 ;;      Locals:         0       4       0
  3611 ;;      Temps:          0       0       0
  3612 ;;      Totals:         0       8       0
  3613 ;;Total ram usage:        8 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    2
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_main
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622  0517                     ___awdiv:	
  3623                           
  3624                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3625  0517  01A5               	clrf	___awdiv@sign
  3626  0518  1FA1               	btfss	___awdiv@divisor+1,7
  3627  0519  2D21               	goto	l6642
  3628  051A  09A0               	comf	___awdiv@divisor,f
  3629  051B  09A1               	comf	___awdiv@divisor+1,f
  3630  051C  0AA0               	incf	___awdiv@divisor,f
  3631  051D  1903               	skipnz
  3632  051E  0AA1               	incf	___awdiv@divisor+1,f
  3633  051F  01A5               	clrf	___awdiv@sign
  3634  0520  0AA5               	incf	___awdiv@sign,f
  3635  0521                     l6642:	
  3636  0521  1FA3               	btfss	___awdiv@dividend+1,7
  3637  0522  2D2A               	goto	l6648
  3638  0523  09A2               	comf	___awdiv@dividend,f
  3639  0524  09A3               	comf	___awdiv@dividend+1,f
  3640  0525  0AA2               	incf	___awdiv@dividend,f
  3641  0526  1903               	skipnz
  3642  0527  0AA3               	incf	___awdiv@dividend+1,f
  3643  0528  3001               	movlw	1
  3644  0529  06A5               	xorwf	___awdiv@sign,f
  3645  052A                     l6648:	
  3646  052A  01A6               	clrf	___awdiv@quotient
  3647  052B  01A7               	clrf	___awdiv@quotient+1
  3648  052C  0821               	movf	___awdiv@divisor+1,w
  3649  052D  0420               	iorwf	___awdiv@divisor,w
  3650  052E  1903               	skipnz
  3651  052F  2D4F               	goto	l6670
  3652  0530  01A4               	clrf	___awdiv@counter
  3653  0531                     L15:	
  3654  0531  0AA4               	incf	___awdiv@counter,f
  3655  0532  1BA1               	btfsc	___awdiv@divisor+1,7
  3656  0533  2D38               	goto	l6658
  3657  0534  1003               	clrc
  3658  0535  0DA0               	rlf	___awdiv@divisor,f
  3659  0536  0DA1               	rlf	___awdiv@divisor+1,f
  3660  0537  2D31               	goto	L15
  3661  0538                     l6658:	
  3662  0538  1003               	clrc
  3663  0539  0DA6               	rlf	___awdiv@quotient,f
  3664  053A  0DA7               	rlf	___awdiv@quotient+1,f
  3665  053B  0821               	movf	___awdiv@divisor+1,w
  3666  053C  0223               	subwf	___awdiv@dividend+1,w
  3667  053D  1D03               	skipz
  3668  053E  2D41               	goto	u2875
  3669  053F  0820               	movf	___awdiv@divisor,w
  3670  0540  0222               	subwf	___awdiv@dividend,w
  3671  0541                     u2875:	
  3672  0541  1C03               	skipc
  3673  0542  2D4B               	goto	L16
  3674  0543  0820               	movf	___awdiv@divisor,w
  3675  0544  02A2               	subwf	___awdiv@dividend,f
  3676  0545  0821               	movf	___awdiv@divisor+1,w
  3677  0546  1C03               	skipc
  3678  0547  03A3               	decf	___awdiv@dividend+1,f
  3679  0548  02A3               	subwf	___awdiv@dividend+1,f
  3680  0549  1426               	bsf	___awdiv@quotient,0
  3681  054A  1003               	clrc
  3682  054B                     L16:	
  3683  054B  0CA1               	rrf	___awdiv@divisor+1,f
  3684  054C  0CA0               	rrf	___awdiv@divisor,f
  3685  054D  0BA4               	decfsz	___awdiv@counter,f
  3686  054E  2D38               	goto	l6658
  3687  054F                     l6670:	
  3688  054F  0825               	movf	___awdiv@sign,w
  3689  0550  1903               	btfsc	3,2
  3690  0551  2D57               	goto	l6674
  3691  0552  09A6               	comf	___awdiv@quotient,f
  3692  0553  09A7               	comf	___awdiv@quotient+1,f
  3693  0554  0AA6               	incf	___awdiv@quotient,f
  3694  0555  1903               	skipnz
  3695  0556  0AA7               	incf	___awdiv@quotient+1,f
  3696  0557                     l6674:	
  3697  0557  0827               	movf	___awdiv@quotient+1,w
  3698  0558  00A1               	movwf	?___awdiv+1
  3699  0559  0826               	movf	___awdiv@quotient,w
  3700  055A  00A0               	movwf	?___awdiv
  3701  055B  0008               	return
  3702  055C                     __end_of___awdiv:	
  3703                           
  3704                           	psect	text870
  3705  069F                     __ptext870:	
  3706 ;; =============== function ___awdiv ends ============
  3707                           
  3708                           
  3709 ;; *************** function _int_init *****************
  3710 ;; Defined at:
  3711 ;;		line 83 in file "sysinit.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;  tmp             1    0        unsigned char 
  3716 ;; Return value:  Size  Location     Type
  3717 ;;		None               void
  3718 ;; Registers used:
  3719 ;;		wreg, status,2
  3720 ;; Tracked objects:
  3721 ;;		On entry : 20/0
  3722 ;;		On exit  : 20/0
  3723 ;;		Unchanged: FFFDF/0
  3724 ;; Data sizes:     COMMON   BANK0   BANK1
  3725 ;;      Params:         0       0       0
  3726 ;;      Locals:         0       0       0
  3727 ;;      Temps:          0       0       0
  3728 ;;      Totals:         0       0       0
  3729 ;;Total ram usage:        0 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    2
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_main
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738  069F                     _int_init:	
  3739                           
  3740                           ;sysinit.c: 88: INTCON = 0B00000000;
  3741                           
  3742                           ; Regs used in _int_init: [wreg+status,2]
  3743  069F  018B               	clrf	11	;volatile
  3744                           
  3745                           ;sysinit.c: 89: PIE1 = 0B00000000;
  3746  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  3747  06A1  018C               	clrf	12	;volatile
  3748                           
  3749                           ;sysinit.c: 90: PIR1 = 0B00000000;
  3750  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  3751  06A3  018C               	clrf	12	;volatile
  3752                           
  3753                           ;sysinit.c: 92: IOCA5 = 1;
  3754  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  3755  06A5  1696               	bsf	22,5
  3756                           
  3757                           ;sysinit.c: 93: tmp = PORTA;
  3758  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  3759  06A7  0805               	movf	5,w	;volatile
  3760                           
  3761                           ;sysinit.c: 94: PAIF = 0;
  3762  06A8  100B               	bcf	11,0
  3763                           
  3764                           ;sysinit.c: 95: PAIE = 0;
  3765  06A9  118B               	bcf	11,3
  3766                           
  3767                           ;sysinit.c: 98: INTEDG = 0;
  3768  06AA  1683               	bsf	3,5	;RP0=1, select bank1
  3769  06AB  1301               	bcf	1,6
  3770                           
  3771                           ;sysinit.c: 99: INTF = 0;
  3772  06AC  108B               	bcf	11,1
  3773                           
  3774                           ;sysinit.c: 100: INTE = 1;
  3775  06AD  160B               	bsf	11,4
  3776                           
  3777                           ;sysinit.c: 102: TMR2IF = 0;
  3778  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3779  06AF  108C               	bcf	12,1
  3780                           
  3781                           ;sysinit.c: 103: TMR2IE = 1;
  3782  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  3783  06B1  148C               	bsf	12,1
  3784                           
  3785                           ;sysinit.c: 104: TMR2ON = 0;
  3786  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  3787  06B3  1112               	bcf	18,2
  3788                           
  3789                           ;sysinit.c: 110: T0IF = 0;
  3790  06B4  110B               	bcf	11,2
  3791                           
  3792                           ;sysinit.c: 111: T0IE = 1;
  3793  06B5  168B               	bsf	11,5
  3794                           
  3795                           ;sysinit.c: 112: T0ON = 1;
  3796  06B6  159F               	bsf	31,3
  3797                           
  3798                           ;sysinit.c: 114: PEIE = 1;
  3799  06B7  170B               	bsf	11,6
  3800                           
  3801                           ;sysinit.c: 116: GIE = 1;
  3802  06B8  178B               	bsf	11,7
  3803  06B9  0008               	return
  3804  06BA                     __end_of_int_init:	
  3805                           
  3806                           	psect	text871
  3807  073F                     __ptext871:	
  3808 ;; =============== function _int_init ends ============
  3809                           
  3810                           
  3811 ;; *************** function _timer_init *****************
  3812 ;; Defined at:
  3813 ;;		line 51 in file "sysinit.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;		None
  3818 ;; Return value:  Size  Location     Type
  3819 ;;		None               void
  3820 ;; Registers used:
  3821 ;;		wreg, status,2
  3822 ;; Tracked objects:
  3823 ;;		On entry : 20/0
  3824 ;;		On exit  : 20/0
  3825 ;;		Unchanged: FFFDF/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1
  3827 ;;      Params:         0       0       0
  3828 ;;      Locals:         0       0       0
  3829 ;;      Temps:          0       0       0
  3830 ;;      Totals:         0       0       0
  3831 ;;Total ram usage:        0 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; Hardware stack levels required when called:    2
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_main
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840  073F                     _timer_init:	
  3841                           
  3842                           ;sysinit.c: 60: T0CON0 = 0B00000000;
  3843                           
  3844                           ; Regs used in _timer_init: [wreg+status,2]
  3845  073F  019F               	clrf	31	;volatile
  3846                           
  3847                           ;sysinit.c: 61: OPTION = 0B00000111;
  3848  0740  3007               	movlw	7
  3849  0741  1683               	bsf	3,5	;RP0=1, select bank1
  3850  0742  0081               	movwf	1	;volatile
  3851                           
  3852                           ;sysinit.c: 62: TMR0 = 179;
  3853  0743  30B3               	movlw	179
  3854  0744  1283               	bcf	3,5	;RP0=0, select bank0
  3855  0745  0081               	movwf	1	;volatile
  3856                           
  3857                           ;sysinit.c: 64: TMR2H = 0;
  3858  0746  0193               	clrf	19	;volatile
  3859                           
  3860                           ;sysinit.c: 65: TMR2L = 0;
  3861  0747  0191               	clrf	17	;volatile
  3862                           
  3863                           ;sysinit.c: 66: PR2H = 0;
  3864  0748  1683               	bsf	3,5	;RP0=1, select bank1
  3865  0749  0192               	clrf	18	;volatile
  3866                           
  3867                           ;sysinit.c: 67: PR2L =0;
  3868  074A  0191               	clrf	17	;volatile
  3869                           
  3870                           ;sysinit.c: 68: T2CON0 = 0B00101001;
  3871  074B  3029               	movlw	41
  3872  074C  1283               	bcf	3,5	;RP0=0, select bank0
  3873  074D  0092               	movwf	18	;volatile
  3874  074E  0008               	return
  3875  074F                     __end_of_timer_init:	
  3876                           
  3877                           	psect	text872
  3878  0703                     __ptext872:	
  3879 ;; =============== function _timer_init ends ============
  3880                           
  3881                           
  3882 ;; *************** function _gpio_init *****************
  3883 ;; Defined at:
  3884 ;;		line 32 in file "sysinit.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;		None
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;		None
  3889 ;; Return value:  Size  Location     Type
  3890 ;;		None               void
  3891 ;; Registers used:
  3892 ;;		wreg, status,2
  3893 ;; Tracked objects:
  3894 ;;		On entry : 20/20
  3895 ;;		On exit  : 20/0
  3896 ;;		Unchanged: FFFDF/0
  3897 ;; Data sizes:     COMMON   BANK0   BANK1
  3898 ;;      Params:         0       0       0
  3899 ;;      Locals:         0       0       0
  3900 ;;      Temps:          0       0       0
  3901 ;;      Totals:         0       0       0
  3902 ;;Total ram usage:        0 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:    2
  3905 ;; This function calls:
  3906 ;;		Nothing
  3907 ;; This function is called by:
  3908 ;;		_main
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911  0703                     _gpio_init:	
  3912                           
  3913                           ;sysinit.c: 34: PORTA = 0B00000000;
  3914                           
  3915                           ; Regs used in _gpio_init: [wreg+status,2]
  3916  0703  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0704  0185               	clrf	5	;volatile
  3918                           
  3919                           ;sysinit.c: 35: TRISA = 0B00110111;
  3920  0705  3037               	movlw	55
  3921  0706  1683               	bsf	3,5	;RP0=1, select bank1
  3922  0707  0085               	movwf	5	;volatile
  3923                           
  3924                           ;sysinit.c: 36: WPUA = 0B11000000;
  3925  0708  30C0               	movlw	192
  3926  0709  0095               	movwf	21	;volatile
  3927                           
  3928                           ;sysinit.c: 38: PORTC = 0B00000000;
  3929  070A  1283               	bcf	3,5	;RP0=0, select bank0
  3930  070B  0187               	clrf	7	;volatile
  3931                           
  3932                           ;sysinit.c: 39: TRISC = 0B11111100;
  3933  070C  30FC               	movlw	252
  3934  070D  1683               	bsf	3,5	;RP0=1, select bank1
  3935  070E  0087               	movwf	7	;volatile
  3936                           
  3937                           ;sysinit.c: 40: WPUC = 0B00000000;
  3938  070F  0193               	clrf	19	;volatile
  3939                           
  3940                           ;sysinit.c: 42: PSRCA = 0B11111111;
  3941  0710  30FF               	movlw	255
  3942  0711  0088               	movwf	8	;volatile
  3943                           
  3944                           ;sysinit.c: 43: PSRCC = 0B11111111;
  3945  0712  0094               	movwf	20	;volatile
  3946                           
  3947                           ;sysinit.c: 44: PSINKA = 0B11111111;
  3948  0713  0097               	movwf	23	;volatile
  3949                           
  3950                           ;sysinit.c: 45: PSINKC = 0B11111111;
  3951  0714  009F               	movwf	31	;volatile
  3952                           
  3953                           ;sysinit.c: 47: MSCON = 0B00110000;
  3954  0715  3030               	movlw	48
  3955  0716  1283               	bcf	3,5	;RP0=0, select bank0
  3956  0717  009B               	movwf	27	;volatile
  3957  0718  0008               	return
  3958  0719                     __end_of_gpio_init:	
  3959                           
  3960                           	psect	text873
  3961  055C                     __ptext873:	
  3962 ;; =============== function _gpio_init ends ============
  3963                           
  3964                           
  3965 ;; *************** function _compe *****************
  3966 ;; Defined at:
  3967 ;;		line 208 in file "smartkey.C"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  a               1    wreg     char 
  3970 ;;  b               1    0[BANK0 ] char 
  3971 ;;  dt              1    1[BANK0 ] char 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  a               1    7[BANK0 ] char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      unsigned char 
  3976 ;; Registers used:
  3977 ;;		wreg
  3978 ;; Tracked objects:
  3979 ;;		On entry : 20/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: FFE00/0
  3982 ;; Data sizes:     COMMON   BANK0   BANK1
  3983 ;;      Params:         0       2       0
  3984 ;;      Locals:         0       1       0
  3985 ;;      Temps:          0       5       0
  3986 ;;      Totals:         0       8       0
  3987 ;;Total ram usage:        8 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    2
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_main
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996  055C                     _compe:	
  3997                           
  3998                           ; Regs used in _compe: [wreg]
  3999                           ;compe@a stored from wreg
  4000  055C  00A7               	movwf	compe@a
  4001                           
  4002                           ;smartkey.C: 210: if(a>b){
  4003  055D  0820               	movf	compe@b,w
  4004  055E  3A80               	xorlw	128
  4005  055F  00A2               	movwf	??_compe
  4006  0560  0827               	movf	compe@a,w
  4007  0561  3A80               	xorlw	128
  4008  0562  02A2               	subwf	??_compe,f
  4009  0563  1803               	skipnc
  4010  0564  2D88               	goto	l6560
  4011                           
  4012                           ;smartkey.C: 211: if((a-b)<=dt) return 1;
  4013  0565  0820               	movf	compe@b,w
  4014  0566  0227               	subwf	compe@a,w
  4015  0567  00A2               	movwf	??_compe
  4016  0568  01A3               	clrf	??_compe+1
  4017  0569  1C03               	skipc
  4018  056A  03A3               	decf	??_compe+1,f
  4019  056B  1BA7               	btfsc	compe@a,7
  4020  056C  03A3               	decf	??_compe+1,f
  4021  056D  1BA0               	btfsc	compe@b,7
  4022  056E  0AA3               	incf	??_compe+1,f
  4023  056F  1283               	bcf	3,5	;RP0=0, select bank0
  4024  0570  2595               	fcall	PL3	;call to abstracted procedure
  4025  0571  1D03               	skipz
  4026  0572  2D75               	goto	u2785
  4027  0573  0822               	movf	??_compe,w
  4028  0574  0224               	subwf	??_compe+2,w
  4029  0575                     u2785:	
  4030  0575  1C03               	skipc
  4031  0576  3400               	retlw	0
  4032  0577  3401               	retlw	1
  4033  0578                     L17:	
  4034                           ;smartkey.C: 215: if((b-a)<=dt) return 1;
  4035                           
  4036  0578  0220               	subwf	compe@b,w
  4037  0579  00A2               	movwf	??_compe
  4038  057A  01A3               	clrf	??_compe+1
  4039  057B  1C03               	skipc
  4040  057C  03A3               	decf	??_compe+1,f
  4041  057D  1BA0               	btfsc	compe@b,7
  4042  057E  03A3               	decf	??_compe+1,f
  4043  057F  1BA7               	btfsc	compe@a,7
  4044  0580  0AA3               	incf	??_compe+1,f
  4045  0581  1283               	bcf	3,5	;RP0=0, select bank0
  4046  0582  2595               	fcall	PL3	;call to abstracted procedure
  4047  0583  1D03               	skipz
  4048  0584  2D75               	goto	u2785
  4049  0585  0822               	movf	??_compe,w
  4050  0586  0224               	subwf	??_compe+2,w
  4051  0587  2D75               	goto	u2785
  4052  0588                     l6560:	
  4053                           ;smartkey.C: 212: else return 0;
  4054                           
  4055                           
  4056                           ;smartkey.C: 214: else if(a<b){
  4057  0588  0827               	movf	compe@a,w
  4058  0589  3A80               	xorlw	128
  4059  058A  00A2               	movwf	??_compe
  4060  058B  0820               	movf	compe@b,w
  4061  058C  3A80               	xorlw	128
  4062  058D  02A2               	subwf	??_compe,f
  4063                           
  4064                           ;smartkey.C: 218: else if(a==b){
  4065  058E  0827               	movf	compe@a,w
  4066  058F  1C03               	btfss	3,0
  4067  0590  2D78               	goto	L17
  4068  0591  0620               	xorwf	compe@b,w
  4069  0592  1903               	btfsc	3,2
  4070  0593  3401               	retlw	1
  4071  0594  3400               	retlw	0
  4072  0595                     __end_of_compe:	
  4073  0595                     PL3:	
  4074  0595  0821               	movf	compe@dt,w
  4075  0596  00A4               	movwf	??_compe+2
  4076  0597  01A5               	clrf	??_compe+3
  4077  0598  1BA4               	btfsc	??_compe+2,7
  4078  0599  03A5               	decf	??_compe+3,f
  4079  059A  0825               	movf	??_compe+3,w
  4080  059B  3A80               	xorlw	128
  4081  059C  00A6               	movwf	??_compe+4
  4082  059D  0823               	movf	??_compe+1,w
  4083  059E  3A80               	xorlw	128
  4084  059F  0226               	subwf	??_compe+4,w
  4085  05A0  0008               	return
  4086                           
  4087                           	psect	text874
  4088  0778                     __ptext874:	
  4089 ;; =============== function _compe ends ============
  4090                           
  4091                           
  4092 ;; *************** function _setState *****************
  4093 ;; Defined at:
  4094 ;;		line 202 in file "smartkey.C"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  stt             1    wreg     unsigned char 
  4097 ;;  _tOut           2    0[BANK0 ] unsigned int 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  stt             1    2[BANK0 ] unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;		None               void
  4102 ;; Registers used:
  4103 ;;		wreg, status,2
  4104 ;; Tracked objects:
  4105 ;;		On entry : 20/0
  4106 ;;		On exit  : 20/0
  4107 ;;		Unchanged: FFFDF/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1
  4109 ;;      Params:         0       2       0
  4110 ;;      Locals:         0       1       0
  4111 ;;      Temps:          0       0       0
  4112 ;;      Totals:         0       3       0
  4113 ;;Total ram usage:        3 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    2
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_main
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122  0778                     _setState:	
  4123                           
  4124                           ; Regs used in _setState: [wreg+status,2]
  4125                           ;setState@stt stored from wreg
  4126  0778  00A2               	movwf	setState@stt
  4127                           
  4128                           ;smartkey.C: 203: mtOldState = mtState;
  4129  0779  0874               	movf	_mtState,w
  4130  077A  00CD               	movwf	_mtOldState
  4131                           
  4132                           ;smartkey.C: 204: mtState = stt;
  4133  077B  0822               	movf	setState@stt,w
  4134  077C  00F4               	movwf	_mtState
  4135                           
  4136                           ;smartkey.C: 205: timeTick =0;
  4137  077D  01F0               	clrf	_timeTick
  4138  077E  01F1               	clrf	_timeTick+1
  4139                           
  4140                           ;smartkey.C: 206: timeOut = _tOut;
  4141  077F  0821               	movf	setState@_tOut+1,w
  4142  0780  00C9               	movwf	_timeOut+1
  4143  0781  0820               	movf	setState@_tOut,w
  4144  0782  00C8               	movwf	_timeOut
  4145  0783  0008               	return
  4146  0784                     __end_of_setState:	
  4147                           
  4148                           	psect	text875
  4149  0799                     __ptext875:	
  4150 ;; =============== function _setState ends ============
  4151                           
  4152                           
  4153 ;; *************** function _beepOn *****************
  4154 ;; Defined at:
  4155 ;;		line 158 in file "smartkey.C"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;		None
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;		None               void
  4162 ;; Registers used:
  4163 ;;		None
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/20
  4166 ;;		On exit  : 20/20
  4167 ;;		Unchanged: FFFDF/0
  4168 ;; Data sizes:     COMMON   BANK0   BANK1
  4169 ;;      Params:         0       0       0
  4170 ;;      Locals:         0       0       0
  4171 ;;      Temps:          0       0       0
  4172 ;;      Totals:         0       0       0
  4173 ;;Total ram usage:        0 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    2
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_main
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182  0799                     _beepOn:	
  4183                           
  4184                           ;smartkey.C: 159: TMR2ON = 1;
  4185                           
  4186                           ; Regs used in _beepOn: []
  4187  0799  1283               	bcf	3,5	;RP0=0, select bank0
  4188  079A  1512               	bsf	18,2
  4189                           
  4190                           ;smartkey.C: 160: TRISA &= 0xf7;
  4191  079B  1683               	bsf	3,5	;RP0=1, select bank1
  4192  079C  1185               	bcf	5,3	;volatile
  4193  079D  0008               	return
  4194  079E                     __end_of_beepOn:	
  4195                           
  4196                           	psect	text876
  4197  079E                     __ptext876:	
  4198 ;; =============== function _beepOn ends ============
  4199                           
  4200                           
  4201 ;; *************** function _beepOff *****************
  4202 ;; Defined at:
  4203 ;;		line 155 in file "smartkey.C"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;		None
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;		None               void
  4210 ;; Registers used:
  4211 ;;		None
  4212 ;; Tracked objects:
  4213 ;;		On entry : 20/0
  4214 ;;		On exit  : 20/20
  4215 ;;		Unchanged: FFFDF/0
  4216 ;; Data sizes:     COMMON   BANK0   BANK1
  4217 ;;      Params:         0       0       0
  4218 ;;      Locals:         0       0       0
  4219 ;;      Temps:          0       0       0
  4220 ;;      Totals:         0       0       0
  4221 ;;Total ram usage:        0 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    2
  4224 ;; This function calls:
  4225 ;;		Nothing
  4226 ;; This function is called by:
  4227 ;;		_main
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230  079E                     _beepOff:	
  4231                           
  4232                           ;smartkey.C: 156: TMR2ON = 0;RA3 =0;TRISA |= 0x08;
  4233                           
  4234                           ; Regs used in _beepOff: []
  4235  079E  1112               	bcf	18,2
  4236  079F  1185               	bcf	5,3
  4237  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  4238  07A1  1585               	bsf	5,3	;volatile
  4239  07A2  0008               	return
  4240  07A3                     __end_of_beepOff:	
  4241                           
  4242                           	psect	text877
  4243  072C                     __ptext877:	
  4244 ;; =============== function _beepOff ends ============
  4245                           
  4246                           
  4247 ;; *************** function _delay_x10ms *****************
  4248 ;; Defined at:
  4249 ;;		line 150 in file "smartkey.C"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  t               2    0[BANK0 ] unsigned int 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  set             2    2[BANK0 ] unsigned int 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;		None               void
  4256 ;; Registers used:
  4257 ;;		wreg
  4258 ;; Tracked objects:
  4259 ;;		On entry : 20/0
  4260 ;;		On exit  : 20/0
  4261 ;;		Unchanged: FFFDF/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1
  4263 ;;      Params:         0       2       0
  4264 ;;      Locals:         0       2       0
  4265 ;;      Temps:          0       0       0
  4266 ;;      Totals:         0       4       0
  4267 ;;Total ram usage:        4 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    2
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_beep
  4274 ;;		_main
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277  072C                     _delay_x10ms:	
  4278                           
  4279                           ;smartkey.C: 151: unsigned int set = t + timeTick;
  4280                           
  4281                           ; Regs used in _delay_x10ms: [wreg]
  4282  072C  0821               	movf	delay_x10ms@t+1,w
  4283  072D  00A3               	movwf	delay_x10ms@set+1
  4284  072E  0820               	movf	delay_x10ms@t,w
  4285  072F  00A2               	movwf	delay_x10ms@set
  4286  0730  0870               	movf	_timeTick,w
  4287  0731  07A2               	addwf	delay_x10ms@set,f
  4288  0732  1803               	skipnc
  4289  0733  0AA3               	incf	delay_x10ms@set+1,f
  4290  0734  0871               	movf	_timeTick+1,w
  4291  0735  07A3               	addwf	delay_x10ms@set+1,f
  4292  0736                     l6534:	
  4293                           ;smartkey.C: 152: while(timeTick < set);
  4294                           
  4295  0736  0823               	movf	delay_x10ms@set+1,w
  4296  0737  0271               	subwf	_timeTick+1,w
  4297  0738  1D03               	skipz
  4298  0739  2F3C               	goto	u2755
  4299  073A  0822               	movf	delay_x10ms@set,w
  4300  073B  0270               	subwf	_timeTick,w
  4301  073C                     u2755:	
  4302  073C  1803               	btfsc	3,0
  4303  073D  0008               	return
  4304  073E  2F36               	goto	l6534
  4305  073F                     __end_of_delay_x10ms:	
  4306                           
  4307                           	psect	text878
  4308  06BA                     __ptext878:	
  4309 ;; =============== function _delay_x10ms ends ============
  4310                           
  4311                           
  4312 ;; *************** function _WRITE_EEPROM *****************
  4313 ;; Defined at:
  4314 ;;		line 189 in file "smartkey.C"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  EEAddr          1    wreg     unsigned char 
  4317 ;;  EEData          1    0[BANK0 ] unsigned char 
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;  EEAddr          1    1[BANK0 ] unsigned char 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;		None               void
  4322 ;; Registers used:
  4323 ;;		wreg
  4324 ;; Tracked objects:
  4325 ;;		On entry : 20/0
  4326 ;;		On exit  : 20/20
  4327 ;;		Unchanged: FFE00/0
  4328 ;; Data sizes:     COMMON   BANK0   BANK1
  4329 ;;      Params:         0       1       0
  4330 ;;      Locals:         0       1       0
  4331 ;;      Temps:          0       0       0
  4332 ;;      Totals:         0       2       0
  4333 ;;Total ram usage:        2 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    2
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_main
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342  06BA                     _WRITE_EEPROM:	
  4343                           
  4344                           ; Regs used in _WRITE_EEPROM: [wreg]
  4345                           ;WRITE_EEPROM@EEAddr stored from wreg
  4346  06BA  00A1               	movwf	WRITE_EEPROM@EEAddr
  4347                           
  4348                           ;smartkey.C: 190: GIE = 0;
  4349  06BB  138B               	bcf	11,7
  4350  06BC                     l874:	
  4351                           ;smartkey.C: 191: while(GIE) asm("clrwdt");
  4352                           
  4353  06BC  1F8B               	btfss	11,7
  4354  06BD  2EC0               	goto	l6526
  4355  06BE  0064               	clrwdt	;#
  4356  06BF  2EBC               	goto	l874
  4357  06C0                     l6526:	
  4358                           
  4359                           ;smartkey.C: 192: EEADR = EEAddr;
  4360  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  4361  06C1  0821               	movf	WRITE_EEPROM@EEAddr,w
  4362  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  4363  06C3  009B               	movwf	27	;volatile
  4364                           
  4365                           ;smartkey.C: 193: EEDAT = EEData;
  4366  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  4367  06C5  0820               	movf	WRITE_EEPROM@EEData,w
  4368  06C6  1683               	bsf	3,5	;RP0=1, select bank1
  4369  06C7  009A               	movwf	26	;volatile
  4370  06C8  3034               	movlw	52
  4371                           
  4372                           ;smartkey.C: 194: EEIF = 0;
  4373  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  4374  06CA  138C               	bcf	12,7
  4375                           
  4376                           ;smartkey.C: 195: EECON1 = 0x34;
  4377  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  4378  06CC  009C               	movwf	28	;volatile
  4379                           
  4380                           ;smartkey.C: 196: WR = 1;
  4381  06CD  141D               	bsf	29,0
  4382  06CE                     l877:	
  4383                           ;smartkey.C: 197: while(WR) asm("clrwdt");
  4384                           
  4385  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  4386  06CF  1C1D               	btfss	29,0
  4387  06D0  2ED3               	goto	l879
  4388  06D1  0064               	clrwdt	;#
  4389  06D2  2ECE               	goto	l877
  4390  06D3                     l879:	
  4391                           
  4392                           ;smartkey.C: 199: GIE = 1;
  4393  06D3  178B               	bsf	11,7
  4394  06D4  0008               	return
  4395  06D5                     __end_of_WRITE_EEPROM:	
  4396                           
  4397                           	psect	text879
  4398  076B                     __ptext879:	
  4399 ;; =============== function _WRITE_EEPROM ends ============
  4400                           
  4401                           
  4402 ;; *************** function _READ_EEPROM *****************
  4403 ;; Defined at:
  4404 ;;		line 178 in file "smartkey.C"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  EEAddr          1    wreg     unsigned char 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  EEAddr          1    0[BANK0 ] unsigned char 
  4409 ;;  ReEepromData    1    1[BANK0 ] unsigned char 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      unsigned char 
  4412 ;; Registers used:
  4413 ;;		wreg
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/20
  4416 ;;		On exit  : 20/0
  4417 ;;		Unchanged: FFFDF/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1
  4419 ;;      Params:         0       0       0
  4420 ;;      Locals:         0       2       0
  4421 ;;      Temps:          0       0       0
  4422 ;;      Totals:         0       2       0
  4423 ;;Total ram usage:        2 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    2
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_main
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432  076B                     _READ_EEPROM:	
  4433                           
  4434                           ; Regs used in _READ_EEPROM: [wreg]
  4435                           ;READ_EEPROM@EEAddr stored from wreg
  4436  076B  1283               	bcf	3,5	;RP0=0, select bank0
  4437  076C  00A0               	movwf	READ_EEPROM@EEAddr
  4438                           
  4439                           ;smartkey.C: 179: unsigned char ReEepromData;
  4440                           ;smartkey.C: 181: EEADR = EEAddr;
  4441  076D  1683               	bsf	3,5	;RP0=1, select bank1
  4442  076E  009B               	movwf	27	;volatile
  4443                           
  4444                           ;smartkey.C: 182: RD = 1;
  4445  076F  141C               	bsf	28,0
  4446                           
  4447                           ;smartkey.C: 183: ReEepromData = EEDAT;
  4448  0770  081A               	movf	26,w	;volatile
  4449  0771  1283               	bcf	3,5	;RP0=0, select bank0
  4450  0772  00A1               	movwf	READ_EEPROM@ReEepromData
  4451                           
  4452                           ;smartkey.C: 184: RD = 0;
  4453  0773  1683               	bsf	3,5	;RP0=1, select bank1
  4454  0774  101C               	bcf	28,0
  4455                           
  4456                           ;smartkey.C: 185: return ReEepromData;
  4457  0775  1283               	bcf	3,5	;RP0=0, select bank0
  4458  0776  0821               	movf	READ_EEPROM@ReEepromData,w
  4459  0777  0008               	return
  4460  0778                     __end_of_READ_EEPROM:	
  4461                           
  4462                           	psect	text880
  4463  0491                     __ptext880:	
  4464 ;; =============== function _READ_EEPROM ends ============
  4465                           
  4466                           
  4467 ;; *************** function _ISR *****************
  4468 ;; Defined at:
  4469 ;;		line 37 in file "smartkey.C"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;		None
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;  tmp             1    4[COMMON] unsigned char 
  4474 ;;  tmp             1    0        unsigned char 
  4475 ;; Return value:  Size  Location     Type
  4476 ;;		None               void
  4477 ;; Registers used:
  4478 ;;		wreg, status,2, status,0, pclath, cstack
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: FFE00/0
  4483 ;; Data sizes:     COMMON   BANK0   BANK1
  4484 ;;      Params:         0       0       0
  4485 ;;      Locals:         1       0       0
  4486 ;;      Temps:          2       0       0
  4487 ;;      Totals:         3       0       0
  4488 ;;Total ram usage:        3 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    1
  4491 ;; This function calls:
  4492 ;;		i1_READ_EEPROM
  4493 ;;		i1_WRITE_EEPROM
  4494 ;; This function is called by:
  4495 ;;		Interrupt level 1
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498  0491                     _ISR:	
  4499                           
  4500                           ;smartkey.C: 41: if(PAIE&&PAIF){
  4501  0491  198B               	btfsc	11,3
  4502  0492  1C0B               	btfss	11,0
  4503  0493  2CA2               	goto	i1l5534
  4504                           
  4505                           ;smartkey.C: 42: tmp = PORTA;
  4506  0494  1283               	bcf	3,5	;RP0=0, select bank0
  4507  0495  0805               	movf	5,w	;volatile
  4508                           
  4509                           ;smartkey.C: 43: PAIF = 0;
  4510  0496  100B               	bcf	11,0
  4511                           
  4512                           ;smartkey.C: 45: if(RA5){
  4513  0497  1E85               	btfss	5,5
  4514  0498  2CA1               	goto	i1l5532
  4515                           
  4516                           ;smartkey.C: 47: if(mode_chek == 0){
  4517  0499  08F3               	movf	_mode_chek,f
  4518  049A  1D03               	skipz
  4519  049B  2CA2               	goto	i1l5534
  4520                           
  4521                           ;smartkey.C: 48: cntCyc = 0;
  4522  049C  01F2               	clrf	_cntCyc
  4523                           
  4524                           ;smartkey.C: 49: cntOff = 0;
  4525  049D  01CB               	clrf	_cntOff
  4526                           
  4527                           ;smartkey.C: 51: mode_chek = 1;
  4528  049E  01F3               	clrf	_mode_chek
  4529  049F  0AF3               	incf	_mode_chek,f
  4530  04A0  2CA2               	goto	i1l5534
  4531  04A1                     i1l5532:	
  4532                           
  4533                           ;smartkey.C: 56: else{
  4534                           ;smartkey.C: 57: cntOff = 0;
  4535  04A1  01CB               	clrf	_cntOff
  4536  04A2                     i1l5534:	
  4537                           
  4538                           ;smartkey.C: 59: }
  4539                           ;smartkey.C: 60: }
  4540                           ;smartkey.C: 62: if(INTE&&INTF){
  4541  04A2  1A0B               	btfsc	11,4
  4542  04A3  1C8B               	btfss	11,1
  4543  04A4  2CB8               	goto	i1l829
  4544                           
  4545                           ;smartkey.C: 63: unsigned char tmp;
  4546                           ;smartkey.C: 64: INTF = 0;
  4547  04A5  108B               	bcf	11,1
  4548                           
  4549                           ;smartkey.C: 66: if( RA2==0){
  4550  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  4551  04A7  1905               	btfsc	5,2
  4552  04A8  2CB8               	goto	i1l829
  4553                           
  4554                           ;smartkey.C: 68: if(timeTick <0x20){
  4555  04A9  3000               	movlw	0
  4556  04AA  0271               	subwf	_timeTick+1,w
  4557  04AB  3020               	movlw	32
  4558  04AC  1903               	skipnz
  4559  04AD  0270               	subwf	_timeTick,w
  4560  04AE  1803               	skipnc
  4561  04AF  2CB7               	goto	i1l831
  4562                           
  4563                           ;smartkey.C: 69: tmp = READ_EEPROM(0x3F);
  4564  04B0  303F               	movlw	63
  4565  04B1  278C               	fcall	i1_READ_EEPROM
  4566  04B2  00F9               	movwf	ISR@tmp_1138
  4567                           
  4568                           ;smartkey.C: 70: WRITE_EEPROM(0x3F,tmp+1);
  4569  04B3  0A79               	incf	ISR@tmp_1138,w
  4570  04B4  00F5               	movwf	?i1_WRITE_EEPROM
  4571  04B5  303F               	movlw	63
  4572  04B6  26D5               	fcall	i1_WRITE_EEPROM
  4573  04B7                     i1l831:	
  4574  04B7  2CB7               	goto	i1l831
  4575  04B8                     i1l829:	
  4576                           
  4577                           ;smartkey.C: 79: }
  4578                           ;smartkey.C: 81: }
  4579                           ;smartkey.C: 84: if (T0IE && T0IF) {
  4580  04B8  1A8B               	btfsc	11,5
  4581  04B9  1D0B               	btfss	11,2
  4582  04BA  2D07               	goto	i1l5592
  4583  04BB  30B3               	movlw	179
  4584                           
  4585                           ;smartkey.C: 85: T0IF = 0;
  4586  04BC  110B               	bcf	11,2
  4587                           
  4588                           ;smartkey.C: 86: TMR0 = 179;
  4589  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  4590  04BE  0081               	movwf	1	;volatile
  4591                           
  4592                           ;smartkey.C: 92: if( mode_chek == 1){
  4593  04BF  0B73               	decfsz	_mode_chek,w
  4594  04C0  2CD9               	goto	i1l5572
  4595                           
  4596                           ;smartkey.C: 94: cntCyc++;
  4597  04C1  0AF2               	incf	_cntCyc,f
  4598                           
  4599                           ;smartkey.C: 96: if(RA5==0){
  4600  04C2  1A85               	btfsc	5,5
  4601  04C3  2CD9               	goto	i1l5572
  4602  04C4  3010               	movlw	16
  4603                           
  4604                           ;smartkey.C: 98: cntOff++;
  4605  04C5  0ACB               	incf	_cntOff,f
  4606                           
  4607                           ;smartkey.C: 100: if(cntOff > 15){
  4608  04C6  024B               	subwf	_cntOff,w
  4609  04C7  1C03               	skipc
  4610  04C8  2CD9               	goto	i1l5572
  4611  04C9  3010               	movlw	16
  4612                           
  4613                           ;smartkey.C: 102: mode_chek = 0;
  4614  04CA  01F3               	clrf	_mode_chek
  4615                           
  4616                           ;smartkey.C: 104: if((cntCyc>15) &&(cntCyc<50)) {
  4617  04CB  0272               	subwf	_cntCyc,w
  4618  04CC  3032               	movlw	50
  4619  04CD  1C03               	skipc
  4620  04CE  2CD5               	goto	L19
  4621  04CF  0272               	subwf	_cntCyc,w
  4622  04D0  1803               	skipnc
  4623  04D1  2CD4               	goto	i1l5568
  4624                           
  4625                           ;smartkey.C: 105: RegStatus |= (0x40);
  4626  04D2  174A               	bsf	_RegStatus,6
  4627                           
  4628                           ;smartkey.C: 106: } else if (cntCyc>=50){
  4629  04D3  2CD8               	goto	i1l840
  4630  04D4                     i1l5568:	
  4631  04D4  3032               	movlw	50
  4632  04D5                     L19:	
  4633  04D5  0272               	subwf	_cntCyc,w
  4634  04D6  1803               	btfsc	3,0
  4635                           
  4636                           ;smartkey.C: 107: RegStatus &= ~(0x40);
  4637  04D7  134A               	bcf	_RegStatus,6
  4638  04D8                     i1l840:	
  4639                           
  4640                           ;smartkey.C: 108: }
  4641                           ;smartkey.C: 110: RegStatus |= 0x80;
  4642  04D8  17CA               	bsf	_RegStatus,7
  4643  04D9                     i1l5572:	
  4644                           
  4645                           ;smartkey.C: 111: }
  4646                           ;smartkey.C: 112: }
  4647                           ;smartkey.C: 121: }
  4648                           ;smartkey.C: 123: timeTick++;
  4649  04D9  0AF0               	incf	_timeTick,f
  4650  04DA  1903               	skipnz
  4651  04DB  0AF1               	incf	_timeTick+1,f
  4652                           
  4653                           ;smartkey.C: 125: if((mtState == 4)||(mtState == 3)){
  4654  04DC  0874               	movf	_mtState,w
  4655  04DD  3A04               	xorlw	4
  4656  04DE  1903               	skipnz
  4657  04DF  2CE4               	goto	i1l5578
  4658  04E0  0874               	movf	_mtState,w
  4659  04E1  3A03               	xorlw	3
  4660  04E2  1D03               	skipz
  4661  04E3  2D07               	goto	i1l5592
  4662  04E4                     i1l5578:	
  4663                           
  4664                           ;smartkey.C: 126: if(timeTick > cntTmp){
  4665  04E4  0871               	movf	_timeTick+1,w
  4666  04E5  0247               	subwf	_cntTmp+1,w
  4667  04E6  1D03               	skipz
  4668  04E7  2CEA               	goto	u156_25
  4669  04E8  0870               	movf	_timeTick,w
  4670  04E9  0246               	subwf	_cntTmp,w
  4671  04EA                     u156_25:	
  4672  04EA  1803               	skipnc
  4673  04EB  2D07               	goto	i1l5592
  4674                           
  4675                           ;smartkey.C: 127: cntTmp = timeTick+38;
  4676  04EC  0871               	movf	_timeTick+1,w
  4677  04ED  00C7               	movwf	_cntTmp+1
  4678  04EE  0870               	movf	_timeTick,w
  4679  04EF  00C6               	movwf	_cntTmp
  4680  04F0  3026               	movlw	38
  4681  04F1  07C6               	addwf	_cntTmp,f
  4682  04F2  1803               	skipnc
  4683  04F3  0AC7               	incf	_cntTmp+1,f
  4684                           
  4685                           ;smartkey.C: 128: if(cntTmp<=timeOut)
  4686  04F4  0847               	movf	_cntTmp+1,w
  4687  04F5  0249               	subwf	_timeOut+1,w
  4688  04F6  1D03               	skipz
  4689  04F7  2CFA               	goto	u157_25
  4690  04F8  0846               	movf	_cntTmp,w
  4691  04F9  0248               	subwf	_timeOut,w
  4692  04FA                     u157_25:	
  4693                           
  4694                           ;smartkey.C: 129: {
  4695                           ;smartkey.C: 130: TMR2IE = 0;
  4696  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  4697  04FB  1C03               	skipc
  4698  04FC  2D08               	goto	L20
  4699  04FD  108C               	bcf	12,1
  4700                           
  4701                           ;smartkey.C: 132: if (PR2L == 20)
  4702  04FE  0811               	movf	17,w	;volatile
  4703  04FF  3A14               	xorlw	20
  4704  0500  1D03               	skipz
  4705  0501  2D04               	goto	i1l5588
  4706                           
  4707                           ;smartkey.C: 133: PR2L = 25;
  4708  0502  3019               	movlw	25
  4709  0503  2D05               	goto	L18
  4710  0504                     i1l5588:	
  4711                           
  4712                           ;smartkey.C: 134: else
  4713                           ;smartkey.C: 135: PR2L = 20;
  4714  0504  3014               	movlw	20
  4715  0505                     L18:	
  4716  0505  0091               	movwf	17	;volatile
  4717                           
  4718                           ;smartkey.C: 136: TMR2IE = 1;
  4719  0506  148C               	bsf	12,1
  4720  0507                     i1l5592:	
  4721                           
  4722                           ;smartkey.C: 137: }
  4723                           ;smartkey.C: 138: }
  4724                           ;smartkey.C: 139: }
  4725                           ;smartkey.C: 140: }
  4726                           ;smartkey.C: 143: if(TMR2IE&&TMR2IF)
  4727  0507  1683               	bsf	3,5	;RP0=1, select bank1
  4728  0508                     L20:	
  4729  0508  1C8C               	btfss	12,1
  4730  0509  2D10               	goto	i1l850
  4731  050A  1283               	bcf	3,5	;RP0=0, select bank0
  4732  050B  1C8C               	btfss	12,1
  4733  050C  2D10               	goto	i1l850
  4734  050D  3008               	movlw	8
  4735                           
  4736                           ;smartkey.C: 144: {
  4737                           ;smartkey.C: 145: TMR2IF = 0;
  4738  050E  108C               	bcf	12,1
  4739                           
  4740                           ;smartkey.C: 146: RA3 =~ RA3;
  4741  050F  0685               	xorwf	5,f
  4742  0510                     i1l850:	
  4743  0510  0878               	movf	??_ISR+1,w
  4744  0511  008A               	movwf	10
  4745  0512  0E77               	swapf	??_ISR^(0+-128),w
  4746  0513  0083               	movwf	3
  4747  0514  0EFE               	swapf	126,f
  4748  0515  0E7E               	swapf	126,w
  4749  0516  0009               	retfie
  4750  0517                     __end_of_ISR:	
  4751                           
  4752                           	psect	intentry
  4753  0004                     __pintentry:	
  4754                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4755                           
  4756  0004                     interrupt_function:	
  4757  007E                     saved_w	set	btemp
  4758  0004  00FE               	movwf	btemp
  4759  0005  0E03               	swapf	3,w
  4760  0006  00F7               	movwf	??_ISR
  4761  0007  080A               	movf	10,w
  4762  0008  00F8               	movwf	??_ISR+1
  4763  0009  2C91               	ljmp	_ISR
  4764                           
  4765                           	psect	text881
  4766  06D5                     __ptext881:	
  4767 ;; =============== function _ISR ends ============
  4768                           
  4769                           
  4770 ;; *************** function i1_WRITE_EEPROM *****************
  4771 ;; Defined at:
  4772 ;;		line 189 in file "smartkey.C"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  WRITE_EEPROM    1    wreg     unsigned char 
  4775 ;;  WRITE_EEPROM    1    0[COMMON] unsigned char 
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;  WRITE_EEPROM    1    1[COMMON] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;		None               void
  4780 ;; Registers used:
  4781 ;;		wreg
  4782 ;; Tracked objects:
  4783 ;;		On entry : 20/20
  4784 ;;		On exit  : 20/20
  4785 ;;		Unchanged: FFE00/0
  4786 ;; Data sizes:     COMMON   BANK0   BANK1
  4787 ;;      Params:         1       0       0
  4788 ;;      Locals:         1       0       0
  4789 ;;      Temps:          0       0       0
  4790 ;;      Totals:         2       0       0
  4791 ;;Total ram usage:        2 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_ISR
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799  06D5                     i1_WRITE_EEPROM:	
  4800                           
  4801                           ; Regs used in i1_WRITE_EEPROM: [wreg]
  4802                           ;i1WRITE_EEPROM@EEAddr stored from wreg
  4803  06D5  00F6               	movwf	i1WRITE_EEPROM@EEAddr
  4804                           
  4805                           ;smartkey.C: 190: GIE = 0;
  4806  06D6  138B               	bcf	11,7
  4807  06D7                     i1l874:	
  4808                           ;smartkey.C: 191: while(GIE) asm("clrwdt");
  4809                           
  4810  06D7  1F8B               	btfss	11,7
  4811  06D8  2EDB               	goto	i1l5772
  4812  06D9  0064               	clrwdt	;#
  4813  06DA  2ED7               	goto	i1l874
  4814  06DB                     i1l5772:	
  4815                           
  4816                           ;smartkey.C: 192: EEADR = EEAddr;
  4817  06DB  0876               	movf	i1WRITE_EEPROM@EEAddr,w
  4818  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  4819  06DD  009B               	movwf	27	;volatile
  4820                           
  4821                           ;smartkey.C: 193: EEDAT = EEData;
  4822  06DE  0875               	movf	i1WRITE_EEPROM@EEData,w
  4823  06DF  009A               	movwf	26	;volatile
  4824  06E0  3034               	movlw	52
  4825                           
  4826                           ;smartkey.C: 194: EEIF = 0;
  4827  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  4828  06E2  138C               	bcf	12,7
  4829                           
  4830                           ;smartkey.C: 195: EECON1 = 0x34;
  4831  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  4832  06E4  009C               	movwf	28	;volatile
  4833                           
  4834                           ;smartkey.C: 196: WR = 1;
  4835  06E5  141D               	bsf	29,0
  4836  06E6                     i1l877:	
  4837                           ;smartkey.C: 197: while(WR) asm("clrwdt");
  4838                           
  4839  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  4840  06E7  1C1D               	btfss	29,0
  4841  06E8  2EEB               	goto	i1l879
  4842  06E9  0064               	clrwdt	;#
  4843  06EA  2EE6               	goto	i1l877
  4844  06EB                     i1l879:	
  4845                           
  4846                           ;smartkey.C: 199: GIE = 1;
  4847  06EB  178B               	bsf	11,7
  4848  06EC  0008               	return
  4849  06ED                     __end_ofi1_WRITE_EEPROM:	
  4850                           
  4851                           	psect	text882
  4852  078C                     __ptext882:	
  4853 ;; =============== function i1_WRITE_EEPROM ends ============
  4854                           
  4855                           
  4856 ;; *************** function i1_READ_EEPROM *****************
  4857 ;; Defined at:
  4858 ;;		line 178 in file "smartkey.C"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  READ_EEPROM     1    wreg     unsigned char 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  READ_EEPROM     1    0[COMMON] unsigned char 
  4863 ;;  READ_EEPROM     1    1[COMMON] unsigned char 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      unsigned char 
  4866 ;; Registers used:
  4867 ;;		wreg
  4868 ;; Tracked objects:
  4869 ;;		On entry : 20/0
  4870 ;;		On exit  : 20/20
  4871 ;;		Unchanged: FFFDF/0
  4872 ;; Data sizes:     COMMON   BANK0   BANK1
  4873 ;;      Params:         0       0       0
  4874 ;;      Locals:         2       0       0
  4875 ;;      Temps:          0       0       0
  4876 ;;      Totals:         2       0       0
  4877 ;;Total ram usage:        2 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		_ISR
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885  078C                     i1_READ_EEPROM:	
  4886                           
  4887                           ; Regs used in i1_READ_EEPROM: [wreg]
  4888                           ;i1READ_EEPROM@EEAddr stored from wreg
  4889  078C  00F5               	movwf	i1READ_EEPROM@EEAddr
  4890                           
  4891                           ;smartkey.C: 179: unsigned char ReEepromData;
  4892                           ;smartkey.C: 181: EEADR = EEAddr;
  4893  078D  1683               	bsf	3,5	;RP0=1, select bank1
  4894  078E  009B               	movwf	27	;volatile
  4895                           
  4896                           ;smartkey.C: 182: RD = 1;
  4897  078F  141C               	bsf	28,0
  4898                           
  4899                           ;smartkey.C: 183: ReEepromData = EEDAT;
  4900  0790  081A               	movf	26,w	;volatile
  4901  0791  00F6               	movwf	i1READ_EEPROM@ReEepromData
  4902                           
  4903                           ;smartkey.C: 184: RD = 0;
  4904  0792  101C               	bcf	28,0
  4905                           
  4906                           ;smartkey.C: 185: return ReEepromData;
  4907  0793  0008               	return
  4908  0794                     __end_ofi1_READ_EEPROM:	
  4909                           
  4910                           	psect	text883
  4911  0000                     __ptext883:	
  4912 ;; =============== function i1_READ_EEPROM ends ============
  4913                           
  4914  007E                     btemp	set	126	;btemp
  4915  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Apr 10 13:50:48 2020

                        pc 0002                         _RD 04E0                         _WR 04E8  
             ___awdiv@sign 0025      __size_of_WRITE_EEPROM 001B                         fsr 0004  
                      _C1R 08CA                        _C2R 08D2                        l923 0206  
                      l862 0000                        l918 0117                        l871 0000  
                      l919 0140                        l880 0000                        l856 0000  
                      l874 06BC                        l962 02D8                        l859 0000  
                      l883 0000                        l963 02C3                        l868 0000  
                      l877 06CE                        l949 0255                        l879 06D3  
                      l959 02F3                        l979 0358                        _GIE 005F  
                      _RA2 002A                        _RA3 002B                        _RC0 0038  
                      _RC1 0039                        _RA5 002D                        _RA6 002E  
                      _RA7 002F               ?_swI2C_Start 0075                        _HTS 047A  
                      _ISR 0491                        _SR0 0CF6                        _SR1 0CF7  
                      _VR0 08C0                        _VR1 08C1                        _VR2 08C2  
                      _VR3 08C3                        _VRR 08C5                        fsr0 0004  
                      indf 0000             _swI2C_ReadByte 05A1                       S7410 0794  
                     ?_ISR 0075                       l1001 0470                       _C1OE 08CD  
                     _C2OE 08D5                       l1800 0000                       _C1ON 08CF  
                     l2610 05AE                       l1803 0000                       l2612 0000  
                     _C2ON 08D7                       l2605 05EB                       l1806 0000  
                     l2607 0000                       l4244 0000                       l2593 0000  
                     l1794 0788                       l7010 0000                       l7002 0000  
                     l2596 0000                       l7020 0192                       l7012 0000  
                     l7004 0157                       l1797 0000                       l7110 0285  
                     l7102 0275                       l7030 0000                       l7014 0165  
                     l7022 01A0                       l7006 0000                       l2599 0000  
                     l7200 0000                       l7112 0000                       l7040 0202  
                     l7202 0000                       l7114 0000                       l7106 0000  
                     l7122 029F                       l7050 0218                       l7042 0000  
                     l7026 01A7                       l7018 0000                       l7300 0000  
                     l7212 0000                       l7204 0000                       l7140 0000  
                     l7124 02AA                       l7116 0296                       l7060 0225  
                     l7036 01E9                       l7044 020A                       l7310 0000  
                     l7230 0000                       l7214 0000                       l7222 035F  
                     l7206 0000                       l7150 0000                       l7134 0000  
                     l7126 0000                       l7118 0000                       l7046 0000  
                     l7038 0000                       l6520 0000                       l6600 0000  
                     l7320 041A                       l7304 03FE                       l7232 0000  
                     l7224 0000                       l7208 0348                       l7240 036E  
                     l7152 0000                       l7136 0000                       l7072 023D  
                     l7064 022C                       l7160 02EB                       l7048 0000  
                     l6530 0000                       l6610 0000                       l6602 0000  
                     l7314 0000                       l7322 041B                       l7250 0000  
                     l7226 0000                       l7170 0000                       l7242 037C  
                     l7154 0000                       l7146 02DB                       l7138 0000  
                     l7082 024E                       l7162 02F4                       l6516 0000  
                     l6524 0000                       l6532 0000                       l6540 0000  
                     l6620 0000                       l6612 0000                       l6604 0000  
                     l6700 0000                       l7340 0000                       l7332 0000  
                     l7324 0000                       l7316 0000                       l7228 0000  
                     l7180 0000                       l7172 0000                       l7148 0000  
                     l7092 0264                       l7084 0000                       l7076 0000  
                     l7068 0000                       l6518 0000                       l6526 06C0  
                     l6534 0736                       l6542 0000                       l6630 0000  
                     l6622 0000                       l6614 0000                       l6606 0000  
                     l6702 0000                       l6710 0000                       l7318 0000  
                     l7270 0000                       l7262 0000                       l7246 0000  
                     l7326 041F                       l7190 0320                       l7182 0000  
                     l7174 030C                       l7094 0000                       l7086 0000  
                     l7078 0000                       l6528 0000                       l6536 0000  
                     l6544 0000                       l6560 0588                       l6632 0000  
                     l6624 0000                       l6616 0000                       l6608 0000  
                     l6640 0000                       l6704 0000                       l6712 0000  
                     l6720 0000                       l7352 0000                       l7344 0000  
                     l7336 0436                       l7280 0000                       l7264 0000  
                     l7272 03C1                       l7248 0000                       l7192 0000  
                     l7184 0000                       l7176 0000                       l7168 0302  
                     l7088 0000                       l7096 0272                       l6538 0000  
                     l6546 0000                       l6626 0000                       l6618 0000  
                     l6650 0000                       l6642 0521                       l6634 0000  
                     l6706 0000                       l6714 0000                       l6730 0000  
                     l6722 0000                       l7362 0472                       l7354 0000  
                     l7338 0000                       l7290 0000                       l7266 0000  
                     l7258 0000                       l7194 0329                       l7186 0000  
                     l7178 0000                       l7098 0000                       l6628 0000  
                     l6660 0000                       l6636 0000                       l6708 0000  
                     l6716 0000                       l6740 0000                       l6732 0000  
                     l6724 0000                       l6820 0630                       l7356 0000  
                     l7284 0000                       l7268 0000                       l7188 0000  
                     l6900 0000                       l6590 0000                       l6670 054F  
                     l6646 0000                       l6742 0000                       l6734 0000  
                     l6718 0000                       l6750 0000                       l7358 046A  
                     l7294 0000                       l7278 0000                       l7198 0331  
                     l6910 0000                       l6592 0000                       l6584 0000  
                     l6672 0000                       l6664 0000                       l6648 052A  
                     l6680 0000                       l6736 0000                       l6728 0000  
                     l6760 0000                       l6752 0000                       l6824 0000  
                     l6808 0000                       l7368 0481                       l7296 0000  
                     l6920 0000                       l6904 0000                       l6586 0000  
                     l6594 0000                       l6674 0557                       l6658 0538  
                     l6682 0000                       l6690 06EE                       l6738 0000  
                     l6770 0000                       l6762 0000                       l6754 0000  
                     l6746 0000                       l6826 0000                       l6818 0000  
                     l7298 0000                       l6930 00C8                       l6914 0089  
                     l6850 0000                       l6588 0000                       l6596 0000  
                     l6668 0000                       l6684 0000                       l6692 0000  
                     l6764 0000                       l6748 0000                       l6932 00CB  
                     l6924 0000                       l6916 00A7                       l6908 0000  
                     l6860 0000                       l6852 0000                       l6844 0000  
                     l6598 0000                       l6686 0000                       l6678 0000  
                     l6694 0000                       l6766 0000                       l6758 0000  
                     l6790 0665                       l6774 0000                       l6950 0000  
                     l6942 00E5                       l6934 0000                       l6926 0000  
                     l6870 0000                       l6862 0000                       l6854 0000  
                     l6846 0000                       l6688 0000                       l6696 0000  
                     l6768 0000                       l6792 067E                       l6784 0000  
                     l6952 0000                       l6944 0000                       l6936 0000  
                     l6880 005B                       l6872 0000                       l6864 0000  
                     l6856 0000                       l6848 0000                       l6698 0000  
                     l6794 0000                       l6970 0000                       l6962 0000  
                     l6954 0000                       l6946 0000                       l6938 00DE  
                     l6890 0000                       l6874 0000                       l6866 0000  
                     l6858 0000                       l6788 067C                       l6972 0110  
                     l6964 0000                       l6948 0000                       l6956 00F6  
                     l6892 0000                       l6884 0000                       l6868 0000  
                     l6990 0000                       l6982 0000                       l6974 0000  
                     l6958 0000                       l6886 0000                       l6894 0076  
                     l6878 0000                       l6992 0000                       l6984 0000  
                     l6976 0000                       l6968 010A                       l6896 0000  
                     l6888 0000                       l6994 0000                       l6986 0000  
                     l6978 0000                       l6898 007D                       l6996 0000  
                     l6988 0000                       _EEIF 0067                       _ANS0 08F0  
                     _ANS1 08F1                       _ANS2 08F2                       _ANS3 08F3  
                     _ANS4 08F4                       _ANS5 08F5                       _ANS6 08F6  
                     _ANS7 08F7                       _ANS8 08F8                       _ANS9 08F9  
                     _T0IE 005D                       _T0IF 005A                       _T0ON 00FB  
                     _IOCB 0116                       u4007 060A                       u3055 063D  
                     u4017 0610                       u4107 0697                       u4027 0762  
                     _PAIE 005B                       _PAIF 0058                       u4117 069C  
                     u4037 0768                       u4047 071D                       _PIE1 008C  
                     u4057 0723                       u3505 02FF                       u4067 0729  
                     u3275 01D8                       u4077 0686                       u3285 01E4  
                     u4087 068D                       u2920 05F0                       u4097 0692  
                     u3705 0426                       u2755 073C                       u3555 0383  
                     _PEIE 005E                       _INTE 005C                       u2934 05F2  
                     _INTF 0059                       u2785 0575                       u2875 0541  
                     u3907 0199                       _PR2H 0092                       u3917 01FC  
                     u3837 0023                       u2974 05D2                       u3927 05AA  
                     u3847 0041                       _PR2L 0091                       u3937 05B1  
                     u3857 0056                       _PIR1 000C                       u3947 05C0  
                     u3867 0092                       u3957 05D5                       u3877 00AD  
                     u3967 05DB                       u3887 00D8                       u3977 05E7  
                     u3897 011F                       u3987 05F7                       u3997 05FD  
                     _TMR0 0001                       _STRA 0CE8                       _STRB 0CE9  
                     _STRC 0CEA                       _STRD 0CEB                       _WREN 0C62  
                     _WPUA 0095                       _WPUB 0115                       _WPUC 0093  
             ?_READ_EEPROM 0075                       _beep 06ED            __end_of_AccRead 0648  
                     _main 000B                       btemp 007E                       start 000A  
             _WRITE_EEPROM 06BA                      ??_ISR 0077                      _C1CH0 08C8  
                    _C1CH1 08C9                      _C2CH0 08D0                      _C2CH1 08D1  
                    ?_beep 0024                      _C1SEN 0CF5                      _C2REN 0CF4  
                    _C1POL 08CC                      _C2POL 08D4                      _C1OUT 08CE  
                    _C2OUT 08D6                      ?_main 0075            __end_of___awdiv 055C  
                    _EEADR 009B                      _EEDAT 009A                      _ANS10 08FA  
                    _ANS11 08FB                      _EEPGD 0C67     __end_of_swI2C_ReadByte 05E0  
                    _ANSEL 011E               AccWrite@rAdd 0028            ___awdiv@divisor 0020  
                    _IOCA5 04B5                      _IOCB4 08B4                      _IOCB5 08B5  
                    _IOCB6 08B6                      _IOCB7 08B7                      _T1GSS 08D9  
                    i1l831 04B7                      i1l840 04D8                      i1l850 0510  
                    i1l829 04B8                      i1l871 0000                      i1l880 0000  
                    i1l874 06D7                      i1l877 06E6                      i1l879 06EB  
          ___awdiv@counter 0024                      _MSCON 001B            __end_of_beepOff 07A3  
                    _VP6EN 08C4                      _TMR2H 0013                      _TMR2L 0011  
                    _PSRCA 0088                      _PSRCC 0094                      _PORTA 0005  
                    _PORTC 0007                      _SRCON 019E                      _PULSR 0CF2  
                    _PULSS 0CF3                      _TRISA 0085                      _TRISC 0087  
                    _VRCON 0118                      _WPUB4 08AC                      _WPUB5 08AD  
                    _WPUB6 08AE                      _WPUB7 08AF                      _compe 055C  
         __end_of_AccWrite 0680                      pclath 000A                      status 0003  
                    wtemp0 007E            _swI2C_WriteByte 05E0       __size_of_delay_x10ms 0013  
           i1_WRITE_EEPROM 06D5               __end_of_beep 0703               __end_of_main 0491  
                   ??_beep 0025                     ??_main 002C            ?_swI2C_ReadByte 0075  
            main@antenSkip 0033              main@reAlertOn 0041                     _C1VREN 08C7  
                   _C2VREN 08C6                     _C2SYNC 08D8                     ?_compe 0020  
                ??_AccRead 0027                     _EEADRH 010F                     _EEDATH 010E  
                   _EECON1 009C           ___awdiv@dividend 0022                     _ANSELH 011F  
                   _MC1OUT 08DF                     _MC2OUT 08DE                     _T0CON0 001F  
                   _T2CON0 0012                     i1l5530 0000                     i1l5522 0000  
                   i1l5532 04A1                     i1l5524 0000                     i1l5516 0000  
                   i1l5550 0000                     i1l5534 04A2                     i1l5552 0000  
                   i1l5544 0000                     i1l5562 0000                     i1l5554 0000  
                   i1l5572 04D9                     i1l5574 0000                     i1l5558 0000  
                   i1l5584 0000                     i1l5568 04D4                     i1l5592 0507  
                   i1l5762 0000                     i1l5770 0000                     i1l5578 04E4  
                   _INTEDG 040E                     i1l5764 0000                     i1l5772 06DB  
                   i1l5588 0504                     i1l5766 0000                     i1l5774 0000  
                   i1l5598 0000                     i1l5776 0000                     _INTCON 000B  
                   u156_25 04EA                     u157_25 04FA                     _OSCCON 008F  
                   _TMR2IE 0461                     _TMR2IF 0061                     _PSINKA 0097  
                   _PSINKC 009F                     _OPTION 0081                     _TMR2ON 0092  
   __end_ofi1_WRITE_EEPROM 06ED            swI2C_ReadByte@i 0023                     _beepOn 0799  
                ??___awdiv 0024                     _cntCyc 0072                     _cntOff 004B  
                   _cntTmp 0046                  ??_beepOff 0020           ___awdiv@quotient 0026  
         __end_of_int_init 06BA                     compe@a 0027                     compe@b 0020  
   __size_ofi1_READ_EEPROM 0008           __end_of_setState 0784              main@vibrateOn 0032  
                   saved_w 007E       __size_of_swI2C_Start 0013    __end_of_swI2C_WriteByte 061D  
         __end_of_sys_init 078C       i1WRITE_EEPROM@EEAddr 0076       i1WRITE_EEPROM@EEData 0075  
     __size_of_READ_EEPROM 000D            ?i1_WRITE_EEPROM 0075             __pcstackCOMMON 0075  
            __end_of_compe 0595                  ?_AccWrite 0023                ISR@tmp_1138 0079  
                  ??_compe 0022                 __pbssBANK0 0046         __size_of_gpio_init 0016  
  READ_EEPROM@ReEepromData 0021              i1_READ_EEPROM 078C                 __pmaintext 000B  
                  ?_beepOn 0075                 __pintentry 0004  i1READ_EEPROM@ReEepromData 0076  
                  _CM1CON0 0119                    _CM2CON0 011A                    _CM2CON1 011B  
               ??_AccWrite 0026                    _AccRead 061D                    _PSTRCON 019D  
               _swI2C_Init 0680                    _STRSYNC 0CEC                 _swI2C_Stop 075E  
         ?_swI2C_WriteByte 0075             ?i1_READ_EEPROM 0075                  AccWrite@i 0029  
                ?_int_init 0075                setState@stt 0022                  ?_setState 0020  
               _mtOldState 004D                    ___awdiv 0517           ??_swI2C_ReadByte 0020  
          __size_of_beepOn 0005                    _beepOff 079E                    beep@rep 0024  
        __end_of_gpio_init 0719                  ?_sys_init 0075               __size_of_ISR 0086  
                  _mtState 0074                    _timeOut 0048                    compe@dt 0021  
                  main@buf 003B       end_of_initialization 075C                 _lostDetect 004C  
            ??_delay_x10ms 0022                 ??_int_init 0020                 ??_setState 0022  
              AccRead@rAdd 002A                 _timer_init 073F                 ??_sys_init 0020  
              ?_swI2C_Init 0075            ??i1_READ_EEPROM 0075                ?_swI2C_Stop 0075  
               main@acXOld 0035                 main@acYOld 0034                 main@accEna 0036  
         ??i1_WRITE_EEPROM 0076                 main@acXsum 0039                 main@acYsum 0037  
               main@isFall 0031         WRITE_EEPROM@EEAddr 0021         WRITE_EEPROM@EEData 0020  
               main@isWait 002F        __end_of_delay_x10ms 073F                AccWrite@dat 0023  
              AccWrite@len 0025             __end_of_beepOn 079E              ??_swI2C_Start 0020  
        __size_of_AccWrite 0028        start_initialization 074F                __end_of_ISR 0517  
            setState@_tOut 0020                  _RegStatus 004A              ??_READ_EEPROM 0020  
            ?_WRITE_EEPROM 0020                   ??_beepOn 0020          READ_EEPROM@EEAddr 0020  
      __size_of_swI2C_Init 001F        __size_of_swI2C_Stop 000D                ?_timer_init 0075  
              __pbssCOMMON 0070              __pcstackBANK0 0020                   ?_AccRead 0024  
      __end_of_swI2C_Start 072C                _delay_x10ms 072C             ??_WRITE_EEPROM 0021  
        __size_of_int_init 001B        __end_of_READ_EEPROM 0778           swI2C_WriteByte@i 0022  
                 ?___awdiv 0020          __size_of_setState 000C                  __ptext860 061D  
                __ptext861 0658                  __ptext870 069F                  __ptext862 05A1  
                __ptext871 073F                  __ptext863 05E0                  __ptext880 0491  
                __ptext872 0703                  __ptext864 075E                  __ptext881 06D5  
                __ptext873 055C                  __ptext865 0719                  __ptext882 078C  
                __ptext874 0778                  __ptext866 0680                  __ptext883 0000  
                __ptext875 0799                  __ptext867 0784                  __ptext859 0000  
                __ptext876 079E                  __ptext868 06ED                  __ptext877 072C  
                __ptext869 0517                  __ptext878 06BA                  __ptext879 076B  
                beep@delay 0025                   ?_beepOff 0075                   AccRead@i 002B  
       swI2C_WriteByte@dat 0021                  __pswtext1 0794          __size_of_sys_init 0008  
                _gpio_init 0703             __size_of_compe 0039                  _mode_chek 0073  
        interrupt_function 0004        __size_of_timer_init 0010   __size_of_swI2C_WriteByte 003D  
               AccRead@dat 0024                 AccRead@len 0026               delay_x10ms@t 0020  
                 _AccWrite 0658                _swI2C_Start 0719                  main@tmp16 0043  
               ?_gpio_init 0075               ??_swI2C_Init 0020           __size_of_AccRead 002B  
             ??_swI2C_Stop 0020                _READ_EEPROM 076B          swI2C_ReadByte@Ack 0021  
        swI2C_ReadByte@dat 0022           __size_of___awdiv 0045           __size_of_beepOff 0005  
       __end_of_swI2C_Init 069F         __end_of_swI2C_Stop 076B       __end_of_WRITE_EEPROM 06D5  
  __size_of_swI2C_ReadByte 003F      __end_ofi1_READ_EEPROM 0794              __size_of_beep 0016  
            __size_of_main 0486                   _int_init 069F                   _setState 0778  
                 _timeTick 0070                   main@isSw 0042                   main@tmp8 0045  
        ??_swI2C_WriteByte 0020               ??_timer_init 0020                   _sys_init 0784  
              ??_gpio_init 0020                   intlevel1 0000               ?_delay_x10ms 0020  
       __end_of_timer_init 074F    __size_ofi1_WRITE_EEPROM 0018        i1READ_EEPROM@EEAddr 0075  
           delay_x10ms@set 0022  
