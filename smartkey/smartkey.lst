

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Apr 23 16:32:09 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text876,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	text877,local,class=CODE,delta=2
    13                           	psect	text878,local,class=CODE,delta=2
    14                           	psect	text879,local,class=CODE,delta=2
    15                           	psect	text880,local,class=CODE,delta=2
    16                           	psect	text881,local,class=CODE,delta=2
    17                           	psect	text882,local,class=CODE,delta=2
    18                           	psect	text883,local,class=CODE,delta=2
    19                           	psect	text884,local,class=CODE,delta=2
    20                           	psect	text885,local,class=CODE,delta=2
    21                           	psect	text886,local,class=CODE,delta=2
    22                           	psect	text887,local,class=CODE,delta=2
    23                           	psect	text888,local,class=CODE,delta=2
    24                           	psect	text889,local,class=CODE,delta=2
    25                           	psect	text890,local,class=CODE,delta=2
    26                           	psect	text891,local,class=CODE,delta=2
    27                           	psect	text892,local,class=CODE,delta=2
    28                           	psect	text893,local,class=CODE,delta=2
    29                           	psect	text894,local,class=CODE,delta=2
    30                           	psect	text895,local,class=CODE,delta=2
    31                           	psect	text896,local,class=CODE,delta=2
    32                           	psect	text897,local,class=CODE,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text898,local,class=CODE,delta=2
    35                           	psect	text899,local,class=CODE,delta=2
    36                           	psect	text900,local,class=CODE,delta=2
    37                           	psect	pa_nodes,global,class=CODE,delta=2
    38                           	dabs	1,0x11E,1
    39                           	dabs	1,0x11F,1
    40                           	dabs	1,0x119,1
    41                           	dabs	1,0x11A,1
    42                           	dabs	1,0x11B,1
    43                           	dabs	1,0x10F,1
    44                           	dabs	1,0x10E,1
    45                           	dabs	1,0x116,1
    46                           	dabs	1,0x19D,1
    47                           	dabs	1,0x19E,1
    48                           	dabs	1,0x118,1
    49                           	dabs	1,0x115,1
    50                           	dabs	1,0x11E,1
    51                           	dabs	1,0x11E,1
    52                           	dabs	1,0x11F,1
    53                           	dabs	1,0x11F,1
    54                           	dabs	1,0x11E,1
    55                           	dabs	1,0x11E,1
    56                           	dabs	1,0x11E,1
    57                           	dabs	1,0x11E,1
    58                           	dabs	1,0x11E,1
    59                           	dabs	1,0x11E,1
    60                           	dabs	1,0x11F,1
    61                           	dabs	1,0x11F,1
    62                           	dabs	1,0x119,1
    63                           	dabs	1,0x119,1
    64                           	dabs	1,0x119,1
    65                           	dabs	1,0x119,1
    66                           	dabs	1,0x119,1
    67                           	dabs	1,0x119,1
    68                           	dabs	1,0x119,1
    69                           	dabs	1,0x19E,1
    70                           	dabs	1,0x118,1
    71                           	dabs	1,0x11A,1
    72                           	dabs	1,0x11A,1
    73                           	dabs	1,0x11A,1
    74                           	dabs	1,0x11A,1
    75                           	dabs	1,0x11A,1
    76                           	dabs	1,0x11A,1
    77                           	dabs	1,0x11A,1
    78                           	dabs	1,0x19E,1
    79                           	dabs	1,0x11B,1
    80                           	dabs	1,0x118,1
    81                           	dabs	1,0x18C,1
    82                           	dabs	1,0x116,1
    83                           	dabs	1,0x116,1
    84                           	dabs	1,0x116,1
    85                           	dabs	1,0x116,1
    86                           	dabs	1,0x11B,1
    87                           	dabs	1,0x11B,1
    88                           	dabs	1,0x19E,1
    89                           	dabs	1,0x19E,1
    90                           	dabs	1,0x19E,1
    91                           	dabs	1,0x19E,1
    92                           	dabs	1,0x19D,1
    93                           	dabs	1,0x19D,1
    94                           	dabs	1,0x19D,1
    95                           	dabs	1,0x19D,1
    96                           	dabs	1,0x19D,1
    97                           	dabs	1,0x11B,1
    98                           	dabs	1,0x118,1
    99                           	dabs	1,0x118,1
   100                           	dabs	1,0x118,1
   101                           	dabs	1,0x118,1
   102                           	dabs	1,0x118,1
   103                           	dabs	1,0x118,1
   104                           	dabs	1,0x115,1
   105                           	dabs	1,0x115,1
   106                           	dabs	1,0x115,1
   107                           	dabs	1,0x115,1
   108                           	dabs	1,0x18C,1
   109                           	dabs	1,0x7E,2
   110  000A                     
   111                           	psect	text876
   112  0000                     __ptext876:	
   113  011E                     _ANSEL	set	286	;_ANSEL
   114  011F                     _ANSELH	set	287	;_ANSELH
   115  0119                     _CM1CON0	set	281	;_CM1CON0
   116  011A                     _CM2CON0	set	282	;_CM2CON0
   117  011B                     _CM2CON1	set	283	;_CM2CON1
   118  010F                     _EEADRH	set	271	;_EEADRH
   119  010E                     _EEDATH	set	270	;_EEDATH
   120  0116                     _IOCB	set	278	;_IOCB
   121  019D                     _PSTRCON	set	413	;_PSTRCON
   122  019E                     _SRCON	set	414	;_SRCON
   123  0118                     _VRCON	set	280	;_VRCON
   124  0115                     _WPUB	set	277	;_WPUB
   125  08F0                     _ANS0	set	2288	;_ANS0
   126  08F1                     _ANS1	set	2289	;_ANS1
   127  08FA                     _ANS10	set	2298	;_ANS10
   128  08FB                     _ANS11	set	2299	;_ANS11
   129  08F2                     _ANS2	set	2290	;_ANS2
   130  08F3                     _ANS3	set	2291	;_ANS3
   131  08F4                     _ANS4	set	2292	;_ANS4
   132  08F5                     _ANS5	set	2293	;_ANS5
   133  08F6                     _ANS6	set	2294	;_ANS6
   134  08F7                     _ANS7	set	2295	;_ANS7
   135  08F8                     _ANS8	set	2296	;_ANS8
   136  08F9                     _ANS9	set	2297	;_ANS9
   137  08C8                     _C1CH0	set	2248	;_C1CH0
   138  08C9                     _C1CH1	set	2249	;_C1CH1
   139  08CD                     _C1OE	set	2253	;_C1OE
   140  08CF                     _C1ON	set	2255	;_C1ON
   141  08CE                     _C1OUT	set	2254	;_C1OUT
   142  08CC                     _C1POL	set	2252	;_C1POL
   143  08CA                     _C1R	set	2250	;_C1R
   144  0CF5                     _C1SEN	set	3317	;_C1SEN
   145  08C7                     _C1VREN	set	2247	;_C1VREN
   146  08D0                     _C2CH0	set	2256	;_C2CH0
   147  08D1                     _C2CH1	set	2257	;_C2CH1
   148  08D5                     _C2OE	set	2261	;_C2OE
   149  08D7                     _C2ON	set	2263	;_C2ON
   150  08D6                     _C2OUT	set	2262	;_C2OUT
   151  08D4                     _C2POL	set	2260	;_C2POL
   152  08D2                     _C2R	set	2258	;_C2R
   153  0CF4                     _C2REN	set	3316	;_C2REN
   154  08D8                     _C2SYNC	set	2264	;_C2SYNC
   155  08C6                     _C2VREN	set	2246	;_C2VREN
   156  0C67                     _EEPGD	set	3175	;_EEPGD
   157  08B4                     _IOCB4	set	2228	;_IOCB4
   158  08B5                     _IOCB5	set	2229	;_IOCB5
   159  08B6                     _IOCB6	set	2230	;_IOCB6
   160  08B7                     _IOCB7	set	2231	;_IOCB7
   161  08DF                     _MC1OUT	set	2271	;_MC1OUT
   162  08DE                     _MC2OUT	set	2270	;_MC2OUT
   163  0CF2                     _PULSR	set	3314	;_PULSR
   164  0CF3                     _PULSS	set	3315	;_PULSS
   165  0CF6                     _SR0	set	3318	;_SR0
   166  0CF7                     _SR1	set	3319	;_SR1
   167  0CE8                     _STRA	set	3304	;_STRA
   168  0CE9                     _STRB	set	3305	;_STRB
   169  0CEA                     _STRC	set	3306	;_STRC
   170  0CEB                     _STRD	set	3307	;_STRD
   171  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   172  08D9                     _T1GSS	set	2265	;_T1GSS
   173  08C4                     _VP6EN	set	2244	;_VP6EN
   174  08C0                     _VR0	set	2240	;_VR0
   175  08C1                     _VR1	set	2241	;_VR1
   176  08C2                     _VR2	set	2242	;_VR2
   177  08C3                     _VR3	set	2243	;_VR3
   178  08C5                     _VRR	set	2245	;_VRR
   179  08AC                     _WPUB4	set	2220	;_WPUB4
   180  08AD                     _WPUB5	set	2221	;_WPUB5
   181  08AE                     _WPUB6	set	2222	;_WPUB6
   182  08AF                     _WPUB7	set	2223	;_WPUB7
   183  0C62                     _WREN	set	3170	;_WREN
   184  000B                     _INTCON	set	11
   185  001B                     _MSCON	set	27
   186  000C                     _PIR1	set	12
   187  0005                     _PORTA	set	5
   188  0007                     _PORTC	set	7
   189  001F                     _T0CON0	set	31
   190  0012                     _T2CON0	set	18
   191  0001                     _TMR0	set	1
   192  0013                     _TMR2H	set	19
   193  0011                     _TMR2L	set	17
   194  0067                     _EEIF	set	103
   195  005F                     _GIE	set	95
   196  005C                     _INTE	set	92
   197  0059                     _INTF	set	89
   198  005B                     _PAIE	set	91
   199  0058                     _PAIF	set	88
   200  005E                     _PEIE	set	94
   201  002A                     _RA2	set	42
   202  002B                     _RA3	set	43
   203  002D                     _RA5	set	45
   204  002E                     _RA6	set	46
   205  002F                     _RA7	set	47
   206  0038                     _RC0	set	56
   207  0039                     _RC1	set	57
   208  005D                     _T0IE	set	93
   209  005A                     _T0IF	set	90
   210  00FB                     _T0ON	set	251
   211  0061                     _TMR2IF	set	97
   212  0092                     _TMR2ON	set	146
   213  009B                     _EEADR	set	155
   214  009C                     _EECON1	set	156
   215  009A                     _EEDAT	set	154
   216  0081                     _OPTION	set	129
   217  008F                     _OSCCON	set	143
   218  008C                     _PIE1	set	140
   219  0092                     _PR2H	set	146
   220  0091                     _PR2L	set	145
   221  0097                     _PSINKA	set	151
   222  009F                     _PSINKC	set	159
   223  0088                     _PSRCA	set	136
   224  0094                     _PSRCC	set	148
   225  0085                     _TRISA	set	133
   226  0087                     _TRISC	set	135
   227  0095                     _WPUA	set	149
   228  0093                     _WPUC	set	147
   229  047A                     _HTS	set	1146
   230  040E                     _INTEDG	set	1038
   231  04B5                     _IOCA5	set	1205
   232  04E0                     _RD	set	1248
   233  0461                     _TMR2IE	set	1121
   234  04E8                     _WR	set	1256
   235                           
   236                           	psect	cinit
   237  06B5                     start_initialization:	
   238                           
   239                           ; Clear objects allocated to COMMON
   240  06B5  01F0               	clrf	__pbssCOMMON& (0+127)
   241  06B6  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   242  06B7  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   243  06B8  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   244  06B9  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   245                           
   246                           ; Clear objects allocated to BANK0
   247  06BA  01C1               	clrf	__pbssBANK0& (0+127)
   248  06BB  01C2               	clrf	(__pbssBANK0+1)& (0+127)
   249  06BC  01C3               	clrf	(__pbssBANK0+2)& (0+127)
   250  06BD  01C4               	clrf	(__pbssBANK0+3)& (0+127)
   251  06BE  01C5               	clrf	(__pbssBANK0+4)& (0+127)
   252  06BF  01C6               	clrf	(__pbssBANK0+5)& (0+127)
   253  06C0                     end_of_initialization:	
   254                           ;End of C runtime variable initialization code
   255                           
   256  06C0  0183               	clrf	3
   257  06C1  280B               	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMMON
   260  0070                     __pbssCOMMON:	
   261  0070                     _timeTick:	
   262  0070                     	ds	2
   263  0072                     _RegStatus:	
   264  0072                     	ds	1
   265  0073                     _cntCyc:	
   266  0073                     	ds	1
   267  0074                     _mtState:	
   268  0074                     	ds	1
   269                           
   270                           	psect	bssBANK0
   271  0041                     __pbssBANK0:	
   272  0041                     _cntTmp:	
   273  0041                     	ds	2
   274  0043                     _timeOut:	
   275  0043                     	ds	2
   276  0045                     _cntOff:	
   277  0045                     	ds	1
   278  0046                     _mtOldState:	
   279  0046                     	ds	1
   280                           
   281                           	psect	cstackCOMMON
   282  0075                     __pcstackCOMMON:	
   283  0075                     ?_sys_init:	
   284  0075                     ?_gpio_init:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0075                     ?_timer_init:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0075                     ?_int_init:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0075                     ?_swI2C_Init:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0075                     ?_ISR:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0075                     ?_beepOff:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0075                     ?_beepOn:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0075                     ?_main:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0075                     ?_swI2C_Start:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0075                     ?_swI2C_Stop:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0075                     ??i1_READ_EEPROM:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0075                     ?i1_WRITE_EEPROM:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0075                     ?_READ_EEPROM:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0075                     ?_swI2C_WriteByte:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0075                     ?_swI2C_ReadByte:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0075                     ?i1_READ_EEPROM:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0075                     i1READ_EEPROM@EEAddr:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0075                     i1WRITE_EEPROM@EEData:	
   336                           ; 1 bytes @ 0x0
   337                           
   338                           
   339                           ; 1 bytes @ 0x0
   340  0075                     	ds	1
   341  0076                     ??i1_WRITE_EEPROM:	
   342  0076                     i1READ_EEPROM@ReEepromData:	
   343                           ; 0 bytes @ 0x1
   344                           
   345  0076                     i1WRITE_EEPROM@EEAddr:	
   346                           ; 1 bytes @ 0x1
   347                           
   348                           
   349                           ; 1 bytes @ 0x1
   350  0076                     	ds	1
   351  0077                     ??_ISR:	
   352                           
   353                           ; 0 bytes @ 0x2
   354  0077                     	ds	2
   355  0079                     ISR@tmp:	
   356                           
   357                           ; 1 bytes @ 0x4
   358  0079                     	ds	1
   359                           
   360                           	psect	cstackBANK0
   361  0020                     __pcstackBANK0:	
   362  0020                     ??_READ_EEPROM:	
   363  0020                     ?_WRITE_EEPROM:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0020                     ??_sys_init:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0020                     ??_gpio_init:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0020                     ??_timer_init:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0020                     ??_int_init:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0020                     ??_swI2C_Init:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0020                     ?_delay_x10ms:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_beepOff:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ??_beepOn:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ?_setState:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_swI2C_Start:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ??_swI2C_Stop:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_swI2C_WriteByte:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ??_swI2C_ReadByte:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ?_compe:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ?___awdiv:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0020                     READ_EEPROM@EEAddr:	
   412                           ; 2 bytes @ 0x0
   413                           
   414  0020                     WRITE_EEPROM@EEData:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0020                     compe@b:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0020                     delay_x10ms@t:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0020                     setState@_tOut:	
   424                           ; 2 bytes @ 0x0
   425                           
   426  0020                     ___awdiv@divisor:	
   427                           ; 2 bytes @ 0x0
   428                           
   429                           
   430                           ; 2 bytes @ 0x0
   431  0020                     	ds	1
   432  0021                     ??_WRITE_EEPROM:	
   433  0021                     READ_EEPROM@ReEepromData:	
   434                           ; 0 bytes @ 0x1
   435                           
   436  0021                     WRITE_EEPROM@EEAddr:	
   437                           ; 1 bytes @ 0x1
   438                           
   439  0021                     compe@dt:	
   440                           ; 1 bytes @ 0x1
   441                           
   442  0021                     swI2C_WriteByte@dat:	
   443                           ; 1 bytes @ 0x1
   444                           
   445  0021                     swI2C_ReadByte@Ack:	
   446                           ; 1 bytes @ 0x1
   447                           
   448                           
   449                           ; 1 bytes @ 0x1
   450  0021                     	ds	1
   451  0022                     ??_delay_x10ms:	
   452  0022                     ??_setState:	
   453                           ; 0 bytes @ 0x2
   454                           
   455  0022                     ??_compe:	
   456                           ; 0 bytes @ 0x2
   457                           
   458  0022                     setState@stt:	
   459                           ; 0 bytes @ 0x2
   460                           
   461  0022                     swI2C_WriteByte@i:	
   462                           ; 1 bytes @ 0x2
   463                           
   464  0022                     swI2C_ReadByte@dat:	
   465                           ; 1 bytes @ 0x2
   466                           
   467  0022                     delay_x10ms@set:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0022                     ___awdiv@dividend:	
   471                           ; 2 bytes @ 0x2
   472                           
   473                           
   474                           ; 2 bytes @ 0x2
   475  0022                     	ds	1
   476  0023                     ?_AccWrite:	
   477  0023                     swI2C_ReadByte@i:	
   478                           ; 1 bytes @ 0x3
   479                           
   480  0023                     AccWrite@dat:	
   481                           ; 1 bytes @ 0x3
   482                           
   483                           
   484                           ; 1 bytes @ 0x3
   485  0023                     	ds	1
   486  0024                     ?_beep:	
   487  0024                     ??___awdiv:	
   488                           ; 0 bytes @ 0x4
   489                           
   490  0024                     ?_AccRead:	
   491                           ; 0 bytes @ 0x4
   492                           
   493  0024                     beep@rep:	
   494                           ; 1 bytes @ 0x4
   495                           
   496  0024                     compe@a:	
   497                           ; 1 bytes @ 0x4
   498                           
   499  0024                     AccWrite@len:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  0024                     AccRead@dat:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0024                     ___awdiv@counter:	
   506                           ; 1 bytes @ 0x4
   507                           
   508                           
   509                           ; 1 bytes @ 0x4
   510  0024                     	ds	1
   511  0025                     ??_AccWrite:	
   512  0025                     ??_beep:	
   513                           ; 0 bytes @ 0x5
   514                           
   515  0025                     beep@delay:	
   516                           ; 0 bytes @ 0x5
   517                           
   518  0025                     AccRead@len:	
   519                           ; 1 bytes @ 0x5
   520                           
   521  0025                     ___awdiv@sign:	
   522                           ; 1 bytes @ 0x5
   523                           
   524                           
   525                           ; 1 bytes @ 0x5
   526  0025                     	ds	1
   527  0026                     ??_AccRead:	
   528  0026                     AccWrite@rAdd:	
   529                           ; 0 bytes @ 0x6
   530                           
   531  0026                     ___awdiv@quotient:	
   532                           ; 1 bytes @ 0x6
   533                           
   534                           
   535                           ; 2 bytes @ 0x6
   536  0026                     	ds	1
   537  0027                     AccWrite@i:	
   538                           
   539                           ; 1 bytes @ 0x7
   540  0027                     	ds	1
   541  0028                     AccRead@rAdd:	
   542                           
   543                           ; 1 bytes @ 0x8
   544  0028                     	ds	1
   545  0029                     AccRead@i:	
   546                           
   547                           ; 1 bytes @ 0x9
   548  0029                     	ds	1
   549  002A                     ??_main:	
   550                           
   551                           ; 0 bytes @ 0xA
   552  002A                     	ds	3
   553  002D                     main@isWait:	
   554                           
   555                           ; 2 bytes @ 0xD
   556  002D                     	ds	2
   557  002F                     main@isFall:	
   558                           
   559                           ; 1 bytes @ 0xF
   560  002F                     	ds	1
   561  0030                     main@lostDetect:	
   562                           
   563                           ; 1 bytes @ 0x10
   564  0030                     	ds	1
   565  0031                     main@acYOld:	
   566                           
   567                           ; 1 bytes @ 0x11
   568  0031                     	ds	1
   569  0032                     main@acXOld:	
   570                           
   571                           ; 1 bytes @ 0x12
   572  0032                     	ds	1
   573  0033                     main@buf:	
   574                           
   575                           ; 6 bytes @ 0x13
   576  0033                     	ds	6
   577  0039                     main@acYsum:	
   578                           
   579                           ; 2 bytes @ 0x19
   580  0039                     	ds	2
   581  003B                     main@acXsum:	
   582                           
   583                           ; 2 bytes @ 0x1B
   584  003B                     	ds	2
   585  003D                     main@isSw:	
   586                           
   587                           ; 1 bytes @ 0x1D
   588  003D                     	ds	1
   589  003E                     main@tmp16:	
   590                           
   591                           ; 2 bytes @ 0x1E
   592  003E                     	ds	2
   593  0040                     main@tmp8:	
   594                           
   595                           ; 1 bytes @ 0x20
   596  0040                     	ds	1
   597                           
   598                           	psect	maintext
   599  000B                     __pmaintext:	
   600 ;;Data sizes: Strings 0, constant 0, data 0, bss 11, persistent 0 stack 0
   601 ;;Auto spaces:   Size  Autos    Used
   602 ;; COMMON          14      5      10
   603 ;; BANK0           80     33      39
   604 ;; BANK1           32      0       0
   605 ;;
   606 ;; Pointer list with targets:
   607 ;; ?___awdiv	int  size(1) Largest target is 0
   608 ;;
   609 ;; AccRead@dat	PTR unsigned char  size(1) Largest target is 6
   610 ;;		 -> main@buf(BANK0[6]), 
   611 ;;
   612 ;; AccWrite@dat	PTR unsigned char  size(1) Largest target is 6
   613 ;;		 -> main@buf(BANK0[6]), 
   614 ;;
   615 ;;
   616 ;; Critical Paths under _main in COMMON
   617 ;;
   618 ;;   None.
   619 ;;
   620 ;; Critical Paths under _ISR in COMMON
   621 ;;
   622 ;;   _ISR->i1_READ_EEPROM
   623 ;;   _ISR->i1_WRITE_EEPROM
   624 ;;
   625 ;; Critical Paths under _main in BANK0
   626 ;;
   627 ;;   _main->_AccRead
   628 ;;   _AccRead->_swI2C_ReadByte
   629 ;;   _AccWrite->_swI2C_WriteByte
   630 ;;   _beep->_delay_x10ms
   631 ;;
   632 ;; Critical Paths under _ISR in BANK0
   633 ;;
   634 ;;   None.
   635 ;;
   636 ;; Critical Paths under _main in BANK1
   637 ;;
   638 ;;   None.
   639 ;;
   640 ;; Critical Paths under _ISR in BANK1
   641 ;;
   642 ;;   None.
   643 ;;
   644 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   645 ;;
   646 ;;
   647 ;;Call Graph Tables:
   648 ;;
   649 ;; ---------------------------------------------------------------------------------
   650 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   651 ;; ---------------------------------------------------------------------------------
   652 ;; (0) _main                                                23    23      0    3897
   653 ;;                                             10 BANK0     23    23      0
   654 ;;                           _sys_init
   655 ;;                          _gpio_init
   656 ;;                         _timer_init
   657 ;;                           _int_init
   658 ;;                         _swI2C_Init
   659 ;;                           _setState
   660 ;;                       _WRITE_EEPROM
   661 ;;                        _READ_EEPROM
   662 ;;                             _beepOn
   663 ;;                           _AccWrite
   664 ;;                               _beep
   665 ;;                            _AccRead
   666 ;;                            ___awdiv
   667 ;;                            _beepOff
   668 ;;                        _delay_x10ms
   669 ;;                              _compe
   670 ;; ---------------------------------------------------------------------------------
   671 ;; (1) _AccRead                                              6     4      2     532
   672 ;;                                              4 BANK0      6     4      2
   673 ;;                        _swI2C_Start
   674 ;;                    _swI2C_WriteByte
   675 ;;                     _swI2C_ReadByte
   676 ;;                         _swI2C_Stop
   677 ;; ---------------------------------------------------------------------------------
   678 ;; (1) _AccWrite                                             5     3      2     300
   679 ;;                                              3 BANK0      5     3      2
   680 ;;                        _swI2C_Start
   681 ;;                    _swI2C_WriteByte
   682 ;;                         _swI2C_Stop
   683 ;; ---------------------------------------------------------------------------------
   684 ;; (2) _swI2C_ReadByte                                       4     4      0     170
   685 ;;                                              0 BANK0      4     4      0
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (2) _swI2C_WriteByte                                      3     3      0     139
   688 ;;                                              0 BANK0      3     3      0
   689 ;; ---------------------------------------------------------------------------------
   690 ;; (2) _swI2C_Stop                                           1     1      0       0
   691 ;;                                              0 BANK0      1     1      0
   692 ;; ---------------------------------------------------------------------------------
   693 ;; (2) _swI2C_Start                                          1     1      0       0
   694 ;;                                              0 BANK0      1     1      0
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (1) _swI2C_Init                                           1     1      0       0
   697 ;;                                              0 BANK0      1     1      0
   698 ;; ---------------------------------------------------------------------------------
   699 ;; (1) _sys_init                                             0     0      0       0
   700 ;; ---------------------------------------------------------------------------------
   701 ;; (1) _beep                                                 2     1      1     130
   702 ;;                                              4 BANK0      2     1      1
   703 ;;                        _delay_x10ms
   704 ;; ---------------------------------------------------------------------------------
   705 ;; (1) ___awdiv                                              8     4      4     445
   706 ;;                                              0 BANK0      8     4      4
   707 ;; ---------------------------------------------------------------------------------
   708 ;; (1) _int_init                                             1     1      0       0
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (1) _timer_init                                           0     0      0       0
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (1) _gpio_init                                            0     0      0       0
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (1) _compe                                                5     3      2     372
   715 ;;                                              0 BANK0      5     3      2
   716 ;; ---------------------------------------------------------------------------------
   717 ;; (1) _setState                                             3     1      2      62
   718 ;;                                              0 BANK0      3     1      2
   719 ;; ---------------------------------------------------------------------------------
   720 ;; (1) _beepOn                                               0     0      0       0
   721 ;; ---------------------------------------------------------------------------------
   722 ;; (1) _beepOff                                              0     0      0       0
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (1) _delay_x10ms                                          4     2      2      68
   725 ;;                                              0 BANK0      4     2      2
   726 ;; ---------------------------------------------------------------------------------
   727 ;; (1) _WRITE_EEPROM                                         2     1      1      62
   728 ;;                                              0 BANK0      2     1      1
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (1) _READ_EEPROM                                          2     2      0      65
   731 ;;                                              0 BANK0      2     2      0
   732 ;; ---------------------------------------------------------------------------------
   733 ;; Estimated maximum stack depth 2
   734 ;; ---------------------------------------------------------------------------------
   735 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   736 ;; ---------------------------------------------------------------------------------
   737 ;; (3) _ISR                                                  3     3      0     319
   738 ;;                                              2 COMMON     3     3      0
   739 ;;                      i1_READ_EEPROM
   740 ;;                     i1_WRITE_EEPROM
   741 ;; ---------------------------------------------------------------------------------
   742 ;; (4) i1_WRITE_EEPROM                                       2     1      1     146
   743 ;;                                              0 COMMON     2     1      1
   744 ;; ---------------------------------------------------------------------------------
   745 ;; (4) i1_READ_EEPROM                                        2     2      0     148
   746 ;;                                              0 COMMON     2     2      0
   747 ;; ---------------------------------------------------------------------------------
   748 ;; Estimated maximum stack depth 4
   749 ;; ---------------------------------------------------------------------------------
   750 ;; Call Graph Graphs:
   751 ;; _main (ROOT)
   752 ;;   _sys_init
   753 ;;   _gpio_init
   754 ;;   _timer_init
   755 ;;   _int_init
   756 ;;   _swI2C_Init
   757 ;;   _setState
   758 ;;   _WRITE_EEPROM
   759 ;;   _READ_EEPROM
   760 ;;   _beepOn
   761 ;;   _AccWrite
   762 ;;     _swI2C_Start
   763 ;;     _swI2C_WriteByte
   764 ;;     _swI2C_Stop
   765 ;;   _beep
   766 ;;     _delay_x10ms
   767 ;;   _AccRead
   768 ;;     _swI2C_Start
   769 ;;     _swI2C_WriteByte
   770 ;;     _swI2C_ReadByte
   771 ;;     _swI2C_Stop
   772 ;;   ___awdiv
   773 ;;   _beepOff
   774 ;;   _delay_x10ms
   775 ;;   _compe
   776 ;;
   777 ;; _ISR (ROOT)
   778 ;;   i1_READ_EEPROM
   779 ;;   i1_WRITE_EEPROM
   780 ;;
   781 ;; Address spaces:
   782 ;;Name               Size   Autos  Total    Cost      Usage
   783 ;;BITCOMMON            E      0       0       0        0.0%
   784 ;;EEDATA             100      0       0       0        0.0%
   785 ;;NULL                 0      0       0       0        0.0%
   786 ;;CODE                 0      0       0       0        0.0%
   787 ;;COMMON               E      5       A       1       71.4%
   788 ;;BITSFR0              0      0       0       1        0.0%
   789 ;;SFR0                 0      0       0       1        0.0%
   790 ;;BITSFR1              0      0       0       2        0.0%
   791 ;;SFR1                 0      0       0       2        0.0%
   792 ;;STACK                0      0       6       2        0.0%
   793 ;;BITBANK0            50      0       0       3        0.0%
   794 ;;BANK0               50     21      27       4       48.8%
   795 ;;BANK1               20      0       0       5        0.0%
   796 ;;ABS                  0      0      31       6        0.0%
   797 ;;BITBANK1            20      0       0       7        0.0%
   798 ;;DATA                 0      0      37       8        0.0%
   799                           
   800                           
   801 ;; *************** function _main *****************
   802 ;; Defined at:
   803 ;;		line 206 in file "smartkey.C"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  buf             6   19[BANK0 ] unsigned char [6]
   808 ;;  tmp16           2   30[BANK0 ] unsigned int 
   809 ;;  acXsum          2   27[BANK0 ] int 
   810 ;;  acYsum          2   25[BANK0 ] int 
   811 ;;  isWait          2   13[BANK0 ] unsigned int 
   812 ;;  tmp8            1   32[BANK0 ] unsigned char 
   813 ;;  isSw            1   29[BANK0 ] unsigned char 
   814 ;;  acXOld          1   18[BANK0 ] char 
   815 ;;  acYOld          1   17[BANK0 ] char 
   816 ;;  lostDetect      1   16[BANK0 ] unsigned char 
   817 ;;  isFall          1   15[BANK0 ] unsigned char 
   818 ;; Return value:  Size  Location     Type
   819 ;;		None               void
   820 ;; Registers used:
   821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 17F/0
   824 ;;		On exit  : 20/20
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1
   827 ;;      Params:         0       0       0
   828 ;;      Locals:         0      20       0
   829 ;;      Temps:          0       3       0
   830 ;;      Totals:         0      23       0
   831 ;;Total ram usage:       23 bytes
   832 ;; Hardware stack levels required when called:    4
   833 ;; This function calls:
   834 ;;		_sys_init
   835 ;;		_gpio_init
   836 ;;		_timer_init
   837 ;;		_int_init
   838 ;;		_swI2C_Init
   839 ;;		_setState
   840 ;;		_WRITE_EEPROM
   841 ;;		_READ_EEPROM
   842 ;;		_beepOn
   843 ;;		_AccWrite
   844 ;;		_beep
   845 ;;		_AccRead
   846 ;;		___awdiv
   847 ;;		_beepOff
   848 ;;		_delay_x10ms
   849 ;;		_compe
   850 ;; This function is called by:
   851 ;;		Startup code after reset
   852 ;; This function uses a non-reentrant model
   853 ;;
   854  000B                     _main:	
   855                           
   856                           ;smartkey.C: 208: unsigned char tmp8, isSw = 0, isFall = 0, lostDetect = 0;
   857                           
   858                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   859  000B  01BD               	clrf	main@isSw
   860  000C  01AF               	clrf	main@isFall
   861  000D  01B0               	clrf	main@lostDetect
   862                           
   863                           ;smartkey.C: 209: unsigned int isWait = 0;
   864  000E  01AD               	clrf	main@isWait
   865  000F  01AE               	clrf	main@isWait+1
   866                           
   867                           ;smartkey.C: 210: signed int acYsum = 0, acXsum = 0;
   868  0010  01B9               	clrf	main@acYsum
   869  0011  01BA               	clrf	main@acYsum+1
   870  0012  01BB               	clrf	main@acXsum
   871  0013  01BC               	clrf	main@acXsum+1
   872                           
   873                           ;smartkey.C: 211: unsigned int tmp16 = 0;
   874  0014  01BE               	clrf	main@tmp16
   875  0015  01BF               	clrf	main@tmp16+1
   876                           
   877                           ;smartkey.C: 212: signed char acYOld, acXOld;
   878                           ;smartkey.C: 213: unsigned char buf[6];
   879                           ;smartkey.C: 215: RegStatus.byte =0x00;
   880  0016  01F2               	clrf	_RegStatus	;volatile
   881                           
   882                           ;smartkey.C: 216: RegStatus.bits.b6 = 1;
   883  0017  1772               	bsf	_RegStatus,6	;volatile
   884  0018  0064               	clrwdt	;#
   885                           
   886                           ;smartkey.C: 220: sys_init();
   887  0019  26E8               	fcall	_sys_init
   888                           
   889                           ;smartkey.C: 221: gpio_init();
   890  001A  2669               	fcall	_gpio_init
   891                           
   892                           ;smartkey.C: 222: timer_init();
   893  001B  26A5               	fcall	_timer_init
   894                           
   895                           ;smartkey.C: 223: int_init();
   896  001C  2605               	fcall	_int_init
   897                           
   898                           ;smartkey.C: 226: _delay((unsigned long)((100)*(4000000/4000.0)));
   899  001D  3082               	movlw	130
   900  001E  00AB               	movwf	??_main+1
   901  001F  30DD               	movlw	221
   902  0020  00AA               	movwf	??_main
   903  0021                     u3657:	
   904  0021  0BAA               	decfsz	??_main,f
   905  0022  2821               	goto	u3657
   906  0023  0BAB               	decfsz	??_main+1,f
   907  0024  2821               	goto	u3657
   908  0025  2826               	nop2
   909                           
   910                           ;smartkey.C: 228: PAIE = 1;
   911  0026  158B               	bsf	11,3
   912                           
   913                           ;smartkey.C: 230: swI2C_Init();
   914  0027  25E6               	fcall	_swI2C_Init
   915  0028  3000               	movlw	0
   916                           
   917                           ;smartkey.C: 232: setState(0, 0);
   918  0029  1283               	bcf	3,5	;RP0=0, select bank0
   919  002A  01A0               	clrf	?_setState
   920  002B  01A1               	clrf	?_setState+1
   921  002C  26DC               	fcall	_setState
   922                           
   923                           ;smartkey.C: 234: WRITE_EEPROM(0xFF, 0xAA);
   924  002D  30AA               	movlw	170
   925  002E  00A0               	movwf	?_WRITE_EEPROM
   926  002F  30FF               	movlw	255
   927  0030  2620               	fcall	_WRITE_EEPROM
   928                           
   929                           ;smartkey.C: 235: WRITE_EEPROM(0xFF, 0xAA);
   930  0031  30AA               	movlw	170
   931  0032  1283               	bcf	3,5	;RP0=0, select bank0
   932  0033  00A0               	movwf	?_WRITE_EEPROM
   933  0034  30FF               	movlw	255
   934  0035  2620               	fcall	_WRITE_EEPROM
   935                           
   936                           ;smartkey.C: 237: _delay((unsigned long)((100)*(4000000/4000.0)));
   937  0036  3082               	movlw	130
   938  0037  1283               	bcf	3,5	;RP0=0, select bank0
   939  0038  00AB               	movwf	??_main+1
   940  0039  30DD               	movlw	221
   941  003A  00AA               	movwf	??_main
   942  003B                     u3667:	
   943  003B  0BAA               	decfsz	??_main,f
   944  003C  283B               	goto	u3667
   945  003D  0BAB               	decfsz	??_main+1,f
   946  003E  283B               	goto	u3667
   947  003F  2840               	nop2
   948                           
   949                           ;smartkey.C: 240: tmp8 = READ_EEPROM(0x41);
   950  0040  3041               	movlw	65
   951  0041  26CF               	fcall	_READ_EEPROM
   952  0042  00C0               	movwf	main@tmp8
   953                           
   954                           ;smartkey.C: 241: if (tmp8 > 3) {WRITE_EEPROM(0x41, 0); _delay((unsigned long)((2)*(4000
      +                          000/4000.0)));}
   955  0043  3004               	movlw	4
   956  0044  0240               	subwf	main@tmp8,w
   957  0045  1C03               	skipc
   958  0046  2854               	goto	l6816
   959  0047  3041               	movlw	65
   960  0048  01A0               	clrf	?_WRITE_EEPROM
   961  0049  2620               	fcall	_WRITE_EEPROM
   962  004A  3003               	movlw	3
   963  004B  1283               	bcf	3,5	;RP0=0, select bank0
   964  004C  00AB               	movwf	??_main+1
   965  004D  3097               	movlw	151
   966  004E  00AA               	movwf	??_main
   967  004F                     u3677:	
   968  004F  0BAA               	decfsz	??_main,f
   969  0050  284F               	goto	u3677
   970  0051  0BAB               	decfsz	??_main+1,f
   971  0052  284F               	goto	u3677
   972  0053  2854               	nop2
   973  0054                     l6816:	
   974                           
   975                           ;smartkey.C: 245: tmp8 = READ_EEPROM(0x08);
   976  0054  3008               	movlw	8
   977  0055  26CF               	fcall	_READ_EEPROM
   978  0056  00C0               	movwf	main@tmp8
   979                           
   980                           ;smartkey.C: 246: if (tmp8 == 0xff) {WRITE_EEPROM(0x08, 0); _delay((unsigned long)((2)*(
      +                          4000000/4000.0)));}
   981  0057  3AFF               	xorlw	255
   982  0058  1D03               	skipz
   983  0059  2867               	goto	l6824
   984  005A  3008               	movlw	8
   985  005B  01A0               	clrf	?_WRITE_EEPROM
   986  005C  2620               	fcall	_WRITE_EEPROM
   987  005D  3003               	movlw	3
   988  005E  1283               	bcf	3,5	;RP0=0, select bank0
   989  005F  00AB               	movwf	??_main+1
   990  0060  3097               	movlw	151
   991  0061  00AA               	movwf	??_main
   992  0062                     u3687:	
   993  0062  0BAA               	decfsz	??_main,f
   994  0063  2862               	goto	u3687
   995  0064  0BAB               	decfsz	??_main+1,f
   996  0065  2862               	goto	u3687
   997  0066  2867               	nop2
   998  0067                     l6824:	
   999                           
  1000                           ;smartkey.C: 247: if (tmp8 == 0xcc) {
  1001  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1002  0068  0840               	movf	main@tmp8,w
  1003  0069  3ACC               	xorlw	204
  1004  006A  1D03               	skipz
  1005  006B  2882               	goto	l6838
  1006                           
  1007                           ;smartkey.C: 248: RegStatus.bits.b0 = 0;
  1008  006C  1072               	bcf	_RegStatus,0	;volatile
  1009                           
  1010                           ;smartkey.C: 249: setState(3, 1800);
  1011  006D  3008               	movlw	8
  1012  006E  00A0               	movwf	?_setState
  1013  006F  3007               	movlw	7
  1014  0070  00A1               	movwf	?_setState+1
  1015  0071  3003               	movlw	3
  1016  0072  26DC               	fcall	_setState
  1017                           
  1018                           ;smartkey.C: 250: mtOldState = 1;
  1019  0073  01C6               	clrf	_mtOldState
  1020  0074  0AC6               	incf	_mtOldState,f
  1021                           
  1022                           ;smartkey.C: 251: cntTmp = timeTick + 50;
  1023  0075  0871               	movf	_timeTick+1,w
  1024  0076  00C2               	movwf	_cntTmp+1
  1025  0077  0870               	movf	_timeTick,w
  1026  0078  00C1               	movwf	_cntTmp
  1027  0079  3032               	movlw	50
  1028  007A  07C1               	addwf	_cntTmp,f
  1029  007B  1803               	skipnc
  1030  007C  0AC2               	incf	_cntTmp+1,f
  1031                           
  1032                           ;smartkey.C: 252: PR2L = 12;
  1033  007D  300C               	movlw	12
  1034  007E  1683               	bsf	3,5	;RP0=1, select bank1
  1035  007F  0091               	movwf	17	;volatile
  1036                           
  1037                           ;smartkey.C: 253: beepOn();
  1038  0080  2705               	fcall	_beepOn
  1039                           
  1040                           ;smartkey.C: 254: } else {
  1041  0081  2889               	goto	l6842
  1042  0082                     l6838:	
  1043                           
  1044                           ;smartkey.C: 255: setState(2, 400);
  1045  0082  3090               	movlw	144
  1046  0083  00A0               	movwf	?_setState
  1047  0084  3001               	movlw	1
  1048  0085  00A1               	movwf	?_setState+1
  1049  0086  3002               	movlw	2
  1050  0087  26DC               	fcall	_setState
  1051                           
  1052                           ;smartkey.C: 256: mtOldState = 0;
  1053  0088  01C6               	clrf	_mtOldState
  1054  0089                     l6842:	
  1055                           
  1056                           ;smartkey.C: 257: }
  1057                           ;smartkey.C: 262: buf[0] = 0x03;
  1058  0089  3003               	movlw	3
  1059  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1060  008B  00B3               	movwf	main@buf
  1061                           
  1062                           ;smartkey.C: 263: if ((AccWrite(0x0f, buf, 1) == 0)) {
  1063  008C  3033               	movlw	main@buf& (0+255)
  1064  008D  00A3               	movwf	?_AccWrite
  1065  008E  300F               	movlw	15
  1066  008F  01A4               	clrf	?_AccWrite+1
  1067  0090  0AA4               	incf	?_AccWrite+1,f
  1068  0091  25C5               	fcall	_AccWrite
  1069  0092  3800               	iorlw	0
  1070  0093  1903               	btfsc	3,2
  1071  0094  289A               	goto	l6850
  1072                           
  1073                           ;smartkey.C: 266: else {
  1074                           ;smartkey.C: 268: beep(10, 2);
  1075  0095  3002               	movlw	2
  1076  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0097  00A4               	movwf	?_beep
  1078  0098  300A               	movlw	10
  1079  0099  2653               	fcall	_beep
  1080  009A                     l6850:	
  1081                           
  1082                           ;smartkey.C: 269: }
  1083                           ;smartkey.C: 271: buf[0] = 0x08;
  1084  009A  3008               	movlw	8
  1085  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1086  009C  00B3               	movwf	main@buf
  1087                           
  1088                           ;smartkey.C: 272: if ((AccWrite(0x10,buf, 1) == 0)) {
  1089  009D  3033               	movlw	main@buf& (0+255)
  1090  009E  00A3               	movwf	?_AccWrite
  1091  009F  3010               	movlw	16
  1092  00A0  01A4               	clrf	?_AccWrite+1
  1093  00A1  0AA4               	incf	?_AccWrite+1,f
  1094  00A2  25C5               	fcall	_AccWrite
  1095  00A3  3800               	iorlw	0
  1096  00A4  1903               	btfsc	3,2
  1097  00A5  28AB               	goto	l6858
  1098                           
  1099                           ;smartkey.C: 275: else {
  1100                           ;smartkey.C: 277: beep(10, 2);
  1101  00A6  3002               	movlw	2
  1102  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1103  00A8  00A4               	movwf	?_beep
  1104  00A9  300A               	movlw	10
  1105  00AA  2653               	fcall	_beep
  1106  00AB                     l6858:	
  1107                           
  1108                           ;smartkey.C: 278: }
  1109                           ;smartkey.C: 282: tmp8 = READ_EEPROM(0x3F);
  1110  00AB  303F               	movlw	63
  1111  00AC  26CF               	fcall	_READ_EEPROM
  1112  00AD  00C0               	movwf	main@tmp8
  1113                           
  1114                           ;smartkey.C: 283: if (tmp8 == 5) {
  1115  00AE  3A05               	xorlw	5
  1116  00AF  1D03               	skipz
  1117  00B0  28E8               	goto	l6880
  1118  00B1  303F               	movlw	63
  1119                           
  1120                           ;smartkey.C: 284: tmp8 = 0;
  1121  00B2  01C0               	clrf	main@tmp8
  1122  00B3                     L4:	
  1123                           
  1124                           ;smartkey.C: 285: WRITE_EEPROM(0x3F, 0);
  1125  00B3  01A0               	clrf	?_WRITE_EEPROM
  1126  00B4  2620               	fcall	_WRITE_EEPROM
  1127  00B5                     l6878:	
  1128                           ;smartkey.C: 286: while ( RA2) {
  1129                           
  1130  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1131  00B6  1D05               	btfss	5,2
  1132  00B7  28E6               	goto	l909
  1133                           
  1134                           ;smartkey.C: 287: _delay((unsigned long)((1500)*(4000000/4000.0)));
  1135  00B8  3008               	movlw	8
  1136  00B9  00AC               	movwf	??_main+2
  1137  00BA  309D               	movlw	157
  1138  00BB  00AB               	movwf	??_main+1
  1139  00BC  300B               	movlw	11
  1140  00BD  00AA               	movwf	??_main
  1141  00BE                     u3697:	
  1142  00BE  0BAA               	decfsz	??_main,f
  1143  00BF  28BE               	goto	u3697
  1144  00C0  0BAB               	decfsz	??_main+1,f
  1145  00C1  28BE               	goto	u3697
  1146  00C2  0BAC               	decfsz	??_main+2,f
  1147  00C3  28BE               	goto	u3697
  1148  00C4  28C5               	nop2
  1149  00C5  3015               	movlw	21
  1150                           
  1151                           ;smartkey.C: 288: tmp8++;
  1152  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1153  00C7  0AC0               	incf	main@tmp8,f
  1154                           
  1155                           ;smartkey.C: 289: if (tmp8 > 20) {
  1156  00C8  0240               	subwf	main@tmp8,w
  1157  00C9  1C03               	skipc
  1158  00CA  28DA               	goto	l905
  1159                           
  1160                           ;smartkey.C: 290: _delay((unsigned long)((10000)*(4000000/4000.0)));
  1161  00CB  3033               	movlw	51
  1162  00CC  00AC               	movwf	??_main+2
  1163  00CD  30BC               	movlw	188
  1164  00CE  00AB               	movwf	??_main+1
  1165  00CF  3010               	movlw	16
  1166  00D0  00AA               	movwf	??_main
  1167  00D1                     u3707:	
  1168  00D1  0BAA               	decfsz	??_main,f
  1169  00D2  28D1               	goto	u3707
  1170  00D3  0BAB               	decfsz	??_main+1,f
  1171  00D4  28D1               	goto	u3707
  1172  00D5  0BAC               	decfsz	??_main+2,f
  1173  00D6  28D1               	goto	u3707
  1174  00D7  3040               	movlw	64
  1175                           
  1176                           ;smartkey.C: 291: WRITE_EEPROM(0x40, 0);
  1177  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1178  00D9  28B3               	goto	L4
  1179  00DA                     l905:	
  1180                           ;smartkey.C: 292: }
  1181                           
  1182                           
  1183                           ;smartkey.C: 293: else if ( RA2) {
  1184  00DA  1D05               	btfss	5,2
  1185  00DB  28B5               	goto	l6878
  1186                           
  1187                           ;smartkey.C: 294: WRITE_EEPROM(0x40, tmp8);
  1188  00DC  0840               	movf	main@tmp8,w
  1189  00DD  00A0               	movwf	?_WRITE_EEPROM
  1190  00DE  3040               	movlw	64
  1191  00DF  2620               	fcall	_WRITE_EEPROM
  1192  00E0  300A               	movlw	10
  1193                           
  1194                           ;smartkey.C: 295: beep(10, 1);
  1195  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1196  00E2  01A4               	clrf	?_beep
  1197  00E3  0AA4               	incf	?_beep,f
  1198  00E4  2653               	fcall	_beep
  1199  00E5  28B5               	goto	l6878
  1200  00E6                     l909:	
  1201  00E6  1D05               	btfss	5,2
  1202  00E7  28E6               	goto	l909
  1203  00E8                     l6880:	
  1204                           
  1205                           ;smartkey.C: 299: }
  1206                           ;smartkey.C: 302: tmp8 = READ_EEPROM(0x40);
  1207  00E8  3040               	movlw	64
  1208  00E9  26CF               	fcall	_READ_EEPROM
  1209  00EA  00C0               	movwf	main@tmp8
  1210                           
  1211                           ;smartkey.C: 303: switch (tmp8) {
  1212  00EB  2982               	goto	l6922
  1213  00EC                     l6882:	
  1214  00EC  3003               	movlw	3
  1215                           
  1216                           ;smartkey.C: 306: tmp8 = 0; beep(10, 3);
  1217  00ED  01C0               	clrf	main@tmp8
  1218  00EE  00A4               	movwf	?_beep
  1219  00EF  300A               	movlw	10
  1220  00F0  2653               	fcall	_beep
  1221                           
  1222                           ;smartkey.C: 307: while ((tmp8 < 11)) {
  1223  00F1  291F               	goto	l914
  1224  00F2                     l6888:	
  1225                           
  1226                           ;smartkey.C: 309: acXsum += (signed char)buf[1];
  1227  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1228  00F3  0834               	movf	main@buf+1,w
  1229  00F4  00AA               	movwf	??_main
  1230  00F5  01AB               	clrf	??_main+1
  1231  00F6  1BAA               	btfsc	??_main,7
  1232  00F7  03AB               	decf	??_main+1,f
  1233  00F8  07BB               	addwf	main@acXsum,f
  1234  00F9  1803               	skipnc
  1235  00FA  0ABC               	incf	main@acXsum+1,f
  1236  00FB  082B               	movf	??_main+1,w
  1237  00FC  07BC               	addwf	main@acXsum+1,f
  1238                           
  1239                           ;smartkey.C: 310: acYsum += (signed char)buf[3];
  1240  00FD  0836               	movf	main@buf+3,w
  1241  00FE  00AA               	movwf	??_main
  1242  00FF  01AB               	clrf	??_main+1
  1243  0100  1BAA               	btfsc	??_main,7
  1244  0101  03AB               	decf	??_main+1,f
  1245  0102  07B9               	addwf	main@acYsum,f
  1246  0103  1803               	skipnc
  1247  0104  0ABA               	incf	main@acYsum+1,f
  1248  0105  082B               	movf	??_main+1,w
  1249  0106  07BA               	addwf	main@acYsum+1,f
  1250                           
  1251                           ;smartkey.C: 311: if ( ((signed char)buf[5] > -15) && ((signed char)buf[5] <15)) break;
  1252  0107  0838               	movf	main@buf+5,w
  1253  0108  3A80               	xorlw	128
  1254  0109  3E8E               	addlw	142
  1255  010A  1C03               	skipc
  1256  010B  2911               	goto	l6894
  1257  010C  0838               	movf	main@buf+5,w
  1258  010D  3A80               	xorlw	128
  1259  010E  3E71               	addlw	-143
  1260  010F  1C03               	btfss	3,0
  1261  0110  292D               	goto	l6898
  1262  0111                     l6894:	
  1263  0111  3003               	movlw	3
  1264                           
  1265                           ;smartkey.C: 312: tmp8++;
  1266  0112  0AC0               	incf	main@tmp8,f
  1267                           
  1268                           ;smartkey.C: 315: _delay((unsigned long)((500)*(4000000/4000.0)));
  1269                           
  1270                           ;smartkey.C: 313: } else
  1271  0113  00AC               	movwf	??_main+2
  1272  0114  308A               	movlw	138
  1273  0115  00AB               	movwf	??_main+1
  1274  0116  3056               	movlw	86
  1275  0117  00AA               	movwf	??_main
  1276  0118                     u3717:	
  1277  0118  0BAA               	decfsz	??_main,f
  1278  0119  2918               	goto	u3717
  1279  011A  0BAB               	decfsz	??_main+1,f
  1280  011B  2918               	goto	u3717
  1281  011C  0BAC               	decfsz	??_main+2,f
  1282  011D  2918               	goto	u3717
  1283  011E  291F               	nop2
  1284  011F                     l914:	
  1285  011F  300B               	movlw	11
  1286  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0121  0240               	subwf	main@tmp8,w
  1288  0122  1803               	btfsc	3,0
  1289  0123  292D               	goto	l6898
  1290                           
  1291                           ;smartkey.C: 308: if (AccRead(0x02, buf, 6) == 0) {
  1292  0124  3033               	movlw	main@buf& (0+255)
  1293  0125  00A4               	movwf	?_AccRead
  1294  0126  3006               	movlw	6
  1295  0127  00A5               	movwf	?_AccRead+1
  1296  0128  3002               	movlw	2
  1297  0129  258E               	fcall	_AccRead
  1298  012A  3800               	iorlw	0
  1299  012B  1903               	btfsc	3,2
  1300  012C  28F2               	goto	l6888
  1301  012D                     l6898:	
  1302                           
  1303                           ;smartkey.C: 316: }
  1304                           ;smartkey.C: 318: if (tmp8 == 11) {
  1305  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1306  012E  0840               	movf	main@tmp8,w
  1307  012F  3A0B               	xorlw	11
  1308  0130  1D03               	skipz
  1309  0131  2959               	goto	l6902
  1310                           
  1311                           ;smartkey.C: 319: acXsum = acXsum / 10;
  1312  0132  300A               	movlw	10
  1313  0133  00A0               	movwf	?___awdiv
  1314  0134  01A1               	clrf	?___awdiv+1
  1315  0135  083C               	movf	main@acXsum+1,w
  1316  0136  00A3               	movwf	?___awdiv+3
  1317  0137  083B               	movf	main@acXsum,w
  1318  0138  00A2               	movwf	?___awdiv+2
  1319  0139  2491               	fcall	___awdiv
  1320  013A  0821               	movf	?___awdiv+1,w
  1321  013B  00BC               	movwf	main@acXsum+1
  1322  013C  0820               	movf	?___awdiv,w
  1323  013D  00BB               	movwf	main@acXsum
  1324                           
  1325                           ;smartkey.C: 320: acYsum = acYsum / 10;
  1326  013E  300A               	movlw	10
  1327  013F  00A0               	movwf	?___awdiv
  1328  0140  01A1               	clrf	?___awdiv+1
  1329  0141  083A               	movf	main@acYsum+1,w
  1330  0142  00A3               	movwf	?___awdiv+3
  1331  0143  0839               	movf	main@acYsum,w
  1332  0144  00A2               	movwf	?___awdiv+2
  1333  0145  2491               	fcall	___awdiv
  1334  0146  0821               	movf	?___awdiv+1,w
  1335  0147  00BA               	movwf	main@acYsum+1
  1336  0148  0820               	movf	?___awdiv,w
  1337  0149  00B9               	movwf	main@acYsum
  1338                           
  1339                           ;smartkey.C: 322: WRITE_EEPROM(0x10, acXsum);
  1340  014A  083B               	movf	main@acXsum,w
  1341  014B  00A0               	movwf	?_WRITE_EEPROM
  1342  014C  3010               	movlw	16
  1343  014D  2620               	fcall	_WRITE_EEPROM
  1344                           
  1345                           ;smartkey.C: 323: WRITE_EEPROM(0x11, acYsum);
  1346  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1347  014F  0839               	movf	main@acYsum,w
  1348  0150  00A0               	movwf	?_WRITE_EEPROM
  1349  0151  3011               	movlw	17
  1350  0152  2620               	fcall	_WRITE_EEPROM
  1351                           
  1352                           ;smartkey.C: 324: beep(10, 3);
  1353  0153  3003               	movlw	3
  1354  0154  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0155  00A4               	movwf	?_beep
  1356  0156  300A               	movlw	10
  1357  0157  2653               	fcall	_beep
  1358                           
  1359                           ;smartkey.C: 326: } else {
  1360  0158  298D               	goto	l6924
  1361  0159                     l6902:	
  1362                           
  1363                           ;smartkey.C: 327: beep(10, 2);
  1364  0159  3002               	movlw	2
  1365  015A  00A4               	movwf	?_beep
  1366  015B  300A               	movlw	10
  1367  015C  2653               	fcall	_beep
  1368  015D  298D               	goto	l6924
  1369  015E                     l6904:	
  1370                           
  1371                           ;smartkey.C: 334: tmp8 = READ_EEPROM(0x41);
  1372  015E  3041               	movlw	65
  1373  015F  26CF               	fcall	_READ_EEPROM
  1374  0160  00C0               	movwf	main@tmp8
  1375                           
  1376                           ;smartkey.C: 335: if (tmp8 & 2) {
  1377  0161  1CC0               	btfss	main@tmp8,1
  1378  0162  2965               	goto	l924
  1379                           
  1380                           ;smartkey.C: 336: tmp8 &= ~2;
  1381  0163  10C0               	bcf	main@tmp8,1
  1382                           
  1383                           ;smartkey.C: 337: }
  1384  0164  2966               	goto	l6910
  1385  0165                     l924:	
  1386                           
  1387                           ;smartkey.C: 338: else {
  1388                           ;smartkey.C: 339: tmp8 |= 2;
  1389  0165  14C0               	bsf	main@tmp8,1
  1390  0166                     l6910:	
  1391                           
  1392                           ;smartkey.C: 340: }
  1393                           ;smartkey.C: 341: WRITE_EEPROM(0x41, tmp8);
  1394  0166  0840               	movf	main@tmp8,w
  1395  0167  00A0               	movwf	?_WRITE_EEPROM
  1396  0168  3041               	movlw	65
  1397  0169  2620               	fcall	_WRITE_EEPROM
  1398  016A  3032               	movlw	50
  1399                           
  1400                           ;smartkey.C: 342: beep(50, 1);
  1401  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1402  016C  01A4               	clrf	?_beep
  1403  016D  0AA4               	incf	?_beep,f
  1404  016E  2653               	fcall	_beep
  1405                           
  1406                           ;smartkey.C: 343: break;
  1407  016F  298D               	goto	l6924
  1408  0170                     l6912:	
  1409                           
  1410                           ;smartkey.C: 347: tmp8 = READ_EEPROM(0x41);
  1411  0170  3041               	movlw	65
  1412  0171  26CF               	fcall	_READ_EEPROM
  1413  0172  00C0               	movwf	main@tmp8
  1414                           
  1415                           ;smartkey.C: 348: if (tmp8 & 1) {
  1416  0173  1C40               	btfss	main@tmp8,0
  1417  0174  2977               	goto	l927
  1418                           
  1419                           ;smartkey.C: 349: tmp8 &= ~1;
  1420  0175  1040               	bcf	main@tmp8,0
  1421                           
  1422                           ;smartkey.C: 350: }
  1423  0176  2978               	goto	l6918
  1424  0177                     l927:	
  1425                           
  1426                           ;smartkey.C: 351: else {
  1427                           ;smartkey.C: 352: tmp8 |= 1;
  1428  0177  1440               	bsf	main@tmp8,0
  1429  0178                     l6918:	
  1430                           
  1431                           ;smartkey.C: 353: }
  1432                           ;smartkey.C: 354: WRITE_EEPROM(0x41, tmp8);
  1433  0178  0840               	movf	main@tmp8,w
  1434  0179  00A0               	movwf	?_WRITE_EEPROM
  1435  017A  3041               	movlw	65
  1436  017B  2620               	fcall	_WRITE_EEPROM
  1437  017C  300A               	movlw	10
  1438                           
  1439                           ;smartkey.C: 355: beep(10, 1);
  1440  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1441  017E  01A4               	clrf	?_beep
  1442  017F  0AA4               	incf	?_beep,f
  1443  0180  2653               	fcall	_beep
  1444                           
  1445                           ;smartkey.C: 356: break;
  1446  0181  298D               	goto	l6924
  1447  0182                     l6922:	
  1448  0182  0840               	movf	main@tmp8,w
  1449                           
  1450                           ; Switch size 1, requested type "space"
  1451                           ; Number of cases is 3, Range of values is 3 to 20
  1452                           ; switch strategies available:
  1453                           ; Name         Instructions Cycles
  1454                           ; simple_byte           10     6 (average)
  1455                           ; direct_byte           27     9 (fixed)
  1456                           ; jumptable            263     9 (fixed)
  1457                           ;	Chosen strategy is simple_byte
  1458  0183  3A03               	xorlw	3	; case 3
  1459  0184  1903               	skipnz
  1460  0185  28EC               	goto	l6882
  1461  0186  3A09               	xorlw	9	; case 10
  1462  0187  1903               	skipnz
  1463  0188  2970               	goto	l6912
  1464  0189  3A1E               	xorlw	30	; case 20
  1465  018A  1903               	skipnz
  1466  018B  295E               	goto	l6904
  1467  018C  298D               	goto	l6924
  1468  018D                     l6924:	
  1469                           
  1470                           ;smartkey.C: 360: tmp8 = READ_EEPROM(0x41);
  1471  018D  3041               	movlw	65
  1472  018E  26CF               	fcall	_READ_EEPROM
  1473  018F  00C0               	movwf	main@tmp8
  1474                           
  1475                           ;smartkey.C: 361: if (tmp8 >0 && tmp8<4 ) {
  1476  0190  0840               	movf	main@tmp8,w
  1477  0191  1903               	btfsc	3,2
  1478  0192  29B1               	goto	l6944
  1479  0193  3004               	movlw	4
  1480  0194  0240               	subwf	main@tmp8,w
  1481  0195  1803               	skipnc
  1482  0196  29B1               	goto	l6944
  1483                           
  1484                           ;smartkey.C: 362: RegStatus.bits.b0 = 1;
  1485  0197  1472               	bsf	_RegStatus,0	;volatile
  1486                           
  1487                           ;smartkey.C: 363: setState(1, 3500);
  1488  0198  30AC               	movlw	172
  1489  0199  00A0               	movwf	?_setState
  1490  019A  300D               	movlw	13
  1491  019B  00A1               	movwf	?_setState+1
  1492  019C  3001               	movlw	1
  1493  019D  26DC               	fcall	_setState
  1494                           
  1495                           ;smartkey.C: 364: RegStatus.bits.b4 = 1;
  1496  019E  1672               	bsf	_RegStatus,4	;volatile
  1497                           
  1498                           ;smartkey.C: 366: if (tmp8 & 2) {
  1499  019F  1CC0               	btfss	main@tmp8,1
  1500  01A0  29A3               	goto	l930
  1501                           
  1502                           ;smartkey.C: 367: RegStatus.bits.b6 = 0;
  1503  01A1  1372               	bcf	_RegStatus,6	;volatile
  1504                           
  1505                           ;smartkey.C: 368: }
  1506  01A2  29B1               	goto	l6944
  1507  01A3                     l930:	
  1508                           
  1509                           ;smartkey.C: 369: else if (tmp8 & 1) {
  1510  01A3  1C40               	btfss	main@tmp8,0
  1511  01A4  29B1               	goto	l6944
  1512                           
  1513                           ;smartkey.C: 370: tmp16 = timeTick + 40;
  1514  01A5  0871               	movf	_timeTick+1,w
  1515  01A6  00BF               	movwf	main@tmp16+1
  1516  01A7  0870               	movf	_timeTick,w
  1517  01A8  00BE               	movwf	main@tmp16
  1518  01A9  3028               	movlw	40
  1519  01AA  07BE               	addwf	main@tmp16,f
  1520  01AB  1803               	skipnc
  1521  01AC  0ABF               	incf	main@tmp16+1,f
  1522  01AD  300A               	movlw	10
  1523                           
  1524                           ;smartkey.C: 371: beep(10, 1);
  1525  01AE  01A4               	clrf	?_beep
  1526  01AF  0AA4               	incf	?_beep,f
  1527  01B0  2653               	fcall	_beep
  1528  01B1                     l6944:	
  1529                           
  1530                           ;smartkey.C: 372: }
  1531                           ;smartkey.C: 373: }
  1532                           ;smartkey.C: 376: acXsum = (signed int)READ_EEPROM(0x10);
  1533  01B1  3010               	movlw	16
  1534  01B2  26CF               	fcall	_READ_EEPROM
  1535  01B3  00BB               	movwf	main@acXsum
  1536  01B4  3011               	movlw	17
  1537  01B5  01BC               	clrf	main@acXsum+1
  1538                           
  1539                           ;smartkey.C: 377: acYsum = (signed int)READ_EEPROM(0x11);
  1540  01B6  26CF               	fcall	_READ_EEPROM
  1541  01B7  00B9               	movwf	main@acYsum
  1542  01B8  01BA               	clrf	main@acYsum+1
  1543                           
  1544                           ;smartkey.C: 379: timeTick = 0;
  1545  01B9  01F0               	clrf	_timeTick
  1546  01BA  01F1               	clrf	_timeTick+1
  1547  01BB                     l6950:	
  1548                           
  1549                           ;smartkey.C: 385: if ( RegStatus.bits.b4 == 0) {
  1550  01BB  1E72               	btfss	_RegStatus,4	;volatile
  1551                           
  1552                           ;smartkey.C: 386: if (RegStatus.bits.b3 == 0) {
  1553  01BC  19F2               	btfsc	_RegStatus,3	;volatile
  1554  01BD  2A93               	goto	l7064
  1555                           
  1556                           ;smartkey.C: 387: if (RegStatus.bits.b1) {
  1557  01BE  1CF2               	btfss	_RegStatus,1	;volatile
  1558  01BF  2A93               	goto	l7064
  1559                           
  1560                           ;smartkey.C: 389: PAIE = 0;
  1561  01C0  118B               	bcf	11,3
  1562                           
  1563                           ;smartkey.C: 391: RegStatus.bits.b1 = 0;
  1564  01C1  10F2               	bcf	_RegStatus,1	;volatile
  1565                           
  1566                           ;smartkey.C: 395: if (RegStatus.bits.b2) {
  1567  01C2  1972               	btfsc	_RegStatus,2	;volatile
  1568  01C3  2A3F               	goto	l7024
  1569  01C4  2A8A               	goto	l7062
  1570  01C5                     l6960:	
  1571                           
  1572                           ;smartkey.C: 399: lostDetect = 0;
  1573  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1574  01C6  01B0               	clrf	main@lostDetect
  1575  01C7                     L1:	
  1576  01C7  3028               	movlw	40
  1577                           
  1578                           ;smartkey.C: 400: timeTick = 0;
  1579  01C8  01F0               	clrf	_timeTick
  1580  01C9  01F1               	clrf	_timeTick+1
  1581                           
  1582                           ;smartkey.C: 401: tmp16 = 40;
  1583  01CA  00BE               	movwf	main@tmp16
  1584  01CB  01BF               	clrf	main@tmp16+1
  1585                           
  1586                           ;smartkey.C: 402: break;
  1587  01CC  2A92               	goto	l959
  1588  01CD                     l6964:	
  1589                           
  1590                           ;smartkey.C: 405: if (timeTick > 30) {
  1591  01CD  3000               	movlw	0
  1592  01CE  0271               	subwf	_timeTick+1,w
  1593  01CF  301F               	movlw	31
  1594  01D0  1903               	skipnz
  1595  01D1  0270               	subwf	_timeTick,w
  1596  01D2  1C03               	skipc
  1597  01D3  2A92               	goto	l959
  1598  01D4  3008               	movlw	8
  1599                           
  1600                           ;smartkey.C: 406: timeTick = 0;
  1601  01D5  01F0               	clrf	_timeTick
  1602  01D6  01F1               	clrf	_timeTick+1
  1603                           
  1604                           ;smartkey.C: 408: if (READ_EEPROM(0x08) == 0xcc) WRITE_EEPROM(0x08, 0);
  1605  01D7  26CF               	fcall	_READ_EEPROM
  1606  01D8  3ACC               	xorlw	204
  1607  01D9  1D03               	skipz
  1608  01DA  29DE               	goto	l6972
  1609  01DB  3008               	movlw	8
  1610  01DC  01A0               	clrf	?_WRITE_EEPROM
  1611  01DD  2620               	fcall	_WRITE_EEPROM
  1612  01DE                     l6972:	
  1613                           
  1614                           ;smartkey.C: 410: if ((mtOldState == 3)) {
  1615  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1616  01DF  0846               	movf	_mtOldState,w
  1617  01E0  3A03               	xorlw	3
  1618  01E1  1D03               	skipz
  1619  01E2  29EE               	goto	l6984
  1620                           
  1621                           ;smartkey.C: 411: beepOn(); TMR2ON = 0; beep(10, 1);
  1622  01E3  2705               	fcall	_beepOn
  1623  01E4  300A               	movlw	10
  1624  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1625  01E6  1112               	bcf	18,2
  1626  01E7  01A4               	clrf	?_beep
  1627  01E8  0AA4               	incf	?_beep,f
  1628  01E9  2653               	fcall	_beep
  1629  01EA                     L3:	
  1630                           
  1631                           ;smartkey.C: 412: if (RegStatus.bits.b7)RegStatus.bits.b7 = 0;
  1632  01EA  1FF2               	btfss	_RegStatus,7	;volatile
  1633  01EB  2A92               	goto	l959
  1634  01EC  13F2               	bcf	_RegStatus,7	;volatile
  1635  01ED  2A92               	goto	l959
  1636  01EE                     l6984:	
  1637                           
  1638                           ;smartkey.C: 414: else if ((mtOldState == 0) || (mtOldState == 4)) {
  1639  01EE  0846               	movf	_mtOldState,w
  1640  01EF  1903               	btfsc	3,2
  1641  01F0  29F5               	goto	l949
  1642  01F1  0846               	movf	_mtOldState,w
  1643  01F2  3A04               	xorlw	4
  1644  01F3  1D03               	skipz
  1645  01F4  2A12               	goto	l6998
  1646  01F5                     l949:	
  1647                           
  1648                           ;smartkey.C: 415: RegStatus.bits.b0 = 1;
  1649  01F5  1472               	bsf	_RegStatus,0	;volatile
  1650                           
  1651                           ;smartkey.C: 416: setState(1, 3500);
  1652  01F6  30AC               	movlw	172
  1653  01F7  00A0               	movwf	?_setState
  1654  01F8  300D               	movlw	13
  1655  01F9  00A1               	movwf	?_setState+1
  1656  01FA  3001               	movlw	1
  1657  01FB  26DC               	fcall	_setState
  1658                           
  1659                           ;smartkey.C: 417: if (READ_EEPROM(0x40))WRITE_EEPROM(0x40, 0);
  1660  01FC  3040               	movlw	64
  1661  01FD  26CF               	fcall	_READ_EEPROM
  1662  01FE  3A00               	xorlw	0
  1663  01FF  1903               	skipnz
  1664  0200  2A04               	goto	l6994
  1665  0201  3040               	movlw	64
  1666  0202  01A0               	clrf	?_WRITE_EEPROM
  1667  0203  2620               	fcall	_WRITE_EEPROM
  1668  0204                     l6994:	
  1669                           
  1670                           ;smartkey.C: 418: tmp16 = timeTick + 40;
  1671  0204  0871               	movf	_timeTick+1,w
  1672  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0206  00BF               	movwf	main@tmp16+1
  1674  0207  0870               	movf	_timeTick,w
  1675  0208  00BE               	movwf	main@tmp16
  1676  0209  3028               	movlw	40
  1677  020A  07BE               	addwf	main@tmp16,f
  1678  020B  1803               	skipnc
  1679  020C  0ABF               	incf	main@tmp16+1,f
  1680  020D  300A               	movlw	10
  1681                           
  1682                           ;smartkey.C: 419: beep(10, 1);
  1683  020E  01A4               	clrf	?_beep
  1684  020F  0AA4               	incf	?_beep,f
  1685  0210  2653               	fcall	_beep
  1686                           
  1687                           ;smartkey.C: 420: }
  1688  0211  2A92               	goto	l959
  1689  0212                     l6998:	
  1690                           
  1691                           ;smartkey.C: 421: else if ((mtOldState == 1)) {
  1692  0212  0B46               	decfsz	_mtOldState,w
  1693  0213  2A92               	goto	l959
  1694                           
  1695                           ;smartkey.C: 423: if (RegStatus.bits.b7)RegStatus.bits.b7 = 0;
  1696  0214  29EA               	goto	L3
  1697  0215                     l7004:	
  1698                           ;smartkey.C: 424: }
  1699                           ;smartkey.C: 425: }
  1700                           ;smartkey.C: 426: break;
  1701                           
  1702                           
  1703                           ;smartkey.C: 429: if (timeTick > 200) {
  1704  0215  3000               	movlw	0
  1705  0216  0271               	subwf	_timeTick+1,w
  1706  0217  30C9               	movlw	201
  1707  0218  1903               	skipnz
  1708  0219  0270               	subwf	_timeTick,w
  1709  021A  1C03               	skipc
  1710  021B  2A92               	goto	l959
  1711                           
  1712                           ;smartkey.C: 431: beepOff();
  1713  021C  26F8               	fcall	_beepOff
  1714                           
  1715                           ;smartkey.C: 432: if (READ_EEPROM(0x08) == 0xcc) WRITE_EEPROM(0x08, 0);
  1716  021D  3008               	movlw	8
  1717  021E  26CF               	fcall	_READ_EEPROM
  1718  021F  3ACC               	xorlw	204
  1719  0220  1D03               	skipz
  1720  0221  2A25               	goto	l7012
  1721  0222  3008               	movlw	8
  1722  0223  01A0               	clrf	?_WRITE_EEPROM
  1723  0224  2620               	fcall	_WRITE_EEPROM
  1724  0225                     l7012:	
  1725                           
  1726                           ;smartkey.C: 433: RegStatus.bits.b0 = 1;
  1727  0225  1472               	bsf	_RegStatus,0	;volatile
  1728                           
  1729                           ;smartkey.C: 434: setState(1, 3500);
  1730  0226  30AC               	movlw	172
  1731  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0228  00A0               	movwf	?_setState
  1733  0229  300D               	movlw	13
  1734  022A  00A1               	movwf	?_setState+1
  1735  022B  3001               	movlw	1
  1736  022C  26DC               	fcall	_setState
  1737                           
  1738                           ;smartkey.C: 436: tmp16 = timeTick + 40;
  1739  022D  0871               	movf	_timeTick+1,w
  1740  022E  00BF               	movwf	main@tmp16+1
  1741  022F  0870               	movf	_timeTick,w
  1742  0230  00BE               	movwf	main@tmp16
  1743  0231  3028               	movlw	40
  1744  0232  07BE               	addwf	main@tmp16,f
  1745  0233  1803               	skipnc
  1746  0234  0ABF               	incf	main@tmp16+1,f
  1747  0235  2A92               	goto	l959
  1748  0236                     l7018:	
  1749                           
  1750                           ;smartkey.C: 442: beepOff();
  1751  0236  26F8               	fcall	_beepOff
  1752                           
  1753                           ;smartkey.C: 443: setState(2, 300);
  1754  0237  302C               	movlw	44
  1755  0238  1283               	bcf	3,5	;RP0=0, select bank0
  1756  0239  00A0               	movwf	?_setState
  1757  023A  3001               	movlw	1
  1758  023B  00A1               	movwf	?_setState+1
  1759  023C  3002               	movlw	2
  1760  023D  26DC               	fcall	_setState
  1761                           
  1762                           ;smartkey.C: 444: break;
  1763  023E  2A92               	goto	l959
  1764  023F                     l7024:	
  1765  023F  0874               	movf	_mtState,w
  1766                           
  1767                           ; Switch size 1, requested type "space"
  1768                           ; Number of cases is 5, Range of values is 0 to 4
  1769                           ; switch strategies available:
  1770                           ; Name         Instructions Cycles
  1771                           ; direct_byte           11     6 (fixed)
  1772                           ; simple_byte           16     9 (average)
  1773                           ; jumptable            260     6 (fixed)
  1774                           ; rangetable             9     6 (fixed)
  1775                           ; spacedrange           16     9 (fixed)
  1776                           ; locatedrange           5     3 (fixed)
  1777                           ;	Chosen strategy is direct_byte
  1778  0240  0084               	movwf	4
  1779  0241  3005               	movlw	5
  1780  0242  0204               	subwf	4,w
  1781  0243  1803               	skipnc
  1782  0244  2A92               	goto	l959
  1783  0245  3007               	movlw	high S7310
  1784  0246  008A               	movwf	10
  1785  0247  3000               	movlw	low S7310
  1786  0248  0704               	addwf	4,w
  1787  0249  0082               	movwf	2
  1788  024A                     l7026:	
  1789                           
  1790                           ;smartkey.C: 459: if ((lostDetect == 1) && (timeTick < 1500) && (timeTick > 700))
  1791  024A  1283               	bcf	3,5	;RP0=0, select bank0
  1792  024B  0B30               	decfsz	main@lostDetect,w
  1793  024C  2A78               	goto	l962
  1794  024D  3005               	movlw	5
  1795  024E  0271               	subwf	_timeTick+1,w
  1796  024F  30DC               	movlw	220
  1797  0250  1903               	skipnz
  1798  0251  0270               	subwf	_timeTick,w
  1799  0252  1803               	skipnc
  1800  0253  2A78               	goto	l962
  1801  0254  3002               	movlw	2
  1802  0255  0271               	subwf	_timeTick+1,w
  1803  0256  30BD               	movlw	189
  1804  0257  1903               	skipnz
  1805  0258  0270               	subwf	_timeTick,w
  1806  0259  1C03               	skipc
  1807  025A  2A78               	goto	l962
  1808                           
  1809                           ;smartkey.C: 460: {
  1810                           ;smartkey.C: 461: if (READ_EEPROM(0x08) == 0x00) WRITE_EEPROM(0x08, 0xcc);
  1811  025B  3008               	movlw	8
  1812  025C  26CF               	fcall	_READ_EEPROM
  1813  025D  3800               	iorlw	0
  1814  025E  1D03               	skipz
  1815  025F  2A64               	goto	l963
  1816  0260  30CC               	movlw	204
  1817  0261  00A0               	movwf	?_WRITE_EEPROM
  1818  0262  3008               	movlw	8
  1819  0263  2620               	fcall	_WRITE_EEPROM
  1820  0264                     l963:	
  1821                           
  1822                           ;smartkey.C: 463: setState(3, 1800);
  1823  0264  3008               	movlw	8
  1824  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1825  0266  00A0               	movwf	?_setState
  1826  0267  3007               	movlw	7
  1827  0268  00A1               	movwf	?_setState+1
  1828  0269  3003               	movlw	3
  1829  026A  26DC               	fcall	_setState
  1830                           
  1831                           ;smartkey.C: 464: cntTmp = timeTick + 40;
  1832  026B  0871               	movf	_timeTick+1,w
  1833  026C  00C2               	movwf	_cntTmp+1
  1834  026D  0870               	movf	_timeTick,w
  1835  026E  00C1               	movwf	_cntTmp
  1836  026F  3028               	movlw	40
  1837  0270  07C1               	addwf	_cntTmp,f
  1838  0271  1803               	skipnc
  1839  0272  0AC2               	incf	_cntTmp+1,f
  1840                           
  1841                           ;smartkey.C: 465: PR2L = 20;
  1842  0273  3014               	movlw	20
  1843  0274  1683               	bsf	3,5	;RP0=1, select bank1
  1844  0275  0091               	movwf	17	;volatile
  1845                           
  1846                           ;smartkey.C: 466: beepOn();
  1847  0276  2705               	fcall	_beepOn
  1848  0277  29C5               	goto	l6960
  1849  0278                     l962:	
  1850                           ;smartkey.C: 468: }
  1851                           
  1852                           ;smartkey.C: 467: lostDetect = 0;
  1853                           
  1854                           
  1855                           ;smartkey.C: 469: else {
  1856                           ;smartkey.C: 470: lostDetect = 1;
  1857  0278  01B0               	clrf	main@lostDetect
  1858  0279  0AB0               	incf	main@lostDetect,f
  1859  027A  29C7               	goto	L1
  1860  027B                     l7048:	
  1861                           ;smartkey.C: 473: }
  1862                           ;smartkey.C: 474: timeTick = 0;
  1863                           
  1864                           
  1865                           ;smartkey.C: 479: timeTick = 0;
  1866  027B  01F0               	clrf	_timeTick
  1867  027C  01F1               	clrf	_timeTick+1
  1868                           
  1869                           ;smartkey.C: 480: beepOn(); TMR2ON = 0;
  1870  027D  2705               	fcall	_beepOn
  1871  027E  3002               	movlw	2
  1872  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0280  1112               	bcf	18,2
  1874                           
  1875                           ;smartkey.C: 481: beep(10, 2);
  1876  0281  00A4               	movwf	?_beep
  1877  0282  300A               	movlw	10
  1878  0283  2653               	fcall	_beep
  1879                           
  1880                           ;smartkey.C: 482: if (mtOldState == 3) {RegStatus.bits.b7 = 1;}
  1881  0284  0846               	movf	_mtOldState,w
  1882  0285  3A03               	xorlw	3
  1883  0286  1D03               	skipz
  1884  0287  2A92               	goto	l959
  1885  0288  17F2               	bsf	_RegStatus,7	;volatile
  1886  0289  2A92               	goto	l959
  1887  028A                     l7062:	
  1888  028A  0874               	movf	_mtState,w
  1889                           
  1890                           ; Switch size 1, requested type "space"
  1891                           ; Number of cases is 2, Range of values is 1 to 2
  1892                           ; switch strategies available:
  1893                           ; Name         Instructions Cycles
  1894                           ; simple_byte            7     4 (average)
  1895                           ; direct_byte           11     9 (fixed)
  1896                           ; jumptable            263     9 (fixed)
  1897                           ;	Chosen strategy is simple_byte
  1898  028B  3A01               	xorlw	1	; case 1
  1899  028C  1903               	skipnz
  1900  028D  2A4A               	goto	l7026
  1901  028E  3A03               	xorlw	3	; case 2
  1902  028F  1903               	skipnz
  1903  0290  2A7B               	goto	l7048
  1904  0291  2A92               	goto	l959
  1905  0292                     l959:	
  1906                           
  1907                           ;smartkey.C: 485: }
  1908                           ;smartkey.C: 486: PAIE = 1;
  1909  0292  158B               	bsf	11,3
  1910  0293                     l7064:	
  1911                           
  1912                           ;smartkey.C: 487: }
  1913                           ;smartkey.C: 488: }
  1914                           ;smartkey.C: 489: }
  1915                           ;smartkey.C: 492: if ((timeOut != 0) && ( timeTick > timeOut)) {
  1916  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0294  0844               	movf	_timeOut+1,w
  1918  0295  0443               	iorwf	_timeOut,w
  1919  0296  1903               	skipnz
  1920  0297  2B19               	goto	l7140
  1921  0298  0871               	movf	_timeTick+1,w
  1922  0299  0244               	subwf	_timeOut+1,w
  1923  029A  1D03               	skipz
  1924  029B  2A9E               	goto	u3365
  1925  029C  0870               	movf	_timeTick,w
  1926  029D  0243               	subwf	_timeOut,w
  1927  029E                     u3365:	
  1928  029E  1C03               	btfss	3,0
  1929  029F  2B0B               	goto	l7138
  1930  02A0  2B19               	goto	l7140
  1931  02A1                     l7070:	
  1932                           
  1933                           ;smartkey.C: 500: beepOff();
  1934  02A1  26F8               	fcall	_beepOff
  1935                           
  1936                           ;smartkey.C: 501: RegStatus.bits.b0 = 0;
  1937  02A2  1072               	bcf	_RegStatus,0	;volatile
  1938                           
  1939                           ;smartkey.C: 502: setState(2, 300);
  1940  02A3  302C               	movlw	44
  1941  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1942  02A5  00A0               	movwf	?_setState
  1943  02A6  3001               	movlw	1
  1944  02A7  00A1               	movwf	?_setState+1
  1945  02A8  3002               	movlw	2
  1946  02A9  26DC               	fcall	_setState
  1947                           
  1948                           ;smartkey.C: 503: break;
  1949  02AA  2B19               	goto	l7140
  1950  02AB                     l7076:	
  1951                           
  1952                           ;smartkey.C: 505: beepOff();
  1953  02AB  26F8               	fcall	_beepOff
  1954                           
  1955                           ;smartkey.C: 506: delay_x10ms(20);
  1956  02AC  3014               	movlw	20
  1957  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1958  02AE  00A0               	movwf	?_delay_x10ms
  1959  02AF  01A1               	clrf	?_delay_x10ms+1
  1960  02B0  2692               	fcall	_delay_x10ms
  1961                           
  1962                           ;smartkey.C: 507: beepOn(); TMR2ON = 0; RegStatus.bits.b7 = 0;
  1963  02B1  2705               	fcall	_beepOn
  1964  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  1965  02B3  1112               	bcf	18,2
  1966  02B4  13F2               	bcf	_RegStatus,7	;volatile
  1967  02B5  301E               	movlw	30
  1968                           
  1969                           ;smartkey.C: 508: beep(30, 1);
  1970  02B6  01A4               	clrf	?_beep
  1971  02B7  0AA4               	incf	?_beep,f
  1972  02B8  2653               	fcall	_beep
  1973                           
  1974                           ;smartkey.C: 509: RegStatus.bits.b5 = 1;
  1975  02B9  16F2               	bsf	_RegStatus,5	;volatile
  1976  02BA  3000               	movlw	0
  1977                           
  1978                           ;smartkey.C: 510: setState(0, 0);
  1979  02BB  01A0               	clrf	?_setState
  1980  02BC  01A1               	clrf	?_setState+1
  1981  02BD                     L2:	
  1982  02BD  26DC               	fcall	_setState
  1983  02BE                     l7088:	
  1984                           
  1985                           ;smartkey.C: 512: tmp16 = timeTick + 40;
  1986  02BE  0871               	movf	_timeTick+1,w
  1987  02BF  00BF               	movwf	main@tmp16+1
  1988  02C0  0870               	movf	_timeTick,w
  1989  02C1  00BE               	movwf	main@tmp16
  1990  02C2  3028               	movlw	40
  1991  02C3  07BE               	addwf	main@tmp16,f
  1992  02C4  1803               	skipnc
  1993  02C5  0ABF               	incf	main@tmp16+1,f
  1994                           
  1995                           ;smartkey.C: 513: break;
  1996  02C6  2B19               	goto	l7140
  1997  02C7                     l7092:	
  1998                           
  1999                           ;smartkey.C: 516: if (READ_EEPROM(0x08) == 0xcc) WRITE_EEPROM(0x08, 0);
  2000  02C7  3008               	movlw	8
  2001  02C8  26CF               	fcall	_READ_EEPROM
  2002  02C9  3ACC               	xorlw	204
  2003  02CA  1D03               	skipz
  2004  02CB  2ACF               	goto	l7096
  2005  02CC  3008               	movlw	8
  2006  02CD  01A0               	clrf	?_WRITE_EEPROM
  2007  02CE  2620               	fcall	_WRITE_EEPROM
  2008  02CF                     l7096:	
  2009                           
  2010                           ;smartkey.C: 517: if (RegStatus.bits.b7) {
  2011  02CF  1FF2               	btfss	_RegStatus,7	;volatile
  2012  02D0  2AE5               	goto	l7106
  2013                           
  2014                           ;smartkey.C: 518: setState(4, 6000);
  2015  02D1  3070               	movlw	112
  2016  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2017  02D3  00A0               	movwf	?_setState
  2018  02D4  3017               	movlw	23
  2019  02D5  00A1               	movwf	?_setState+1
  2020  02D6  3004               	movlw	4
  2021  02D7  26DC               	fcall	_setState
  2022                           
  2023                           ;smartkey.C: 519: cntTmp = timeTick + 40;
  2024  02D8  0871               	movf	_timeTick+1,w
  2025  02D9  00C2               	movwf	_cntTmp+1
  2026  02DA  0870               	movf	_timeTick,w
  2027  02DB  00C1               	movwf	_cntTmp
  2028  02DC  3028               	movlw	40
  2029  02DD  07C1               	addwf	_cntTmp,f
  2030  02DE  1803               	skipnc
  2031  02DF  0AC2               	incf	_cntTmp+1,f
  2032                           
  2033                           ;smartkey.C: 520: PR2L = 20;
  2034  02E0  3014               	movlw	20
  2035  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  2036  02E2  0091               	movwf	17	;volatile
  2037                           
  2038                           ;smartkey.C: 521: beepOn();
  2039  02E3  2705               	fcall	_beepOn
  2040                           
  2041                           ;smartkey.C: 523: } else if (mtOldState == 0) {
  2042  02E4  2B19               	goto	l7140
  2043  02E5                     l7106:	
  2044  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2045  02E6  08C6               	movf	_mtOldState,f
  2046  02E7  1D03               	skipz
  2047  02E8  2AFD               	goto	l7120
  2048                           
  2049                           ;smartkey.C: 525: beep(10, 5);
  2050  02E9  3005               	movlw	5
  2051  02EA  00A4               	movwf	?_beep
  2052  02EB  300A               	movlw	10
  2053  02EC  2653               	fcall	_beep
  2054                           
  2055                           ;smartkey.C: 526: RegStatus.bits.b0 = 1;
  2056  02ED  1472               	bsf	_RegStatus,0	;volatile
  2057                           
  2058                           ;smartkey.C: 527: if (READ_EEPROM(0x40))WRITE_EEPROM(0x40, 0);
  2059  02EE  3040               	movlw	64
  2060  02EF  26CF               	fcall	_READ_EEPROM
  2061  02F0  3A00               	xorlw	0
  2062  02F1  1903               	skipnz
  2063  02F2  2AF6               	goto	l979
  2064  02F3  3040               	movlw	64
  2065  02F4  01A0               	clrf	?_WRITE_EEPROM
  2066  02F5  2620               	fcall	_WRITE_EEPROM
  2067  02F6                     l979:	
  2068                           
  2069                           ;smartkey.C: 528: setState(1, 3500);
  2070  02F6  30AC               	movlw	172
  2071  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2072  02F8  00A0               	movwf	?_setState
  2073  02F9  300D               	movlw	13
  2074  02FA  00A1               	movwf	?_setState+1
  2075  02FB  3001               	movlw	1
  2076  02FC  2ABD               	goto	L2
  2077  02FD                     l7120:	
  2078                           
  2079                           ;smartkey.C: 532: beepOn(); TMR2ON = 0;
  2080  02FD  2705               	fcall	_beepOn
  2081  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2082  02FF  1112               	bcf	18,2
  2083                           
  2084                           ;smartkey.C: 533: RegStatus.bits.b7 = 0;
  2085  0300  13F2               	bcf	_RegStatus,7	;volatile
  2086  0301  301E               	movlw	30
  2087                           
  2088                           ;smartkey.C: 534: beep(30, 1);
  2089  0302  01A4               	clrf	?_beep
  2090  0303  0AA4               	incf	?_beep,f
  2091  0304  2653               	fcall	_beep
  2092  0305  3000               	movlw	0
  2093                           
  2094                           ;smartkey.C: 535: setState(0, 0);
  2095  0306  01A0               	clrf	?_setState
  2096  0307  01A1               	clrf	?_setState+1
  2097  0308  26DC               	fcall	_setState
  2098                           
  2099                           ;smartkey.C: 537: RegStatus.bits.b5 = 1;
  2100  0309  16F2               	bsf	_RegStatus,5	;volatile
  2101  030A  2ABE               	goto	l7088
  2102  030B                     l7138:	
  2103  030B  0874               	movf	_mtState,w
  2104                           
  2105                           ; Switch size 1, requested type "space"
  2106                           ; Number of cases is 4, Range of values is 1 to 4
  2107                           ; switch strategies available:
  2108                           ; Name         Instructions Cycles
  2109                           ; simple_byte           13     7 (average)
  2110                           ; direct_byte           13     9 (fixed)
  2111                           ; jumptable            263     9 (fixed)
  2112                           ;	Chosen strategy is simple_byte
  2113  030C  3A01               	xorlw	1	; case 1
  2114  030D  1903               	skipnz
  2115  030E  2B19               	goto	l7140
  2116  030F  3A03               	xorlw	3	; case 2
  2117  0310  1903               	skipnz
  2118  0311  2AC7               	goto	l7092
  2119  0312  3A01               	xorlw	1	; case 3
  2120  0313  1903               	skipnz
  2121  0314  2AA1               	goto	l7070
  2122  0315  3A07               	xorlw	7	; case 4
  2123  0316  1903               	skipnz
  2124  0317  2AAB               	goto	l7076
  2125  0318  2B19               	goto	l7140
  2126  0319                     l7140:	
  2127                           
  2128                           ;smartkey.C: 542: }
  2129                           ;smartkey.C: 544: if ((timeTick > tmp16) && (RegStatus.bits.b6 == 1)) {
  2130  0319  0871               	movf	_timeTick+1,w
  2131  031A  1283               	bcf	3,5	;RP0=0, select bank0
  2132  031B  023F               	subwf	main@tmp16+1,w
  2133  031C  1D03               	skipz
  2134  031D  2B20               	goto	u3415
  2135  031E  0870               	movf	_timeTick,w
  2136  031F  023E               	subwf	main@tmp16,w
  2137  0320                     u3415:	
  2138  0320  1C03               	btfss	3,0
  2139  0321  1F72               	btfss	_RegStatus,6	;volatile
  2140  0322  2BEC               	goto	l7248
  2141                           
  2142                           ;smartkey.C: 545: if (timeTick > 65000) timeTick = 0;
  2143  0323  30FD               	movlw	253
  2144  0324  0271               	subwf	_timeTick+1,w
  2145  0325  30E9               	movlw	233
  2146  0326  1903               	skipnz
  2147  0327  0270               	subwf	_timeTick,w
  2148  0328  1C03               	skipc
  2149  0329  2B2C               	goto	l7148
  2150  032A  01F0               	clrf	_timeTick
  2151  032B  01F1               	clrf	_timeTick+1
  2152  032C                     l7148:	
  2153                           
  2154                           ;smartkey.C: 546: tmp16 = timeTick + 40;
  2155  032C  0871               	movf	_timeTick+1,w
  2156  032D  00BF               	movwf	main@tmp16+1
  2157  032E  0870               	movf	_timeTick,w
  2158  032F  00BE               	movwf	main@tmp16
  2159  0330  3028               	movlw	40
  2160  0331  07BE               	addwf	main@tmp16,f
  2161  0332  1803               	skipnc
  2162  0333  0ABF               	incf	main@tmp16+1,f
  2163                           
  2164                           ;smartkey.C: 548: if (AccRead(0x02,buf, 6) == 0) {
  2165  0334  3033               	movlw	main@buf& (0+255)
  2166  0335  00A4               	movwf	?_AccRead
  2167  0336  3006               	movlw	6
  2168  0337  00A5               	movwf	?_AccRead+1
  2169  0338  3002               	movlw	2
  2170  0339  258E               	fcall	_AccRead
  2171  033A  3800               	iorlw	0
  2172  033B  1D03               	skipz
  2173  033C  2BEC               	goto	l7248
  2174                           
  2175                           ;smartkey.C: 550: if((mtState == 1) ){
  2176  033D  0B74               	decfsz	_mtState,w
  2177  033E  2BC9               	goto	l7230
  2178                           
  2179                           ;smartkey.C: 553: if (compe((signed char)buf[1], (signed char)acXsum, 4) && compe((signe
      +                          d char)buf[3], (signed char)acYsum, 4)) {
  2180  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0340  083B               	movf	main@acXsum,w
  2182  0341  00A0               	movwf	?_compe
  2183  0342  3004               	movlw	4
  2184  0343  00A1               	movwf	?_compe+1
  2185  0344  0834               	movf	main@buf+1,w
  2186  0345  2551               	fcall	_compe
  2187  0346  3A00               	xorlw	0
  2188  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2189  0348  1903               	skipnz
  2190  0349  2B78               	goto	L5
  2191  034A  0839               	movf	main@acYsum,w
  2192  034B  00A0               	movwf	?_compe
  2193  034C  3004               	movlw	4
  2194  034D  00A1               	movwf	?_compe+1
  2195  034E  0836               	movf	main@buf+3,w
  2196  034F  2551               	fcall	_compe
  2197  0350  3A00               	xorlw	0
  2198                           
  2199                           ;smartkey.C: 555: isSw++;
  2200  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0352  1903               	skipnz
  2202  0353  2B78               	goto	L5
  2203  0354  302D               	movlw	45
  2204  0355  0ABD               	incf	main@isSw,f
  2205                           
  2206                           ;smartkey.C: 556: if (isSw > 44) {
  2207  0356  023D               	subwf	main@isSw,w
  2208  0357  1C03               	skipc
  2209  0358  2B6B               	goto	l7176
  2210                           
  2211                           ;smartkey.C: 557: isSw = 0;
  2212  0359  01BD               	clrf	main@isSw
  2213                           
  2214                           ;smartkey.C: 558: RegStatus.bits.b5 = 1;
  2215  035A  16F2               	bsf	_RegStatus,5	;volatile
  2216                           
  2217                           ;smartkey.C: 561: RegStatus.bits.b0 = 0;
  2218  035B  1072               	bcf	_RegStatus,0	;volatile
  2219                           
  2220                           ;smartkey.C: 562: setState(2, 300);
  2221  035C  302C               	movlw	44
  2222  035D  00A0               	movwf	?_setState
  2223  035E  3001               	movlw	1
  2224  035F  00A1               	movwf	?_setState+1
  2225  0360  3002               	movlw	2
  2226  0361  26DC               	fcall	_setState
  2227                           
  2228                           ;smartkey.C: 563: tmp16 = timeTick + 40;
  2229  0362  0871               	movf	_timeTick+1,w
  2230  0363  00BF               	movwf	main@tmp16+1
  2231  0364  0870               	movf	_timeTick,w
  2232  0365  00BE               	movwf	main@tmp16
  2233  0366  3028               	movlw	40
  2234  0367  07BE               	addwf	main@tmp16,f
  2235  0368  1803               	skipnc
  2236  0369  0ABF               	incf	main@tmp16+1,f
  2237                           
  2238                           ;smartkey.C: 564: }
  2239  036A  2BA7               	goto	l7208
  2240  036B                     l7176:	
  2241                           
  2242                           ;smartkey.C: 565: else if (isSw > 25) {
  2243  036B  301A               	movlw	26
  2244  036C  023D               	subwf	main@isSw,w
  2245  036D  1803               	btfsc	3,0
  2246                           
  2247                           ;smartkey.C: 566: if (isSw % 2 == 0) {
  2248  036E  183D               	btfsc	main@isSw,0
  2249  036F  2BA7               	goto	l7208
  2250                           
  2251                           ;smartkey.C: 567: beepOn(); TMR2ON = 0; beep(7, 1);
  2252  0370  2705               	fcall	_beepOn
  2253  0371  3007               	movlw	7
  2254  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0373  1112               	bcf	18,2
  2256  0374  01A4               	clrf	?_beep
  2257  0375  0AA4               	incf	?_beep,f
  2258  0376  2653               	fcall	_beep
  2259  0377  2BA7               	goto	l7208
  2260  0378                     L5:	
  2261                           ;smartkey.C: 572: else
  2262                           ;smartkey.C: 574: {
  2263                           ;smartkey.C: 575: isSw = 0;
  2264                           
  2265                           ;smartkey.C: 568: }
  2266                           ;smartkey.C: 569: }
  2267                           ;smartkey.C: 570: }
  2268                           
  2269  0378  01BD               	clrf	main@isSw
  2270                           
  2271                           ;smartkey.C: 578: if (compe((signed char)buf[1],acXOld,1 ) && compe((signed char)buf[3],
      +                          acYOld,1)) {
  2272  0379  0832               	movf	main@acXOld,w
  2273  037A  00A0               	movwf	?_compe
  2274  037B  01A1               	clrf	?_compe+1
  2275  037C  0AA1               	incf	?_compe+1,f
  2276  037D  0834               	movf	main@buf+1,w
  2277  037E  2551               	fcall	_compe
  2278  037F  3A00               	xorlw	0
  2279  0380  1283               	bcf	3,5	;RP0=0, select bank0
  2280  0381  1903               	skipnz
  2281  0382  2BA5               	goto	L6
  2282  0383  0831               	movf	main@acYOld,w
  2283  0384  00A0               	movwf	?_compe
  2284  0385  01A1               	clrf	?_compe+1
  2285  0386  0AA1               	incf	?_compe+1,f
  2286  0387  0836               	movf	main@buf+3,w
  2287  0388  2551               	fcall	_compe
  2288  0389  3A00               	xorlw	0
  2289                           
  2290                           ;smartkey.C: 579: isWait++;
  2291  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2292  038B  1903               	skipnz
  2293  038C  2BA5               	goto	L6
  2294  038D  0AAD               	incf	main@isWait,f
  2295  038E  1903               	skipnz
  2296  038F  0AAE               	incf	main@isWait+1,f
  2297                           
  2298                           ;smartkey.C: 580: if (isWait == 450) {
  2299  0390  032E               	decf	main@isWait+1,w
  2300  0391  30C2               	movlw	194
  2301  0392  1903               	skipnz
  2302  0393  062D               	xorwf	main@isWait,w
  2303  0394  1D03               	skipz
  2304  0395  2BA7               	goto	l7208
  2305  0396  3002               	movlw	2
  2306                           
  2307                           ;smartkey.C: 581: isWait = 0;
  2308  0397  01AD               	clrf	main@isWait
  2309  0398  01AE               	clrf	main@isWait+1
  2310                           
  2311                           ;smartkey.C: 582: beep(7, 2);
  2312  0399  00A4               	movwf	?_beep
  2313  039A  3007               	movlw	7
  2314  039B  2653               	fcall	_beep
  2315                           
  2316                           ;smartkey.C: 583: RegStatus.bits.b5 = 1;
  2317  039C  16F2               	bsf	_RegStatus,5	;volatile
  2318                           
  2319                           ;smartkey.C: 584: RegStatus.bits.b0 = 0;
  2320  039D  1072               	bcf	_RegStatus,0	;volatile
  2321                           
  2322                           ;smartkey.C: 585: setState(2, 300);
  2323  039E  302C               	movlw	44
  2324  039F  00A0               	movwf	?_setState
  2325  03A0  3001               	movlw	1
  2326  03A1  00A1               	movwf	?_setState+1
  2327  03A2  3002               	movlw	2
  2328  03A3  26DC               	fcall	_setState
  2329  03A4  2BA7               	goto	l7208
  2330  03A5                     L6:	
  2331                           ;smartkey.C: 588: else
  2332                           ;smartkey.C: 589: {isWait = 0;}
  2333                           
  2334  03A5  01AD               	clrf	main@isWait
  2335  03A6  01AE               	clrf	main@isWait+1
  2336  03A7                     l7208:	
  2337                           
  2338                           ;smartkey.C: 590: }
  2339                           ;smartkey.C: 593: if ( ((signed char)buf[5] > -15) && ((signed char)buf[5] < 15)) {
  2340  03A7  0838               	movf	main@buf+5,w
  2341  03A8  3A80               	xorlw	128
  2342  03A9  3E8E               	addlw	142
  2343  03AA  1C03               	skipc
  2344  03AB  2BC3               	goto	l7224
  2345  03AC  0838               	movf	main@buf+5,w
  2346  03AD  3A80               	xorlw	128
  2347  03AE  3E71               	addlw	-143
  2348  03AF  1803               	skipnc
  2349  03B0  2BC3               	goto	l7224
  2350  03B1  3005               	movlw	5
  2351                           
  2352                           ;smartkey.C: 594: isFall++;
  2353  03B2  0AAF               	incf	main@isFall,f
  2354                           
  2355                           ;smartkey.C: 595: if (isFall > 4) {
  2356  03B3  022F               	subwf	main@isFall,w
  2357  03B4  1C03               	skipc
  2358  03B5  2BC4               	goto	l7226
  2359  03B6  3002               	movlw	2
  2360                           
  2361                           ;smartkey.C: 596: isFall = 0;
  2362  03B7  01AF               	clrf	main@isFall
  2363                           
  2364                           ;smartkey.C: 597: beep(7, 2);
  2365  03B8  00A4               	movwf	?_beep
  2366  03B9  3007               	movlw	7
  2367  03BA  2653               	fcall	_beep
  2368                           
  2369                           ;smartkey.C: 598: RegStatus.bits.b0 = 0;
  2370  03BB  1072               	bcf	_RegStatus,0	;volatile
  2371                           
  2372                           ;smartkey.C: 599: setState(2, 300);
  2373  03BC  302C               	movlw	44
  2374  03BD  00A0               	movwf	?_setState
  2375  03BE  3001               	movlw	1
  2376  03BF  00A1               	movwf	?_setState+1
  2377  03C0  3002               	movlw	2
  2378  03C1  26DC               	fcall	_setState
  2379  03C2  2BC4               	goto	l7226
  2380  03C3                     l7224:	
  2381                           
  2382                           ;smartkey.C: 602: else {
  2383                           ;smartkey.C: 603: isFall = 0;
  2384  03C3  01AF               	clrf	main@isFall
  2385  03C4                     l7226:	
  2386                           
  2387                           ;smartkey.C: 604: }
  2388                           ;smartkey.C: 607: acYOld =(signed char)buf[3]; acXOld = (signed char)buf[1];
  2389  03C4  0836               	movf	main@buf+3,w
  2390  03C5  00B1               	movwf	main@acYOld
  2391  03C6  0834               	movf	main@buf+1,w
  2392  03C7  00B2               	movwf	main@acXOld
  2393                           
  2394                           ;smartkey.C: 610: }
  2395  03C8  2BEC               	goto	l7248
  2396  03C9                     l7230:	
  2397                           
  2398                           ;smartkey.C: 611: else if(mtState== 0){
  2399  03C9  08F4               	movf	_mtState,f
  2400  03CA  1903               	btfsc	3,2
  2401                           
  2402                           ;smartkey.C: 613: if (RegStatus.bits.b5) {
  2403  03CB  1EF2               	btfss	_RegStatus,5	;volatile
  2404  03CC  2BEC               	goto	l7248
  2405                           
  2406                           ;smartkey.C: 614: if (compe((signed char)buf[1],acXOld , 3) && compe((signed char)buf[3]
      +                          ,acYOld , 3)) {
  2407  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2408  03CE  0832               	movf	main@acXOld,w
  2409  03CF  00A0               	movwf	?_compe
  2410  03D0  3003               	movlw	3
  2411  03D1  00A1               	movwf	?_compe+1
  2412  03D2  0834               	movf	main@buf+1,w
  2413  03D3  2551               	fcall	_compe
  2414  03D4  3A00               	xorlw	0
  2415  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2416  03D6  1903               	skipnz
  2417  03D7  2BE4               	goto	L7
  2418  03D8  0831               	movf	main@acYOld,w
  2419  03D9  00A0               	movwf	?_compe
  2420  03DA  3003               	movlw	3
  2421  03DB  00A1               	movwf	?_compe+1
  2422  03DC  0836               	movf	main@buf+3,w
  2423  03DD  2551               	fcall	_compe
  2424  03DE  3A00               	xorlw	0
  2425                           
  2426                           ;smartkey.C: 616: isSw = 0;
  2427  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2428  03E0  1903               	skipnz
  2429  03E1  2BE4               	goto	L7
  2430  03E2  01BD               	clrf	main@isSw
  2431                           
  2432                           ;smartkey.C: 617: }
  2433  03E3  2BEC               	goto	l7248
  2434  03E4                     L7:	
  2435                           ;smartkey.C: 618: else {
  2436                           ;smartkey.C: 619: isSw++;
  2437                           
  2438  03E4  0ABD               	incf	main@isSw,f
  2439                           
  2440                           ;smartkey.C: 620: beepOn(); TMR2ON = 0; beep(7, 3);
  2441  03E5  2705               	fcall	_beepOn
  2442  03E6  3003               	movlw	3
  2443  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2444  03E8  1112               	bcf	18,2
  2445  03E9  00A4               	movwf	?_beep
  2446  03EA  3007               	movlw	7
  2447  03EB  2653               	fcall	_beep
  2448  03EC                     l7248:	
  2449                           
  2450                           ;smartkey.C: 621: }
  2451                           ;smartkey.C: 622: }
  2452                           ;smartkey.C: 623: }
  2453                           ;smartkey.C: 626: }
  2454                           ;smartkey.C: 627: }
  2455                           ;smartkey.C: 629: if (RegStatus.bits.b0) {RC0 = 1; RC1 = 1;}
  2456  03EC  1C72               	btfss	_RegStatus,0	;volatile
  2457  03ED  2BF2               	goto	l1002
  2458  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2459  03EF  1407               	bsf	7,0
  2460  03F0  1487               	bsf	7,1
  2461  03F1  2BF5               	goto	l7252
  2462  03F2                     l1002:	
  2463                           
  2464                           ;smartkey.C: 630: else {RC0 = 0; RC1 = 0;}
  2465  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2466  03F3  1007               	bcf	7,0
  2467  03F4  1087               	bcf	7,1
  2468  03F5                     l7252:	
  2469                           
  2470                           ;smartkey.C: 633: if (timeTick > 500){
  2471  03F5  3001               	movlw	1
  2472  03F6  0271               	subwf	_timeTick+1,w
  2473  03F7  30F5               	movlw	245
  2474  03F8  1903               	skipnz
  2475  03F9  0270               	subwf	_timeTick,w
  2476  03FA  1C03               	skipc
  2477  03FB  29BB               	goto	l6950
  2478                           
  2479                           ;smartkey.C: 634: if (READ_EEPROM(0x3F)) WRITE_EEPROM(0x3F, 0);
  2480  03FC  303F               	movlw	63
  2481  03FD  26CF               	fcall	_READ_EEPROM
  2482  03FE  3A00               	xorlw	0
  2483  03FF  1903               	skipnz
  2484  0400  2C04               	goto	l7258
  2485  0401  303F               	movlw	63
  2486  0402  01A0               	clrf	?_WRITE_EEPROM
  2487  0403  2620               	fcall	_WRITE_EEPROM
  2488  0404                     l7258:	
  2489                           
  2490                           ;smartkey.C: 635: if (READ_EEPROM(0x40)) WRITE_EEPROM(0x40, 0);
  2491  0404  3040               	movlw	64
  2492  0405  26CF               	fcall	_READ_EEPROM
  2493  0406  3A00               	xorlw	0
  2494  0407  1903               	skipnz
  2495  0408  29BB               	goto	l6950
  2496  0409  3040               	movlw	64
  2497  040A  01A0               	clrf	?_WRITE_EEPROM
  2498  040B  2620               	fcall	_WRITE_EEPROM
  2499  040C  29BB               	goto	l6950
  2500  040D                     __end_of_main:	
  2501                           
  2502                           	psect	swtext1
  2503  0700                     __pswtext1:	
  2504  0700                     S7310:	
  2505  0700  2A92               	ljmp	l959
  2506  0701  29C5               	ljmp	l6960
  2507  0702  29CD               	ljmp	l6964
  2508  0703  2A15               	ljmp	l7004
  2509  0704  2A36               	ljmp	l7018
  2510                           
  2511                           	psect	text877
  2512  058E                     __ptext877:	
  2513 ;; =============== function _main ends ============
  2514                           
  2515                           
  2516 ;; *************** function _AccRead *****************
  2517 ;; Defined at:
  2518 ;;		line 34 in file "mpu6x.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  rAdd            1    wreg     unsigned char 
  2521 ;;  dat             1    4[BANK0 ] PTR unsigned char 
  2522 ;;		 -> main@buf(6), 
  2523 ;;  len             1    5[BANK0 ] unsigned char 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  rAdd            1    8[BANK0 ] unsigned char 
  2526 ;;  i               1    9[BANK0 ] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      unsigned char 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 20/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1
  2536 ;;      Params:         0       2       0
  2537 ;;      Locals:         0       2       0
  2538 ;;      Temps:          0       2       0
  2539 ;;      Totals:         0       6       0
  2540 ;;Total ram usage:        6 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    3
  2543 ;; This function calls:
  2544 ;;		_swI2C_Start
  2545 ;;		_swI2C_WriteByte
  2546 ;;		_swI2C_ReadByte
  2547 ;;		_swI2C_Stop
  2548 ;; This function is called by:
  2549 ;;		_main
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552  058E                     _AccRead:	
  2553                           
  2554                           ; Regs used in _AccRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2555                           ;AccRead@rAdd stored from wreg
  2556  058E  00A8               	movwf	AccRead@rAdd
  2557                           
  2558                           ;mpu6x.c: 35: unsigned char i;
  2559                           ;mpu6x.c: 37: swI2C_Start();
  2560  058F  267F               	fcall	_swI2C_Start
  2561                           
  2562                           ;mpu6x.c: 38: if(swI2C_WriteByte(0x18<<1)== 0 )
  2563  0590  3030               	movlw	48
  2564  0591  2514               	fcall	_swI2C_WriteByte
  2565  0592  3800               	iorlw	0
  2566  0593  1D03               	skipz
  2567  0594  3401               	retlw	1
  2568                           
  2569                           ;mpu6x.c: 39: {
  2570                           ;mpu6x.c: 40: if(swI2C_WriteByte(rAdd)==0 )
  2571  0595  0828               	movf	AccRead@rAdd,w
  2572  0596  2514               	fcall	_swI2C_WriteByte
  2573  0597  3800               	iorlw	0
  2574  0598  1D03               	skipz
  2575  0599  3402               	retlw	2
  2576                           
  2577                           ;mpu6x.c: 41: {
  2578                           ;mpu6x.c: 42: swI2C_Start();
  2579  059A  267F               	fcall	_swI2C_Start
  2580                           
  2581                           ;mpu6x.c: 43: if(swI2C_WriteByte((0x18<<1)|1)== 0 ){
  2582  059B  3031               	movlw	49
  2583  059C  2514               	fcall	_swI2C_WriteByte
  2584  059D  3800               	iorlw	0
  2585  059E  1D03               	skipz
  2586  059F  3401               	retlw	1
  2587                           
  2588                           ;mpu6x.c: 45: for(i=0; i<(len-1);i++){
  2589  05A0  01A9               	clrf	AccRead@i
  2590  05A1                     l6756:	
  2591  05A1  0825               	movf	AccRead@len,w
  2592  05A2  3EFF               	addlw	255
  2593  05A3  00A6               	movwf	??_AccRead
  2594  05A4  30FF               	movlw	255
  2595  05A5  1803               	skipnc
  2596  05A6  3000               	movlw	0
  2597  05A7  00A7               	movwf	??_AccRead+1
  2598  05A8  3A80               	xorlw	128
  2599  05A9  3C80               	sublw	128
  2600  05AA  1D03               	skipz
  2601  05AB  2DAE               	goto	u2935
  2602  05AC  0826               	movf	??_AccRead,w
  2603  05AD  0229               	subwf	AccRead@i,w
  2604  05AE                     u2935:	
  2605                           
  2606                           ;mpu6x.c: 46: dat[i]=swI2C_ReadByte(0);
  2607  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  2608  05AF  0829               	movf	AccRead@i,w
  2609  05B0  1803               	btfsc	3,0
  2610  05B1  2DBB               	goto	L8
  2611  05B2  0724               	addwf	AccRead@dat,w
  2612  05B3  00A6               	movwf	??_AccRead
  2613  05B4  0084               	movwf	4
  2614  05B5  3000               	movlw	0
  2615  05B6  24D6               	fcall	_swI2C_ReadByte
  2616  05B7  1383               	bcf	3,7	;select IRP bank0
  2617  05B8  0080               	movwf	0
  2618  05B9  0AA9               	incf	AccRead@i,f
  2619  05BA  2DA1               	goto	l6756
  2620  05BB                     L8:	
  2621                           ;mpu6x.c: 47: }
  2622                           ;mpu6x.c: 48: dat[i]=swI2C_ReadByte(1);
  2623                           
  2624  05BB  0724               	addwf	AccRead@dat,w
  2625  05BC  00A6               	movwf	??_AccRead
  2626  05BD  0826               	movf	??_AccRead,w
  2627  05BE  0084               	movwf	4
  2628  05BF  3001               	movlw	1
  2629  05C0  24D6               	fcall	_swI2C_ReadByte
  2630  05C1  1383               	bcf	3,7	;select IRP bank0
  2631  05C2  0080               	movwf	0
  2632                           
  2633                           ;mpu6x.c: 49: swI2C_Stop();
  2634  05C3  26C2               	fcall	_swI2C_Stop
  2635                           
  2636                           ;mpu6x.c: 50: return 0;
  2637  05C4  3400               	retlw	0
  2638  05C5                     __end_of_AccRead:	
  2639                           ;mpu6x.c: 56: else
  2640                           ;mpu6x.c: 57: return 2;
  2641                           
  2642                           ;mpu6x.c: 53: else
  2643                           ;mpu6x.c: 54: return 1;
  2644                           
  2645                           
  2646                           	psect	text878
  2647  05C5                     __ptext878:	
  2648 ;; =============== function _AccRead ends ============
  2649                           
  2650                           
  2651 ;; *************** function _AccWrite *****************
  2652 ;; Defined at:
  2653 ;;		line 4 in file "mpu6x.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  rAdd            1    wreg     unsigned char 
  2656 ;;  dat             1    3[BANK0 ] PTR unsigned char 
  2657 ;;		 -> main@buf(6), 
  2658 ;;  len             1    4[BANK0 ] unsigned char 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;  rAdd            1    6[BANK0 ] unsigned char 
  2661 ;;  i               1    7[BANK0 ] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      unsigned char 
  2664 ;; Registers used:
  2665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 20/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMMON   BANK0   BANK1
  2671 ;;      Params:         0       2       0
  2672 ;;      Locals:         0       2       0
  2673 ;;      Temps:          0       1       0
  2674 ;;      Totals:         0       5       0
  2675 ;;Total ram usage:        5 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    3
  2678 ;; This function calls:
  2679 ;;		_swI2C_Start
  2680 ;;		_swI2C_WriteByte
  2681 ;;		_swI2C_Stop
  2682 ;; This function is called by:
  2683 ;;		_main
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686  05C5                     _AccWrite:	
  2687                           
  2688                           ; Regs used in _AccWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2689                           ;AccWrite@rAdd stored from wreg
  2690  05C5  00A6               	movwf	AccWrite@rAdd
  2691                           
  2692                           ;mpu6x.c: 5: unsigned char i;
  2693                           ;mpu6x.c: 7: for(i=0; i<len;i++){
  2694  05C6  01A7               	clrf	AccWrite@i
  2695  05C7                     l6738:	
  2696  05C7  0824               	movf	AccWrite@len,w
  2697  05C8  0227               	subwf	AccWrite@i,w
  2698  05C9  1803               	btfsc	3,0
  2699  05CA  3400               	retlw	0
  2700                           
  2701                           ;mpu6x.c: 8: swI2C_Start();
  2702  05CB  267F               	fcall	_swI2C_Start
  2703                           
  2704                           ;mpu6x.c: 10: if(swI2C_WriteByte(0x18<<1)== 0 )
  2705  05CC  3030               	movlw	48
  2706  05CD  2514               	fcall	_swI2C_WriteByte
  2707  05CE  3800               	iorlw	0
  2708  05CF  1D03               	skipz
  2709  05D0  3401               	retlw	1
  2710                           
  2711                           ;mpu6x.c: 11: {
  2712                           ;mpu6x.c: 12: if(swI2C_WriteByte(rAdd)==0 )
  2713  05D1  0826               	movf	AccWrite@rAdd,w
  2714  05D2  2514               	fcall	_swI2C_WriteByte
  2715  05D3  3800               	iorlw	0
  2716  05D4  1D03               	skipz
  2717  05D5  3402               	retlw	2
  2718                           
  2719                           ;mpu6x.c: 13: {
  2720                           ;mpu6x.c: 15: {
  2721                           ;mpu6x.c: 16: if(swI2C_WriteByte(dat[i])==1 ){
  2722  05D6  0827               	movf	AccWrite@i,w
  2723  05D7  0723               	addwf	AccWrite@dat,w
  2724  05D8  00A5               	movwf	??_AccWrite
  2725  05D9  0084               	movwf	4
  2726  05DA  1383               	bcf	3,7	;select IRP bank0
  2727  05DB  0800               	movf	0,w
  2728  05DC  2514               	fcall	_swI2C_WriteByte
  2729  05DD  3A01               	xorlw	1
  2730  05DE  1D03               	skipz
  2731  05DF  2DE2               	goto	l6726
  2732                           
  2733                           ;mpu6x.c: 17: swI2C_Stop();
  2734  05E0  26C2               	fcall	_swI2C_Stop
  2735                           
  2736                           ;mpu6x.c: 18: return 3;
  2737  05E1  3403               	retlw	3
  2738  05E2                     l6726:	
  2739                           
  2740                           ;mpu6x.c: 19: }
  2741                           ;mpu6x.c: 20: }
  2742                           ;mpu6x.c: 21: swI2C_Stop();
  2743  05E2  26C2               	fcall	_swI2C_Stop
  2744                           
  2745                           ;mpu6x.c: 26: else
  2746                           ;mpu6x.c: 27: return 1;
  2747                           
  2748                           ;mpu6x.c: 23: else
  2749                           ;mpu6x.c: 24: return 2;
  2750                           
  2751                           ;mpu6x.c: 22: }
  2752  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  2753  05E4  0AA7               	incf	AccWrite@i,f
  2754  05E5  2DC7               	goto	l6738
  2755  05E6                     __end_of_AccWrite:	
  2756                           ;mpu6x.c: 28: }
  2757                           ;mpu6x.c: 29: return 0;
  2758                           
  2759                           
  2760                           	psect	text879
  2761  04D6                     __ptext879:	
  2762 ;; =============== function _AccWrite ends ============
  2763                           
  2764                           
  2765 ;; *************** function _swI2C_ReadByte *****************
  2766 ;; Defined at:
  2767 ;;		line 112 in file "SWI2C.C"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  Ack             1    wreg     unsigned char 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  Ack             1    1[BANK0 ] unsigned char 
  2772 ;;  i               1    3[BANK0 ] unsigned char 
  2773 ;;  dat             1    2[BANK0 ] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      unsigned char 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0
  2778 ;; Tracked objects:
  2779 ;;		On entry : 20/0
  2780 ;;		On exit  : 20/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1
  2783 ;;      Params:         0       0       0
  2784 ;;      Locals:         0       3       0
  2785 ;;      Temps:          0       1       0
  2786 ;;      Totals:         0       4       0
  2787 ;;Total ram usage:        4 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    2
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_AccRead
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796  04D6                     _swI2C_ReadByte:	
  2797                           
  2798                           ; Regs used in _swI2C_ReadByte: [wreg+status,2+status,0]
  2799                           ;swI2C_ReadByte@Ack stored from wreg
  2800  04D6  00A1               	movwf	swI2C_ReadByte@Ack
  2801  04D7  01A2               	clrf	swI2C_ReadByte@dat
  2802                           
  2803                           ;SWI2C.C: 115: RA7 = 0;
  2804  04D8  1385               	bcf	5,7
  2805                           
  2806                           ;SWI2C.C: 116: TRISA |=0x40;;
  2807  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  2808  04DA  1705               	bsf	5,6	;volatile
  2809                           
  2810                           ;SWI2C.C: 117: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2811  04DB  3005               	movlw	5
  2812  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2813  04DD  00A0               	movwf	??_swI2C_ReadByte
  2814  04DE                     u3727:	
  2815  04DE  0BA0               	decfsz	??_swI2C_ReadByte,f
  2816  04DF  2CDE               	goto	u3727
  2817                           
  2818                           ;SWI2C.C: 118: for(i=0;i<8;i++)
  2819  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2820  04E1  01A3               	clrf	swI2C_ReadByte@i
  2821  04E2                     l2612:	
  2822  04E2  3005               	movlw	5
  2823                           
  2824                           ;SWI2C.C: 119: {
  2825                           ;SWI2C.C: 120: RA7 = 1;
  2826  04E3  1785               	bsf	5,7
  2827                           
  2828                           ;SWI2C.C: 121: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2829  04E4  00A0               	movwf	??_swI2C_ReadByte
  2830  04E5                     u3737:	
  2831  04E5  0BA0               	decfsz	??_swI2C_ReadByte,f
  2832  04E6  2CE5               	goto	u3737
  2833                           
  2834                           ;SWI2C.C: 122: dat = dat<<1 |(RA6 & 1 );
  2835  04E7  3000               	movlw	0
  2836  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2837  04E9  1B05               	btfsc	5,6
  2838  04EA  3001               	movlw	1
  2839  04EB  3901               	andlw	1
  2840  04EC  00A0               	movwf	??_swI2C_ReadByte
  2841  04ED  1003               	clrc
  2842  04EE  0D22               	rlf	swI2C_ReadByte@dat,w
  2843  04EF  0420               	iorwf	??_swI2C_ReadByte,w
  2844  04F0  00A2               	movwf	swI2C_ReadByte@dat
  2845  04F1  3005               	movlw	5
  2846                           
  2847                           ;SWI2C.C: 125: RA7 = 0;
  2848  04F2  1385               	bcf	5,7
  2849                           
  2850                           ;SWI2C.C: 126: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2851  04F3  00A0               	movwf	??_swI2C_ReadByte
  2852  04F4                     u3747:	
  2853  04F4  0BA0               	decfsz	??_swI2C_ReadByte,f
  2854  04F5  2CF4               	goto	u3747
  2855  04F6  3008               	movlw	8
  2856  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2857  04F8  0AA3               	incf	swI2C_ReadByte@i,f
  2858  04F9  0223               	subwf	swI2C_ReadByte@i,w
  2859  04FA  1C03               	skipc
  2860  04FB  2CE2               	goto	l2612
  2861                           
  2862                           ;SWI2C.C: 127: }
  2863                           ;SWI2C.C: 129: TRISA &=0xbf;;
  2864  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  2865  04FD  1305               	bcf	5,6	;volatile
  2866                           
  2867                           ;SWI2C.C: 131: RA6 = (Ack) ? 1 : 0;
  2868  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2869  04FF  08A1               	movf	swI2C_ReadByte@Ack,f
  2870  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0501  1903               	btfsc	3,2
  2872  0502  2D05               	goto	L9
  2873  0503  1705               	bsf	5,6
  2874  0504  2D06               	goto	l6700
  2875  0505                     L9:	
  2876  0505  1305               	bcf	5,6
  2877  0506                     l6700:	
  2878  0506  3005               	movlw	5
  2879                           
  2880                           ;SWI2C.C: 132: RA7 = 1;
  2881  0507  1785               	bsf	5,7
  2882                           
  2883                           ;SWI2C.C: 133: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2884  0508  00A0               	movwf	??_swI2C_ReadByte
  2885  0509                     u3757:	
  2886  0509  0BA0               	decfsz	??_swI2C_ReadByte,f
  2887  050A  2D09               	goto	u3757
  2888  050B  3005               	movlw	5
  2889                           
  2890                           ;SWI2C.C: 134: RA7 = 0;
  2891  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2892  050D  1385               	bcf	5,7
  2893                           
  2894                           ;SWI2C.C: 135: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2895  050E  00A0               	movwf	??_swI2C_ReadByte
  2896  050F                     u3767:	
  2897  050F  0BA0               	decfsz	??_swI2C_ReadByte,f
  2898  0510  2D0F               	goto	u3767
  2899                           
  2900                           ;SWI2C.C: 136: return dat;
  2901  0511  1283               	bcf	3,5	;RP0=0, select bank0
  2902  0512  0822               	movf	swI2C_ReadByte@dat,w
  2903  0513  0008               	return
  2904  0514                     __end_of_swI2C_ReadByte:	
  2905                           
  2906                           	psect	text880
  2907  0514                     __ptext880:	
  2908 ;; =============== function _swI2C_ReadByte ends ============
  2909                           
  2910                           
  2911 ;; *************** function _swI2C_WriteByte *****************
  2912 ;; Defined at:
  2913 ;;		line 86 in file "SWI2C.C"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  dat             1    wreg     unsigned char 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;  dat             1    1[BANK0 ] unsigned char 
  2918 ;;  i               1    2[BANK0 ] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      unsigned char 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 20/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1
  2928 ;;      Params:         0       0       0
  2929 ;;      Locals:         0       2       0
  2930 ;;      Temps:          0       1       0
  2931 ;;      Totals:         0       3       0
  2932 ;;Total ram usage:        3 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    2
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_AccWrite
  2939 ;;		_AccRead
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942  0514                     _swI2C_WriteByte:	
  2943                           
  2944                           ; Regs used in _swI2C_WriteByte: [wreg+status,2+status,0]
  2945                           ;swI2C_WriteByte@dat stored from wreg
  2946  0514  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0515  00A1               	movwf	swI2C_WriteByte@dat
  2948                           
  2949                           ;SWI2C.C: 89: TRISA &=0xbf;;
  2950  0516  1683               	bsf	3,5	;RP0=1, select bank1
  2951  0517  1305               	bcf	5,6	;volatile
  2952                           
  2953                           ;SWI2C.C: 90: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2954  0518  3005               	movlw	5
  2955  0519  1283               	bcf	3,5	;RP0=0, select bank0
  2956  051A  00A0               	movwf	??_swI2C_WriteByte
  2957  051B                     u3777:	
  2958  051B  0BA0               	decfsz	??_swI2C_WriteByte,f
  2959  051C  2D1B               	goto	u3777
  2960                           
  2961                           ;SWI2C.C: 91: for(i=0;i<8;i++)
  2962  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2963  051E  01A2               	clrf	swI2C_WriteByte@i
  2964  051F                     l2607:	
  2965                           
  2966                           ;SWI2C.C: 92: {
  2967                           ;SWI2C.C: 93: RA6 = (dat&0x80) ? 1:0;
  2968  051F  1FA1               	btfss	swI2C_WriteByte@dat,7
  2969  0520  2D24               	goto	u2800
  2970  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2971  0522  1705               	bsf	5,6
  2972  0523  2D26               	goto	u2814
  2973  0524                     u2800:	
  2974  0524  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0525  1305               	bcf	5,6
  2976  0526                     u2814:	
  2977  0526  3005               	movlw	5
  2978                           
  2979                           ;SWI2C.C: 94: dat<<=1;
  2980  0527  1003               	clrc
  2981  0528  0DA1               	rlf	swI2C_WriteByte@dat,f
  2982                           
  2983                           ;SWI2C.C: 95: RA7 = 1;
  2984  0529  1785               	bsf	5,7
  2985                           
  2986                           ;SWI2C.C: 96: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2987  052A  00A0               	movwf	??_swI2C_WriteByte
  2988  052B                     u3787:	
  2989  052B  0BA0               	decfsz	??_swI2C_WriteByte,f
  2990  052C  2D2B               	goto	u3787
  2991  052D  3005               	movlw	5
  2992                           
  2993                           ;SWI2C.C: 97: RA7 = 0;
  2994  052E  1283               	bcf	3,5	;RP0=0, select bank0
  2995  052F  1385               	bcf	5,7
  2996                           
  2997                           ;SWI2C.C: 98: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2998  0530  00A0               	movwf	??_swI2C_WriteByte
  2999  0531                     u3797:	
  3000  0531  0BA0               	decfsz	??_swI2C_WriteByte,f
  3001  0532  2D31               	goto	u3797
  3002  0533  3008               	movlw	8
  3003  0534  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0535  0AA2               	incf	swI2C_WriteByte@i,f
  3005  0536  0222               	subwf	swI2C_WriteByte@i,w
  3006  0537  1C03               	skipc
  3007  0538  2D1F               	goto	l2607
  3008                           
  3009                           ;SWI2C.C: 99: }
  3010                           ;SWI2C.C: 101: TRISA |=0x40;;
  3011  0539  1683               	bsf	3,5	;RP0=1, select bank1
  3012  053A  1705               	bsf	5,6	;volatile
  3013                           
  3014                           ;SWI2C.C: 102: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3015  053B  3005               	movlw	5
  3016  053C  1283               	bcf	3,5	;RP0=0, select bank0
  3017  053D  00A0               	movwf	??_swI2C_WriteByte
  3018  053E                     u3807:	
  3019  053E  0BA0               	decfsz	??_swI2C_WriteByte,f
  3020  053F  2D3E               	goto	u3807
  3021  0540  3005               	movlw	5
  3022                           
  3023                           ;SWI2C.C: 103: RA7 = 1;
  3024  0541  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0542  1785               	bsf	5,7
  3026                           
  3027                           ;SWI2C.C: 104: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3028  0543  00A0               	movwf	??_swI2C_WriteByte
  3029  0544                     u3817:	
  3030  0544  0BA0               	decfsz	??_swI2C_WriteByte,f
  3031  0545  2D44               	goto	u3817
  3032                           
  3033                           ;SWI2C.C: 105: i= RA6;
  3034  0546  3000               	movlw	0
  3035  0547  1283               	bcf	3,5	;RP0=0, select bank0
  3036  0548  1B05               	btfsc	5,6
  3037  0549  3001               	movlw	1
  3038  054A  00A2               	movwf	swI2C_WriteByte@i
  3039                           
  3040                           ;SWI2C.C: 106: RA7 = 0;
  3041  054B  1385               	bcf	5,7
  3042                           
  3043                           ;SWI2C.C: 107: TRISA &=0xbf;;
  3044  054C  1683               	bsf	3,5	;RP0=1, select bank1
  3045  054D  1305               	bcf	5,6	;volatile
  3046                           
  3047                           ;SWI2C.C: 108: return i;
  3048  054E  1283               	bcf	3,5	;RP0=0, select bank0
  3049  054F  0822               	movf	swI2C_WriteByte@i,w
  3050  0550  0008               	return
  3051  0551                     __end_of_swI2C_WriteByte:	
  3052                           
  3053                           	psect	text881
  3054  06C2                     __ptext881:	
  3055 ;; =============== function _swI2C_WriteByte ends ============
  3056                           
  3057                           
  3058 ;; *************** function _swI2C_Stop *****************
  3059 ;; Defined at:
  3060 ;;		line 35 in file "SWI2C.C"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;		None               void
  3067 ;; Registers used:
  3068 ;;		wreg
  3069 ;; Tracked objects:
  3070 ;;		On entry : 20/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMMON   BANK0   BANK1
  3074 ;;      Params:         0       0       0
  3075 ;;      Locals:         0       0       0
  3076 ;;      Temps:          0       1       0
  3077 ;;      Totals:         0       1       0
  3078 ;;Total ram usage:        1 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    2
  3081 ;; This function calls:
  3082 ;;		Nothing
  3083 ;; This function is called by:
  3084 ;;		_AccWrite
  3085 ;;		_AccRead
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088  06C2                     _swI2C_Stop:	
  3089  06C2  3005               	movlw	5
  3090                           
  3091                           ;SWI2C.C: 37: RA6 = 0;
  3092                           
  3093                           ; Regs used in _swI2C_Stop: [wreg]
  3094  06C3  1305               	bcf	5,6
  3095                           
  3096                           ;SWI2C.C: 38: RA7 = 1;
  3097  06C4  1785               	bsf	5,7
  3098                           
  3099                           ;SWI2C.C: 39: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3100  06C5  00A0               	movwf	??_swI2C_Stop
  3101  06C6                     u3827:	
  3102  06C6  0BA0               	decfsz	??_swI2C_Stop,f
  3103  06C7  2EC6               	goto	u3827
  3104  06C8  3005               	movlw	5
  3105                           
  3106                           ;SWI2C.C: 40: RA6 = 1;
  3107  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  3108  06CA  1705               	bsf	5,6
  3109                           
  3110                           ;SWI2C.C: 41: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3111  06CB  00A0               	movwf	??_swI2C_Stop
  3112  06CC                     u3837:	
  3113  06CC  0BA0               	decfsz	??_swI2C_Stop,f
  3114  06CD  2ECC               	goto	u3837
  3115  06CE  0008               	return
  3116  06CF                     __end_of_swI2C_Stop:	
  3117                           
  3118                           	psect	text882
  3119  067F                     __ptext882:	
  3120 ;; =============== function _swI2C_Stop ends ============
  3121                           
  3122                           
  3123 ;; *************** function _swI2C_Start *****************
  3124 ;; Defined at:
  3125 ;;		line 22 in file "SWI2C.C"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;		None
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;		None               void
  3132 ;; Registers used:
  3133 ;;		wreg
  3134 ;; Tracked objects:
  3135 ;;		On entry : 20/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1
  3139 ;;      Params:         0       0       0
  3140 ;;      Locals:         0       0       0
  3141 ;;      Temps:          0       1       0
  3142 ;;      Totals:         0       1       0
  3143 ;;Total ram usage:        1 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    2
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_AccWrite
  3150 ;;		_AccRead
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153  067F                     _swI2C_Start:	
  3154  067F  3005               	movlw	5
  3155                           
  3156                           ;SWI2C.C: 24: RA7 = 1;
  3157                           
  3158                           ; Regs used in _swI2C_Start: [wreg]
  3159  0680  1785               	bsf	5,7
  3160                           
  3161                           ;SWI2C.C: 26: RA6 = 1;
  3162  0681  1705               	bsf	5,6
  3163                           
  3164                           ;SWI2C.C: 27: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3165  0682  00A0               	movwf	??_swI2C_Start
  3166  0683                     u3847:	
  3167  0683  0BA0               	decfsz	??_swI2C_Start,f
  3168  0684  2E83               	goto	u3847
  3169  0685  3005               	movlw	5
  3170                           
  3171                           ;SWI2C.C: 28: RA6 = 0;
  3172  0686  1283               	bcf	3,5	;RP0=0, select bank0
  3173  0687  1305               	bcf	5,6
  3174                           
  3175                           ;SWI2C.C: 29: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3176  0688  00A0               	movwf	??_swI2C_Start
  3177  0689                     u3857:	
  3178  0689  0BA0               	decfsz	??_swI2C_Start,f
  3179  068A  2E89               	goto	u3857
  3180  068B  3005               	movlw	5
  3181                           
  3182                           ;SWI2C.C: 30: RA7 = 0;
  3183  068C  1283               	bcf	3,5	;RP0=0, select bank0
  3184  068D  1385               	bcf	5,7
  3185                           
  3186                           ;SWI2C.C: 31: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3187  068E  00A0               	movwf	??_swI2C_Start
  3188  068F                     u3867:	
  3189  068F  0BA0               	decfsz	??_swI2C_Start,f
  3190  0690  2E8F               	goto	u3867
  3191  0691  0008               	return
  3192  0692                     __end_of_swI2C_Start:	
  3193                           
  3194                           	psect	text883
  3195  05E6                     __ptext883:	
  3196 ;; =============== function _swI2C_Start ends ============
  3197                           
  3198                           
  3199 ;; *************** function _swI2C_Init *****************
  3200 ;; Defined at:
  3201 ;;		line 8 in file "SWI2C.C"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;		None               void
  3208 ;; Registers used:
  3209 ;;		wreg
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1
  3215 ;;      Params:         0       0       0
  3216 ;;      Locals:         0       0       0
  3217 ;;      Temps:          0       1       0
  3218 ;;      Totals:         0       1       0
  3219 ;;Total ram usage:        1 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    2
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228  05E6                     _swI2C_Init:	
  3229                           
  3230                           ;SWI2C.C: 10: TRISA &=0xbf;;
  3231                           
  3232                           ; Regs used in _swI2C_Init: [wreg]
  3233  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  3234  05E7  1305               	bcf	5,6	;volatile
  3235                           
  3236                           ;SWI2C.C: 11: TRISA &=0x7f;;
  3237  05E8  1385               	bcf	5,7	;volatile
  3238                           
  3239                           ;SWI2C.C: 12: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3240  05E9  3005               	movlw	5
  3241  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  3242  05EB  00A0               	movwf	??_swI2C_Init
  3243  05EC                     u3877:	
  3244  05EC  0BA0               	decfsz	??_swI2C_Init,f
  3245  05ED  2DEC               	goto	u3877
  3246  05EE  3005               	movlw	5
  3247                           
  3248                           ;SWI2C.C: 13: RA7 = 1;
  3249  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3250  05F0  1785               	bsf	5,7
  3251  05F1  1705               	bsf	5,6
  3252                           
  3253                           ;SWI2C.C: 15: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3254  05F2  00A0               	movwf	??_swI2C_Init
  3255  05F3                     u3887:	
  3256  05F3  0BA0               	decfsz	??_swI2C_Init,f
  3257  05F4  2DF3               	goto	u3887
  3258                           
  3259                           ;SWI2C.C: 16: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3260  05F5  3005               	movlw	5
  3261  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  3262  05F7  00A0               	movwf	??_swI2C_Init
  3263  05F8                     u3897:	
  3264  05F8  0BA0               	decfsz	??_swI2C_Init,f
  3265  05F9  2DF8               	goto	u3897
  3266                           
  3267                           ;SWI2C.C: 17: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3268  05FA  3005               	movlw	5
  3269  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3270  05FC  00A0               	movwf	??_swI2C_Init
  3271  05FD                     u3907:	
  3272  05FD  0BA0               	decfsz	??_swI2C_Init,f
  3273  05FE  2DFD               	goto	u3907
  3274                           
  3275                           ;SWI2C.C: 18: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3276  05FF  3005               	movlw	5
  3277  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0601  00A0               	movwf	??_swI2C_Init
  3279  0602                     u3917:	
  3280  0602  0BA0               	decfsz	??_swI2C_Init,f
  3281  0603  2E02               	goto	u3917
  3282  0604  0008               	return
  3283  0605                     __end_of_swI2C_Init:	
  3284                           
  3285                           	psect	text884
  3286  06E8                     __ptext884:	
  3287 ;; =============== function _swI2C_Init ends ============
  3288                           
  3289                           
  3290 ;; *************** function _sys_init *****************
  3291 ;; Defined at:
  3292 ;;		line 3 in file "sysinit.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;		None               void
  3299 ;; Registers used:
  3300 ;;		wreg
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 20/20
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1
  3306 ;;      Params:         0       0       0
  3307 ;;      Locals:         0       0       0
  3308 ;;      Temps:          0       0       0
  3309 ;;      Totals:         0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    2
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319  06E8                     _sys_init:	
  3320                           
  3321                           ;sysinit.c: 21: OSCCON = 0B01010001;
  3322                           
  3323                           ; Regs used in _sys_init: [wreg]
  3324  06E8  3051               	movlw	81
  3325  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  3326  06EA  008F               	movwf	15	;volatile
  3327                           
  3328                           ;sysinit.c: 22: _nop();
  3329  06EB  0000               	nop
  3330  06EC                     l1796:	
  3331                           ;sysinit.c: 28: while(HTS==0);
  3332                           
  3333  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  3334  06ED  190F               	btfsc	15,2
  3335  06EE  0008               	return
  3336  06EF  2EEC               	goto	l1796
  3337  06F0                     __end_of_sys_init:	
  3338                           
  3339                           	psect	text885
  3340  0653                     __ptext885:	
  3341 ;; =============== function _sys_init ends ============
  3342                           
  3343                           
  3344 ;; *************** function _beep *****************
  3345 ;; Defined at:
  3346 ;;		line 146 in file "smartkey.C"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  delay           1    wreg     unsigned char 
  3349 ;;  rep             1    4[BANK0 ] unsigned char 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  delay           1    5[BANK0 ] unsigned char 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;		None               void
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0, pclath, cstack
  3356 ;; Tracked objects:
  3357 ;;		On entry : 20/0
  3358 ;;		On exit  : 20/0
  3359 ;;		Unchanged: FFFDF/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1
  3361 ;;      Params:         0       1       0
  3362 ;;      Locals:         0       1       0
  3363 ;;      Temps:          0       0       0
  3364 ;;      Totals:         0       2       0
  3365 ;;Total ram usage:        2 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    3
  3368 ;; This function calls:
  3369 ;;		_delay_x10ms
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374  0653                     _beep:	
  3375                           
  3376                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  3377                           ;beep@delay stored from wreg
  3378  0653  00A5               	movwf	beep@delay
  3379  0654                     l6620:	
  3380                           ;smartkey.C: 147: {
  3381                           ;smartkey.C: 148: while (rep--) {
  3382                           
  3383  0654  03A4               	decf	beep@rep,f
  3384  0655  0824               	movf	beep@rep,w
  3385  0656  3AFF               	xorlw	255
  3386  0657  1903               	btfsc	3,2
  3387  0658  0008               	return
  3388  0659  300C               	movlw	12
  3389                           
  3390                           ;smartkey.C: 149: TMR2ON = 1;
  3391  065A  1512               	bsf	18,2
  3392                           
  3393                           ;smartkey.C: 150: PR2L = 12;
  3394  065B  1683               	bsf	3,5	;RP0=1, select bank1
  3395  065C  0091               	movwf	17	;volatile
  3396                           
  3397                           ;smartkey.C: 151: delay_x10ms(delay);
  3398  065D  1283               	bcf	3,5	;RP0=0, select bank0
  3399  065E  0825               	movf	beep@delay,w
  3400  065F  00A0               	movwf	?_delay_x10ms
  3401  0660  01A1               	clrf	?_delay_x10ms+1
  3402  0661  2692               	fcall	_delay_x10ms
  3403  0662  3014               	movlw	20
  3404                           
  3405                           ;smartkey.C: 153: TMR2ON = 0; RA3 = 0;
  3406  0663  1112               	bcf	18,2
  3407  0664  1185               	bcf	5,3
  3408                           
  3409                           ;smartkey.C: 154: delay_x10ms(20);
  3410  0665  00A0               	movwf	?_delay_x10ms
  3411  0666  01A1               	clrf	?_delay_x10ms+1
  3412  0667  2692               	fcall	_delay_x10ms
  3413  0668  2E54               	goto	l6620
  3414  0669                     __end_of_beep:	
  3415                           
  3416                           	psect	text886
  3417  0491                     __ptext886:	
  3418 ;; =============== function _beep ends ============
  3419                           
  3420                           
  3421 ;; *************** function ___awdiv *****************
  3422 ;; Defined at:
  3423 ;;		line 5 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\awdiv.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  divisor         2    0[BANK0 ] int 
  3426 ;;  dividend        2    2[BANK0 ] int 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  quotient        2    6[BANK0 ] int 
  3429 ;;  sign            1    5[BANK0 ] unsigned char 
  3430 ;;  counter         1    4[BANK0 ] unsigned char 
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  2    0[BANK0 ] int 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0
  3435 ;; Tracked objects:
  3436 ;;		On entry : 20/0
  3437 ;;		On exit  : 20/0
  3438 ;;		Unchanged: FFFDF/0
  3439 ;; Data sizes:     COMMON   BANK0   BANK1
  3440 ;;      Params:         0       4       0
  3441 ;;      Locals:         0       4       0
  3442 ;;      Temps:          0       0       0
  3443 ;;      Totals:         0       8       0
  3444 ;;Total ram usage:        8 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    2
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453  0491                     ___awdiv:	
  3454                           
  3455                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3456  0491  01A5               	clrf	___awdiv@sign
  3457  0492  1FA1               	btfss	___awdiv@divisor+1,7
  3458  0493  2C9B               	goto	l6572
  3459  0494  09A0               	comf	___awdiv@divisor,f
  3460  0495  09A1               	comf	___awdiv@divisor+1,f
  3461  0496  0AA0               	incf	___awdiv@divisor,f
  3462  0497  1903               	skipnz
  3463  0498  0AA1               	incf	___awdiv@divisor+1,f
  3464  0499  01A5               	clrf	___awdiv@sign
  3465  049A  0AA5               	incf	___awdiv@sign,f
  3466  049B                     l6572:	
  3467  049B  1FA3               	btfss	___awdiv@dividend+1,7
  3468  049C  2CA4               	goto	l6578
  3469  049D  09A2               	comf	___awdiv@dividend,f
  3470  049E  09A3               	comf	___awdiv@dividend+1,f
  3471  049F  0AA2               	incf	___awdiv@dividend,f
  3472  04A0  1903               	skipnz
  3473  04A1  0AA3               	incf	___awdiv@dividend+1,f
  3474  04A2  3001               	movlw	1
  3475  04A3  06A5               	xorwf	___awdiv@sign,f
  3476  04A4                     l6578:	
  3477  04A4  01A6               	clrf	___awdiv@quotient
  3478  04A5  01A7               	clrf	___awdiv@quotient+1
  3479  04A6  0821               	movf	___awdiv@divisor+1,w
  3480  04A7  0420               	iorwf	___awdiv@divisor,w
  3481  04A8  1903               	skipnz
  3482  04A9  2CC9               	goto	l6600
  3483  04AA  01A4               	clrf	___awdiv@counter
  3484  04AB                     L10:	
  3485  04AB  0AA4               	incf	___awdiv@counter,f
  3486  04AC  1BA1               	btfsc	___awdiv@divisor+1,7
  3487  04AD  2CB2               	goto	l6588
  3488  04AE  1003               	clrc
  3489  04AF  0DA0               	rlf	___awdiv@divisor,f
  3490  04B0  0DA1               	rlf	___awdiv@divisor+1,f
  3491  04B1  2CAB               	goto	L10
  3492  04B2                     l6588:	
  3493  04B2  1003               	clrc
  3494  04B3  0DA6               	rlf	___awdiv@quotient,f
  3495  04B4  0DA7               	rlf	___awdiv@quotient+1,f
  3496  04B5  0821               	movf	___awdiv@divisor+1,w
  3497  04B6  0223               	subwf	___awdiv@dividend+1,w
  3498  04B7  1D03               	skipz
  3499  04B8  2CBB               	goto	u2755
  3500  04B9  0820               	movf	___awdiv@divisor,w
  3501  04BA  0222               	subwf	___awdiv@dividend,w
  3502  04BB                     u2755:	
  3503  04BB  1C03               	skipc
  3504  04BC  2CC5               	goto	L11
  3505  04BD  0820               	movf	___awdiv@divisor,w
  3506  04BE  02A2               	subwf	___awdiv@dividend,f
  3507  04BF  0821               	movf	___awdiv@divisor+1,w
  3508  04C0  1C03               	skipc
  3509  04C1  03A3               	decf	___awdiv@dividend+1,f
  3510  04C2  02A3               	subwf	___awdiv@dividend+1,f
  3511  04C3  1426               	bsf	___awdiv@quotient,0
  3512  04C4  1003               	clrc
  3513  04C5                     L11:	
  3514  04C5  0CA1               	rrf	___awdiv@divisor+1,f
  3515  04C6  0CA0               	rrf	___awdiv@divisor,f
  3516  04C7  0BA4               	decfsz	___awdiv@counter,f
  3517  04C8  2CB2               	goto	l6588
  3518  04C9                     l6600:	
  3519  04C9  0825               	movf	___awdiv@sign,w
  3520  04CA  1903               	btfsc	3,2
  3521  04CB  2CD1               	goto	l6604
  3522  04CC  09A6               	comf	___awdiv@quotient,f
  3523  04CD  09A7               	comf	___awdiv@quotient+1,f
  3524  04CE  0AA6               	incf	___awdiv@quotient,f
  3525  04CF  1903               	skipnz
  3526  04D0  0AA7               	incf	___awdiv@quotient+1,f
  3527  04D1                     l6604:	
  3528  04D1  0827               	movf	___awdiv@quotient+1,w
  3529  04D2  00A1               	movwf	?___awdiv+1
  3530  04D3  0826               	movf	___awdiv@quotient,w
  3531  04D4  00A0               	movwf	?___awdiv
  3532  04D5  0008               	return
  3533  04D6                     __end_of___awdiv:	
  3534                           
  3535                           	psect	text887
  3536  0605                     __ptext887:	
  3537 ;; =============== function ___awdiv ends ============
  3538                           
  3539                           
  3540 ;; *************** function _int_init *****************
  3541 ;; Defined at:
  3542 ;;		line 83 in file "sysinit.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  tmp             1    0        unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;		None               void
  3549 ;; Registers used:
  3550 ;;		wreg, status,2
  3551 ;; Tracked objects:
  3552 ;;		On entry : 20/0
  3553 ;;		On exit  : 20/0
  3554 ;;		Unchanged: FFFDF/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1
  3556 ;;      Params:         0       0       0
  3557 ;;      Locals:         0       0       0
  3558 ;;      Temps:          0       0       0
  3559 ;;      Totals:         0       0       0
  3560 ;;Total ram usage:        0 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    2
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_main
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569  0605                     _int_init:	
  3570                           
  3571                           ;sysinit.c: 88: INTCON = 0B00000000;
  3572                           
  3573                           ; Regs used in _int_init: [wreg+status,2]
  3574  0605  018B               	clrf	11	;volatile
  3575                           
  3576                           ;sysinit.c: 89: PIE1 = 0B00000000;
  3577  0606  1683               	bsf	3,5	;RP0=1, select bank1
  3578  0607  018C               	clrf	12	;volatile
  3579                           
  3580                           ;sysinit.c: 90: PIR1 = 0B00000000;
  3581  0608  1283               	bcf	3,5	;RP0=0, select bank0
  3582  0609  018C               	clrf	12	;volatile
  3583                           
  3584                           ;sysinit.c: 92: IOCA5 = 1;
  3585  060A  1683               	bsf	3,5	;RP0=1, select bank1
  3586  060B  1696               	bsf	22,5
  3587                           
  3588                           ;sysinit.c: 93: tmp = PORTA;
  3589  060C  1283               	bcf	3,5	;RP0=0, select bank0
  3590  060D  0805               	movf	5,w	;volatile
  3591                           
  3592                           ;sysinit.c: 94: PAIF = 0;
  3593  060E  100B               	bcf	11,0
  3594                           
  3595                           ;sysinit.c: 95: PAIE = 0;
  3596  060F  118B               	bcf	11,3
  3597                           
  3598                           ;sysinit.c: 98: INTEDG = 0;
  3599  0610  1683               	bsf	3,5	;RP0=1, select bank1
  3600  0611  1301               	bcf	1,6
  3601                           
  3602                           ;sysinit.c: 99: INTF = 0;
  3603  0612  108B               	bcf	11,1
  3604                           
  3605                           ;sysinit.c: 100: INTE = 1;
  3606  0613  160B               	bsf	11,4
  3607                           
  3608                           ;sysinit.c: 102: TMR2IF = 0;
  3609  0614  1283               	bcf	3,5	;RP0=0, select bank0
  3610  0615  108C               	bcf	12,1
  3611                           
  3612                           ;sysinit.c: 103: TMR2IE = 1;
  3613  0616  1683               	bsf	3,5	;RP0=1, select bank1
  3614  0617  148C               	bsf	12,1
  3615                           
  3616                           ;sysinit.c: 104: TMR2ON = 0;
  3617  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3618  0619  1112               	bcf	18,2
  3619                           
  3620                           ;sysinit.c: 110: T0IF = 0;
  3621  061A  110B               	bcf	11,2
  3622                           
  3623                           ;sysinit.c: 111: T0IE = 1;
  3624  061B  168B               	bsf	11,5
  3625                           
  3626                           ;sysinit.c: 112: T0ON = 1;
  3627  061C  159F               	bsf	31,3
  3628                           
  3629                           ;sysinit.c: 114: PEIE = 1;
  3630  061D  170B               	bsf	11,6
  3631                           
  3632                           ;sysinit.c: 116: GIE = 1;
  3633  061E  178B               	bsf	11,7
  3634  061F  0008               	return
  3635  0620                     __end_of_int_init:	
  3636                           
  3637                           	psect	text888
  3638  06A5                     __ptext888:	
  3639 ;; =============== function _int_init ends ============
  3640                           
  3641                           
  3642 ;; *************** function _timer_init *****************
  3643 ;; Defined at:
  3644 ;;		line 51 in file "sysinit.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;		None               void
  3651 ;; Registers used:
  3652 ;;		wreg, status,2
  3653 ;; Tracked objects:
  3654 ;;		On entry : 20/0
  3655 ;;		On exit  : 20/0
  3656 ;;		Unchanged: FFFDF/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1
  3658 ;;      Params:         0       0       0
  3659 ;;      Locals:         0       0       0
  3660 ;;      Temps:          0       0       0
  3661 ;;      Totals:         0       0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    2
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_main
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671  06A5                     _timer_init:	
  3672                           
  3673                           ;sysinit.c: 60: T0CON0 = 0B00000000;
  3674                           
  3675                           ; Regs used in _timer_init: [wreg+status,2]
  3676  06A5  019F               	clrf	31	;volatile
  3677                           
  3678                           ;sysinit.c: 61: OPTION = 0B00000111;
  3679  06A6  3007               	movlw	7
  3680  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  3681  06A8  0081               	movwf	1	;volatile
  3682                           
  3683                           ;sysinit.c: 62: TMR0 = 179;
  3684  06A9  30B3               	movlw	179
  3685  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  3686  06AB  0081               	movwf	1	;volatile
  3687                           
  3688                           ;sysinit.c: 64: TMR2H = 0;
  3689  06AC  0193               	clrf	19	;volatile
  3690                           
  3691                           ;sysinit.c: 65: TMR2L = 0;
  3692  06AD  0191               	clrf	17	;volatile
  3693                           
  3694                           ;sysinit.c: 66: PR2H = 0;
  3695  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  3696  06AF  0192               	clrf	18	;volatile
  3697                           
  3698                           ;sysinit.c: 67: PR2L =0;
  3699  06B0  0191               	clrf	17	;volatile
  3700                           
  3701                           ;sysinit.c: 68: T2CON0 = 0B00101001;
  3702  06B1  3029               	movlw	41
  3703  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  3704  06B3  0092               	movwf	18	;volatile
  3705  06B4  0008               	return
  3706  06B5                     __end_of_timer_init:	
  3707                           
  3708                           	psect	text889
  3709  0669                     __ptext889:	
  3710 ;; =============== function _timer_init ends ============
  3711                           
  3712                           
  3713 ;; *************** function _gpio_init *****************
  3714 ;; Defined at:
  3715 ;;		line 32 in file "sysinit.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;		None
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;		None
  3720 ;; Return value:  Size  Location     Type
  3721 ;;		None               void
  3722 ;; Registers used:
  3723 ;;		wreg, status,2
  3724 ;; Tracked objects:
  3725 ;;		On entry : 20/20
  3726 ;;		On exit  : 20/0
  3727 ;;		Unchanged: FFFDF/0
  3728 ;; Data sizes:     COMMON   BANK0   BANK1
  3729 ;;      Params:         0       0       0
  3730 ;;      Locals:         0       0       0
  3731 ;;      Temps:          0       0       0
  3732 ;;      Totals:         0       0       0
  3733 ;;Total ram usage:        0 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    2
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_main
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742  0669                     _gpio_init:	
  3743                           
  3744                           ;sysinit.c: 34: PORTA = 0B00000000;
  3745                           
  3746                           ; Regs used in _gpio_init: [wreg+status,2]
  3747  0669  1283               	bcf	3,5	;RP0=0, select bank0
  3748  066A  0185               	clrf	5	;volatile
  3749                           
  3750                           ;sysinit.c: 35: TRISA = 0B00110111;
  3751  066B  3037               	movlw	55
  3752  066C  1683               	bsf	3,5	;RP0=1, select bank1
  3753  066D  0085               	movwf	5	;volatile
  3754                           
  3755                           ;sysinit.c: 36: WPUA = 0B11000000;
  3756  066E  30C0               	movlw	192
  3757  066F  0095               	movwf	21	;volatile
  3758                           
  3759                           ;sysinit.c: 38: PORTC = 0B00000000;
  3760  0670  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0671  0187               	clrf	7	;volatile
  3762                           
  3763                           ;sysinit.c: 39: TRISC = 0B11111100;
  3764  0672  30FC               	movlw	252
  3765  0673  1683               	bsf	3,5	;RP0=1, select bank1
  3766  0674  0087               	movwf	7	;volatile
  3767                           
  3768                           ;sysinit.c: 40: WPUC = 0B00000000;
  3769  0675  0193               	clrf	19	;volatile
  3770                           
  3771                           ;sysinit.c: 42: PSRCA = 0B11111111;
  3772  0676  30FF               	movlw	255
  3773  0677  0088               	movwf	8	;volatile
  3774                           
  3775                           ;sysinit.c: 43: PSRCC = 0B11111111;
  3776  0678  0094               	movwf	20	;volatile
  3777                           
  3778                           ;sysinit.c: 44: PSINKA = 0B11111111;
  3779  0679  0097               	movwf	23	;volatile
  3780                           
  3781                           ;sysinit.c: 45: PSINKC = 0B11111111;
  3782  067A  009F               	movwf	31	;volatile
  3783                           
  3784                           ;sysinit.c: 47: MSCON = 0B00110000;
  3785  067B  3030               	movlw	48
  3786  067C  1283               	bcf	3,5	;RP0=0, select bank0
  3787  067D  009B               	movwf	27	;volatile
  3788  067E  0008               	return
  3789  067F                     __end_of_gpio_init:	
  3790                           
  3791                           	psect	text890
  3792  0551                     __ptext890:	
  3793 ;; =============== function _gpio_init ends ============
  3794                           
  3795                           
  3796 ;; *************** function _compe *****************
  3797 ;; Defined at:
  3798 ;;		line 190 in file "smartkey.C"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  a               1    wreg     char 
  3801 ;;  b               1    0[BANK0 ] char 
  3802 ;;  dt              1    1[BANK0 ] unsigned char 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  a               1    4[BANK0 ] char 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      unsigned char 
  3807 ;; Registers used:
  3808 ;;		wreg
  3809 ;; Tracked objects:
  3810 ;;		On entry : 20/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: FFE00/0
  3813 ;; Data sizes:     COMMON   BANK0   BANK1
  3814 ;;      Params:         0       2       0
  3815 ;;      Locals:         0       1       0
  3816 ;;      Temps:          0       2       0
  3817 ;;      Totals:         0       5       0
  3818 ;;Total ram usage:        5 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    2
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_main
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827  0551                     _compe:	
  3828                           
  3829                           ; Regs used in _compe: [wreg]
  3830                           ;compe@a stored from wreg
  3831  0551  00A4               	movwf	compe@a
  3832                           
  3833                           ;smartkey.C: 192: if (a > b) {
  3834  0552  0820               	movf	compe@b,w
  3835  0553  3A80               	xorlw	128
  3836  0554  00A2               	movwf	??_compe
  3837  0555  0824               	movf	compe@a,w
  3838  0556  3A80               	xorlw	128
  3839  0557  02A2               	subwf	??_compe,f
  3840  0558  1803               	skipnc
  3841  0559  2D81               	goto	l6490
  3842                           
  3843                           ;smartkey.C: 193: if ((a - b) <= dt) return 1;
  3844  055A  0820               	movf	compe@b,w
  3845  055B  0224               	subwf	compe@a,w
  3846  055C  00A2               	movwf	??_compe
  3847  055D  01A3               	clrf	??_compe+1
  3848  055E  1C03               	skipc
  3849  055F  03A3               	decf	??_compe+1,f
  3850  0560  1BA4               	btfsc	compe@a,7
  3851  0561  03A3               	decf	??_compe+1,f
  3852  0562  1BA0               	btfsc	compe@b,7
  3853  0563  0AA3               	incf	??_compe+1,f
  3854  0564  1283               	bcf	3,5	;RP0=0, select bank0
  3855  0565  0823               	movf	??_compe+1,w
  3856  0566  3A80               	xorlw	128
  3857  0567  3C80               	sublw	128
  3858  0568  1D03               	skipz
  3859  0569  2D6C               	goto	u2665
  3860  056A  0822               	movf	??_compe,w
  3861  056B  0221               	subwf	compe@dt,w
  3862  056C                     u2665:	
  3863  056C  1C03               	skipc
  3864  056D  3400               	retlw	0
  3865  056E  3401               	retlw	1
  3866  056F                     L12:	
  3867                           ;smartkey.C: 197: if ((b - a) <= dt) return 1;
  3868                           
  3869  056F  0220               	subwf	compe@b,w
  3870  0570  00A2               	movwf	??_compe
  3871  0571  01A3               	clrf	??_compe+1
  3872  0572  1C03               	skipc
  3873  0573  03A3               	decf	??_compe+1,f
  3874  0574  1BA0               	btfsc	compe@b,7
  3875  0575  03A3               	decf	??_compe+1,f
  3876  0576  1BA4               	btfsc	compe@a,7
  3877  0577  0AA3               	incf	??_compe+1,f
  3878  0578  1283               	bcf	3,5	;RP0=0, select bank0
  3879  0579  0823               	movf	??_compe+1,w
  3880  057A  3A80               	xorlw	128
  3881  057B  3C80               	sublw	128
  3882  057C  1D03               	skipz
  3883  057D  2D6C               	goto	u2665
  3884  057E  0822               	movf	??_compe,w
  3885  057F  0221               	subwf	compe@dt,w
  3886  0580  2D6C               	goto	u2665
  3887  0581                     l6490:	
  3888                           ;smartkey.C: 194: else return 0;
  3889                           
  3890                           
  3891                           ;smartkey.C: 196: else if (a < b) {
  3892  0581  0824               	movf	compe@a,w
  3893  0582  3A80               	xorlw	128
  3894  0583  00A2               	movwf	??_compe
  3895  0584  0820               	movf	compe@b,w
  3896  0585  3A80               	xorlw	128
  3897  0586  02A2               	subwf	??_compe,f
  3898                           
  3899                           ;smartkey.C: 200: else if (a == b) {
  3900  0587  0824               	movf	compe@a,w
  3901  0588  1C03               	btfss	3,0
  3902  0589  2D6F               	goto	L12
  3903  058A  0620               	xorwf	compe@b,w
  3904  058B  1903               	btfsc	3,2
  3905  058C  3401               	retlw	1
  3906  058D  3400               	retlw	0
  3907  058E                     __end_of_compe:	
  3908                           
  3909                           	psect	text891
  3910  06DC                     __ptext891:	
  3911 ;; =============== function _compe ends ============
  3912                           
  3913                           
  3914 ;; *************** function _setState *****************
  3915 ;; Defined at:
  3916 ;;		line 184 in file "smartkey.C"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  stt             1    wreg     unsigned char 
  3919 ;;  _tOut           2    0[BANK0 ] unsigned int 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  stt             1    2[BANK0 ] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;		None               void
  3924 ;; Registers used:
  3925 ;;		wreg, status,2
  3926 ;; Tracked objects:
  3927 ;;		On entry : 20/0
  3928 ;;		On exit  : 20/0
  3929 ;;		Unchanged: FFFDF/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1
  3931 ;;      Params:         0       2       0
  3932 ;;      Locals:         0       1       0
  3933 ;;      Temps:          0       0       0
  3934 ;;      Totals:         0       3       0
  3935 ;;Total ram usage:        3 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    2
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_main
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944  06DC                     _setState:	
  3945                           
  3946                           ; Regs used in _setState: [wreg+status,2]
  3947                           ;setState@stt stored from wreg
  3948  06DC  00A2               	movwf	setState@stt
  3949                           
  3950                           ;smartkey.C: 185: mtOldState = mtState;
  3951  06DD  0874               	movf	_mtState,w
  3952  06DE  00C6               	movwf	_mtOldState
  3953                           
  3954                           ;smartkey.C: 186: mtState = stt;
  3955  06DF  0822               	movf	setState@stt,w
  3956  06E0  00F4               	movwf	_mtState
  3957                           
  3958                           ;smartkey.C: 187: timeTick = 0;
  3959  06E1  01F0               	clrf	_timeTick
  3960  06E2  01F1               	clrf	_timeTick+1
  3961                           
  3962                           ;smartkey.C: 188: timeOut = _tOut;
  3963  06E3  0821               	movf	setState@_tOut+1,w
  3964  06E4  00C4               	movwf	_timeOut+1
  3965  06E5  0820               	movf	setState@_tOut,w
  3966  06E6  00C3               	movwf	_timeOut
  3967  06E7  0008               	return
  3968  06E8                     __end_of_setState:	
  3969                           
  3970                           	psect	text892
  3971  0705                     __ptext892:	
  3972 ;; =============== function _setState ends ============
  3973                           
  3974                           
  3975 ;; *************** function _beepOn *****************
  3976 ;; Defined at:
  3977 ;;		line 142 in file "smartkey.C"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;		None               void
  3984 ;; Registers used:
  3985 ;;		None
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/20
  3988 ;;		On exit  : 20/20
  3989 ;;		Unchanged: FFFDF/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1
  3991 ;;      Params:         0       0       0
  3992 ;;      Locals:         0       0       0
  3993 ;;      Temps:          0       0       0
  3994 ;;      Totals:         0       0       0
  3995 ;;Total ram usage:        0 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    2
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_main
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004  0705                     _beepOn:	
  4005                           
  4006                           ;smartkey.C: 143: TMR2ON = 1;
  4007                           
  4008                           ; Regs used in _beepOn: []
  4009  0705  1283               	bcf	3,5	;RP0=0, select bank0
  4010  0706  1512               	bsf	18,2
  4011                           
  4012                           ;smartkey.C: 144: TRISA &= 0xf7;
  4013  0707  1683               	bsf	3,5	;RP0=1, select bank1
  4014  0708  1185               	bcf	5,3	;volatile
  4015  0709  0008               	return
  4016  070A                     __end_of_beepOn:	
  4017                           
  4018                           	psect	text893
  4019  06F8                     __ptext893:	
  4020 ;; =============== function _beepOn ends ============
  4021                           
  4022                           
  4023 ;; *************** function _beepOff *****************
  4024 ;; Defined at:
  4025 ;;		line 139 in file "smartkey.C"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;		None
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;		None
  4030 ;; Return value:  Size  Location     Type
  4031 ;;		None               void
  4032 ;; Registers used:
  4033 ;;		None
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 20/20
  4037 ;;		Unchanged: FFFDF/0
  4038 ;; Data sizes:     COMMON   BANK0   BANK1
  4039 ;;      Params:         0       0       0
  4040 ;;      Locals:         0       0       0
  4041 ;;      Temps:          0       0       0
  4042 ;;      Totals:         0       0       0
  4043 ;;Total ram usage:        0 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    2
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_main
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052  06F8                     _beepOff:	
  4053                           
  4054                           ;smartkey.C: 140: TMR2ON = 0; RA3 = 0; TRISA |= 0x08;
  4055                           
  4056                           ; Regs used in _beepOff: []
  4057  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  4058  06F9  1112               	bcf	18,2
  4059  06FA  1185               	bcf	5,3
  4060  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  4061  06FC  1585               	bsf	5,3	;volatile
  4062  06FD  0008               	return
  4063  06FE                     __end_of_beepOff:	
  4064                           
  4065                           	psect	text894
  4066  0692                     __ptext894:	
  4067 ;; =============== function _beepOff ends ============
  4068                           
  4069                           
  4070 ;; *************** function _delay_x10ms *****************
  4071 ;; Defined at:
  4072 ;;		line 134 in file "smartkey.C"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  t               2    0[BANK0 ] unsigned int 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  set             2    2[BANK0 ] unsigned int 
  4077 ;; Return value:  Size  Location     Type
  4078 ;;		None               void
  4079 ;; Registers used:
  4080 ;;		wreg
  4081 ;; Tracked objects:
  4082 ;;		On entry : 20/0
  4083 ;;		On exit  : 20/0
  4084 ;;		Unchanged: FFFDF/0
  4085 ;; Data sizes:     COMMON   BANK0   BANK1
  4086 ;;      Params:         0       2       0
  4087 ;;      Locals:         0       2       0
  4088 ;;      Temps:          0       0       0
  4089 ;;      Totals:         0       4       0
  4090 ;;Total ram usage:        4 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    2
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_beep
  4097 ;;		_main
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100  0692                     _delay_x10ms:	
  4101                           
  4102                           ;smartkey.C: 135: unsigned int set = t + timeTick;
  4103                           
  4104                           ; Regs used in _delay_x10ms: [wreg]
  4105  0692  0821               	movf	delay_x10ms@t+1,w
  4106  0693  00A3               	movwf	delay_x10ms@set+1
  4107  0694  0820               	movf	delay_x10ms@t,w
  4108  0695  00A2               	movwf	delay_x10ms@set
  4109  0696  0870               	movf	_timeTick,w
  4110  0697  07A2               	addwf	delay_x10ms@set,f
  4111  0698  1803               	skipnc
  4112  0699  0AA3               	incf	delay_x10ms@set+1,f
  4113  069A  0871               	movf	_timeTick+1,w
  4114  069B  07A3               	addwf	delay_x10ms@set+1,f
  4115  069C                     l6464:	
  4116                           ;smartkey.C: 136: while (timeTick < set);
  4117                           
  4118  069C  0823               	movf	delay_x10ms@set+1,w
  4119  069D  0271               	subwf	_timeTick+1,w
  4120  069E  1D03               	skipz
  4121  069F  2EA2               	goto	u2635
  4122  06A0  0822               	movf	delay_x10ms@set,w
  4123  06A1  0270               	subwf	_timeTick,w
  4124  06A2                     u2635:	
  4125  06A2  1803               	btfsc	3,0
  4126  06A3  0008               	return
  4127  06A4  2E9C               	goto	l6464
  4128  06A5                     __end_of_delay_x10ms:	
  4129                           
  4130                           	psect	text895
  4131  0620                     __ptext895:	
  4132 ;; =============== function _delay_x10ms ends ============
  4133                           
  4134                           
  4135 ;; *************** function _WRITE_EEPROM *****************
  4136 ;; Defined at:
  4137 ;;		line 172 in file "smartkey.C"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  EEAddr          1    wreg     unsigned char 
  4140 ;;  EEData          1    0[BANK0 ] unsigned char 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  EEAddr          1    1[BANK0 ] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;		None               void
  4145 ;; Registers used:
  4146 ;;		wreg
  4147 ;; Tracked objects:
  4148 ;;		On entry : 20/0
  4149 ;;		On exit  : 20/20
  4150 ;;		Unchanged: FFE00/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1
  4152 ;;      Params:         0       1       0
  4153 ;;      Locals:         0       1       0
  4154 ;;      Temps:          0       0       0
  4155 ;;      Totals:         0       2       0
  4156 ;;Total ram usage:        2 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    2
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165  0620                     _WRITE_EEPROM:	
  4166                           
  4167                           ; Regs used in _WRITE_EEPROM: [wreg]
  4168                           ;WRITE_EEPROM@EEAddr stored from wreg
  4169  0620  00A1               	movwf	WRITE_EEPROM@EEAddr
  4170                           
  4171                           ;smartkey.C: 173: GIE = 0;
  4172  0621  138B               	bcf	11,7
  4173  0622                     l870:	
  4174                           ;smartkey.C: 174: while (GIE) asm("clrwdt");
  4175                           
  4176  0622  1F8B               	btfss	11,7
  4177  0623  2E26               	goto	l6456
  4178  0624  0064               	clrwdt	;#
  4179  0625  2E22               	goto	l870
  4180  0626                     l6456:	
  4181                           
  4182                           ;smartkey.C: 175: EEADR = EEAddr;
  4183  0626  1283               	bcf	3,5	;RP0=0, select bank0
  4184  0627  0821               	movf	WRITE_EEPROM@EEAddr,w
  4185  0628  1683               	bsf	3,5	;RP0=1, select bank1
  4186  0629  009B               	movwf	27	;volatile
  4187                           
  4188                           ;smartkey.C: 176: EEDAT = EEData;
  4189  062A  1283               	bcf	3,5	;RP0=0, select bank0
  4190  062B  0820               	movf	WRITE_EEPROM@EEData,w
  4191  062C  1683               	bsf	3,5	;RP0=1, select bank1
  4192  062D  009A               	movwf	26	;volatile
  4193  062E  3034               	movlw	52
  4194                           
  4195                           ;smartkey.C: 177: EEIF = 0;
  4196  062F  1283               	bcf	3,5	;RP0=0, select bank0
  4197  0630  138C               	bcf	12,7
  4198                           
  4199                           ;smartkey.C: 178: EECON1 = 0x34;
  4200  0631  1683               	bsf	3,5	;RP0=1, select bank1
  4201  0632  009C               	movwf	28	;volatile
  4202                           
  4203                           ;smartkey.C: 179: WR = 1;
  4204  0633  141D               	bsf	29,0
  4205  0634                     l873:	
  4206                           ;smartkey.C: 180: while (WR) asm("clrwdt");
  4207                           
  4208  0634  1683               	bsf	3,5	;RP0=1, select bank1
  4209  0635  1C1D               	btfss	29,0
  4210  0636  2E39               	goto	l875
  4211  0637  0064               	clrwdt	;#
  4212  0638  2E34               	goto	l873
  4213  0639                     l875:	
  4214                           
  4215                           ;smartkey.C: 181: GIE = 1;
  4216  0639  178B               	bsf	11,7
  4217  063A  0008               	return
  4218  063B                     __end_of_WRITE_EEPROM:	
  4219                           
  4220                           	psect	text896
  4221  06CF                     __ptext896:	
  4222 ;; =============== function _WRITE_EEPROM ends ============
  4223                           
  4224                           
  4225 ;; *************** function _READ_EEPROM *****************
  4226 ;; Defined at:
  4227 ;;		line 162 in file "smartkey.C"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  EEAddr          1    wreg     unsigned char 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  EEAddr          1    0[BANK0 ] unsigned char 
  4232 ;;  ReEepromData    1    1[BANK0 ] unsigned char 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      unsigned char 
  4235 ;; Registers used:
  4236 ;;		wreg
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/20
  4239 ;;		On exit  : 20/0
  4240 ;;		Unchanged: FFFDF/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1
  4242 ;;      Params:         0       0       0
  4243 ;;      Locals:         0       2       0
  4244 ;;      Temps:          0       0       0
  4245 ;;      Totals:         0       2       0
  4246 ;;Total ram usage:        2 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    2
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_main
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255  06CF                     _READ_EEPROM:	
  4256                           
  4257                           ; Regs used in _READ_EEPROM: [wreg]
  4258                           ;READ_EEPROM@EEAddr stored from wreg
  4259  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  4260  06D0  00A0               	movwf	READ_EEPROM@EEAddr
  4261                           
  4262                           ;smartkey.C: 163: unsigned char ReEepromData;
  4263                           ;smartkey.C: 164: EEADR = EEAddr;
  4264  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  4265  06D2  009B               	movwf	27	;volatile
  4266                           
  4267                           ;smartkey.C: 165: RD = 1;
  4268  06D3  141C               	bsf	28,0
  4269                           
  4270                           ;smartkey.C: 166: ReEepromData = EEDAT;
  4271  06D4  081A               	movf	26,w	;volatile
  4272  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  4273  06D6  00A1               	movwf	READ_EEPROM@ReEepromData
  4274                           
  4275                           ;smartkey.C: 167: RD = 0;
  4276  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  4277  06D8  101C               	bcf	28,0
  4278                           
  4279                           ;smartkey.C: 168: return ReEepromData;
  4280  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  4281  06DA  0821               	movf	READ_EEPROM@ReEepromData,w
  4282  06DB  0008               	return
  4283  06DC                     __end_of_READ_EEPROM:	
  4284                           
  4285                           	psect	text897
  4286  040D                     __ptext897:	
  4287 ;; =============== function _READ_EEPROM ends ============
  4288                           
  4289                           
  4290 ;; *************** function _ISR *****************
  4291 ;; Defined at:
  4292 ;;		line 46 in file "smartkey.C"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;		None
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  tmp             1    4[COMMON] unsigned char 
  4297 ;; Return value:  Size  Location     Type
  4298 ;;		None               void
  4299 ;; Registers used:
  4300 ;;		wreg, status,2, status,0, pclath, cstack
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: FFE00/0
  4305 ;; Data sizes:     COMMON   BANK0   BANK1
  4306 ;;      Params:         0       0       0
  4307 ;;      Locals:         1       0       0
  4308 ;;      Temps:          2       0       0
  4309 ;;      Totals:         3       0       0
  4310 ;;Total ram usage:        3 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    1
  4313 ;; This function calls:
  4314 ;;		i1_READ_EEPROM
  4315 ;;		i1_WRITE_EEPROM
  4316 ;; This function is called by:
  4317 ;;		Interrupt level 1
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320  040D                     _ISR:	
  4321                           
  4322                           ;smartkey.C: 50: if (PAIE && PAIF) {
  4323  040D  198B               	btfsc	11,3
  4324  040E  1C0B               	btfss	11,0
  4325  040F  2C1C               	goto	i1l5494
  4326  0410  1283               	bcf	3,5	;RP0=0, select bank0
  4327  0411  0805               	movf	5,w	;volatile
  4328                           
  4329                           ;smartkey.C: 52: PAIF = 0;
  4330  0412  100B               	bcf	11,0
  4331                           
  4332                           ;smartkey.C: 54: if (RA5) {
  4333  0413  1E85               	btfss	5,5
  4334  0414  2C1B               	goto	i1l5492
  4335                           
  4336                           ;smartkey.C: 55: if (RegStatus.bits.b3 == 0) {
  4337  0415  19F2               	btfsc	_RegStatus,3	;volatile
  4338  0416  2C1C               	goto	i1l5494
  4339                           
  4340                           ;smartkey.C: 56: cntCyc = 0;
  4341  0417  01F3               	clrf	_cntCyc
  4342                           
  4343                           ;smartkey.C: 57: cntOff = 0;
  4344  0418  01C5               	clrf	_cntOff
  4345                           
  4346                           ;smartkey.C: 59: RegStatus.bits.b3 = 1;
  4347  0419  15F2               	bsf	_RegStatus,3	;volatile
  4348  041A  2C1C               	goto	i1l5494
  4349  041B                     i1l5492:	
  4350                           
  4351                           ;smartkey.C: 62: else {
  4352                           ;smartkey.C: 63: cntOff = 0;
  4353  041B  01C5               	clrf	_cntOff
  4354  041C                     i1l5494:	
  4355                           
  4356                           ;smartkey.C: 64: }
  4357                           ;smartkey.C: 65: }
  4358                           ;smartkey.C: 67: if (INTE && INTF) {
  4359  041C  1A0B               	btfsc	11,4
  4360  041D  1C8B               	btfss	11,1
  4361  041E  2C32               	goto	i1l825
  4362                           
  4363                           ;smartkey.C: 68: INTF = 0;
  4364  041F  108B               	bcf	11,1
  4365                           
  4366                           ;smartkey.C: 69: if ( RA2 == 0) {
  4367  0420  1283               	bcf	3,5	;RP0=0, select bank0
  4368  0421  1905               	btfsc	5,2
  4369  0422  2C32               	goto	i1l825
  4370                           
  4371                           ;smartkey.C: 70: if (timeTick < 32) {
  4372  0423  3000               	movlw	0
  4373  0424  0271               	subwf	_timeTick+1,w
  4374  0425  3020               	movlw	32
  4375  0426  1903               	skipnz
  4376  0427  0270               	subwf	_timeTick,w
  4377  0428  1803               	skipnc
  4378  0429  2C31               	goto	i1l827
  4379                           
  4380                           ;smartkey.C: 71: tmp = READ_EEPROM(0x3F);
  4381  042A  303F               	movlw	63
  4382  042B  26F0               	fcall	i1_READ_EEPROM
  4383  042C  00F9               	movwf	ISR@tmp
  4384                           
  4385                           ;smartkey.C: 72: WRITE_EEPROM(0x3F, tmp + 1);
  4386  042D  0A79               	incf	ISR@tmp,w
  4387  042E  00F5               	movwf	?i1_WRITE_EEPROM
  4388  042F  303F               	movlw	63
  4389  0430  263B               	fcall	i1_WRITE_EEPROM
  4390  0431                     i1l827:	
  4391  0431  2C31               	goto	i1l827
  4392  0432                     i1l825:	
  4393                           
  4394                           ;smartkey.C: 75: }
  4395                           ;smartkey.C: 76: }
  4396                           ;smartkey.C: 79: if (T0IE && T0IF) {
  4397  0432  1A8B               	btfsc	11,5
  4398  0433  1D0B               	btfss	11,2
  4399  0434  2C81               	goto	i1l5554
  4400  0435  30B3               	movlw	179
  4401                           
  4402                           ;smartkey.C: 80: T0IF = 0;
  4403  0436  110B               	bcf	11,2
  4404                           
  4405                           ;smartkey.C: 81: TMR0 = 179;
  4406  0437  1283               	bcf	3,5	;RP0=0, select bank0
  4407  0438  0081               	movwf	1	;volatile
  4408                           
  4409                           ;smartkey.C: 87: if ( RegStatus.bits.b3 == 1) {
  4410  0439  1DF2               	btfss	_RegStatus,3	;volatile
  4411  043A  2C53               	goto	i1l5534
  4412                           
  4413                           ;smartkey.C: 89: cntCyc++;
  4414  043B  0AF3               	incf	_cntCyc,f
  4415                           
  4416                           ;smartkey.C: 90: if (RA5 == 0) {
  4417  043C  1A85               	btfsc	5,5
  4418  043D  2C53               	goto	i1l5534
  4419  043E  3010               	movlw	16
  4420                           
  4421                           ;smartkey.C: 92: cntOff++;
  4422  043F  0AC5               	incf	_cntOff,f
  4423                           
  4424                           ;smartkey.C: 94: if (cntOff > 15) {
  4425  0440  0245               	subwf	_cntOff,w
  4426  0441  1C03               	skipc
  4427  0442  2C53               	goto	i1l5534
  4428                           
  4429                           ;smartkey.C: 96: RegStatus.bits.b3 = 0;
  4430  0443  11F2               	bcf	_RegStatus,3	;volatile
  4431                           
  4432                           ;smartkey.C: 98: if ((cntCyc > 15) && (cntCyc < 50)) {
  4433  0444  3010               	movlw	16
  4434  0445  0273               	subwf	_cntCyc,w
  4435  0446  3032               	movlw	50
  4436  0447  1C03               	skipc
  4437  0448  2C4F               	goto	L14
  4438  0449  0273               	subwf	_cntCyc,w
  4439  044A  1803               	skipnc
  4440  044B  2C4E               	goto	i1l5530
  4441                           
  4442                           ;smartkey.C: 99: RegStatus.bits.b2 =1;
  4443  044C  1572               	bsf	_RegStatus,2	;volatile
  4444                           
  4445                           ;smartkey.C: 100: } else if (cntCyc >= 50) {
  4446  044D  2C52               	goto	i1l836
  4447  044E                     i1l5530:	
  4448  044E  3032               	movlw	50
  4449  044F                     L14:	
  4450  044F  0273               	subwf	_cntCyc,w
  4451  0450  1803               	btfsc	3,0
  4452                           
  4453                           ;smartkey.C: 101: RegStatus.bits.b2 =0;
  4454  0451  1172               	bcf	_RegStatus,2	;volatile
  4455  0452                     i1l836:	
  4456                           
  4457                           ;smartkey.C: 102: }
  4458                           ;smartkey.C: 103: RegStatus.bits.b1 = 1;
  4459  0452  14F2               	bsf	_RegStatus,1	;volatile
  4460  0453                     i1l5534:	
  4461                           
  4462                           ;smartkey.C: 104: }
  4463                           ;smartkey.C: 105: }
  4464                           ;smartkey.C: 106: }
  4465                           ;smartkey.C: 108: timeTick++;
  4466  0453  0AF0               	incf	_timeTick,f
  4467  0454  1903               	skipnz
  4468  0455  0AF1               	incf	_timeTick+1,f
  4469                           
  4470                           ;smartkey.C: 110: if ((mtState == 4) || (mtState == 3)) {
  4471  0456  0874               	movf	_mtState,w
  4472  0457  3A04               	xorlw	4
  4473  0458  1903               	skipnz
  4474  0459  2C5E               	goto	i1l5540
  4475  045A  0874               	movf	_mtState,w
  4476  045B  3A03               	xorlw	3
  4477  045C  1D03               	skipz
  4478  045D  2C81               	goto	i1l5554
  4479  045E                     i1l5540:	
  4480                           
  4481                           ;smartkey.C: 111: if (timeTick > cntTmp) {
  4482  045E  0871               	movf	_timeTick+1,w
  4483  045F  0242               	subwf	_cntTmp+1,w
  4484  0460  1D03               	skipz
  4485  0461  2C64               	goto	u150_25
  4486  0462  0870               	movf	_timeTick,w
  4487  0463  0241               	subwf	_cntTmp,w
  4488  0464                     u150_25:	
  4489  0464  1803               	skipnc
  4490  0465  2C81               	goto	i1l5554
  4491                           
  4492                           ;smartkey.C: 112: cntTmp = timeTick + 38;
  4493  0466  0871               	movf	_timeTick+1,w
  4494  0467  00C2               	movwf	_cntTmp+1
  4495  0468  0870               	movf	_timeTick,w
  4496  0469  00C1               	movwf	_cntTmp
  4497  046A  3026               	movlw	38
  4498  046B  07C1               	addwf	_cntTmp,f
  4499  046C  1803               	skipnc
  4500  046D  0AC2               	incf	_cntTmp+1,f
  4501                           
  4502                           ;smartkey.C: 113: if (cntTmp <= timeOut)
  4503  046E  0842               	movf	_cntTmp+1,w
  4504  046F  0244               	subwf	_timeOut+1,w
  4505  0470  1D03               	skipz
  4506  0471  2C74               	goto	u151_25
  4507  0472  0841               	movf	_cntTmp,w
  4508  0473  0243               	subwf	_timeOut,w
  4509  0474                     u151_25:	
  4510                           
  4511                           ;smartkey.C: 114: {
  4512                           ;smartkey.C: 115: TMR2IE = 0;
  4513  0474  1683               	bsf	3,5	;RP0=1, select bank1
  4514  0475  1C03               	skipc
  4515  0476  2C82               	goto	L15
  4516  0477  108C               	bcf	12,1
  4517                           
  4518                           ;smartkey.C: 116: if (PR2L == 20)
  4519  0478  0811               	movf	17,w	;volatile
  4520  0479  3A14               	xorlw	20
  4521  047A  1D03               	skipz
  4522  047B  2C7E               	goto	i1l5550
  4523                           
  4524                           ;smartkey.C: 117: PR2L = 25;
  4525  047C  3019               	movlw	25
  4526  047D  2C7F               	goto	L13
  4527  047E                     i1l5550:	
  4528                           
  4529                           ;smartkey.C: 118: else
  4530                           ;smartkey.C: 119: PR2L = 20;
  4531  047E  3014               	movlw	20
  4532  047F                     L13:	
  4533  047F  0091               	movwf	17	;volatile
  4534                           
  4535                           ;smartkey.C: 120: TMR2IE = 1;
  4536  0480  148C               	bsf	12,1
  4537  0481                     i1l5554:	
  4538                           
  4539                           ;smartkey.C: 121: }
  4540                           ;smartkey.C: 122: }
  4541                           ;smartkey.C: 123: }
  4542                           ;smartkey.C: 124: }
  4543                           ;smartkey.C: 127: if (TMR2IE && TMR2IF)
  4544  0481  1683               	bsf	3,5	;RP0=1, select bank1
  4545  0482                     L15:	
  4546  0482  1C8C               	btfss	12,1
  4547  0483  2C8A               	goto	i1l846
  4548  0484  1283               	bcf	3,5	;RP0=0, select bank0
  4549  0485  1C8C               	btfss	12,1
  4550  0486  2C8A               	goto	i1l846
  4551  0487  3008               	movlw	8
  4552                           
  4553                           ;smartkey.C: 128: {
  4554                           ;smartkey.C: 129: TMR2IF = 0;
  4555  0488  108C               	bcf	12,1
  4556                           
  4557                           ;smartkey.C: 130: RA3 = ~ RA3;
  4558  0489  0685               	xorwf	5,f
  4559  048A                     i1l846:	
  4560  048A  0878               	movf	??_ISR+1,w
  4561  048B  008A               	movwf	10
  4562  048C  0E77               	swapf	??_ISR^(0+-128),w
  4563  048D  0083               	movwf	3
  4564  048E  0EFE               	swapf	126,f
  4565  048F  0E7E               	swapf	126,w
  4566  0490  0009               	retfie
  4567  0491                     __end_of_ISR:	
  4568                           
  4569                           	psect	intentry
  4570  0004                     __pintentry:	
  4571                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4572                           
  4573  0004                     interrupt_function:	
  4574  007E                     saved_w	set	btemp
  4575  0004  00FE               	movwf	btemp
  4576  0005  0E03               	swapf	3,w
  4577  0006  00F7               	movwf	??_ISR
  4578  0007  080A               	movf	10,w
  4579  0008  00F8               	movwf	??_ISR+1
  4580  0009  2C0D               	ljmp	_ISR
  4581                           
  4582                           	psect	text898
  4583  063B                     __ptext898:	
  4584 ;; =============== function _ISR ends ============
  4585                           
  4586                           
  4587 ;; *************** function i1_WRITE_EEPROM *****************
  4588 ;; Defined at:
  4589 ;;		line 172 in file "smartkey.C"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  WRITE_EEPROM    1    wreg     unsigned char 
  4592 ;;  WRITE_EEPROM    1    0[COMMON] unsigned char 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  WRITE_EEPROM    1    1[COMMON] unsigned char 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;		None               void
  4597 ;; Registers used:
  4598 ;;		wreg
  4599 ;; Tracked objects:
  4600 ;;		On entry : 20/20
  4601 ;;		On exit  : 20/20
  4602 ;;		Unchanged: FFE00/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1
  4604 ;;      Params:         1       0       0
  4605 ;;      Locals:         1       0       0
  4606 ;;      Temps:          0       0       0
  4607 ;;      Totals:         2       0       0
  4608 ;;Total ram usage:        2 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_ISR
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616  063B                     i1_WRITE_EEPROM:	
  4617                           
  4618                           ; Regs used in i1_WRITE_EEPROM: [wreg]
  4619                           ;i1WRITE_EEPROM@EEAddr stored from wreg
  4620  063B  00F6               	movwf	i1WRITE_EEPROM@EEAddr
  4621                           
  4622                           ;smartkey.C: 173: GIE = 0;
  4623  063C  138B               	bcf	11,7
  4624  063D                     i1l870:	
  4625                           ;smartkey.C: 174: while (GIE) asm("clrwdt");
  4626                           
  4627  063D  1F8B               	btfss	11,7
  4628  063E  2E41               	goto	i1l5734
  4629  063F  0064               	clrwdt	;#
  4630  0640  2E3D               	goto	i1l870
  4631  0641                     i1l5734:	
  4632                           
  4633                           ;smartkey.C: 175: EEADR = EEAddr;
  4634  0641  0876               	movf	i1WRITE_EEPROM@EEAddr,w
  4635  0642  1683               	bsf	3,5	;RP0=1, select bank1
  4636  0643  009B               	movwf	27	;volatile
  4637                           
  4638                           ;smartkey.C: 176: EEDAT = EEData;
  4639  0644  0875               	movf	i1WRITE_EEPROM@EEData,w
  4640  0645  009A               	movwf	26	;volatile
  4641  0646  3034               	movlw	52
  4642                           
  4643                           ;smartkey.C: 177: EEIF = 0;
  4644  0647  1283               	bcf	3,5	;RP0=0, select bank0
  4645  0648  138C               	bcf	12,7
  4646                           
  4647                           ;smartkey.C: 178: EECON1 = 0x34;
  4648  0649  1683               	bsf	3,5	;RP0=1, select bank1
  4649  064A  009C               	movwf	28	;volatile
  4650                           
  4651                           ;smartkey.C: 179: WR = 1;
  4652  064B  141D               	bsf	29,0
  4653  064C                     i1l873:	
  4654                           ;smartkey.C: 180: while (WR) asm("clrwdt");
  4655                           
  4656  064C  1683               	bsf	3,5	;RP0=1, select bank1
  4657  064D  1C1D               	btfss	29,0
  4658  064E  2E51               	goto	i1l875
  4659  064F  0064               	clrwdt	;#
  4660  0650  2E4C               	goto	i1l873
  4661  0651                     i1l875:	
  4662                           
  4663                           ;smartkey.C: 181: GIE = 1;
  4664  0651  178B               	bsf	11,7
  4665  0652  0008               	return
  4666  0653                     __end_ofi1_WRITE_EEPROM:	
  4667                           
  4668                           	psect	text899
  4669  06F0                     __ptext899:	
  4670 ;; =============== function i1_WRITE_EEPROM ends ============
  4671                           
  4672                           
  4673 ;; *************** function i1_READ_EEPROM *****************
  4674 ;; Defined at:
  4675 ;;		line 162 in file "smartkey.C"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  READ_EEPROM     1    wreg     unsigned char 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  READ_EEPROM     1    0[COMMON] unsigned char 
  4680 ;;  READ_EEPROM     1    1[COMMON] unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      unsigned char 
  4683 ;; Registers used:
  4684 ;;		wreg
  4685 ;; Tracked objects:
  4686 ;;		On entry : 20/0
  4687 ;;		On exit  : 20/20
  4688 ;;		Unchanged: FFFDF/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1
  4690 ;;      Params:         0       0       0
  4691 ;;      Locals:         2       0       0
  4692 ;;      Temps:          0       0       0
  4693 ;;      Totals:         2       0       0
  4694 ;;Total ram usage:        2 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_ISR
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702  06F0                     i1_READ_EEPROM:	
  4703                           
  4704                           ; Regs used in i1_READ_EEPROM: [wreg]
  4705                           ;i1READ_EEPROM@EEAddr stored from wreg
  4706  06F0  00F5               	movwf	i1READ_EEPROM@EEAddr
  4707                           
  4708                           ;smartkey.C: 163: unsigned char ReEepromData;
  4709                           ;smartkey.C: 164: EEADR = EEAddr;
  4710  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  4711  06F2  009B               	movwf	27	;volatile
  4712                           
  4713                           ;smartkey.C: 165: RD = 1;
  4714  06F3  141C               	bsf	28,0
  4715                           
  4716                           ;smartkey.C: 166: ReEepromData = EEDAT;
  4717  06F4  081A               	movf	26,w	;volatile
  4718  06F5  00F6               	movwf	i1READ_EEPROM@ReEepromData
  4719                           
  4720                           ;smartkey.C: 167: RD = 0;
  4721  06F6  101C               	bcf	28,0
  4722                           
  4723                           ;smartkey.C: 168: return ReEepromData;
  4724  06F7  0008               	return
  4725  06F8                     __end_ofi1_READ_EEPROM:	
  4726                           
  4727                           	psect	text900
  4728  0000                     __ptext900:	
  4729 ;; =============== function i1_READ_EEPROM ends ============
  4730                           
  4731  007E                     btemp	set	126	;btemp
  4732  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Apr 23 16:32:09 2020

                        pc 0002                         _RD 04E0                         _WR 04E8  
             ___awdiv@sign 0025      __size_of_WRITE_EEPROM 001B                         fsr 0004  
                      _C1R 08CA                        _C2R 08D2                        l905 00DA  
                      l930 01A3                        l914 011F                        l852 0000  
                      l924 0165                        l909 00E6                        l870 0622  
                      l855 0000                        l927 0177                        l864 0000  
                      l873 0634                        l858 0000                        l962 0278  
                      l867 0000                        l875 0639                        l963 0264  
                      l876 0000                        l949 01F5                        l879 0000  
                      l959 0292                        l979 02F6                        _GIE 005F  
                      _RA2 002A                        _RA3 002B                        _RC0 0038  
                      _RC1 0039                        _RA5 002D                        _RA6 002E  
                      _RA7 002F               ?_swI2C_Start 0075                        _HTS 047A  
                      _ISR 040D                        _SR0 0CF6                        _SR1 0CF7  
                      _VR0 08C0                        _VR1 08C1                        _VR2 08C2  
                      _VR3 08C3                        _VRR 08C5                        fsr0 0004  
                      indf 0000             _swI2C_ReadByte 04D6                       S7310 0700  
                     ?_ISR 0075                       l1002 03F2                       _C1OE 08CD  
                     _C2OE 08D5                       _C1ON 08CF                       l2601 0000  
                     l1802 0000                       l2612 04E2                       _C2ON 08D7  
                     l1805 0000                       l2614 0000                       l2607 051F  
                     l1808 0000                       l2609 0000                       l4246 0000  
                     l7000 0000                       l2595 0000                       l1796 06EC  
                     l7100 0000                       l7020 0000                       l7012 0225  
                     l7004 0215                       l2598 0000                       l7110 0000  
                     l7102 0000                       l7014 0000                       l1799 0000  
                     l7200 0000                       l7112 0000                       l7120 02FD  
                     l7104 0000                       l7040 0000                       l7016 0000  
                     l7008 0000                       l7024 023F                       l7202 0000  
                     l7130 0000                       l7122 0000                       l7106 02E5  
                     l7050 0000                       l7042 0000                       l7026 024A  
                     l7018 0236                       l7220 0000                       l7204 0000  
                     l7124 0000                       l7140 0319                       l7052 0000  
                     l7036 0000                       l7028 0000                       l7222 0000  
                     l7214 0000                       l7230 03C9                       l7150 0000  
                     l7126 0000                       l7070 02A1                       l7054 0000  
                     l7038 0000                       l7062 028A                       l6520 0000  
                     l6600 04C9                       l7224 03C3                       l7208 03A7  
                     l7152 0000                       l7128 0000                       l7080 0000  
                     l7072 0000                       l7056 0000                       l7048 027B  
                     l7064 0293                       l6450 0000                       l6522 0000  
                     l6514 0000                       l6530 0000                       l6602 0000  
                     l6610 0000                       l7242 0000                       l7218 0000  
                     l7226 03C4                       l7170 0000                       l7162 0000  
                     l7090 0000                       l7082 0000                       l7074 0000  
                     l7138 030B                       l6460 0000                       l6516 0000  
                     l6524 0000                       l6540 0000                       l6532 0000  
                     l6604 04D1                       l6612 0000                       l6620 0654  
                     l6700 0506                       l7252 03F5                       l7244 0000  
                     l7228 0000                       l7172 0000                       l7156 0000  
                     l7148 032C                       l7092 02C7                       l7084 0000  
                     l7076 02AB                       l6446 0000                       l6454 0000  
                     l6462 0000                       l6470 0000                       l6518 0000  
                     l6526 0000                       l6550 0000                       l6542 0000  
                     l6534 0000                       l6614 0000                       l6622 0000  
                     l6630 0000                       l6702 0000                       l7246 0000  
                     l7182 0000                       l7174 0000                       l7166 0000  
                     l7086 0000                       l7078 0000                       l6448 0000  
                     l6456 0626                       l6464 069C                       l6472 0000  
                     l6528 0000                       l6560 0000                       l6552 0000  
                     l6544 0000                       l6536 0000                       l6616 0000  
                     l6608 0000                       l6624 0000                       l6632 0000  
                     l6640 0000                       l6704 0000                       l6712 0000  
                     l7184 0000                       l7168 0000                       l7176 036B  
                     l7248 03EC                       l7096 02CF                       l7088 02BE  
                     l6800 0000                       l6458 0000                       l6466 0000  
                     l6474 0000                       l6490 0581                       l6562 0000  
                     l6554 0000                       l6546 0000                       l6538 0000  
                     l6570 0000                       l6618 0000                       l6626 0000  
                     l6634 0000                       l6642 0000                       l6650 0000  
                     l6706 0000                       l6722 0000                       l7258 0404  
                     l7194 0000                       l6810 0000                       l6802 0000  
                     l6468 0000                       l6476 0000                       l6556 0000  
                     l6548 0000                       l6580 0000                       l6572 049B  
                     l6564 0000                       l6628 0000                       l6636 0000  
                     l6644 0000                       l6660 0000                       l6652 0000  
                     l6708 0000                       l7188 0000                       l6804 0000  
                     l6558 0000                       l6590 0000                       l6566 0000  
                     l6638 0000                       l6646 0000                       l6670 0000  
                     l6662 0000                       l6654 0000                       l6726 05E2  
                     l7198 0000                       l6910 0166                       l6902 0159  
                     l6830 0000                       l6822 0000                       l6814 0000  
                     l6806 0000                       l6576 0000                       l6672 0000  
                     l6664 0000                       l6648 0000                       l6680 0000  
                     l6760 0000                       l6744 0000                       l6912 0170  
                     l6904 015E                       l6840 0000                       l6832 0000  
                     l6824 0067                       l6816 0054                       l6808 0000  
                     l6594 0000                       l6578 04A4                       l6666 0000  
                     l6658 0000                       l6690 0000                       l6682 0000  
                     l6738 05C7                       l6762 0000                       l6754 0000  
                     l6914 0000                       l6906 0000                       l6922 0182  
                     l6850 009A                       l6842 0089                       l6834 0000  
                     l6818 0000                       l6588 04B2                       l6668 0000  
                     l6692 0000                       l6684 0000                       l6676 0000  
                     l6756 05A1                       l6932 0000                       l6924 018D  
                     l6860 0000                       l6852 0000                       l6844 0000  
                     l6836 0000                       l6828 0000                       l6780 0000  
                     l6598 0000                       l6694 0000                       l6678 0000  
                     l6950 01BB                       l6942 0000                       l6934 0000  
                     l6926 0000                       l6918 0178                       l6870 0000  
                     l6838 0082                       l6790 0000                       l6782 0000  
                     l6696 0000                       l6688 0000                       l6960 01C5  
                     l6936 0000                       l6928 0000                       l6944 01B1  
                     l6864 0000                       l6880 00E8                       l6792 0000  
                     l6784 0000                       l6698 0000                       l6946 0000  
                     l6882 00EC                       l6874 0000                       l6858 00AB  
                     l6794 0000                       l6786 0000                       l6980 0000  
                     l6972 01DE                       l6964 01CD                       l6948 0000  
                     l6884 0000                       l6868 0000                       l6796 0000  
                     l6788 0000                       l6990 0000                       l6894 0111  
                     l6878 00B5                       l6798 0000                       l6976 0000  
                     l6984 01EE                       l6968 0000                       l6896 0000  
                     l6888 00F2                       l6994 0204                       l6986 0000  
                     l6978 0000                       l6898 012D                       l6996 0000  
                     l6988 0000                       l6998 0212                       _EEIF 0067  
                     _ANS0 08F0                       _ANS1 08F1                       _ANS2 08F2  
                     _ANS3 08F3                       _ANS4 08F4                       _ANS5 08F5  
                     _ANS6 08F6                       _ANS7 08F7                       _ANS8 08F8  
                     _ANS9 08F9                       _T0IE 005D                       _T0IF 005A  
                     _T0ON 00FB                       _IOCB 0116                       _PAIE 005B  
                     _PAIF 0058                       u3415 0320                       _PIE1 008C  
                     u2800 0524                       u2635 06A2                       u3365 029E  
                     u2814 0526                       u2665 056C                       u2755 04BB  
                     u3707 00D1                       _PEIE 005E                       u3717 0118  
                     _INTE 005C                       _INTF 0059                       u3807 053E  
                     u3727 04DE                       u2935 05AE                       u3817 0544  
                     u3737 04E5                       u3657 0021                       u3907 05FD  
                     u3827 06C6                       u3747 04F4                       u3667 003B  
                     _PR2H 0092                       u3917 0602                       u3837 06CC  
                     u3757 0509                       u3677 004F                       u3847 0683  
                     u3767 050F                       u3687 0062                       _PR2L 0091  
                     u3857 0689                       u3777 051B                       u3697 00BE  
                     _PIR1 000C                       u3867 068F                       u3787 052B  
                     u3877 05EC                       u3797 0531                       u3887 05F3  
                     u3897 05F8                       _TMR0 0001                       _STRA 0CE8  
                     _STRB 0CE9                       _STRC 0CEA                       _STRD 0CEB  
                     _WREN 0C62                       _WPUA 0095                       _WPUB 0115  
                     _WPUC 0093               ?_READ_EEPROM 0075                       _beep 0653  
          __end_of_AccRead 05C5                       _main 000B                       btemp 007E  
                     start 000A               _WRITE_EEPROM 0620                      ??_ISR 0077  
                    _C1CH0 08C8                      _C1CH1 08C9                      _C2CH0 08D0  
                    _C2CH1 08D1                      ?_beep 0024                      _C1SEN 0CF5  
                    _C2REN 0CF4                      _C1POL 08CC                      _C2POL 08D4  
                    _C1OUT 08CE                      _C2OUT 08D6                      ?_main 0075  
          __end_of___awdiv 04D6                      _EEADR 009B                      _EEDAT 009A  
                    _ANS10 08FA                      _ANS11 08FB                      _EEPGD 0C67  
   __end_of_swI2C_ReadByte 0514                      _ANSEL 011E               AccWrite@rAdd 0026  
          ___awdiv@divisor 0020                      _IOCA5 04B5                      _IOCB4 08B4  
                    _IOCB5 08B5                      _IOCB6 08B6                      _IOCB7 08B7  
                    _T1GSS 08D9                      i1l825 0432                      i1l827 0431  
                    i1l836 0452                      i1l870 063D                      i1l846 048A  
                    i1l873 064C                      i1l867 0000                      i1l875 0651  
                    i1l876 0000            ___awdiv@counter 0024                      _MSCON 001B  
          __end_of_beepOff 06FE                      _VP6EN 08C4                      _TMR2H 0013  
                    _TMR2L 0011                      _PSRCA 0088                      _PSRCC 0094  
                    _PORTA 0005                      _PORTC 0007                      _SRCON 019E  
                    _PULSR 0CF2                      _PULSS 0CF3                      _TRISA 0085  
                    _TRISC 0087                      _VRCON 0118                      _WPUB4 08AC  
                    _WPUB5 08AD                      _WPUB6 08AE                      _WPUB7 08AF  
                    _compe 0551           __end_of_AccWrite 05E6                      pclath 000A  
                    status 0003                      wtemp0 007E            _swI2C_WriteByte 0514  
     __size_of_delay_x10ms 0013             i1_WRITE_EEPROM 063B               __end_of_beep 0669  
             __end_of_main 040D                     ??_beep 0025                     ??_main 002A  
          ?_swI2C_ReadByte 0075                     ISR@tmp 0079                     _C1VREN 08C7  
                   _C2VREN 08C6                     _C2SYNC 08D8                     ?_compe 0020  
                ??_AccRead 0026                     _EEADRH 010F                     _EEDATH 010E  
                   _EECON1 009C           ___awdiv@dividend 0022                     _ANSELH 011F  
                   _MC1OUT 08DF                     _MC2OUT 08DE                     _T0CON0 001F  
                   _T2CON0 0012                     i1l5510 0000                     i1l5520 0000  
                   i1l5512 0000                     i1l5504 0000                     i1l5530 044E  
                   i1l5540 045E                     i1l5524 0000                     i1l5516 0000  
                   i1l5550 047E                     i1l5534 0453                     i1l5560 0000  
                   i1l5536 0000                     i1l5546 0000                     i1l5554 0481  
                   i1l5490 0000                     i1l5482 0000                     i1l5474 0000  
                   i1l5724 0000                     i1l5732 0000                     i1l5492 041B  
                   i1l5484 0000                     i1l5476 0000                     i1l5726 0000  
                   i1l5734 0641                     i1l5494 041C                     i1l5728 0000  
                   i1l5736 0000                     i1l5738 0000                     _INTEDG 040E  
                   u150_25 0464                     u151_25 0474                     _INTCON 000B  
                   _OSCCON 008F                     _TMR2IE 0461                     _TMR2IF 0061  
                   _PSINKA 0097                     _PSINKC 009F                     _OPTION 0081  
                   _TMR2ON 0092     __end_ofi1_WRITE_EEPROM 0653            swI2C_ReadByte@i 0023  
                   _beepOn 0705                  ??___awdiv 0024                     _cntCyc 0073  
                   _cntOff 0045                     _cntTmp 0041                  ??_beepOff 0020  
         ___awdiv@quotient 0026           __end_of_int_init 0620                     compe@a 0024  
                   compe@b 0020     __size_ofi1_READ_EEPROM 0008           __end_of_setState 06E8  
                   saved_w 007E       __size_of_swI2C_Start 0013    __end_of_swI2C_WriteByte 0551  
         __end_of_sys_init 06F0       i1WRITE_EEPROM@EEAddr 0076       i1WRITE_EEPROM@EEData 0075  
     __size_of_READ_EEPROM 000D            ?i1_WRITE_EEPROM 0075             __pcstackCOMMON 0075  
            __end_of_compe 058E                  ?_AccWrite 0023                    ??_compe 0022  
               __pbssBANK0 0041         __size_of_gpio_init 0016    READ_EEPROM@ReEepromData 0021  
            i1_READ_EEPROM 06F0                 __pmaintext 000B                    ?_beepOn 0075  
               __pintentry 0004  i1READ_EEPROM@ReEepromData 0076                    _CM1CON0 0119  
                  _CM2CON0 011A                    _CM2CON1 011B                 ??_AccWrite 0025  
                  _AccRead 058E                    _PSTRCON 019D                 _swI2C_Init 05E6  
                  _STRSYNC 0CEC                 _swI2C_Stop 06C2           ?_swI2C_WriteByte 0075  
           ?i1_READ_EEPROM 0075                  AccWrite@i 0027                  ?_int_init 0075  
              setState@stt 0022                  ?_setState 0020                 _mtOldState 0046  
                  ___awdiv 0491           ??_swI2C_ReadByte 0020            __size_of_beepOn 0005  
                  _beepOff 06F8             main@lostDetect 0030                    beep@rep 0024  
        __end_of_gpio_init 067F                  ?_sys_init 0075               __size_of_ISR 0084  
                  _mtState 0074                    _timeOut 0043                    compe@dt 0021  
                  main@buf 0033       end_of_initialization 06C0              ??_delay_x10ms 0022  
               ??_int_init 0020                 ??_setState 0022                AccRead@rAdd 0028  
               _timer_init 06A5                 ??_sys_init 0020                ?_swI2C_Init 0075  
          ??i1_READ_EEPROM 0075                ?_swI2C_Stop 0075                 main@acXOld 0032  
               main@acYOld 0031           ??i1_WRITE_EEPROM 0076                 main@acXsum 003B  
               main@acYsum 0039                 main@isFall 002F         WRITE_EEPROM@EEAddr 0021  
       WRITE_EEPROM@EEData 0020                 main@isWait 002D        __end_of_delay_x10ms 06A5  
              AccWrite@dat 0023                AccWrite@len 0024             __end_of_beepOn 070A  
            ??_swI2C_Start 0020          __size_of_AccWrite 0021        start_initialization 06B5  
              __end_of_ISR 0491              setState@_tOut 0020                  _RegStatus 0072  
            ??_READ_EEPROM 0020              ?_WRITE_EEPROM 0020                   ??_beepOn 0020  
        READ_EEPROM@EEAddr 0020        __size_of_swI2C_Init 001F        __size_of_swI2C_Stop 000D  
              ?_timer_init 0075                __pbssCOMMON 0070              __pcstackBANK0 0020  
                 ?_AccRead 0024        __end_of_swI2C_Start 0692                _delay_x10ms 0692  
           ??_WRITE_EEPROM 0021          __size_of_int_init 001B        __end_of_READ_EEPROM 06DC  
         swI2C_WriteByte@i 0022                   ?___awdiv 0020          __size_of_setState 000C  
                __ptext900 0000                  __ptext880 0514                  __ptext881 06C2  
                __ptext890 0551                  __ptext882 067F                  __ptext891 06DC  
                __ptext883 05E6                  __ptext892 0705                  __ptext884 06E8  
                __ptext876 0000                  __ptext893 06F8                  __ptext885 0653  
                __ptext877 058E                  __ptext894 0692                  __ptext886 0491  
                __ptext878 05C5                  __ptext895 0620                  __ptext887 0605  
                __ptext879 04D6                  __ptext896 06CF                  __ptext888 06A5  
                __ptext897 040D                  __ptext889 0669                  __ptext898 063B  
                __ptext899 06F0                  beep@delay 0025                   ?_beepOff 0075  
                 AccRead@i 0029         swI2C_WriteByte@dat 0021                  __pswtext1 0700  
        __size_of_sys_init 0008                  _gpio_init 0669             __size_of_compe 003D  
        interrupt_function 0004        __size_of_timer_init 0010   __size_of_swI2C_WriteByte 003D  
               AccRead@dat 0024                 AccRead@len 0025               delay_x10ms@t 0020  
                 _AccWrite 05C5                _swI2C_Start 067F                  main@tmp16 003E  
               ?_gpio_init 0075               ??_swI2C_Init 0020           __size_of_AccRead 0037  
             ??_swI2C_Stop 0020                _READ_EEPROM 06CF          swI2C_ReadByte@Ack 0021  
        swI2C_ReadByte@dat 0022           __size_of___awdiv 0045           __size_of_beepOff 0006  
       __end_of_swI2C_Init 0605         __end_of_swI2C_Stop 06CF       __end_of_WRITE_EEPROM 063B  
  __size_of_swI2C_ReadByte 003E      __end_ofi1_READ_EEPROM 06F8              __size_of_beep 0016  
            __size_of_main 0402                   _int_init 0605                   _setState 06DC  
                 _timeTick 0070                   main@isSw 003D                   main@tmp8 0040  
        ??_swI2C_WriteByte 0020               ??_timer_init 0020                   _sys_init 06E8  
              ??_gpio_init 0020                   intlevel1 0000               ?_delay_x10ms 0020  
       __end_of_timer_init 06B5    __size_ofi1_WRITE_EEPROM 0018        i1READ_EEPROM@EEAddr 0075  
           delay_x10ms@set 0022  
