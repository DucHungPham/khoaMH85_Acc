

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Mar 19 13:22:22 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text860,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	text861,local,class=CODE,delta=2
    13                           	psect	text862,local,class=CODE,delta=2
    14                           	psect	text863,local,class=CODE,delta=2
    15                           	psect	text864,local,class=CODE,delta=2
    16                           	psect	text865,local,class=CODE,delta=2
    17                           	psect	text866,local,class=CODE,delta=2
    18                           	psect	text867,local,class=CODE,delta=2
    19                           	psect	text868,local,class=CODE,delta=2
    20                           	psect	text869,local,class=CODE,delta=2
    21                           	psect	text870,local,class=CODE,delta=2
    22                           	psect	text871,local,class=CODE,delta=2
    23                           	psect	text872,local,class=CODE,delta=2
    24                           	psect	text873,local,class=CODE,delta=2
    25                           	psect	text874,local,class=CODE,delta=2
    26                           	psect	text875,local,class=CODE,delta=2
    27                           	psect	text876,local,class=CODE,delta=2
    28                           	psect	text877,local,class=CODE,delta=2
    29                           	psect	text878,local,class=CODE,delta=2
    30                           	psect	text879,local,class=CODE,delta=2
    31                           	psect	text880,local,class=CODE,delta=2
    32                           	psect	text881,local,class=CODE,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text882,local,class=CODE,delta=2
    35                           	psect	text883,local,class=CODE,delta=2
    36                           	psect	text884,local,class=CODE,delta=2
    37                           	psect	pa_nodes,global,class=CODE,delta=2
    38                           	dabs	1,0x11E,1
    39                           	dabs	1,0x11F,1
    40                           	dabs	1,0x119,1
    41                           	dabs	1,0x11A,1
    42                           	dabs	1,0x11B,1
    43                           	dabs	1,0x10F,1
    44                           	dabs	1,0x10E,1
    45                           	dabs	1,0x116,1
    46                           	dabs	1,0x19D,1
    47                           	dabs	1,0x19E,1
    48                           	dabs	1,0x118,1
    49                           	dabs	1,0x115,1
    50                           	dabs	1,0x11E,1
    51                           	dabs	1,0x11E,1
    52                           	dabs	1,0x11F,1
    53                           	dabs	1,0x11F,1
    54                           	dabs	1,0x11E,1
    55                           	dabs	1,0x11E,1
    56                           	dabs	1,0x11E,1
    57                           	dabs	1,0x11E,1
    58                           	dabs	1,0x11E,1
    59                           	dabs	1,0x11E,1
    60                           	dabs	1,0x11F,1
    61                           	dabs	1,0x11F,1
    62                           	dabs	1,0x119,1
    63                           	dabs	1,0x119,1
    64                           	dabs	1,0x119,1
    65                           	dabs	1,0x119,1
    66                           	dabs	1,0x119,1
    67                           	dabs	1,0x119,1
    68                           	dabs	1,0x119,1
    69                           	dabs	1,0x19E,1
    70                           	dabs	1,0x118,1
    71                           	dabs	1,0x11A,1
    72                           	dabs	1,0x11A,1
    73                           	dabs	1,0x11A,1
    74                           	dabs	1,0x11A,1
    75                           	dabs	1,0x11A,1
    76                           	dabs	1,0x11A,1
    77                           	dabs	1,0x11A,1
    78                           	dabs	1,0x19E,1
    79                           	dabs	1,0x11B,1
    80                           	dabs	1,0x118,1
    81                           	dabs	1,0x18C,1
    82                           	dabs	1,0x116,1
    83                           	dabs	1,0x116,1
    84                           	dabs	1,0x116,1
    85                           	dabs	1,0x116,1
    86                           	dabs	1,0x11B,1
    87                           	dabs	1,0x11B,1
    88                           	dabs	1,0x19E,1
    89                           	dabs	1,0x19E,1
    90                           	dabs	1,0x19E,1
    91                           	dabs	1,0x19E,1
    92                           	dabs	1,0x19D,1
    93                           	dabs	1,0x19D,1
    94                           	dabs	1,0x19D,1
    95                           	dabs	1,0x19D,1
    96                           	dabs	1,0x19D,1
    97                           	dabs	1,0x11B,1
    98                           	dabs	1,0x118,1
    99                           	dabs	1,0x118,1
   100                           	dabs	1,0x118,1
   101                           	dabs	1,0x118,1
   102                           	dabs	1,0x118,1
   103                           	dabs	1,0x118,1
   104                           	dabs	1,0x115,1
   105                           	dabs	1,0x115,1
   106                           	dabs	1,0x115,1
   107                           	dabs	1,0x115,1
   108                           	dabs	1,0x18C,1
   109                           	dabs	1,0x7E,2
   110  000A                     
   111                           	psect	text860
   112  0000                     __ptext860:	
   113  011E                     _ANSEL	set	286	;_ANSEL
   114  011F                     _ANSELH	set	287	;_ANSELH
   115  0119                     _CM1CON0	set	281	;_CM1CON0
   116  011A                     _CM2CON0	set	282	;_CM2CON0
   117  011B                     _CM2CON1	set	283	;_CM2CON1
   118  010F                     _EEADRH	set	271	;_EEADRH
   119  010E                     _EEDATH	set	270	;_EEDATH
   120  0116                     _IOCB	set	278	;_IOCB
   121  019D                     _PSTRCON	set	413	;_PSTRCON
   122  019E                     _SRCON	set	414	;_SRCON
   123  0118                     _VRCON	set	280	;_VRCON
   124  0115                     _WPUB	set	277	;_WPUB
   125  08F0                     _ANS0	set	2288	;_ANS0
   126  08F1                     _ANS1	set	2289	;_ANS1
   127  08FA                     _ANS10	set	2298	;_ANS10
   128  08FB                     _ANS11	set	2299	;_ANS11
   129  08F2                     _ANS2	set	2290	;_ANS2
   130  08F3                     _ANS3	set	2291	;_ANS3
   131  08F4                     _ANS4	set	2292	;_ANS4
   132  08F5                     _ANS5	set	2293	;_ANS5
   133  08F6                     _ANS6	set	2294	;_ANS6
   134  08F7                     _ANS7	set	2295	;_ANS7
   135  08F8                     _ANS8	set	2296	;_ANS8
   136  08F9                     _ANS9	set	2297	;_ANS9
   137  08C8                     _C1CH0	set	2248	;_C1CH0
   138  08C9                     _C1CH1	set	2249	;_C1CH1
   139  08CD                     _C1OE	set	2253	;_C1OE
   140  08CF                     _C1ON	set	2255	;_C1ON
   141  08CE                     _C1OUT	set	2254	;_C1OUT
   142  08CC                     _C1POL	set	2252	;_C1POL
   143  08CA                     _C1R	set	2250	;_C1R
   144  0CF5                     _C1SEN	set	3317	;_C1SEN
   145  08C7                     _C1VREN	set	2247	;_C1VREN
   146  08D0                     _C2CH0	set	2256	;_C2CH0
   147  08D1                     _C2CH1	set	2257	;_C2CH1
   148  08D5                     _C2OE	set	2261	;_C2OE
   149  08D7                     _C2ON	set	2263	;_C2ON
   150  08D6                     _C2OUT	set	2262	;_C2OUT
   151  08D4                     _C2POL	set	2260	;_C2POL
   152  08D2                     _C2R	set	2258	;_C2R
   153  0CF4                     _C2REN	set	3316	;_C2REN
   154  08D8                     _C2SYNC	set	2264	;_C2SYNC
   155  08C6                     _C2VREN	set	2246	;_C2VREN
   156  0C67                     _EEPGD	set	3175	;_EEPGD
   157  08B4                     _IOCB4	set	2228	;_IOCB4
   158  08B5                     _IOCB5	set	2229	;_IOCB5
   159  08B6                     _IOCB6	set	2230	;_IOCB6
   160  08B7                     _IOCB7	set	2231	;_IOCB7
   161  08DF                     _MC1OUT	set	2271	;_MC1OUT
   162  08DE                     _MC2OUT	set	2270	;_MC2OUT
   163  0CF2                     _PULSR	set	3314	;_PULSR
   164  0CF3                     _PULSS	set	3315	;_PULSS
   165  0CF6                     _SR0	set	3318	;_SR0
   166  0CF7                     _SR1	set	3319	;_SR1
   167  0CE8                     _STRA	set	3304	;_STRA
   168  0CE9                     _STRB	set	3305	;_STRB
   169  0CEA                     _STRC	set	3306	;_STRC
   170  0CEB                     _STRD	set	3307	;_STRD
   171  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   172  08D9                     _T1GSS	set	2265	;_T1GSS
   173  08C4                     _VP6EN	set	2244	;_VP6EN
   174  08C0                     _VR0	set	2240	;_VR0
   175  08C1                     _VR1	set	2241	;_VR1
   176  08C2                     _VR2	set	2242	;_VR2
   177  08C3                     _VR3	set	2243	;_VR3
   178  08C5                     _VRR	set	2245	;_VRR
   179  08AC                     _WPUB4	set	2220	;_WPUB4
   180  08AD                     _WPUB5	set	2221	;_WPUB5
   181  08AE                     _WPUB6	set	2222	;_WPUB6
   182  08AF                     _WPUB7	set	2223	;_WPUB7
   183  0C62                     _WREN	set	3170	;_WREN
   184  000B                     _INTCON	set	11
   185  001B                     _MSCON	set	27
   186  000C                     _PIR1	set	12
   187  0005                     _PORTA	set	5
   188  0007                     _PORTC	set	7
   189  001F                     _T0CON0	set	31
   190  0012                     _T2CON0	set	18
   191  0001                     _TMR0	set	1
   192  0013                     _TMR2H	set	19
   193  0011                     _TMR2L	set	17
   194  0067                     _EEIF	set	103
   195  005F                     _GIE	set	95
   196  005C                     _INTE	set	92
   197  0059                     _INTF	set	89
   198  005B                     _PAIE	set	91
   199  0058                     _PAIF	set	88
   200  005E                     _PEIE	set	94
   201  002A                     _RA2	set	42
   202  002B                     _RA3	set	43
   203  002D                     _RA5	set	45
   204  002E                     _RA6	set	46
   205  002F                     _RA7	set	47
   206  0038                     _RC0	set	56
   207  0039                     _RC1	set	57
   208  005D                     _T0IE	set	93
   209  005A                     _T0IF	set	90
   210  00FB                     _T0ON	set	251
   211  0061                     _TMR2IF	set	97
   212  0092                     _TMR2ON	set	146
   213  009B                     _EEADR	set	155
   214  009C                     _EECON1	set	156
   215  009A                     _EEDAT	set	154
   216  0081                     _OPTION	set	129
   217  008F                     _OSCCON	set	143
   218  008C                     _PIE1	set	140
   219  0092                     _PR2H	set	146
   220  0091                     _PR2L	set	145
   221  0097                     _PSINKA	set	151
   222  009F                     _PSINKC	set	159
   223  0088                     _PSRCA	set	136
   224  0094                     _PSRCC	set	148
   225  0085                     _TRISA	set	133
   226  0087                     _TRISC	set	135
   227  0095                     _WPUA	set	149
   228  0093                     _WPUC	set	147
   229  047A                     _HTS	set	1146
   230  040E                     _INTEDG	set	1038
   231  04B5                     _IOCA5	set	1205
   232  04E0                     _RD	set	1248
   233  0461                     _TMR2IE	set	1121
   234  04E8                     _WR	set	1256
   235                           
   236                           	psect	cinit
   237  06A6                     start_initialization:	
   238                           
   239                           ; Clear objects allocated to COMMON
   240  06A6  01F0               	clrf	__pbssCOMMON& (0+127)
   241  06A7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   242  06A8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   243  06A9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   244  06AA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   245                           
   246                           ; Clear objects allocated to BANK0
   247  06AB  01C5               	clrf	__pbssBANK0& (0+127)
   248  06AC  01C6               	clrf	(__pbssBANK0+1)& (0+127)
   249  06AD  01C7               	clrf	(__pbssBANK0+2)& (0+127)
   250  06AE  01C8               	clrf	(__pbssBANK0+3)& (0+127)
   251  06AF  01C9               	clrf	(__pbssBANK0+4)& (0+127)
   252  06B0  01CA               	clrf	(__pbssBANK0+5)& (0+127)
   253  06B1  01CB               	clrf	(__pbssBANK0+6)& (0+127)
   254  06B2  01CC               	clrf	(__pbssBANK0+7)& (0+127)
   255  06B3                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  06B3  0183               	clrf	3
   259  06B4  280B               	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMMON
   262  0070                     __pbssCOMMON:	
   263  0070                     _timeTick:	
   264  0070                     	ds	2
   265  0072                     _cntCyc:	
   266  0072                     	ds	1
   267  0073                     _mode_chek:	
   268  0073                     	ds	1
   269  0074                     _mtState:	
   270  0074                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273  0045                     __pbssBANK0:	
   274  0045                     _cntTmp:	
   275  0045                     	ds	2
   276  0047                     _timeOut:	
   277  0047                     	ds	2
   278  0049                     _RegStatus:	
   279  0049                     	ds	1
   280  004A                     _cntOff:	
   281  004A                     	ds	1
   282  004B                     _lostDetect:	
   283  004B                     	ds	1
   284  004C                     _mtOldState:	
   285  004C                     	ds	1
   286                           
   287                           	psect	cstackCOMMON
   288  0075                     __pcstackCOMMON:	
   289  0075                     ?_sys_init:	
   290  0075                     ?_gpio_init:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0075                     ?_timer_init:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0075                     ?_int_init:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0075                     ?_swI2C_Init:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0075                     ?_ISR:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0075                     ?_beepOff:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0075                     ?_beepOn:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0075                     ?_main:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0075                     ?_swI2C_Start:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0075                     ?_swI2C_Stop:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0075                     ??i1_READ_EEPROM:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0075                     ?i1_WRITE_EEPROM:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0075                     ?_READ_EEPROM:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0075                     ?_swI2C_WriteByte:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0075                     ?_swI2C_ReadByte:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0075                     ?i1_READ_EEPROM:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0075                     i1READ_EEPROM@EEAddr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0075                     i1WRITE_EEPROM@EEData:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346  0075                     	ds	1
   347  0076                     ??i1_WRITE_EEPROM:	
   348  0076                     i1READ_EEPROM@ReEepromData:	
   349                           ; 0 bytes @ 0x1
   350                           
   351  0076                     i1WRITE_EEPROM@EEAddr:	
   352                           ; 1 bytes @ 0x1
   353                           
   354                           
   355                           ; 1 bytes @ 0x1
   356  0076                     	ds	1
   357  0077                     ??_ISR:	
   358                           
   359                           ; 0 bytes @ 0x2
   360  0077                     	ds	2
   361  0079                     ISR@tmp_1138:	
   362                           
   363                           ; 1 bytes @ 0x4
   364  0079                     	ds	1
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:	
   368  0020                     ??_READ_EEPROM:	
   369  0020                     ?_WRITE_EEPROM:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0020                     ??_sys_init:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0020                     ??_gpio_init:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0020                     ??_timer_init:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0020                     ??_int_init:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_swI2C_Init:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ?_delay_x10ms:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ??_beepOff:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_beepOn:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ?_setState:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_swI2C_Start:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ??_swI2C_Stop:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ??_swI2C_WriteByte:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ??_swI2C_ReadByte:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0020                     ?_compe:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0020                     ?___awdiv:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0020                     READ_EEPROM@EEAddr:	
   418                           ; 2 bytes @ 0x0
   419                           
   420  0020                     WRITE_EEPROM@EEData:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0020                     compe@b:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0020                     delay_x10ms@t:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0020                     setState@_tOut:	
   430                           ; 2 bytes @ 0x0
   431                           
   432  0020                     ___awdiv@divisor:	
   433                           ; 2 bytes @ 0x0
   434                           
   435                           
   436                           ; 2 bytes @ 0x0
   437  0020                     	ds	1
   438  0021                     ??_WRITE_EEPROM:	
   439  0021                     READ_EEPROM@ReEepromData:	
   440                           ; 0 bytes @ 0x1
   441                           
   442  0021                     WRITE_EEPROM@EEAddr:	
   443                           ; 1 bytes @ 0x1
   444                           
   445  0021                     compe@dt:	
   446                           ; 1 bytes @ 0x1
   447                           
   448  0021                     swI2C_WriteByte@dat:	
   449                           ; 1 bytes @ 0x1
   450                           
   451  0021                     swI2C_ReadByte@Ack:	
   452                           ; 1 bytes @ 0x1
   453                           
   454                           
   455                           ; 1 bytes @ 0x1
   456  0021                     	ds	1
   457  0022                     ??_delay_x10ms:	
   458  0022                     ??_setState:	
   459                           ; 0 bytes @ 0x2
   460                           
   461  0022                     ??_compe:	
   462                           ; 0 bytes @ 0x2
   463                           
   464  0022                     setState@stt:	
   465                           ; 0 bytes @ 0x2
   466                           
   467  0022                     swI2C_WriteByte@i:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0022                     swI2C_ReadByte@dat:	
   471                           ; 1 bytes @ 0x2
   472                           
   473  0022                     delay_x10ms@set:	
   474                           ; 1 bytes @ 0x2
   475                           
   476  0022                     ___awdiv@dividend:	
   477                           ; 2 bytes @ 0x2
   478                           
   479                           
   480                           ; 2 bytes @ 0x2
   481  0022                     	ds	1
   482  0023                     ?_AccWrite:	
   483  0023                     swI2C_ReadByte@i:	
   484                           ; 1 bytes @ 0x3
   485                           
   486  0023                     AccWrite@dat:	
   487                           ; 1 bytes @ 0x3
   488                           
   489                           
   490                           ; 2 bytes @ 0x3
   491  0023                     	ds	1
   492  0024                     ?_beep:	
   493  0024                     ??___awdiv:	
   494                           ; 0 bytes @ 0x4
   495                           
   496  0024                     ?_AccRead:	
   497                           ; 0 bytes @ 0x4
   498                           
   499  0024                     beep@rep:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  0024                     ___awdiv@counter:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0024                     AccRead@dat:	
   506                           ; 1 bytes @ 0x4
   507                           
   508                           
   509                           ; 2 bytes @ 0x4
   510  0024                     	ds	1
   511  0025                     ??_beep:	
   512  0025                     beep@delay:	
   513                           ; 0 bytes @ 0x5
   514                           
   515  0025                     AccWrite@len:	
   516                           ; 1 bytes @ 0x5
   517                           
   518  0025                     ___awdiv@sign:	
   519                           ; 1 bytes @ 0x5
   520                           
   521                           
   522                           ; 1 bytes @ 0x5
   523  0025                     	ds	1
   524  0026                     ??_AccWrite:	
   525  0026                     AccRead@len:	
   526                           ; 0 bytes @ 0x6
   527                           
   528  0026                     ___awdiv@quotient:	
   529                           ; 1 bytes @ 0x6
   530                           
   531                           
   532                           ; 2 bytes @ 0x6
   533  0026                     	ds	1
   534  0027                     ??_AccRead:	
   535  0027                     compe@a:	
   536                           ; 0 bytes @ 0x7
   537                           
   538                           
   539                           ; 1 bytes @ 0x7
   540  0027                     	ds	1
   541  0028                     AccWrite@rAdd:	
   542                           
   543                           ; 1 bytes @ 0x8
   544  0028                     	ds	1
   545  0029                     AccWrite@i:	
   546                           
   547                           ; 1 bytes @ 0x9
   548  0029                     	ds	1
   549  002A                     AccRead@rAdd:	
   550                           
   551                           ; 1 bytes @ 0xA
   552  002A                     	ds	1
   553  002B                     AccRead@i:	
   554                           
   555                           ; 1 bytes @ 0xB
   556  002B                     	ds	1
   557  002C                     ??_main:	
   558                           
   559                           ; 0 bytes @ 0xC
   560  002C                     	ds	3
   561  002F                     main@isWait:	
   562                           
   563                           ; 2 bytes @ 0xF
   564  002F                     	ds	2
   565  0031                     main@vibrateOn:	
   566                           
   567                           ; 1 bytes @ 0x11
   568  0031                     	ds	1
   569  0032                     main@isFall:	
   570                           
   571                           ; 1 bytes @ 0x12
   572  0032                     	ds	1
   573  0033                     main@acYOld:	
   574                           
   575                           ; 1 bytes @ 0x13
   576  0033                     	ds	1
   577  0034                     main@acXOld:	
   578                           
   579                           ; 1 bytes @ 0x14
   580  0034                     	ds	1
   581  0035                     main@buf:	
   582                           
   583                           ; 6 bytes @ 0x15
   584  0035                     	ds	6
   585  003B                     main@acYsum:	
   586                           
   587                           ; 2 bytes @ 0x1B
   588  003B                     	ds	2
   589  003D                     main@acXsum:	
   590                           
   591                           ; 2 bytes @ 0x1D
   592  003D                     	ds	2
   593  003F                     main@reAlertOn:	
   594                           
   595                           ; 1 bytes @ 0x1F
   596  003F                     	ds	1
   597  0040                     main@isSw:	
   598                           
   599                           ; 1 bytes @ 0x20
   600  0040                     	ds	1
   601  0041                     main@mpuOk:	
   602                           
   603                           ; 1 bytes @ 0x21
   604  0041                     	ds	1
   605  0042                     main@tmp16:	
   606                           
   607                           ; 2 bytes @ 0x22
   608  0042                     	ds	2
   609  0044                     main@tmp8:	
   610                           
   611                           ; 1 bytes @ 0x24
   612  0044                     	ds	1
   613                           
   614                           	psect	maintext
   615  000B                     __pmaintext:	
   616 ;;Data sizes: Strings 0, constant 0, data 0, bss 13, persistent 0 stack 0
   617 ;;Auto spaces:   Size  Autos    Used
   618 ;; COMMON          14      5      10
   619 ;; BANK0           80     37      45
   620 ;; BANK1           32      0       0
   621 ;;
   622 ;; Pointer list with targets:
   623 ;; ?___awdiv	int  size(1) Largest target is 0
   624 ;;
   625 ;; AccRead@dat	PTR unsigned char  size(2) Largest target is 256
   626 ;;		 -> RAM(DATA[256]), main@buf(BANK0[6]), 
   627 ;;
   628 ;; AccWrite@dat	PTR unsigned char  size(2) Largest target is 256
   629 ;;		 -> RAM(DATA[256]), 
   630 ;;
   631 ;;
   632 ;; Critical Paths under _main in COMMON
   633 ;;
   634 ;;   None.
   635 ;;
   636 ;; Critical Paths under _ISR in COMMON
   637 ;;
   638 ;;   _ISR->i1_READ_EEPROM
   639 ;;   _ISR->i1_WRITE_EEPROM
   640 ;;
   641 ;; Critical Paths under _main in BANK0
   642 ;;
   643 ;;   _main->_AccRead
   644 ;;   _AccRead->_swI2C_ReadByte
   645 ;;   _AccWrite->_swI2C_WriteByte
   646 ;;   _beep->_delay_x10ms
   647 ;;
   648 ;; Critical Paths under _ISR in BANK0
   649 ;;
   650 ;;   None.
   651 ;;
   652 ;; Critical Paths under _main in BANK1
   653 ;;
   654 ;;   None.
   655 ;;
   656 ;; Critical Paths under _ISR in BANK1
   657 ;;
   658 ;;   None.
   659 ;;
   660 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   661 ;;
   662 ;;
   663 ;;Call Graph Tables:
   664 ;;
   665 ;; ---------------------------------------------------------------------------------
   666 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   667 ;; ---------------------------------------------------------------------------------
   668 ;; (0) _main                                                26    26      0    4084
   669 ;;                                             12 BANK0     25    25      0
   670 ;;                           _sys_init
   671 ;;                          _gpio_init
   672 ;;                         _timer_init
   673 ;;                           _int_init
   674 ;;                         _swI2C_Init
   675 ;;                           _setState
   676 ;;                       _WRITE_EEPROM
   677 ;;                        _READ_EEPROM
   678 ;;                             _beepOn
   679 ;;                               _beep
   680 ;;                           _AccWrite
   681 ;;                            _AccRead
   682 ;;                            ___awdiv
   683 ;;                            _beepOff
   684 ;;                        _delay_x10ms
   685 ;;                              _compe
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (1) _AccRead                                              8     5      3     532
   688 ;;                                              4 BANK0      8     5      3
   689 ;;                        _swI2C_Start
   690 ;;                    _swI2C_WriteByte
   691 ;;                     _swI2C_ReadByte
   692 ;;                         _swI2C_Stop
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (1) _AccWrite                                             7     4      3     300
   695 ;;                                              3 BANK0      7     4      3
   696 ;;                        _swI2C_Start
   697 ;;                    _swI2C_WriteByte
   698 ;;                         _swI2C_Stop
   699 ;; ---------------------------------------------------------------------------------
   700 ;; (2) _swI2C_ReadByte                                       4     4      0     170
   701 ;;                                              0 BANK0      4     4      0
   702 ;; ---------------------------------------------------------------------------------
   703 ;; (2) _swI2C_WriteByte                                      3     3      0     139
   704 ;;                                              0 BANK0      3     3      0
   705 ;; ---------------------------------------------------------------------------------
   706 ;; (2) _swI2C_Stop                                           1     1      0       0
   707 ;;                                              0 BANK0      1     1      0
   708 ;; ---------------------------------------------------------------------------------
   709 ;; (2) _swI2C_Start                                          1     1      0       0
   710 ;;                                              0 BANK0      1     1      0
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (1) _swI2C_Init                                           1     1      0       0
   713 ;;                                              0 BANK0      1     1      0
   714 ;; ---------------------------------------------------------------------------------
   715 ;; (1) _sys_init                                             0     0      0       0
   716 ;; ---------------------------------------------------------------------------------
   717 ;; (1) _beep                                                 2     1      1     130
   718 ;;                                              4 BANK0      2     1      1
   719 ;;                        _delay_x10ms
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (1) ___awdiv                                              8     4      4     445
   722 ;;                                              0 BANK0      8     4      4
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (1) _int_init                                             1     1      0       0
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (1) _timer_init                                           0     0      0       0
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (1) _gpio_init                                            0     0      0       0
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (1) _compe                                                8     6      2     372
   731 ;;                                              0 BANK0      8     6      2
   732 ;; ---------------------------------------------------------------------------------
   733 ;; (1) _setState                                             3     1      2      62
   734 ;;                                              0 BANK0      3     1      2
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (1) _beepOn                                               0     0      0       0
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (1) _beepOff                                              0     0      0       0
   739 ;; ---------------------------------------------------------------------------------
   740 ;; (1) _delay_x10ms                                          4     2      2      68
   741 ;;                                              0 BANK0      4     2      2
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (1) _WRITE_EEPROM                                         2     1      1      62
   744 ;;                                              0 BANK0      2     1      1
   745 ;; ---------------------------------------------------------------------------------
   746 ;; (1) _READ_EEPROM                                          2     2      0      65
   747 ;;                                              0 BANK0      2     2      0
   748 ;; ---------------------------------------------------------------------------------
   749 ;; Estimated maximum stack depth 2
   750 ;; ---------------------------------------------------------------------------------
   751 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   752 ;; ---------------------------------------------------------------------------------
   753 ;; (3) _ISR                                                  4     4      0     317
   754 ;;                                              2 COMMON     3     3      0
   755 ;;                      i1_READ_EEPROM
   756 ;;                     i1_WRITE_EEPROM
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (4) i1_WRITE_EEPROM                                       2     1      1     146
   759 ;;                                              0 COMMON     2     1      1
   760 ;; ---------------------------------------------------------------------------------
   761 ;; (4) i1_READ_EEPROM                                        2     2      0     148
   762 ;;                                              0 COMMON     2     2      0
   763 ;; ---------------------------------------------------------------------------------
   764 ;; Estimated maximum stack depth 4
   765 ;; ---------------------------------------------------------------------------------
   766 ;; Call Graph Graphs:
   767 ;; _main (ROOT)
   768 ;;   _sys_init
   769 ;;   _gpio_init
   770 ;;   _timer_init
   771 ;;   _int_init
   772 ;;   _swI2C_Init
   773 ;;   _setState
   774 ;;   _WRITE_EEPROM
   775 ;;   _READ_EEPROM
   776 ;;   _beepOn
   777 ;;   _beep
   778 ;;     _delay_x10ms
   779 ;;   _AccWrite
   780 ;;     _swI2C_Start
   781 ;;     _swI2C_WriteByte
   782 ;;     _swI2C_Stop
   783 ;;   _AccRead
   784 ;;     _swI2C_Start
   785 ;;     _swI2C_WriteByte
   786 ;;     _swI2C_ReadByte
   787 ;;     _swI2C_Stop
   788 ;;   ___awdiv
   789 ;;   _beepOff
   790 ;;   _delay_x10ms
   791 ;;   _compe
   792 ;;
   793 ;; _ISR (ROOT)
   794 ;;   i1_READ_EEPROM
   795 ;;   i1_WRITE_EEPROM
   796 ;;
   797 ;; Address spaces:
   798 ;;Name               Size   Autos  Total    Cost      Usage
   799 ;;BITCOMMON            E      0       0       0        0.0%
   800 ;;EEDATA             100      0       0       0        0.0%
   801 ;;NULL                 0      0       0       0        0.0%
   802 ;;CODE                 0      0       0       0        0.0%
   803 ;;COMMON               E      5       A       1       71.4%
   804 ;;BITSFR0              0      0       0       1        0.0%
   805 ;;SFR0                 0      0       0       1        0.0%
   806 ;;BITSFR1              0      0       0       2        0.0%
   807 ;;SFR1                 0      0       0       2        0.0%
   808 ;;STACK                0      0       6       2        0.0%
   809 ;;BITBANK0            50      0       0       3        0.0%
   810 ;;BANK0               50     25      2D       4       56.3%
   811 ;;BANK1               20      0       0       5        0.0%
   812 ;;ABS                  0      0      37       6        0.0%
   813 ;;BITBANK1            20      0       0       7        0.0%
   814 ;;DATA                 0      0      3D       8        0.0%
   815                           
   816                           
   817 ;; *************** function _main *****************
   818 ;; Defined at:
   819 ;;		line 243 in file "smartkey.C"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  buf             6   21[BANK0 ] char [6]
   824 ;;  tmp16           2   34[BANK0 ] unsigned int 
   825 ;;  acXsum          2   29[BANK0 ] int 
   826 ;;  acYsum          2   27[BANK0 ] int 
   827 ;;  isWait          2   15[BANK0 ] unsigned int 
   828 ;;  tmp8            1   36[BANK0 ] unsigned char 
   829 ;;  mpuOk           1   33[BANK0 ] unsigned char 
   830 ;;  isSw            1   32[BANK0 ] unsigned char 
   831 ;;  reAlertOn       1   31[BANK0 ] unsigned char 
   832 ;;  acXOld          1   20[BANK0 ] char 
   833 ;;  acYOld          1   19[BANK0 ] char 
   834 ;;  isFall          1   18[BANK0 ] unsigned char 
   835 ;;  vibrateOn       1   17[BANK0 ] unsigned char 
   836 ;;  accSet          1    0        unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;		None               void
   839 ;; Registers used:
   840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   841 ;; Tracked objects:
   842 ;;		On entry : 17F/0
   843 ;;		On exit  : 20/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1
   846 ;;      Params:         0       0       0
   847 ;;      Locals:         0      22       0
   848 ;;      Temps:          0       3       0
   849 ;;      Totals:         0      25       0
   850 ;;Total ram usage:       25 bytes
   851 ;; Hardware stack levels required when called:    4
   852 ;; This function calls:
   853 ;;		_sys_init
   854 ;;		_gpio_init
   855 ;;		_timer_init
   856 ;;		_int_init
   857 ;;		_swI2C_Init
   858 ;;		_setState
   859 ;;		_WRITE_EEPROM
   860 ;;		_READ_EEPROM
   861 ;;		_beepOn
   862 ;;		_beep
   863 ;;		_AccWrite
   864 ;;		_AccRead
   865 ;;		___awdiv
   866 ;;		_beepOff
   867 ;;		_delay_x10ms
   868 ;;		_compe
   869 ;; This function is called by:
   870 ;;		Startup code after reset
   871 ;; This function uses a non-reentrant model
   872 ;;
   873  000B                     _main:	
   874                           
   875                           ;smartkey.C: 251: unsigned char reAlertOn=0,tmp8,isSw=0,isFall=0,mpuOk=0,vibrateOn=0,acc
      +                          Set=0;
   876                           
   877                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   878  000B  01BF               	clrf	main@reAlertOn
   879  000C  01C0               	clrf	main@isSw
   880  000D  01B2               	clrf	main@isFall
   881  000E  01B1               	clrf	main@vibrateOn
   882                           
   883                           ;smartkey.C: 252: unsigned int isWait =0;
   884  000F  01AF               	clrf	main@isWait
   885  0010  01B0               	clrf	main@isWait+1
   886                           
   887                           ;smartkey.C: 253: signed int acYsum=0,acXsum=0;
   888  0011  01BB               	clrf	main@acYsum
   889  0012  01BC               	clrf	main@acYsum+1
   890  0013  01BD               	clrf	main@acXsum
   891  0014  01BE               	clrf	main@acXsum+1
   892                           
   893                           ;smartkey.C: 254: unsigned int tmp16=0;
   894  0015  01C2               	clrf	main@tmp16
   895  0016  01C3               	clrf	main@tmp16+1
   896  0017  0064               	clrwdt	;#
   897                           
   898                           ;smartkey.C: 260: sys_init();
   899  0018  26DB               	fcall	_sys_init
   900                           
   901                           ;smartkey.C: 261: gpio_init();
   902  0019  265A               	fcall	_gpio_init
   903                           
   904                           ;smartkey.C: 262: timer_init();
   905  001A  2696               	fcall	_timer_init
   906                           
   907                           ;smartkey.C: 263: int_init();
   908  001B  25F6               	fcall	_int_init
   909                           
   910                           ;smartkey.C: 266: _delay((unsigned long)((100)*(4000000/4000.0)));
   911  001C  3082               	movlw	130
   912  001D  00AD               	movwf	??_main+1
   913  001E  30DD               	movlw	221
   914  001F  00AC               	movwf	??_main
   915  0020                     u3507:	
   916  0020  0BAC               	decfsz	??_main,f
   917  0021  2820               	goto	u3507
   918  0022  0BAD               	decfsz	??_main+1,f
   919  0023  2820               	goto	u3507
   920  0024  2825               	nop2
   921                           
   922                           ;smartkey.C: 270: PAIE = 1;
   923  0025  158B               	bsf	11,3
   924                           
   925                           ;smartkey.C: 272: RegStatus = 0;
   926  0026  1283               	bcf	3,5	;RP0=0, select bank0
   927  0027  01C9               	clrf	_RegStatus
   928                           
   929                           ;smartkey.C: 274: swI2C_Init();
   930  0028  25D7               	fcall	_swI2C_Init
   931  0029  3000               	movlw	0
   932                           
   933                           ;smartkey.C: 277: setState(0,0);
   934  002A  1283               	bcf	3,5	;RP0=0, select bank0
   935  002B  01A0               	clrf	?_setState
   936  002C  01A1               	clrf	?_setState+1
   937  002D  26CF               	fcall	_setState
   938                           
   939                           ;smartkey.C: 279: WRITE_EEPROM(0xFF,0xAA);
   940  002E  30AA               	movlw	170
   941  002F  00A0               	movwf	?_WRITE_EEPROM
   942  0030  30FF               	movlw	255
   943  0031  2611               	fcall	_WRITE_EEPROM
   944                           
   945                           ;smartkey.C: 280: WRITE_EEPROM(0xFF,0xAA);
   946  0032  30AA               	movlw	170
   947  0033  1283               	bcf	3,5	;RP0=0, select bank0
   948  0034  00A0               	movwf	?_WRITE_EEPROM
   949  0035  30FF               	movlw	255
   950  0036  2611               	fcall	_WRITE_EEPROM
   951                           
   952                           ;smartkey.C: 283: _delay((unsigned long)((200)*(4000000/4000.0)));
   953  0037  3002               	movlw	2
   954  0038  1283               	bcf	3,5	;RP0=0, select bank0
   955  0039  00AE               	movwf	??_main+2
   956  003A  3004               	movlw	4
   957  003B  00AD               	movwf	??_main+1
   958  003C  30BA               	movlw	186
   959  003D  00AC               	movwf	??_main
   960  003E                     u3517:	
   961  003E  0BAC               	decfsz	??_main,f
   962  003F  283E               	goto	u3517
   963  0040  0BAD               	decfsz	??_main+1,f
   964  0041  283E               	goto	u3517
   965  0042  0BAE               	decfsz	??_main+2,f
   966  0043  283E               	goto	u3517
   967  0044  0064               	clrwdt
   968                           
   969                           ;smartkey.C: 285: tmp8= READ_EEPROM(0x08);
   970  0045  3008               	movlw	8
   971  0046  26C2               	fcall	_READ_EEPROM
   972  0047  00C4               	movwf	main@tmp8
   973                           
   974                           ;smartkey.C: 286: if(tmp8==0xff) {WRITE_EEPROM(0x08,0);_delay((unsigned long)((2)*(40000
      +                          00/4000.0)));}
   975  0048  3AFF               	xorlw	255
   976  0049  1D03               	skipz
   977  004A  2858               	goto	l6706
   978  004B  3008               	movlw	8
   979  004C  01A0               	clrf	?_WRITE_EEPROM
   980  004D  2611               	fcall	_WRITE_EEPROM
   981  004E  3003               	movlw	3
   982  004F  1283               	bcf	3,5	;RP0=0, select bank0
   983  0050  00AD               	movwf	??_main+1
   984  0051  3097               	movlw	151
   985  0052  00AC               	movwf	??_main
   986  0053                     u3527:	
   987  0053  0BAC               	decfsz	??_main,f
   988  0054  2853               	goto	u3527
   989  0055  0BAD               	decfsz	??_main+1,f
   990  0056  2853               	goto	u3527
   991  0057  2858               	nop2
   992  0058                     l6706:	
   993                           
   994                           ;smartkey.C: 288: if(tmp8==0xcc){
   995  0058  1283               	bcf	3,5	;RP0=0, select bank0
   996  0059  0844               	movf	main@tmp8,w
   997  005A  3ACC               	xorlw	204
   998  005B  1D03               	skipz
   999  005C  2873               	goto	l6720
  1000  005D  3008               	movlw	8
  1001                           
  1002                           ;smartkey.C: 289: RegStatus &=~(0x20);
  1003  005E  12C9               	bcf	_RegStatus,5
  1004                           
  1005                           ;smartkey.C: 290: setState(3,1800);
  1006  005F  00A0               	movwf	?_setState
  1007  0060  3007               	movlw	7
  1008  0061  00A1               	movwf	?_setState+1
  1009  0062  3003               	movlw	3
  1010  0063  26CF               	fcall	_setState
  1011                           
  1012                           ;smartkey.C: 291: mtOldState = 1;
  1013  0064  01CC               	clrf	_mtOldState
  1014  0065  0ACC               	incf	_mtOldState,f
  1015                           
  1016                           ;smartkey.C: 292: cntTmp = timeTick+50;
  1017  0066  0871               	movf	_timeTick+1,w
  1018  0067  00C6               	movwf	_cntTmp+1
  1019  0068  0870               	movf	_timeTick,w
  1020  0069  00C5               	movwf	_cntTmp
  1021  006A  3032               	movlw	50
  1022  006B  07C5               	addwf	_cntTmp,f
  1023  006C  1803               	skipnc
  1024  006D  0AC6               	incf	_cntTmp+1,f
  1025                           
  1026                           ;smartkey.C: 293: PR2L =12;
  1027  006E  300C               	movlw	12
  1028  006F  1683               	bsf	3,5	;RP0=1, select bank1
  1029  0070  0091               	movwf	17	;volatile
  1030                           
  1031                           ;smartkey.C: 294: beepOn();
  1032  0071  26F0               	fcall	_beepOn
  1033                           
  1034                           ;smartkey.C: 295: } else {
  1035  0072  287A               	goto	l6724
  1036  0073                     l6720:	
  1037                           
  1038                           ;smartkey.C: 296: setState(2,400);
  1039  0073  3090               	movlw	144
  1040  0074  00A0               	movwf	?_setState
  1041  0075  3001               	movlw	1
  1042  0076  00A1               	movwf	?_setState+1
  1043  0077  3002               	movlw	2
  1044  0078  26CF               	fcall	_setState
  1045                           
  1046                           ;smartkey.C: 298: mtOldState = 0;
  1047  0079  01CC               	clrf	_mtOldState
  1048  007A                     l6724:	
  1049                           
  1050                           ;smartkey.C: 300: }
  1051                           ;smartkey.C: 303: tmp8 = READ_EEPROM(0x40);
  1052  007A  3040               	movlw	64
  1053  007B  26C2               	fcall	_READ_EEPROM
  1054  007C  00C4               	movwf	main@tmp8
  1055                           
  1056                           ;smartkey.C: 304: if(tmp8==8){
  1057  007D  3A08               	xorlw	8
  1058  007E  1D03               	skipz
  1059  007F  28A4               	goto	l6744
  1060                           
  1061                           ;smartkey.C: 305: tmp8= READ_EEPROM(0x41);
  1062  0080  3041               	movlw	65
  1063  0081  26C2               	fcall	_READ_EEPROM
  1064  0082  00C4               	movwf	main@tmp8
  1065  0083  3019               	movlw	25
  1066                           
  1067                           ;smartkey.C: 306: beep(25,1);
  1068  0084  01A4               	clrf	?_beep
  1069  0085  0AA4               	incf	?_beep,f
  1070  0086  2644               	fcall	_beep
  1071                           
  1072                           ;smartkey.C: 307: if((tmp8==1)||(tmp8==0xff)){
  1073  0087  0344               	decf	main@tmp8,w
  1074  0088  1903               	skipnz
  1075  0089  288E               	goto	l6736
  1076  008A  0844               	movf	main@tmp8,w
  1077  008B  3AFF               	xorlw	255
  1078  008C  1D03               	skipz
  1079  008D  2891               	goto	l6738
  1080  008E                     l6736:	
  1081  008E  3041               	movlw	65
  1082                           
  1083                           ;smartkey.C: 308: WRITE_EEPROM(0x41,0);
  1084  008F  01A0               	clrf	?_WRITE_EEPROM
  1085  0090  2894               	goto	L1
  1086  0091                     l6738:	
  1087                           ;smartkey.C: 309: }
  1088                           
  1089  0091  3041               	movlw	65
  1090                           
  1091                           ;smartkey.C: 310: else {
  1092                           ;smartkey.C: 311: WRITE_EEPROM(0x41,0x1);
  1093  0092  01A0               	clrf	?_WRITE_EEPROM
  1094  0093  0AA0               	incf	?_WRITE_EEPROM,f
  1095  0094                     L1:	
  1096  0094  2611               	fcall	_WRITE_EEPROM
  1097  0095  3040               	movlw	64
  1098                           
  1099                           ;smartkey.C: 313: }
  1100                           ;smartkey.C: 314: WRITE_EEPROM(0x40,0);
  1101  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0097  01A0               	clrf	?_WRITE_EEPROM
  1103  0098  2611               	fcall	_WRITE_EEPROM
  1104                           
  1105                           ;smartkey.C: 316: _delay((unsigned long)((100)*(4000000/4000.0)));
  1106  0099  3082               	movlw	130
  1107  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1108  009B  00AD               	movwf	??_main+1
  1109  009C  30DD               	movlw	221
  1110  009D  00AC               	movwf	??_main
  1111  009E                     u3537:	
  1112  009E  0BAC               	decfsz	??_main,f
  1113  009F  289E               	goto	u3537
  1114  00A0  0BAD               	decfsz	??_main+1,f
  1115  00A1  289E               	goto	u3537
  1116  00A2  28A3               	nop2
  1117                           
  1118                           ;smartkey.C: 317: } else if(tmp8==0xff) WRITE_EEPROM(0x40,0);
  1119  00A3  28AB               	goto	l6748
  1120  00A4                     l6744:	
  1121  00A4  0844               	movf	main@tmp8,w
  1122  00A5  3AFF               	xorlw	255
  1123  00A6  1D03               	skipz
  1124  00A7  28AB               	goto	l6748
  1125  00A8  3040               	movlw	64
  1126  00A9  01A0               	clrf	?_WRITE_EEPROM
  1127  00AA  2611               	fcall	_WRITE_EEPROM
  1128  00AB                     l6748:	
  1129                           
  1130                           ;smartkey.C: 320: tmp8 = READ_EEPROM(0x41);
  1131  00AB  3041               	movlw	65
  1132  00AC  26C2               	fcall	_READ_EEPROM
  1133  00AD  00C4               	movwf	main@tmp8
  1134                           
  1135                           ;smartkey.C: 321: if(tmp8==1){
  1136  00AE  0344               	decf	main@tmp8,w
  1137  00AF  1D03               	skipz
  1138  00B0  28CD               	goto	l6758
  1139                           
  1140                           ;smartkey.C: 322: RC0 =1;RC1 =1;
  1141  00B1  1407               	bsf	7,0
  1142  00B2  1487               	bsf	7,1
  1143  00B3                     l6754:	
  1144                           
  1145                           ;smartkey.C: 324: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1146  00B3  3006               	movlw	6
  1147  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1148  00B5  00AE               	movwf	??_main+2
  1149  00B6  3013               	movlw	19
  1150  00B7  00AD               	movwf	??_main+1
  1151  00B8  30B1               	movlw	177
  1152  00B9  00AC               	movwf	??_main
  1153  00BA                     u3547:	
  1154  00BA  0BAC               	decfsz	??_main,f
  1155  00BB  28BA               	goto	u3547
  1156  00BC  0BAD               	decfsz	??_main+1,f
  1157  00BD  28BA               	goto	u3547
  1158  00BE  0BAE               	decfsz	??_main+2,f
  1159  00BF  28BA               	goto	u3547
  1160  00C0  28C1               	nop2
  1161                           
  1162                           ;smartkey.C: 325: if(timeTick >300) WRITE_EEPROM(0x40,0);
  1163  00C1  3001               	movlw	1
  1164  00C2  0271               	subwf	_timeTick+1,w
  1165  00C3  302D               	movlw	45
  1166  00C4  1903               	skipnz
  1167  00C5  0270               	subwf	_timeTick,w
  1168  00C6  1C03               	skipc
  1169  00C7  28B3               	goto	l6754
  1170  00C8  3040               	movlw	64
  1171  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1172  00CA  01A0               	clrf	?_WRITE_EEPROM
  1173  00CB  2611               	fcall	_WRITE_EEPROM
  1174  00CC  28B3               	goto	l6754
  1175  00CD                     l6758:	
  1176                           
  1177                           ;smartkey.C: 326: }
  1178                           ;smartkey.C: 327: }
  1179                           ;smartkey.C: 330: buf[0] = 0x28;
  1180  00CD  3028               	movlw	40
  1181  00CE  00B5               	movwf	main@buf
  1182                           
  1183                           ;smartkey.C: 331: buf[1] = 0x87;
  1184  00CF  3087               	movlw	-121
  1185  00D0  00B6               	movwf	main@buf+1
  1186                           
  1187                           ;smartkey.C: 332: if(AccWrite(0x6b,(unsigned char)buf,2)==0)
  1188  00D1  3035               	movlw	main@buf& (0+255)
  1189  00D2  00AC               	movwf	??_main
  1190  00D3  01AD               	clrf	??_main+1
  1191  00D4  00A3               	movwf	?_AccWrite
  1192  00D5  082D               	movf	??_main+1,w
  1193  00D6  00A4               	movwf	?_AccWrite+1
  1194  00D7  3002               	movlw	2
  1195  00D8  00A5               	movwf	?_AccWrite+2
  1196  00D9  306B               	movlw	107
  1197  00DA  25AF               	fcall	_AccWrite
  1198  00DB  3800               	iorlw	0
  1199                           
  1200                           ;smartkey.C: 333: mpuOk =1;
  1201  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1202  00DD  1D03               	skipz
  1203  00DE  28E2               	goto	L8
  1204  00DF  01C1               	clrf	main@mpuOk
  1205  00E0  0AC1               	incf	main@mpuOk,f
  1206  00E1  28E3               	goto	l6766
  1207  00E2                     L8:	
  1208                           ;smartkey.C: 334: else
  1209                           ;smartkey.C: 335: mpuOk =0;
  1210                           
  1211  00E2  01C1               	clrf	main@mpuOk
  1212  00E3                     l6766:	
  1213                           
  1214                           ;smartkey.C: 337: _delay((unsigned long)((100)*(4000000/4000.0)));
  1215  00E3  3082               	movlw	130
  1216  00E4  00AD               	movwf	??_main+1
  1217  00E5  30DD               	movlw	221
  1218  00E6  00AC               	movwf	??_main
  1219  00E7                     u3557:	
  1220  00E7  0BAC               	decfsz	??_main,f
  1221  00E8  28E7               	goto	u3557
  1222  00E9  0BAD               	decfsz	??_main+1,f
  1223  00EA  28E7               	goto	u3557
  1224  00EB  28EC               	nop2
  1225                           
  1226                           ;smartkey.C: 339: if(mpuOk ==0){beep(10,2);}
  1227  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1228  00ED  08C1               	movf	main@mpuOk,f
  1229  00EE  1D03               	skipz
  1230  00EF  28F4               	goto	l6772
  1231  00F0  3002               	movlw	2
  1232  00F1  00A4               	movwf	?_beep
  1233  00F2  300A               	movlw	10
  1234  00F3  2644               	fcall	_beep
  1235  00F4                     l6772:	
  1236                           
  1237                           ;smartkey.C: 345: tmp8= READ_EEPROM(0x40);
  1238  00F4  3040               	movlw	64
  1239  00F5  26C2               	fcall	_READ_EEPROM
  1240  00F6  00C4               	movwf	main@tmp8
  1241                           
  1242                           ;smartkey.C: 346: if(tmp8==6 && mpuOk ==1)
  1243  00F7  3A06               	xorlw	6
  1244  00F8  1D03               	skipz
  1245  00F9  29A7               	goto	l6812
  1246  00FA  0B41               	decfsz	main@mpuOk,w
  1247  00FB  29A7               	goto	l6812
  1248  00FC  3003               	movlw	3
  1249                           
  1250                           ;smartkey.C: 347: {
  1251                           ;smartkey.C: 348: tmp8=0; beep(10,3);
  1252  00FD  01C4               	clrf	main@tmp8
  1253  00FE  00A4               	movwf	?_beep
  1254  00FF  300A               	movlw	10
  1255  0100  2644               	fcall	_beep
  1256                           
  1257                           ;smartkey.C: 349: while((RA2 )&&(tmp8<11))
  1258  0101  293D               	goto	l6790
  1259  0102                     l6782:	
  1260                           
  1261                           ;smartkey.C: 350: {
  1262                           ;smartkey.C: 351: if(AccRead(0x3b,(unsigned char)buf,6)==0){
  1263  0102  3035               	movlw	main@buf& (0+255)
  1264  0103  00AC               	movwf	??_main
  1265  0104  01AD               	clrf	??_main+1
  1266  0105  00A4               	movwf	?_AccRead
  1267  0106  082D               	movf	??_main+1,w
  1268  0107  00A5               	movwf	?_AccRead+1
  1269  0108  3006               	movlw	6
  1270  0109  00A6               	movwf	?_AccRead+2
  1271  010A  303B               	movlw	59
  1272  010B  2574               	fcall	_AccRead
  1273  010C  3800               	iorlw	0
  1274  010D  1D03               	skipz
  1275  010E  292F               	goto	l6788
  1276                           
  1277                           ;smartkey.C: 353: acXsum += buf[0];
  1278  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0110  0835               	movf	main@buf,w
  1280  0111  00AC               	movwf	??_main
  1281  0112  01AD               	clrf	??_main+1
  1282  0113  1BAC               	btfsc	??_main,7
  1283  0114  03AD               	decf	??_main+1,f
  1284  0115  07BD               	addwf	main@acXsum,f
  1285  0116  1803               	skipnc
  1286  0117  0ABE               	incf	main@acXsum+1,f
  1287  0118  082D               	movf	??_main+1,w
  1288  0119  07BE               	addwf	main@acXsum+1,f
  1289                           
  1290                           ;smartkey.C: 354: acYsum += buf[2];
  1291  011A  0837               	movf	main@buf+2,w
  1292  011B  00AC               	movwf	??_main
  1293  011C  01AD               	clrf	??_main+1
  1294  011D  1BAC               	btfsc	??_main,7
  1295  011E  03AD               	decf	??_main+1,f
  1296  011F  07BB               	addwf	main@acYsum,f
  1297  0120  1803               	skipnc
  1298  0121  0ABC               	incf	main@acYsum+1,f
  1299  0122  082D               	movf	??_main+1,w
  1300  0123  07BC               	addwf	main@acYsum+1,f
  1301                           
  1302                           ;smartkey.C: 355: tmp16 = (signed int)tmp16 + buf[4];
  1303  0124  0839               	movf	main@buf+4,w
  1304  0125  00AC               	movwf	??_main
  1305  0126  01AD               	clrf	??_main+1
  1306  0127  1BAC               	btfsc	??_main,7
  1307  0128  03AD               	decf	??_main+1,f
  1308  0129  07C2               	addwf	main@tmp16,f
  1309  012A  1803               	skipnc
  1310  012B  0AC3               	incf	main@tmp16+1,f
  1311  012C  082D               	movf	??_main+1,w
  1312  012D  07C3               	addwf	main@tmp16+1,f
  1313                           
  1314                           ;smartkey.C: 356: tmp8++;
  1315  012E  0AC4               	incf	main@tmp8,f
  1316  012F                     l6788:	
  1317                           
  1318                           ;smartkey.C: 357: }
  1319                           ;smartkey.C: 358: _delay((unsigned long)((500)*(4000000/4000.0)));
  1320  012F  3003               	movlw	3
  1321  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0131  00AE               	movwf	??_main+2
  1323  0132  308A               	movlw	138
  1324  0133  00AD               	movwf	??_main+1
  1325  0134  3056               	movlw	86
  1326  0135  00AC               	movwf	??_main
  1327  0136                     u3567:	
  1328  0136  0BAC               	decfsz	??_main,f
  1329  0137  2936               	goto	u3567
  1330  0138  0BAD               	decfsz	??_main+1,f
  1331  0139  2936               	goto	u3567
  1332  013A  0BAE               	decfsz	??_main+2,f
  1333  013B  2936               	goto	u3567
  1334  013C  293D               	nop2
  1335  013D                     l6790:	
  1336  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1337  013E  1D05               	btfss	5,2
  1338  013F  2944               	goto	l6794
  1339  0140  300B               	movlw	11
  1340  0141  0244               	subwf	main@tmp8,w
  1341  0142  1C03               	skipc
  1342  0143  2902               	goto	l6782
  1343  0144                     l6794:	
  1344                           
  1345                           ;smartkey.C: 360: }
  1346                           ;smartkey.C: 362: if(tmp8==11){
  1347  0144  0844               	movf	main@tmp8,w
  1348  0145  3A0B               	xorlw	11
  1349  0146  1D03               	skipz
  1350  0147  299F               	goto	l6808
  1351                           
  1352                           ;smartkey.C: 363: acXsum =acXsum/10;
  1353  0148  300A               	movlw	10
  1354  0149  00A0               	movwf	?___awdiv
  1355  014A  01A1               	clrf	?___awdiv+1
  1356  014B  083E               	movf	main@acXsum+1,w
  1357  014C  00A3               	movwf	?___awdiv+3
  1358  014D  083D               	movf	main@acXsum,w
  1359  014E  00A2               	movwf	?___awdiv+2
  1360  014F  246E               	fcall	___awdiv
  1361  0150  0821               	movf	?___awdiv+1,w
  1362  0151  00BE               	movwf	main@acXsum+1
  1363  0152  0820               	movf	?___awdiv,w
  1364  0153  00BD               	movwf	main@acXsum
  1365                           
  1366                           ;smartkey.C: 364: acYsum = acYsum/10;
  1367  0154  300A               	movlw	10
  1368  0155  00A0               	movwf	?___awdiv
  1369  0156  01A1               	clrf	?___awdiv+1
  1370  0157  083C               	movf	main@acYsum+1,w
  1371  0158  00A3               	movwf	?___awdiv+3
  1372  0159  083B               	movf	main@acYsum,w
  1373  015A  00A2               	movwf	?___awdiv+2
  1374  015B  246E               	fcall	___awdiv
  1375  015C  0821               	movf	?___awdiv+1,w
  1376  015D  00BC               	movwf	main@acYsum+1
  1377  015E  0820               	movf	?___awdiv,w
  1378  015F  00BB               	movwf	main@acYsum
  1379                           
  1380                           ;smartkey.C: 365: tmp16 = (signed int)tmp16/10;
  1381  0160  300A               	movlw	10
  1382  0161  00A0               	movwf	?___awdiv
  1383  0162  01A1               	clrf	?___awdiv+1
  1384  0163  0843               	movf	main@tmp16+1,w
  1385  0164  00A3               	movwf	?___awdiv+3
  1386  0165  0842               	movf	main@tmp16,w
  1387  0166  00A2               	movwf	?___awdiv+2
  1388  0167  246E               	fcall	___awdiv
  1389  0168  0821               	movf	?___awdiv+1,w
  1390  0169  00C3               	movwf	main@tmp16+1
  1391  016A  0820               	movf	?___awdiv,w
  1392  016B  00C2               	movwf	main@tmp16
  1393                           
  1394                           ;smartkey.C: 367: if(((signed int)tmp16 > (-31)) && ((signed int)tmp16 < 31)){
  1395  016C  0843               	movf	main@tmp16+1,w
  1396  016D  3A80               	xorlw	128
  1397  016E  00FF               	movwf	127
  1398  016F  307F               	movlw	127
  1399  0170  027F               	subwf	127,w
  1400  0171  1D03               	skipz
  1401  0172  2975               	goto	u3005
  1402  0173  30E2               	movlw	226
  1403  0174  0242               	subwf	main@tmp16,w
  1404  0175                     u3005:	
  1405  0175  1C03               	skipc
  1406  0176  2986               	goto	l6804
  1407  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0178  0843               	movf	main@tmp16+1,w
  1409  0179  3A80               	xorlw	128
  1410  017A  00FF               	movwf	127
  1411  017B  3080               	movlw	128
  1412  017C  027F               	subwf	127,w
  1413  017D  1D03               	skipz
  1414  017E  2981               	goto	u3015
  1415  017F  301F               	movlw	31
  1416  0180  0242               	subwf	main@tmp16,w
  1417  0181                     u3015:	
  1418  0181  1803               	skipnc
  1419  0182  2986               	goto	l6804
  1420                           
  1421                           ;smartkey.C: 368: beep(10,2);
  1422  0183  3002               	movlw	2
  1423  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0185  29A0               	goto	L2
  1425  0186                     l6804:	
  1426                           ;smartkey.C: 369: }
  1427                           
  1428                           
  1429                           ;smartkey.C: 370: else
  1430                           ;smartkey.C: 372: {
  1431                           ;smartkey.C: 373: beep(10,3);
  1432  0186  3003               	movlw	3
  1433  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0188  00A4               	movwf	?_beep
  1435  0189  300A               	movlw	10
  1436  018A  2644               	fcall	_beep
  1437                           
  1438                           ;smartkey.C: 374: WRITE_EEPROM(0x10,(unsigned char)acXsum);
  1439  018B  083D               	movf	main@acXsum,w
  1440  018C  00A0               	movwf	?_WRITE_EEPROM
  1441  018D  3010               	movlw	16
  1442  018E  2611               	fcall	_WRITE_EEPROM
  1443                           
  1444                           ;smartkey.C: 375: WRITE_EEPROM(0x11,(unsigned char)acYsum);
  1445  018F  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0190  083B               	movf	main@acYsum,w
  1447  0191  00A0               	movwf	?_WRITE_EEPROM
  1448  0192  3011               	movlw	17
  1449  0193  2611               	fcall	_WRITE_EEPROM
  1450                           
  1451                           ;smartkey.C: 376: _delay((unsigned long)((100)*(4000000/4000.0)));
  1452  0194  3082               	movlw	130
  1453  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0196  00AD               	movwf	??_main+1
  1455  0197  30DD               	movlw	221
  1456  0198  00AC               	movwf	??_main
  1457  0199                     u3577:	
  1458  0199  0BAC               	decfsz	??_main,f
  1459  019A  2999               	goto	u3577
  1460  019B  0BAD               	decfsz	??_main+1,f
  1461  019C  2999               	goto	u3577
  1462  019D  299E               	nop2
  1463  019E  29A3               	goto	l926
  1464  019F                     l6808:	
  1465                           
  1466                           ;smartkey.C: 380: beep(10,2);
  1467  019F  3002               	movlw	2
  1468  01A0                     L2:	
  1469  01A0  00A4               	movwf	?_beep
  1470  01A1  300A               	movlw	10
  1471  01A2  2644               	fcall	_beep
  1472  01A3                     l926:	
  1473  01A3  3040               	movlw	64
  1474                           
  1475                           ;smartkey.C: 381: }
  1476                           ;smartkey.C: 382: WRITE_EEPROM(0x40,0);
  1477  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1478  01A5  01A0               	clrf	?_WRITE_EEPROM
  1479  01A6  2611               	fcall	_WRITE_EEPROM
  1480  01A7                     l6812:	
  1481                           
  1482                           ;smartkey.C: 384: }
  1483                           ;smartkey.C: 386: acXsum = (signed char)READ_EEPROM(0x10);
  1484  01A7  3010               	movlw	16
  1485  01A8  26C2               	fcall	_READ_EEPROM
  1486  01A9  00BD               	movwf	main@acXsum
  1487  01AA  01BE               	clrf	main@acXsum+1
  1488  01AB  1BBD               	btfsc	main@acXsum,7
  1489  01AC  03BE               	decf	main@acXsum+1,f
  1490                           
  1491                           ;smartkey.C: 387: acYsum = (signed char)READ_EEPROM(0x11);
  1492  01AD  3011               	movlw	17
  1493  01AE  26C2               	fcall	_READ_EEPROM
  1494  01AF  00BB               	movwf	main@acYsum
  1495  01B0  01BC               	clrf	main@acYsum+1
  1496  01B1  1BBB               	btfsc	main@acYsum,7
  1497  01B2  03BC               	decf	main@acYsum+1,f
  1498                           
  1499                           ;smartkey.C: 389: timeTick = 0;
  1500  01B3  01F0               	clrf	_timeTick
  1501  01B4  01F1               	clrf	_timeTick+1
  1502  01B5                     l6818:	
  1503                           
  1504                           ;smartkey.C: 398: if(mode_chek == 0)
  1505  01B5  08F3               	movf	_mode_chek,f
  1506  01B6  1903               	btfsc	3,2
  1507                           
  1508                           ;smartkey.C: 399: {
  1509                           ;smartkey.C: 401: if(RegStatus & 0x80)
  1510  01B7  1FC9               	btfss	_RegStatus,7
  1511  01B8  2A86               	goto	l6926
  1512                           
  1513                           ;smartkey.C: 402: {
  1514                           ;smartkey.C: 403: PAIE = 0;
  1515  01B9  118B               	bcf	11,3
  1516                           
  1517                           ;smartkey.C: 406: RegStatus &= (~0x80);
  1518  01BA  13C9               	bcf	_RegStatus,7
  1519                           
  1520                           ;smartkey.C: 418: {
  1521                           ;smartkey.C: 420: if ((RegStatus & 0x40) !=0){
  1522  01BB  1B49               	btfsc	_RegStatus,6
  1523  01BC  2A38               	goto	l6888
  1524  01BD  2A7D               	goto	l6924
  1525  01BE                     l6826:	
  1526                           
  1527                           ;smartkey.C: 426: lostDetect =0;
  1528  01BE  01CB               	clrf	_lostDetect
  1529  01BF                     L4:	
  1530  01BF  3028               	movlw	40
  1531                           
  1532                           ;smartkey.C: 427: timeTick =0;
  1533  01C0  01F0               	clrf	_timeTick
  1534  01C1  01F1               	clrf	_timeTick+1
  1535                           
  1536                           ;smartkey.C: 428: tmp16 = 40;
  1537  01C2  00C2               	movwf	main@tmp16
  1538  01C3  01C3               	clrf	main@tmp16+1
  1539                           
  1540                           ;smartkey.C: 429: break;
  1541  01C4  2A85               	goto	l952
  1542  01C5                     l6830:	
  1543                           
  1544                           ;smartkey.C: 432: if(timeTick >30){
  1545  01C5  3000               	movlw	0
  1546  01C6  0271               	subwf	_timeTick+1,w
  1547  01C7  301F               	movlw	31
  1548  01C8  1903               	skipnz
  1549  01C9  0270               	subwf	_timeTick,w
  1550  01CA  1C03               	skipc
  1551  01CB  2A85               	goto	l952
  1552  01CC  3008               	movlw	8
  1553                           
  1554                           ;smartkey.C: 433: timeTick =0;
  1555  01CD  01F0               	clrf	_timeTick
  1556  01CE  01F1               	clrf	_timeTick+1
  1557                           
  1558                           ;smartkey.C: 435: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1559  01CF  26C2               	fcall	_READ_EEPROM
  1560  01D0  3ACC               	xorlw	204
  1561  01D1  1D03               	skipz
  1562  01D2  29D6               	goto	l6838
  1563  01D3  3008               	movlw	8
  1564  01D4  01A0               	clrf	?_WRITE_EEPROM
  1565  01D5  2611               	fcall	_WRITE_EEPROM
  1566  01D6                     l6838:	
  1567                           
  1568                           ;smartkey.C: 437: if((mtOldState == 3)){
  1569  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1570  01D7  084C               	movf	_mtOldState,w
  1571  01D8  3A03               	xorlw	3
  1572  01D9  1D03               	skipz
  1573  01DA  29E7               	goto	l6848
  1574                           
  1575                           ;smartkey.C: 438: beepOn();TMR2ON = 0; beep(10,1);
  1576  01DB  26F0               	fcall	_beepOn
  1577  01DC  300A               	movlw	10
  1578  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1579  01DE  1112               	bcf	18,2
  1580  01DF  01A4               	clrf	?_beep
  1581  01E0  0AA4               	incf	?_beep,f
  1582  01E1  2644               	fcall	_beep
  1583  01E2                     L3:	
  1584                           
  1585                           ;smartkey.C: 439: if(reAlertOn)reAlertOn =0;
  1586  01E2  083F               	movf	main@reAlertOn,w
  1587  01E3  1903               	btfsc	3,2
  1588  01E4  2A85               	goto	l952
  1589  01E5  01BF               	clrf	main@reAlertOn
  1590  01E6  2A85               	goto	l952
  1591  01E7                     l6848:	
  1592                           
  1593                           ;smartkey.C: 441: else if((mtOldState == 0)||(mtOldState == 4)){
  1594  01E7  084C               	movf	_mtOldState,w
  1595  01E8  1903               	btfsc	3,2
  1596  01E9  29EE               	goto	l942
  1597  01EA  084C               	movf	_mtOldState,w
  1598  01EB  3A04               	xorlw	4
  1599  01EC  1D03               	skipz
  1600  01ED  2A0B               	goto	l6862
  1601  01EE                     l942:	
  1602  01EE  30AC               	movlw	172
  1603                           
  1604                           ;smartkey.C: 442: RegStatus |=(0x20);
  1605  01EF  16C9               	bsf	_RegStatus,5
  1606                           
  1607                           ;smartkey.C: 443: setState(1,3500);
  1608  01F0  00A0               	movwf	?_setState
  1609  01F1  300D               	movlw	13
  1610  01F2  00A1               	movwf	?_setState+1
  1611  01F3  3001               	movlw	1
  1612  01F4  26CF               	fcall	_setState
  1613                           
  1614                           ;smartkey.C: 444: if(READ_EEPROM(0x40))WRITE_EEPROM(0x40,0);
  1615  01F5  3040               	movlw	64
  1616  01F6  26C2               	fcall	_READ_EEPROM
  1617  01F7  3A00               	xorlw	0
  1618  01F8  1903               	skipnz
  1619  01F9  29FD               	goto	l6858
  1620  01FA  3040               	movlw	64
  1621  01FB  01A0               	clrf	?_WRITE_EEPROM
  1622  01FC  2611               	fcall	_WRITE_EEPROM
  1623  01FD                     l6858:	
  1624                           
  1625                           ;smartkey.C: 445: tmp16 = timeTick+40;
  1626  01FD  0871               	movf	_timeTick+1,w
  1627  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1628  01FF  00C3               	movwf	main@tmp16+1
  1629  0200  0870               	movf	_timeTick,w
  1630  0201  00C2               	movwf	main@tmp16
  1631  0202  3028               	movlw	40
  1632  0203  07C2               	addwf	main@tmp16,f
  1633  0204  1803               	skipnc
  1634  0205  0AC3               	incf	main@tmp16+1,f
  1635  0206  300A               	movlw	10
  1636                           
  1637                           ;smartkey.C: 446: beep(10,1);
  1638  0207  01A4               	clrf	?_beep
  1639  0208  0AA4               	incf	?_beep,f
  1640  0209  2644               	fcall	_beep
  1641                           
  1642                           ;smartkey.C: 447: }
  1643  020A  2A85               	goto	l952
  1644  020B                     l6862:	
  1645                           
  1646                           ;smartkey.C: 448: else if((mtOldState == 1)){
  1647  020B  0B4C               	decfsz	_mtOldState,w
  1648  020C  2A85               	goto	l952
  1649  020D  29E2               	goto	L3
  1650  020E                     l6868:	
  1651                           ;smartkey.C: 451: }
  1652                           ;smartkey.C: 452: }
  1653                           ;smartkey.C: 453: break;
  1654                           
  1655                           ;smartkey.C: 450: if(reAlertOn)reAlertOn =0;
  1656                           
  1657                           
  1658                           ;smartkey.C: 456: if(timeTick > 200)
  1659  020E  3000               	movlw	0
  1660  020F  0271               	subwf	_timeTick+1,w
  1661  0210  30C9               	movlw	201
  1662  0211  1903               	skipnz
  1663  0212  0270               	subwf	_timeTick,w
  1664  0213  1C03               	skipc
  1665  0214  2A85               	goto	l952
  1666                           
  1667                           ;smartkey.C: 457: {
  1668                           ;smartkey.C: 458: beepOff();
  1669  0215  26F5               	fcall	_beepOff
  1670                           
  1671                           ;smartkey.C: 459: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1672  0216  3008               	movlw	8
  1673  0217  26C2               	fcall	_READ_EEPROM
  1674  0218  3ACC               	xorlw	204
  1675  0219  1D03               	skipz
  1676  021A  2A1E               	goto	l6876
  1677  021B  3008               	movlw	8
  1678  021C  01A0               	clrf	?_WRITE_EEPROM
  1679  021D  2611               	fcall	_WRITE_EEPROM
  1680  021E                     l6876:	
  1681  021E  30AC               	movlw	172
  1682                           
  1683                           ;smartkey.C: 460: RegStatus |=(0x20);
  1684  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0220  16C9               	bsf	_RegStatus,5
  1686                           
  1687                           ;smartkey.C: 461: setState(1,3500);
  1688  0221  00A0               	movwf	?_setState
  1689  0222  300D               	movlw	13
  1690  0223  00A1               	movwf	?_setState+1
  1691  0224  3001               	movlw	1
  1692  0225  26CF               	fcall	_setState
  1693                           
  1694                           ;smartkey.C: 463: tmp16 = timeTick+40;
  1695  0226  0871               	movf	_timeTick+1,w
  1696  0227  00C3               	movwf	main@tmp16+1
  1697  0228  0870               	movf	_timeTick,w
  1698  0229  00C2               	movwf	main@tmp16
  1699  022A  3028               	movlw	40
  1700  022B  07C2               	addwf	main@tmp16,f
  1701  022C  1803               	skipnc
  1702  022D  0AC3               	incf	main@tmp16+1,f
  1703  022E  2A85               	goto	l952
  1704  022F                     l6882:	
  1705                           
  1706                           ;smartkey.C: 469: beepOff();
  1707  022F  26F5               	fcall	_beepOff
  1708                           
  1709                           ;smartkey.C: 470: setState(2,300);
  1710  0230  302C               	movlw	44
  1711  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0232  00A0               	movwf	?_setState
  1713  0233  3001               	movlw	1
  1714  0234  00A1               	movwf	?_setState+1
  1715  0235  3002               	movlw	2
  1716  0236  26CF               	fcall	_setState
  1717                           
  1718                           ;smartkey.C: 471: break;
  1719  0237  2A85               	goto	l952
  1720  0238                     l6888:	
  1721  0238  0874               	movf	_mtState,w
  1722                           
  1723                           ; Switch size 1, requested type "space"
  1724                           ; Number of cases is 5, Range of values is 0 to 4
  1725                           ; switch strategies available:
  1726                           ; Name         Instructions Cycles
  1727                           ; direct_byte           11     6 (fixed)
  1728                           ; simple_byte           16     9 (average)
  1729                           ; jumptable            260     6 (fixed)
  1730                           ; rangetable             9     6 (fixed)
  1731                           ; spacedrange           16     9 (fixed)
  1732                           ; locatedrange           5     3 (fixed)
  1733                           ;	Chosen strategy is direct_byte
  1734  0239  0084               	movwf	4
  1735  023A  3005               	movlw	5
  1736  023B  0204               	subwf	4,w
  1737  023C  1803               	skipnc
  1738  023D  2A85               	goto	l952
  1739  023E  3006               	movlw	high S7156
  1740  023F  008A               	movwf	10
  1741  0240  30EB               	movlw	low S7156
  1742  0241  0704               	addwf	4,w
  1743  0242  0082               	movwf	2
  1744  0243                     l6890:	
  1745                           
  1746                           ;smartkey.C: 488: {
  1747                           ;smartkey.C: 490: if(lostDetect==1 && timeTick< 1500)
  1748  0243  0B4B               	decfsz	_lostDetect,w
  1749  0244  2A6A               	goto	l955
  1750  0245  3005               	movlw	5
  1751  0246  0271               	subwf	_timeTick+1,w
  1752  0247  30DC               	movlw	220
  1753  0248  1903               	skipnz
  1754  0249  0270               	subwf	_timeTick,w
  1755  024A  1803               	skipnc
  1756  024B  2A6A               	goto	l955
  1757                           
  1758                           ;smartkey.C: 491: {
  1759                           ;smartkey.C: 492: if(READ_EEPROM(0x08)==0x00) WRITE_EEPROM(0x08,0xcc);
  1760  024C  3008               	movlw	8
  1761  024D  26C2               	fcall	_READ_EEPROM
  1762  024E  3800               	iorlw	0
  1763  024F  1D03               	skipz
  1764  0250  2A55               	goto	l956
  1765  0251  30CC               	movlw	204
  1766  0252  00A0               	movwf	?_WRITE_EEPROM
  1767  0253  3008               	movlw	8
  1768  0254  2611               	fcall	_WRITE_EEPROM
  1769  0255                     l956:	
  1770                           
  1771                           ;smartkey.C: 494: setState(3,1800);
  1772  0255  3008               	movlw	8
  1773  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0257  00A0               	movwf	?_setState
  1775  0258  3007               	movlw	7
  1776  0259  00A1               	movwf	?_setState+1
  1777  025A  3003               	movlw	3
  1778  025B  26CF               	fcall	_setState
  1779                           
  1780                           ;smartkey.C: 495: cntTmp = timeTick+40;
  1781  025C  0871               	movf	_timeTick+1,w
  1782  025D  00C6               	movwf	_cntTmp+1
  1783  025E  0870               	movf	_timeTick,w
  1784  025F  00C5               	movwf	_cntTmp
  1785  0260  3028               	movlw	40
  1786  0261  07C5               	addwf	_cntTmp,f
  1787  0262  1803               	skipnc
  1788  0263  0AC6               	incf	_cntTmp+1,f
  1789                           
  1790                           ;smartkey.C: 496: PR2L =20;
  1791  0264  3014               	movlw	20
  1792  0265  1683               	bsf	3,5	;RP0=1, select bank1
  1793  0266  0091               	movwf	17	;volatile
  1794                           
  1795                           ;smartkey.C: 497: beepOn();
  1796  0267  26F0               	fcall	_beepOn
  1797                           
  1798                           ;smartkey.C: 498: lostDetect =0;
  1799  0268  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0269  29BE               	goto	l6826
  1801  026A                     l955:	
  1802                           ;smartkey.C: 499: }
  1803                           
  1804                           
  1805                           ;smartkey.C: 500: else {
  1806                           ;smartkey.C: 501: lostDetect =1;
  1807  026A  01CB               	clrf	_lostDetect
  1808  026B  0ACB               	incf	_lostDetect,f
  1809  026C  29BF               	goto	L4
  1810  026D                     l6910:	
  1811                           ;smartkey.C: 504: }
  1812                           ;smartkey.C: 505: timeTick =0;
  1813                           
  1814                           
  1815                           ;smartkey.C: 511: {
  1816                           ;smartkey.C: 512: timeTick =0;
  1817  026D  01F0               	clrf	_timeTick
  1818  026E  01F1               	clrf	_timeTick+1
  1819                           
  1820                           ;smartkey.C: 513: beepOn();TMR2ON = 0;
  1821  026F  26F0               	fcall	_beepOn
  1822  0270  3002               	movlw	2
  1823  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0272  1112               	bcf	18,2
  1825                           
  1826                           ;smartkey.C: 514: beep(10,2);
  1827  0273  00A4               	movwf	?_beep
  1828  0274  300A               	movlw	10
  1829  0275  2644               	fcall	_beep
  1830                           
  1831                           ;smartkey.C: 515: if(mtOldState == 3){reAlertOn =1;}
  1832  0276  084C               	movf	_mtOldState,w
  1833  0277  3A03               	xorlw	3
  1834  0278  1D03               	skipz
  1835  0279  2A85               	goto	l952
  1836  027A  01BF               	clrf	main@reAlertOn
  1837  027B  0ABF               	incf	main@reAlertOn,f
  1838  027C  2A85               	goto	l952
  1839  027D                     l6924:	
  1840  027D  0874               	movf	_mtState,w
  1841                           
  1842                           ; Switch size 1, requested type "space"
  1843                           ; Number of cases is 2, Range of values is 1 to 2
  1844                           ; switch strategies available:
  1845                           ; Name         Instructions Cycles
  1846                           ; simple_byte            7     4 (average)
  1847                           ; direct_byte           11     9 (fixed)
  1848                           ; jumptable            263     9 (fixed)
  1849                           ;	Chosen strategy is simple_byte
  1850  027E  3A01               	xorlw	1	; case 1
  1851  027F  1903               	skipnz
  1852  0280  2A43               	goto	l6890
  1853  0281  3A03               	xorlw	3	; case 2
  1854  0282  1903               	skipnz
  1855  0283  2A6D               	goto	l6910
  1856  0284  2A85               	goto	l952
  1857  0285                     l952:	
  1858                           
  1859                           ;smartkey.C: 519: }
  1860                           ;smartkey.C: 521: }
  1861                           ;smartkey.C: 523: PAIE = 1;
  1862  0285  158B               	bsf	11,3
  1863  0286                     l6926:	
  1864                           
  1865                           ;smartkey.C: 524: }
  1866                           ;smartkey.C: 526: }
  1867                           ;smartkey.C: 530: {
  1868                           ;smartkey.C: 531: if((timeOut!=0)&&( timeTick >timeOut)){
  1869  0286  0848               	movf	_timeOut+1,w
  1870  0287  0447               	iorwf	_timeOut,w
  1871  0288  1903               	skipnz
  1872  0289  2AFC               	goto	l7002
  1873  028A  0871               	movf	_timeTick+1,w
  1874  028B  0248               	subwf	_timeOut+1,w
  1875  028C  1D03               	skipz
  1876  028D  2A90               	goto	u3215
  1877  028E  0870               	movf	_timeTick,w
  1878  028F  0247               	subwf	_timeOut,w
  1879  0290                     u3215:	
  1880  0290  1C03               	btfss	3,0
  1881  0291  2AEE               	goto	l7000
  1882  0292  2AFC               	goto	l7002
  1883  0293                     l6932:	
  1884                           
  1885                           ;smartkey.C: 542: beepOff();
  1886  0293  26F5               	fcall	_beepOff
  1887  0294  302C               	movlw	44
  1888                           
  1889                           ;smartkey.C: 543: RegStatus &=(~0x20);
  1890  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0296  12C9               	bcf	_RegStatus,5
  1892                           
  1893                           ;smartkey.C: 544: setState(2,300);
  1894  0297  00A0               	movwf	?_setState
  1895  0298  3001               	movlw	1
  1896  0299  00A1               	movwf	?_setState+1
  1897  029A  3002               	movlw	2
  1898  029B  26CF               	fcall	_setState
  1899                           
  1900                           ;smartkey.C: 545: break;
  1901  029C  2AFC               	goto	l7002
  1902  029D                     l6938:	
  1903                           
  1904                           ;smartkey.C: 547: beepOff();
  1905  029D  26F5               	fcall	_beepOff
  1906                           
  1907                           ;smartkey.C: 548: delay_x10ms(20);
  1908  029E  3014               	movlw	20
  1909  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1910  02A0  00A0               	movwf	?_delay_x10ms
  1911  02A1  01A1               	clrf	?_delay_x10ms+1
  1912  02A2  2683               	fcall	_delay_x10ms
  1913  02A3                     L6:	
  1914                           
  1915                           ;smartkey.C: 549: beepOn();TMR2ON = 0;reAlertOn =0;
  1916  02A3  26F0               	fcall	_beepOn
  1917  02A4  301E               	movlw	30
  1918  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1919  02A6  1112               	bcf	18,2
  1920  02A7  01BF               	clrf	main@reAlertOn
  1921  02A8  01A4               	clrf	?_beep
  1922  02A9  0AA4               	incf	?_beep,f
  1923  02AA  2644               	fcall	_beep
  1924  02AB  3000               	movlw	0
  1925                           
  1926                           ;smartkey.C: 551: setState(0,0);
  1927  02AC  01A0               	clrf	?_setState
  1928  02AD  01A1               	clrf	?_setState+1
  1929  02AE                     L5:	
  1930  02AE  26CF               	fcall	_setState
  1931                           
  1932                           ;smartkey.C: 553: tmp16 = timeTick+40;
  1933  02AF  0871               	movf	_timeTick+1,w
  1934  02B0  00C3               	movwf	main@tmp16+1
  1935  02B1  0870               	movf	_timeTick,w
  1936  02B2  00C2               	movwf	main@tmp16
  1937  02B3  3028               	movlw	40
  1938  02B4  07C2               	addwf	main@tmp16,f
  1939  02B5  1803               	skipnc
  1940  02B6  0AC3               	incf	main@tmp16+1,f
  1941                           
  1942                           ;smartkey.C: 554: break;
  1943  02B7  2AFC               	goto	l7002
  1944  02B8                     l6956:	
  1945                           
  1946                           ;smartkey.C: 557: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1947  02B8  3008               	movlw	8
  1948  02B9  26C2               	fcall	_READ_EEPROM
  1949  02BA  3ACC               	xorlw	204
  1950  02BB  1D03               	skipz
  1951  02BC  2AC0               	goto	l6960
  1952  02BD  3008               	movlw	8
  1953  02BE  01A0               	clrf	?_WRITE_EEPROM
  1954  02BF  2611               	fcall	_WRITE_EEPROM
  1955  02C0                     l6960:	
  1956                           
  1957                           ;smartkey.C: 559: if(reAlertOn){
  1958  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1959  02C1  083F               	movf	main@reAlertOn,w
  1960  02C2  1903               	btfsc	3,2
  1961  02C3  2AD7               	goto	l6970
  1962                           
  1963                           ;smartkey.C: 560: setState(4,6000);
  1964  02C4  3070               	movlw	112
  1965  02C5  00A0               	movwf	?_setState
  1966  02C6  3017               	movlw	23
  1967  02C7  00A1               	movwf	?_setState+1
  1968  02C8  3004               	movlw	4
  1969  02C9  26CF               	fcall	_setState
  1970                           
  1971                           ;smartkey.C: 561: cntTmp = timeTick+40;
  1972  02CA  0871               	movf	_timeTick+1,w
  1973  02CB  00C6               	movwf	_cntTmp+1
  1974  02CC  0870               	movf	_timeTick,w
  1975  02CD  00C5               	movwf	_cntTmp
  1976  02CE  3028               	movlw	40
  1977  02CF  07C5               	addwf	_cntTmp,f
  1978  02D0  1803               	skipnc
  1979  02D1  0AC6               	incf	_cntTmp+1,f
  1980                           
  1981                           ;smartkey.C: 562: PR2L =20;
  1982  02D2  3014               	movlw	20
  1983  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  1984  02D4  0091               	movwf	17	;volatile
  1985                           
  1986                           ;smartkey.C: 563: beepOn();
  1987  02D5  26F0               	fcall	_beepOn
  1988                           
  1989                           ;smartkey.C: 565: }else if(mtOldState == 0){
  1990  02D6  2AFC               	goto	l7002
  1991  02D7                     l6970:	
  1992  02D7  08CC               	movf	_mtOldState,f
  1993  02D8  1D03               	skipz
  1994  02D9  2AA3               	goto	L6
  1995                           
  1996                           ;smartkey.C: 567: beep(10,5);
  1997  02DA  3005               	movlw	5
  1998  02DB  00A4               	movwf	?_beep
  1999  02DC  300A               	movlw	10
  2000  02DD  2644               	fcall	_beep
  2001  02DE  3040               	movlw	64
  2002                           
  2003                           ;smartkey.C: 568: RegStatus |=(0x20);
  2004  02DF  16C9               	bsf	_RegStatus,5
  2005                           
  2006                           ;smartkey.C: 571: if(READ_EEPROM(0x40))WRITE_EEPROM(0x40,0);
  2007  02E0  26C2               	fcall	_READ_EEPROM
  2008  02E1  3A00               	xorlw	0
  2009  02E2  1903               	skipnz
  2010  02E3  2AE7               	goto	l972
  2011  02E4  3040               	movlw	64
  2012  02E5  01A0               	clrf	?_WRITE_EEPROM
  2013  02E6  2611               	fcall	_WRITE_EEPROM
  2014  02E7                     l972:	
  2015                           
  2016                           ;smartkey.C: 573: setState(1,3500);
  2017  02E7  30AC               	movlw	172
  2018  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2019  02E9  00A0               	movwf	?_setState
  2020  02EA  300D               	movlw	13
  2021  02EB  00A1               	movwf	?_setState+1
  2022  02EC  3001               	movlw	1
  2023  02ED  2AAE               	goto	L5
  2024  02EE                     l7000:	
  2025                           ;smartkey.C: 580: setState(0,0);
  2026                           
  2027                           ;smartkey.C: 579: beep(30,1);
  2028                           
  2029                           ;smartkey.C: 578: reAlertOn =0;
  2030                           
  2031                           ;smartkey.C: 577: beepOn();TMR2ON = 0;
  2032                           
  2033  02EE  0874               	movf	_mtState,w
  2034                           
  2035                           ; Switch size 1, requested type "space"
  2036                           ; Number of cases is 4, Range of values is 1 to 4
  2037                           ; switch strategies available:
  2038                           ; Name         Instructions Cycles
  2039                           ; simple_byte           13     7 (average)
  2040                           ; direct_byte           13     9 (fixed)
  2041                           ; jumptable            263     9 (fixed)
  2042                           ;	Chosen strategy is simple_byte
  2043  02EF  3A01               	xorlw	1	; case 1
  2044  02F0  1903               	skipnz
  2045  02F1  2AFC               	goto	l7002
  2046  02F2  3A03               	xorlw	3	; case 2
  2047  02F3  1903               	skipnz
  2048  02F4  2AB8               	goto	l6956
  2049  02F5  3A01               	xorlw	1	; case 3
  2050  02F6  1903               	skipnz
  2051  02F7  2A93               	goto	l6932
  2052  02F8  3A07               	xorlw	7	; case 4
  2053  02F9  1903               	skipnz
  2054  02FA  2A9D               	goto	l6938
  2055  02FB  2AFC               	goto	l7002
  2056  02FC                     l7002:	
  2057                           
  2058                           ;smartkey.C: 586: }
  2059                           ;smartkey.C: 588: }
  2060                           ;smartkey.C: 590: if((timeTick>tmp16) && (mtState == 1) && mpuOk ==1){
  2061  02FC  0871               	movf	_timeTick+1,w
  2062  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2063  02FE  0243               	subwf	main@tmp16+1,w
  2064  02FF  1D03               	skipz
  2065  0300  2B03               	goto	u3265
  2066  0301  0870               	movf	_timeTick,w
  2067  0302  0242               	subwf	main@tmp16,w
  2068  0303                     u3265:	
  2069  0303  1803               	skipnc
  2070  0304  2B94               	goto	l7084
  2071  0305  0B74               	decfsz	_mtState,w
  2072  0306  2B94               	goto	l7084
  2073  0307  0B41               	decfsz	main@mpuOk,w
  2074  0308  2B94               	goto	l7084
  2075                           
  2076                           ;smartkey.C: 591: tmp16 = timeTick+40;
  2077  0309  0871               	movf	_timeTick+1,w
  2078  030A  00C3               	movwf	main@tmp16+1
  2079  030B  0870               	movf	_timeTick,w
  2080  030C  00C2               	movwf	main@tmp16
  2081  030D  3028               	movlw	40
  2082  030E  07C2               	addwf	main@tmp16,f
  2083  030F  1803               	skipnc
  2084  0310  0AC3               	incf	main@tmp16+1,f
  2085                           
  2086                           ;smartkey.C: 592: if(AccRead(0x3b,buf,6)==0){
  2087  0311  3035               	movlw	main@buf& (0+255)
  2088  0312  00A4               	movwf	?_AccRead
  2089  0313  3000               	movlw	0
  2090  0314  00A5               	movwf	?_AccRead+1
  2091  0315  3006               	movlw	6
  2092  0316  00A6               	movwf	?_AccRead+2
  2093  0317  303B               	movlw	59
  2094  0318  2574               	fcall	_AccRead
  2095  0319  3800               	iorlw	0
  2096  031A  1D03               	skipz
  2097  031B  2B94               	goto	l7084
  2098                           
  2099                           ;smartkey.C: 594: if(compe(buf[0], (signed char)acXsum,5) && compe(buf[2], (signed char)
      +                          acYsum,5)){
  2100  031C  1283               	bcf	3,5	;RP0=0, select bank0
  2101  031D  083D               	movf	main@acXsum,w
  2102  031E  00A0               	movwf	?_compe
  2103  031F  3005               	movlw	5
  2104  0320  00A1               	movwf	?_compe+1
  2105  0321  0835               	movf	main@buf,w
  2106  0322  24B3               	fcall	_compe
  2107  0323  3A00               	xorlw	0
  2108  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2109  0325  1903               	skipnz
  2110  0326  2B45               	goto	L9
  2111  0327  083B               	movf	main@acYsum,w
  2112  0328  00A0               	movwf	?_compe
  2113  0329  3005               	movlw	5
  2114  032A  00A1               	movwf	?_compe+1
  2115  032B  0837               	movf	main@buf+2,w
  2116  032C  24B3               	fcall	_compe
  2117  032D  3A00               	xorlw	0
  2118                           
  2119                           ;smartkey.C: 597: isSw++;
  2120  032E  1283               	bcf	3,5	;RP0=0, select bank0
  2121  032F  1903               	skipnz
  2122  0330  2B45               	goto	L9
  2123  0331  302D               	movlw	45
  2124  0332  0AC0               	incf	main@isSw,f
  2125                           
  2126                           ;smartkey.C: 598: if(isSw >44){
  2127  0333  0240               	subwf	main@isSw,w
  2128  0334  1C03               	skipc
  2129  0335  2B38               	goto	l7032
  2130                           
  2131                           ;smartkey.C: 599: isSw =0;
  2132  0336  01C0               	clrf	main@isSw
  2133  0337  2B69               	goto	L7
  2134  0338                     l7032:	
  2135                           ;smartkey.C: 606: }
  2136                           
  2137                           ;smartkey.C: 604: setState(2,300);
  2138                           
  2139                           ;smartkey.C: 603: RegStatus &=(~0x20);
  2140                           
  2141                           ;smartkey.C: 600: vibrateOn=1;
  2142                           
  2143                           
  2144                           ;smartkey.C: 607: else if(isSw > 25){
  2145  0338  301A               	movlw	26
  2146  0339  0240               	subwf	main@isSw,w
  2147  033A  1803               	btfsc	3,0
  2148                           
  2149                           ;smartkey.C: 608: if(isSw%2==0){
  2150  033B  1840               	btfsc	main@isSw,0
  2151  033C  2B72               	goto	l7062
  2152                           
  2153                           ;smartkey.C: 609: beepOn();TMR2ON = 0; beep(7,1);
  2154  033D  26F0               	fcall	_beepOn
  2155  033E  3007               	movlw	7
  2156  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0340  1112               	bcf	18,2
  2158  0341  01A4               	clrf	?_beep
  2159  0342  0AA4               	incf	?_beep,f
  2160  0343  2644               	fcall	_beep
  2161  0344  2B72               	goto	l7062
  2162  0345                     L9:	
  2163                           ;smartkey.C: 614: else{
  2164                           ;smartkey.C: 615: isSw =0;
  2165                           
  2166                           ;smartkey.C: 610: }
  2167                           ;smartkey.C: 611: }
  2168                           ;smartkey.C: 613: }
  2169                           
  2170  0345  01C0               	clrf	main@isSw
  2171                           
  2172                           ;smartkey.C: 618: if(compe(buf[0], acXOld,2) && compe(buf[2], acYOld,2)){
  2173  0346  0834               	movf	main@acXOld,w
  2174  0347  00A0               	movwf	?_compe
  2175  0348  3002               	movlw	2
  2176  0349  00A1               	movwf	?_compe+1
  2177  034A  0835               	movf	main@buf,w
  2178  034B  24B3               	fcall	_compe
  2179  034C  3A00               	xorlw	0
  2180  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2181  034E  1903               	skipnz
  2182  034F  2B73               	goto	L10
  2183  0350  0833               	movf	main@acYOld,w
  2184  0351  00A0               	movwf	?_compe
  2185  0352  3002               	movlw	2
  2186  0353  00A1               	movwf	?_compe+1
  2187  0354  0837               	movf	main@buf+2,w
  2188  0355  24B3               	fcall	_compe
  2189  0356  3A00               	xorlw	0
  2190                           
  2191                           ;smartkey.C: 619: isWait++;
  2192  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2193  0358  1903               	skipnz
  2194  0359  2B73               	goto	L10
  2195  035A  0AAF               	incf	main@isWait,f
  2196  035B  1903               	skipnz
  2197  035C  0AB0               	incf	main@isWait+1,f
  2198                           
  2199                           ;smartkey.C: 620: if(isWait==450){
  2200  035D  0330               	decf	main@isWait+1,w
  2201  035E  30C2               	movlw	194
  2202  035F  1903               	skipnz
  2203  0360  062F               	xorwf	main@isWait,w
  2204  0361  1D03               	skipz
  2205  0362  2B72               	goto	l7062
  2206  0363  3002               	movlw	2
  2207                           
  2208                           ;smartkey.C: 621: isWait = 0;
  2209  0364  01AF               	clrf	main@isWait
  2210  0365  01B0               	clrf	main@isWait+1
  2211                           
  2212                           ;smartkey.C: 622: beep(7,2);
  2213  0366  00A4               	movwf	?_beep
  2214  0367  3007               	movlw	7
  2215  0368  2644               	fcall	_beep
  2216  0369                     L7:	
  2217  0369  302C               	movlw	44
  2218                           
  2219                           ;smartkey.C: 623: vibrateOn=1;
  2220  036A  01B1               	clrf	main@vibrateOn
  2221  036B  0AB1               	incf	main@vibrateOn,f
  2222                           
  2223                           ;smartkey.C: 624: RegStatus &=(~0x20);
  2224  036C  12C9               	bcf	_RegStatus,5
  2225                           
  2226                           ;smartkey.C: 625: setState(2,300);
  2227  036D  00A0               	movwf	?_setState
  2228  036E  3001               	movlw	1
  2229  036F  00A1               	movwf	?_setState+1
  2230  0370  3002               	movlw	2
  2231  0371  26CF               	fcall	_setState
  2232  0372                     l7062:	
  2233                           
  2234                           ;smartkey.C: 626: }
  2235                           ;smartkey.C: 627: }
  2236                           ;smartkey.C: 629: }
  2237                           ;smartkey.C: 631: if( (buf[4] > -31) && (buf[4] < 31)) {
  2238  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0373                     L10:	
  2240  0373  0839               	movf	main@buf+4,w
  2241  0374  3A80               	xorlw	128
  2242  0375  3E9E               	addlw	158
  2243  0376  1C03               	skipc
  2244  0377  2B8F               	goto	l7078
  2245  0378  0839               	movf	main@buf+4,w
  2246  0379  3A80               	xorlw	128
  2247  037A  3E61               	addlw	-159
  2248  037B  1803               	skipnc
  2249  037C  2B8F               	goto	l7078
  2250  037D  3005               	movlw	5
  2251                           
  2252                           ;smartkey.C: 632: isFall++;
  2253  037E  0AB2               	incf	main@isFall,f
  2254                           
  2255                           ;smartkey.C: 633: if(isFall >4){
  2256  037F  0232               	subwf	main@isFall,w
  2257  0380  1C03               	skipc
  2258  0381  2B90               	goto	l7080
  2259  0382  3002               	movlw	2
  2260                           
  2261                           ;smartkey.C: 634: isFall =0;
  2262  0383  01B2               	clrf	main@isFall
  2263                           
  2264                           ;smartkey.C: 635: beep(7,2);
  2265  0384  00A4               	movwf	?_beep
  2266  0385  3007               	movlw	7
  2267  0386  2644               	fcall	_beep
  2268  0387  302C               	movlw	44
  2269                           
  2270                           ;smartkey.C: 636: RegStatus &=(~0x20);
  2271  0388  12C9               	bcf	_RegStatus,5
  2272                           
  2273                           ;smartkey.C: 637: setState(2,300);
  2274  0389  00A0               	movwf	?_setState
  2275  038A  3001               	movlw	1
  2276  038B  00A1               	movwf	?_setState+1
  2277  038C  3002               	movlw	2
  2278  038D  26CF               	fcall	_setState
  2279  038E  2B90               	goto	l7080
  2280  038F                     l7078:	
  2281                           
  2282                           ;smartkey.C: 640: else{
  2283                           ;smartkey.C: 641: isFall=0;
  2284  038F  01B2               	clrf	main@isFall
  2285  0390                     l7080:	
  2286                           
  2287                           ;smartkey.C: 642: }
  2288                           ;smartkey.C: 644: acYOld = buf[2];acXOld = buf[0];
  2289  0390  0837               	movf	main@buf+2,w
  2290  0391  00B3               	movwf	main@acYOld
  2291  0392  0835               	movf	main@buf,w
  2292  0393  00B4               	movwf	main@acXOld
  2293  0394                     l7084:	
  2294                           
  2295                           ;smartkey.C: 645: }
  2296                           ;smartkey.C: 647: }
  2297                           ;smartkey.C: 650: if((timeTick>tmp16) && (mtState == 0 ) && mpuOk ==1){
  2298  0394  0871               	movf	_timeTick+1,w
  2299  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0396  0243               	subwf	main@tmp16+1,w
  2301  0397  1D03               	skipz
  2302  0398  2B9B               	goto	u3415
  2303  0399  0870               	movf	_timeTick,w
  2304  039A  0242               	subwf	main@tmp16,w
  2305  039B                     u3415:	
  2306  039B  1803               	skipnc
  2307  039C  2BDF               	goto	l7116
  2308  039D  08F4               	movf	_mtState,f
  2309  039E  1D03               	skipz
  2310  039F  2BDF               	goto	l7116
  2311  03A0  0B41               	decfsz	main@mpuOk,w
  2312  03A1  2BDF               	goto	l7116
  2313                           
  2314                           ;smartkey.C: 652: if(timeTick >65000) timeTick =0;
  2315  03A2  30FD               	movlw	253
  2316  03A3  0271               	subwf	_timeTick+1,w
  2317  03A4  30E9               	movlw	233
  2318  03A5  1903               	skipnz
  2319  03A6  0270               	subwf	_timeTick,w
  2320  03A7  1C03               	skipc
  2321  03A8  2BAB               	goto	l7094
  2322  03A9  01F0               	clrf	_timeTick
  2323  03AA  01F1               	clrf	_timeTick+1
  2324  03AB                     l7094:	
  2325                           
  2326                           ;smartkey.C: 653: tmp16 = timeTick+40;
  2327  03AB  0871               	movf	_timeTick+1,w
  2328  03AC  00C3               	movwf	main@tmp16+1
  2329  03AD  0870               	movf	_timeTick,w
  2330  03AE  00C2               	movwf	main@tmp16
  2331  03AF  3028               	movlw	40
  2332  03B0  07C2               	addwf	main@tmp16,f
  2333  03B1  1803               	skipnc
  2334  03B2  0AC3               	incf	main@tmp16+1,f
  2335                           
  2336                           ;smartkey.C: 655: if(AccRead(0x3b,buf,6)==0){
  2337  03B3  3035               	movlw	main@buf& (0+255)
  2338  03B4  00A4               	movwf	?_AccRead
  2339  03B5  3000               	movlw	0
  2340  03B6  00A5               	movwf	?_AccRead+1
  2341  03B7  3006               	movlw	6
  2342  03B8  00A6               	movwf	?_AccRead+2
  2343  03B9  303B               	movlw	59
  2344  03BA  2574               	fcall	_AccRead
  2345  03BB  3800               	iorlw	0
  2346                           
  2347                           ;smartkey.C: 657: if(vibrateOn==1){
  2348  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2349  03BD  1D03               	skipz
  2350  03BE  2BE0               	goto	L11
  2351  03BF  0B31               	decfsz	main@vibrateOn,w
  2352  03C0  2BDF               	goto	l7116
  2353                           
  2354                           ;smartkey.C: 658: if(compe(buf[0],acXOld ,3) && compe(buf[2],acYOld ,3)){
  2355  03C1  0834               	movf	main@acXOld,w
  2356  03C2  00A0               	movwf	?_compe
  2357  03C3  3003               	movlw	3
  2358  03C4  00A1               	movwf	?_compe+1
  2359  03C5  0835               	movf	main@buf,w
  2360  03C6  24B3               	fcall	_compe
  2361  03C7  3A00               	xorlw	0
  2362  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2363  03C9  1903               	skipnz
  2364  03CA  2BD7               	goto	L12
  2365  03CB  0833               	movf	main@acYOld,w
  2366  03CC  00A0               	movwf	?_compe
  2367  03CD  3003               	movlw	3
  2368  03CE  00A1               	movwf	?_compe+1
  2369  03CF  0837               	movf	main@buf+2,w
  2370  03D0  24B3               	fcall	_compe
  2371  03D1  3A00               	xorlw	0
  2372                           
  2373                           ;smartkey.C: 660: isSw=0;
  2374  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2375  03D3  1903               	skipnz
  2376  03D4  2BD7               	goto	L12
  2377  03D5  01C0               	clrf	main@isSw
  2378                           
  2379                           ;smartkey.C: 663: }
  2380  03D6  2BDF               	goto	l7116
  2381  03D7                     L12:	
  2382                           ;smartkey.C: 664: else{
  2383                           ;smartkey.C: 665: isSw++;
  2384                           
  2385  03D7  0AC0               	incf	main@isSw,f
  2386                           
  2387                           ;smartkey.C: 668: {
  2388                           ;smartkey.C: 669: beepOn();TMR2ON = 0; beep(7,3);
  2389  03D8  26F0               	fcall	_beepOn
  2390  03D9  3003               	movlw	3
  2391  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2392  03DB  1112               	bcf	18,2
  2393  03DC  00A4               	movwf	?_beep
  2394  03DD  3007               	movlw	7
  2395  03DE  2644               	fcall	_beep
  2396  03DF                     l7116:	
  2397                           
  2398                           ;smartkey.C: 670: }
  2399                           ;smartkey.C: 671: }
  2400                           ;smartkey.C: 672: }
  2401                           ;smartkey.C: 674: }
  2402                           ;smartkey.C: 677: }
  2403                           ;smartkey.C: 679: if(RegStatus & 0x20) {RC0 =1;RC1 =1;}
  2404  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2405  03E0                     L11:	
  2406  03E0  1EC9               	btfss	_RegStatus,5
  2407  03E1  2BE5               	goto	l993
  2408  03E2  1407               	bsf	7,0
  2409  03E3  1487               	bsf	7,1
  2410  03E4  29B5               	goto	l6818
  2411  03E5                     l993:	
  2412                           
  2413                           ;smartkey.C: 680: else {RC0 =0;RC1 =0;}
  2414  03E5  1007               	bcf	7,0
  2415  03E6  1087               	bcf	7,1
  2416  03E7  29B5               	goto	l6818
  2417  03E8                     __end_of_main:	
  2418                           
  2419                           	psect	swtext1
  2420  06EB                     __pswtext1:	
  2421  06EB                     S7156:	
  2422  06EB  2A85               	ljmp	l952
  2423  06EC  29BE               	ljmp	l6826
  2424  06ED  29C5               	ljmp	l6830
  2425  06EE  2A0E               	ljmp	l6868
  2426  06EF  2A2F               	ljmp	l6882
  2427                           
  2428                           	psect	text861
  2429  0574                     __ptext861:	
  2430 ;; =============== function _main ends ============
  2431                           
  2432                           
  2433 ;; *************** function _AccRead *****************
  2434 ;; Defined at:
  2435 ;;		line 31 in file "mpu6x.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  rAdd            1    wreg     unsigned char 
  2438 ;;  dat             2    4[BANK0 ] PTR unsigned char 
  2439 ;;		 -> RAM(256), main@buf(6), 
  2440 ;;  len             1    6[BANK0 ] unsigned char 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  rAdd            1   10[BANK0 ] unsigned char 
  2443 ;;  i               1   11[BANK0 ] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      unsigned char 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 20/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1
  2453 ;;      Params:         0       3       0
  2454 ;;      Locals:         0       2       0
  2455 ;;      Temps:          0       3       0
  2456 ;;      Totals:         0       8       0
  2457 ;;Total ram usage:        8 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    3
  2460 ;; This function calls:
  2461 ;;		_swI2C_Start
  2462 ;;		_swI2C_WriteByte
  2463 ;;		_swI2C_ReadByte
  2464 ;;		_swI2C_Stop
  2465 ;; This function is called by:
  2466 ;;		_main
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469  0574                     _AccRead:	
  2470                           
  2471                           ; Regs used in _AccRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2472                           ;AccRead@rAdd stored from wreg
  2473  0574  00AA               	movwf	AccRead@rAdd
  2474                           
  2475                           ;mpu6x.c: 32: unsigned char i;
  2476                           ;mpu6x.c: 34: swI2C_Start();
  2477  0575  2670               	fcall	_swI2C_Start
  2478                           
  2479                           ;mpu6x.c: 36: if(swI2C_WriteByte(0x68<<1)== 0 )
  2480  0576  30D0               	movlw	208
  2481  0577  2537               	fcall	_swI2C_WriteByte
  2482  0578  3800               	iorlw	0
  2483  0579  1D03               	skipz
  2484  057A  3401               	retlw	1
  2485                           
  2486                           ;mpu6x.c: 37: {
  2487                           ;mpu6x.c: 38: if(swI2C_WriteByte(rAdd)==0 )
  2488  057B  082A               	movf	AccRead@rAdd,w
  2489  057C  2537               	fcall	_swI2C_WriteByte
  2490  057D  3800               	iorlw	0
  2491  057E  1D03               	skipz
  2492  057F  3402               	retlw	2
  2493                           
  2494                           ;mpu6x.c: 39: {
  2495                           ;mpu6x.c: 40: swI2C_Start();
  2496  0580  2670               	fcall	_swI2C_Start
  2497                           
  2498                           ;mpu6x.c: 41: if(swI2C_WriteByte((0x68<<1)|1)== 0 ){
  2499  0581  30D1               	movlw	209
  2500  0582  2537               	fcall	_swI2C_WriteByte
  2501  0583  3800               	iorlw	0
  2502  0584  1D03               	skipz
  2503  0585  3401               	retlw	1
  2504                           
  2505                           ;mpu6x.c: 43: for(i=0; i<(len-1);i++){
  2506  0586  01AB               	clrf	AccRead@i
  2507  0587                     l6648:	
  2508  0587  0826               	movf	AccRead@len,w
  2509  0588  3EFF               	addlw	255
  2510  0589  00A7               	movwf	??_AccRead
  2511  058A  30FF               	movlw	255
  2512  058B  1803               	skipnc
  2513  058C  3000               	movlw	0
  2514  058D  00A8               	movwf	??_AccRead+1
  2515  058E  3A80               	xorlw	128
  2516  058F  3C80               	sublw	128
  2517  0590  1D03               	skipz
  2518  0591  2D94               	goto	u2835
  2519  0592  0827               	movf	??_AccRead,w
  2520  0593  022B               	subwf	AccRead@i,w
  2521  0594                     u2835:	
  2522                           
  2523                           ;mpu6x.c: 44: dat[i]=swI2C_ReadByte(1);
  2524  0594  3001               	movlw	1
  2525  0595  1803               	btfsc	3,0
  2526  0596  2D9B               	goto	L13
  2527  0597  24F8               	fcall	_swI2C_ReadByte
  2528  0598  259F               	fcall	PL2	;call to abstracted procedure
  2529  0599  0AAB               	incf	AccRead@i,f
  2530  059A  2D87               	goto	l6648
  2531  059B                     L13:	
  2532                           ;mpu6x.c: 45: }
  2533                           ;mpu6x.c: 46: dat[i]=swI2C_ReadByte(1);
  2534                           
  2535  059B  24F8               	fcall	_swI2C_ReadByte
  2536  059C  259F               	fcall	PL2	;call to abstracted procedure
  2537                           
  2538                           ;mpu6x.c: 47: swI2C_Stop();
  2539  059D  26B5               	fcall	_swI2C_Stop
  2540                           
  2541                           ;mpu6x.c: 48: return 0;
  2542  059E  3400               	retlw	0
  2543  059F                     __end_of_AccRead:	
  2544                           ;mpu6x.c: 54: else
  2545                           ;mpu6x.c: 55: return 2;
  2546                           
  2547                           ;mpu6x.c: 51: else
  2548                           ;mpu6x.c: 52: return 1;
  2549                           
  2550  059F                     PL2:	
  2551  059F  00A7               	movwf	??_AccRead
  2552  05A0  082B               	movf	AccRead@i,w
  2553  05A1  0724               	addwf	AccRead@dat,w
  2554  05A2  00A8               	movwf	??_AccRead+1
  2555  05A3  0825               	movf	AccRead@dat+1,w
  2556  05A4  1803               	skipnc
  2557  05A5  3E01               	addlw	1
  2558  05A6  00A9               	movwf	??_AccRead+2
  2559  05A7  0828               	movf	??_AccRead+1,w
  2560  05A8  0084               	movwf	4
  2561  05A9  1383               	bcf	3,7
  2562  05AA  1829               	btfsc	??_AccRead+2,0
  2563  05AB  1783               	bsf	3,7
  2564  05AC  0827               	movf	??_AccRead,w
  2565  05AD  0080               	movwf	0
  2566  05AE  0008               	return
  2567                           
  2568                           	psect	text862
  2569  05AF                     __ptext862:	
  2570 ;; =============== function _AccRead ends ============
  2571                           
  2572                           
  2573 ;; *************** function _AccWrite *****************
  2574 ;; Defined at:
  2575 ;;		line 4 in file "mpu6x.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  rAdd            1    wreg     unsigned char 
  2578 ;;  dat             2    3[BANK0 ] PTR unsigned char 
  2579 ;;		 -> RAM(256), 
  2580 ;;  len             1    5[BANK0 ] unsigned char 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  rAdd            1    8[BANK0 ] unsigned char 
  2583 ;;  i               1    9[BANK0 ] unsigned char 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      unsigned char 
  2586 ;; Registers used:
  2587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2588 ;; Tracked objects:
  2589 ;;		On entry : 20/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1
  2593 ;;      Params:         0       3       0
  2594 ;;      Locals:         0       2       0
  2595 ;;      Temps:          0       2       0
  2596 ;;      Totals:         0       7       0
  2597 ;;Total ram usage:        7 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; Hardware stack levels required when called:    3
  2600 ;; This function calls:
  2601 ;;		_swI2C_Start
  2602 ;;		_swI2C_WriteByte
  2603 ;;		_swI2C_Stop
  2604 ;; This function is called by:
  2605 ;;		_main
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608  05AF                     _AccWrite:	
  2609                           
  2610                           ; Regs used in _AccWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2611                           ;AccWrite@rAdd stored from wreg
  2612  05AF  00A8               	movwf	AccWrite@rAdd
  2613                           
  2614                           ;mpu6x.c: 5: unsigned char i;
  2615                           ;mpu6x.c: 6: swI2C_Start();
  2616  05B0  2670               	fcall	_swI2C_Start
  2617                           
  2618                           ;mpu6x.c: 8: if(swI2C_WriteByte(0x68<<1)== 0 )
  2619  05B1  30D0               	movlw	208
  2620  05B2  2537               	fcall	_swI2C_WriteByte
  2621  05B3  3800               	iorlw	0
  2622  05B4  1D03               	skipz
  2623  05B5  3401               	retlw	1
  2624                           
  2625                           ;mpu6x.c: 9: {
  2626                           ;mpu6x.c: 10: if(swI2C_WriteByte(rAdd)==0 )
  2627  05B6  0828               	movf	AccWrite@rAdd,w
  2628  05B7  2537               	fcall	_swI2C_WriteByte
  2629  05B8  3800               	iorlw	0
  2630  05B9  1D03               	skipz
  2631  05BA  3402               	retlw	2
  2632                           
  2633                           ;mpu6x.c: 11: {
  2634                           ;mpu6x.c: 12: for(i=0; i<len;i++){
  2635  05BB  01A9               	clrf	AccWrite@i
  2636  05BC                     l6618:	
  2637  05BC  0825               	movf	AccWrite@len,w
  2638  05BD  0229               	subwf	AccWrite@i,w
  2639  05BE  1803               	btfsc	3,0
  2640  05BF  2DD5               	goto	l6620
  2641                           
  2642                           ;mpu6x.c: 13: if(swI2C_WriteByte(dat[i])==1 ){
  2643  05C0  0829               	movf	AccWrite@i,w
  2644  05C1  0723               	addwf	AccWrite@dat,w
  2645  05C2  00A6               	movwf	??_AccWrite
  2646  05C3  0824               	movf	AccWrite@dat+1,w
  2647  05C4  1803               	skipnc
  2648  05C5  3E01               	addlw	1
  2649  05C6  00A7               	movwf	??_AccWrite+1
  2650  05C7  0826               	movf	??_AccWrite,w
  2651  05C8  0084               	movwf	4
  2652  05C9  1783               	bsf	3,7
  2653  05CA  1C27               	btfss	??_AccWrite+1,0
  2654  05CB  1383               	bcf	3,7
  2655  05CC  0800               	movf	0,w
  2656  05CD  2537               	fcall	_swI2C_WriteByte
  2657  05CE  3A01               	xorlw	1
  2658  05CF  1D03               	skipz
  2659  05D0  2DD3               	goto	l6616
  2660                           
  2661                           ;mpu6x.c: 14: swI2C_Stop();
  2662  05D1  26B5               	fcall	_swI2C_Stop
  2663                           
  2664                           ;mpu6x.c: 15: return 3;
  2665  05D2  3403               	retlw	3
  2666  05D3                     l6616:	
  2667  05D3  0AA9               	incf	AccWrite@i,f
  2668  05D4  2DBC               	goto	l6618
  2669  05D5                     l6620:	
  2670                           
  2671                           ;mpu6x.c: 16: }
  2672                           ;mpu6x.c: 17: }
  2673                           ;mpu6x.c: 18: swI2C_Stop();
  2674  05D5  26B5               	fcall	_swI2C_Stop
  2675                           
  2676                           ;mpu6x.c: 19: return 0;
  2677  05D6  3400               	retlw	0
  2678  05D7                     __end_of_AccWrite:	
  2679                           ;mpu6x.c: 24: else
  2680                           ;mpu6x.c: 25: return 1;
  2681                           
  2682                           ;mpu6x.c: 21: else
  2683                           ;mpu6x.c: 22: return 2;
  2684                           
  2685                           
  2686                           	psect	text863
  2687  04F8                     __ptext863:	
  2688 ;; =============== function _AccWrite ends ============
  2689                           
  2690                           
  2691 ;; *************** function _swI2C_ReadByte *****************
  2692 ;; Defined at:
  2693 ;;		line 112 in file "SWI2C.C"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  Ack             1    wreg     unsigned char 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  Ack             1    1[BANK0 ] unsigned char 
  2698 ;;  i               1    3[BANK0 ] unsigned char 
  2699 ;;  dat             1    2[BANK0 ] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      unsigned char 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 20/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1
  2709 ;;      Params:         0       0       0
  2710 ;;      Locals:         0       3       0
  2711 ;;      Temps:          0       1       0
  2712 ;;      Totals:         0       4       0
  2713 ;;Total ram usage:        4 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    2
  2716 ;; This function calls:
  2717 ;;		Nothing
  2718 ;; This function is called by:
  2719 ;;		_AccRead
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722  04F8                     _swI2C_ReadByte:	
  2723                           
  2724                           ; Regs used in _swI2C_ReadByte: [wreg+status,2+status,0]
  2725                           ;swI2C_ReadByte@Ack stored from wreg
  2726  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2727  04F9  00A1               	movwf	swI2C_ReadByte@Ack
  2728  04FA  01A2               	clrf	swI2C_ReadByte@dat
  2729                           
  2730                           ;SWI2C.C: 115: RA7 = 0;
  2731  04FB  1385               	bcf	5,7
  2732                           
  2733                           ;SWI2C.C: 116: TRISA |=0x40;;
  2734  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  2735  04FD  1705               	bsf	5,6	;volatile
  2736                           
  2737                           ;SWI2C.C: 117: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2738  04FE  3005               	movlw	5
  2739  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0500  00A0               	movwf	??_swI2C_ReadByte
  2741  0501                     u3587:	
  2742  0501  0BA0               	decfsz	??_swI2C_ReadByte,f
  2743  0502  2D01               	goto	u3587
  2744                           
  2745                           ;SWI2C.C: 118: for(i=0;i<8;i++)
  2746  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2747  0504  01A3               	clrf	swI2C_ReadByte@i
  2748  0505                     l2600:	
  2749  0505  3005               	movlw	5
  2750                           
  2751                           ;SWI2C.C: 119: {
  2752                           ;SWI2C.C: 120: RA7 = 1;
  2753  0506  1785               	bsf	5,7
  2754                           
  2755                           ;SWI2C.C: 121: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2756  0507  00A0               	movwf	??_swI2C_ReadByte
  2757  0508                     u3597:	
  2758  0508  0BA0               	decfsz	??_swI2C_ReadByte,f
  2759  0509  2D08               	goto	u3597
  2760                           
  2761                           ;SWI2C.C: 122: dat = dat<<1 |(RA6 & 1 );
  2762  050A  3000               	movlw	0
  2763  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2764  050C  1B05               	btfsc	5,6
  2765  050D  3001               	movlw	1
  2766  050E  3901               	andlw	1
  2767  050F  00A0               	movwf	??_swI2C_ReadByte
  2768  0510  1003               	clrc
  2769  0511  0D22               	rlf	swI2C_ReadByte@dat,w
  2770  0512  0420               	iorwf	??_swI2C_ReadByte,w
  2771  0513  00A2               	movwf	swI2C_ReadByte@dat
  2772  0514  3005               	movlw	5
  2773                           
  2774                           ;SWI2C.C: 125: RA7 = 0;
  2775  0515  1385               	bcf	5,7
  2776                           
  2777                           ;SWI2C.C: 126: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2778  0516  00A0               	movwf	??_swI2C_ReadByte
  2779  0517                     u3607:	
  2780  0517  0BA0               	decfsz	??_swI2C_ReadByte,f
  2781  0518  2D17               	goto	u3607
  2782  0519  3008               	movlw	8
  2783  051A  1283               	bcf	3,5	;RP0=0, select bank0
  2784  051B  0AA3               	incf	swI2C_ReadByte@i,f
  2785  051C  0223               	subwf	swI2C_ReadByte@i,w
  2786  051D  1C03               	skipc
  2787  051E  2D05               	goto	l2600
  2788                           
  2789                           ;SWI2C.C: 127: }
  2790                           ;SWI2C.C: 129: TRISA &=0xbf;;
  2791  051F  1683               	bsf	3,5	;RP0=1, select bank1
  2792  0520  1305               	bcf	5,6	;volatile
  2793                           
  2794                           ;SWI2C.C: 131: RA6 = (Ack) ? 0 : 1;
  2795  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2796  0522  08A1               	movf	swI2C_ReadByte@Ack,f
  2797  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2798  0524  1D03               	btfss	3,2
  2799  0525  2D28               	goto	L14
  2800  0526  1705               	bsf	5,6
  2801  0527  2D29               	goto	u2754
  2802  0528                     L14:	
  2803  0528  1305               	bcf	5,6
  2804  0529                     u2754:	
  2805  0529  3005               	movlw	5
  2806                           
  2807                           ;SWI2C.C: 132: RA7 = 1;
  2808  052A  1785               	bsf	5,7
  2809                           
  2810                           ;SWI2C.C: 133: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2811  052B  00A0               	movwf	??_swI2C_ReadByte
  2812  052C                     u3617:	
  2813  052C  0BA0               	decfsz	??_swI2C_ReadByte,f
  2814  052D  2D2C               	goto	u3617
  2815  052E  3005               	movlw	5
  2816                           
  2817                           ;SWI2C.C: 134: RA7 = 0;
  2818  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2819  0530  1385               	bcf	5,7
  2820                           
  2821                           ;SWI2C.C: 135: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2822  0531  00A0               	movwf	??_swI2C_ReadByte
  2823  0532                     u3627:	
  2824  0532  0BA0               	decfsz	??_swI2C_ReadByte,f
  2825  0533  2D32               	goto	u3627
  2826                           
  2827                           ;SWI2C.C: 136: return dat;
  2828  0534  1283               	bcf	3,5	;RP0=0, select bank0
  2829  0535  0822               	movf	swI2C_ReadByte@dat,w
  2830  0536  0008               	return
  2831  0537                     __end_of_swI2C_ReadByte:	
  2832                           
  2833                           	psect	text864
  2834  0537                     __ptext864:	
  2835 ;; =============== function _swI2C_ReadByte ends ============
  2836                           
  2837                           
  2838 ;; *************** function _swI2C_WriteByte *****************
  2839 ;; Defined at:
  2840 ;;		line 86 in file "SWI2C.C"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  dat             1    wreg     unsigned char 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  dat             1    1[BANK0 ] unsigned char 
  2845 ;;  i               1    2[BANK0 ] unsigned char 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      unsigned char 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 20/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1
  2855 ;;      Params:         0       0       0
  2856 ;;      Locals:         0       2       0
  2857 ;;      Temps:          0       1       0
  2858 ;;      Totals:         0       3       0
  2859 ;;Total ram usage:        3 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    2
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_AccWrite
  2866 ;;		_AccRead
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869  0537                     _swI2C_WriteByte:	
  2870                           
  2871                           ; Regs used in _swI2C_WriteByte: [wreg+status,2+status,0]
  2872                           ;swI2C_WriteByte@dat stored from wreg
  2873  0537  1283               	bcf	3,5	;RP0=0, select bank0
  2874  0538  00A1               	movwf	swI2C_WriteByte@dat
  2875                           
  2876                           ;SWI2C.C: 89: TRISA &=0xbf;;
  2877  0539  1683               	bsf	3,5	;RP0=1, select bank1
  2878  053A  1305               	bcf	5,6	;volatile
  2879                           
  2880                           ;SWI2C.C: 90: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2881  053B  3005               	movlw	5
  2882  053C  1283               	bcf	3,5	;RP0=0, select bank0
  2883  053D  00A0               	movwf	??_swI2C_WriteByte
  2884  053E                     u3637:	
  2885  053E  0BA0               	decfsz	??_swI2C_WriteByte,f
  2886  053F  2D3E               	goto	u3637
  2887                           
  2888                           ;SWI2C.C: 91: for(i=0;i<8;i++)
  2889  0540  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0541  01A2               	clrf	swI2C_WriteByte@i
  2891  0542                     l2595:	
  2892                           
  2893                           ;SWI2C.C: 92: {
  2894                           ;SWI2C.C: 93: RA6 = (dat&0x80) ? 1:0;
  2895  0542  1FA1               	btfss	swI2C_WriteByte@dat,7
  2896  0543  2D47               	goto	u2700
  2897  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2898  0545  1705               	bsf	5,6
  2899  0546  2D49               	goto	u2714
  2900  0547                     u2700:	
  2901  0547  1283               	bcf	3,5	;RP0=0, select bank0
  2902  0548  1305               	bcf	5,6
  2903  0549                     u2714:	
  2904  0549  3005               	movlw	5
  2905                           
  2906                           ;SWI2C.C: 94: dat<<=1;
  2907  054A  1003               	clrc
  2908  054B  0DA1               	rlf	swI2C_WriteByte@dat,f
  2909                           
  2910                           ;SWI2C.C: 95: RA7 = 1;
  2911  054C  1785               	bsf	5,7
  2912                           
  2913                           ;SWI2C.C: 96: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2914  054D  00A0               	movwf	??_swI2C_WriteByte
  2915  054E                     u3647:	
  2916  054E  0BA0               	decfsz	??_swI2C_WriteByte,f
  2917  054F  2D4E               	goto	u3647
  2918  0550  3005               	movlw	5
  2919                           
  2920                           ;SWI2C.C: 97: RA7 = 0;
  2921  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0552  1385               	bcf	5,7
  2923                           
  2924                           ;SWI2C.C: 98: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2925  0553  00A0               	movwf	??_swI2C_WriteByte
  2926  0554                     u3657:	
  2927  0554  0BA0               	decfsz	??_swI2C_WriteByte,f
  2928  0555  2D54               	goto	u3657
  2929  0556  3008               	movlw	8
  2930  0557  1283               	bcf	3,5	;RP0=0, select bank0
  2931  0558  0AA2               	incf	swI2C_WriteByte@i,f
  2932  0559  0222               	subwf	swI2C_WriteByte@i,w
  2933  055A  1C03               	skipc
  2934  055B  2D42               	goto	l2595
  2935                           
  2936                           ;SWI2C.C: 99: }
  2937                           ;SWI2C.C: 101: TRISA |=0x40;;
  2938  055C  1683               	bsf	3,5	;RP0=1, select bank1
  2939  055D  1705               	bsf	5,6	;volatile
  2940                           
  2941                           ;SWI2C.C: 102: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2942  055E  3005               	movlw	5
  2943  055F  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0560  00A0               	movwf	??_swI2C_WriteByte
  2945  0561                     u3667:	
  2946  0561  0BA0               	decfsz	??_swI2C_WriteByte,f
  2947  0562  2D61               	goto	u3667
  2948  0563  3005               	movlw	5
  2949                           
  2950                           ;SWI2C.C: 103: RA7 = 1;
  2951  0564  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0565  1785               	bsf	5,7
  2953                           
  2954                           ;SWI2C.C: 104: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2955  0566  00A0               	movwf	??_swI2C_WriteByte
  2956  0567                     u3677:	
  2957  0567  0BA0               	decfsz	??_swI2C_WriteByte,f
  2958  0568  2D67               	goto	u3677
  2959                           
  2960                           ;SWI2C.C: 105: i= RA6;
  2961  0569  3000               	movlw	0
  2962  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2963  056B  1B05               	btfsc	5,6
  2964  056C  3001               	movlw	1
  2965  056D  00A2               	movwf	swI2C_WriteByte@i
  2966                           
  2967                           ;SWI2C.C: 106: RA7 = 0;
  2968  056E  1385               	bcf	5,7
  2969                           
  2970                           ;SWI2C.C: 107: TRISA &=0xbf;;
  2971  056F  1683               	bsf	3,5	;RP0=1, select bank1
  2972  0570  1305               	bcf	5,6	;volatile
  2973                           
  2974                           ;SWI2C.C: 108: return i;
  2975  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0572  0822               	movf	swI2C_WriteByte@i,w
  2977  0573  0008               	return
  2978  0574                     __end_of_swI2C_WriteByte:	
  2979                           
  2980                           	psect	text865
  2981  06B5                     __ptext865:	
  2982 ;; =============== function _swI2C_WriteByte ends ============
  2983                           
  2984                           
  2985 ;; *************** function _swI2C_Stop *****************
  2986 ;; Defined at:
  2987 ;;		line 35 in file "SWI2C.C"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;		None
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;		None
  2992 ;; Return value:  Size  Location     Type
  2993 ;;		None               void
  2994 ;; Registers used:
  2995 ;;		wreg
  2996 ;; Tracked objects:
  2997 ;;		On entry : 20/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMMON   BANK0   BANK1
  3001 ;;      Params:         0       0       0
  3002 ;;      Locals:         0       0       0
  3003 ;;      Temps:          0       1       0
  3004 ;;      Totals:         0       1       0
  3005 ;;Total ram usage:        1 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    2
  3008 ;; This function calls:
  3009 ;;		Nothing
  3010 ;; This function is called by:
  3011 ;;		_AccWrite
  3012 ;;		_AccRead
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015  06B5                     _swI2C_Stop:	
  3016  06B5  3005               	movlw	5
  3017                           
  3018                           ;SWI2C.C: 37: RA6 = 0;
  3019                           
  3020                           ; Regs used in _swI2C_Stop: [wreg]
  3021  06B6  1305               	bcf	5,6
  3022                           
  3023                           ;SWI2C.C: 38: RA7 = 1;
  3024  06B7  1785               	bsf	5,7
  3025                           
  3026                           ;SWI2C.C: 39: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3027  06B8  00A0               	movwf	??_swI2C_Stop
  3028  06B9                     u3687:	
  3029  06B9  0BA0               	decfsz	??_swI2C_Stop,f
  3030  06BA  2EB9               	goto	u3687
  3031  06BB  3005               	movlw	5
  3032                           
  3033                           ;SWI2C.C: 40: RA6 = 1;
  3034  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  3035  06BD  1705               	bsf	5,6
  3036                           
  3037                           ;SWI2C.C: 41: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3038  06BE  00A0               	movwf	??_swI2C_Stop
  3039  06BF                     u3697:	
  3040  06BF  0BA0               	decfsz	??_swI2C_Stop,f
  3041  06C0  2EBF               	goto	u3697
  3042  06C1  0008               	return
  3043  06C2                     __end_of_swI2C_Stop:	
  3044                           
  3045                           	psect	text866
  3046  0670                     __ptext866:	
  3047 ;; =============== function _swI2C_Stop ends ============
  3048                           
  3049                           
  3050 ;; *************** function _swI2C_Start *****************
  3051 ;; Defined at:
  3052 ;;		line 22 in file "SWI2C.C"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;		None               void
  3059 ;; Registers used:
  3060 ;;		wreg
  3061 ;; Tracked objects:
  3062 ;;		On entry : 20/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1
  3066 ;;      Params:         0       0       0
  3067 ;;      Locals:         0       0       0
  3068 ;;      Temps:          0       1       0
  3069 ;;      Totals:         0       1       0
  3070 ;;Total ram usage:        1 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    2
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_AccWrite
  3077 ;;		_AccRead
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080  0670                     _swI2C_Start:	
  3081  0670  3005               	movlw	5
  3082                           
  3083                           ;SWI2C.C: 24: RA7 = 1;
  3084                           
  3085                           ; Regs used in _swI2C_Start: [wreg]
  3086  0671  1785               	bsf	5,7
  3087                           
  3088                           ;SWI2C.C: 26: RA6 = 1;
  3089  0672  1705               	bsf	5,6
  3090                           
  3091                           ;SWI2C.C: 27: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3092  0673  00A0               	movwf	??_swI2C_Start
  3093  0674                     u3707:	
  3094  0674  0BA0               	decfsz	??_swI2C_Start,f
  3095  0675  2E74               	goto	u3707
  3096  0676  3005               	movlw	5
  3097                           
  3098                           ;SWI2C.C: 28: RA6 = 0;
  3099  0677  1283               	bcf	3,5	;RP0=0, select bank0
  3100  0678  1305               	bcf	5,6
  3101                           
  3102                           ;SWI2C.C: 29: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3103  0679  00A0               	movwf	??_swI2C_Start
  3104  067A                     u3717:	
  3105  067A  0BA0               	decfsz	??_swI2C_Start,f
  3106  067B  2E7A               	goto	u3717
  3107  067C  3005               	movlw	5
  3108                           
  3109                           ;SWI2C.C: 30: RA7 = 0;
  3110  067D  1283               	bcf	3,5	;RP0=0, select bank0
  3111  067E  1385               	bcf	5,7
  3112                           
  3113                           ;SWI2C.C: 31: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3114  067F  00A0               	movwf	??_swI2C_Start
  3115  0680                     u3727:	
  3116  0680  0BA0               	decfsz	??_swI2C_Start,f
  3117  0681  2E80               	goto	u3727
  3118  0682  0008               	return
  3119  0683                     __end_of_swI2C_Start:	
  3120                           
  3121                           	psect	text867
  3122  05D7                     __ptext867:	
  3123 ;; =============== function _swI2C_Start ends ============
  3124                           
  3125                           
  3126 ;; *************** function _swI2C_Init *****************
  3127 ;; Defined at:
  3128 ;;		line 8 in file "SWI2C.C"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;		None               void
  3135 ;; Registers used:
  3136 ;;		wreg
  3137 ;; Tracked objects:
  3138 ;;		On entry : 20/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1
  3142 ;;      Params:         0       0       0
  3143 ;;      Locals:         0       0       0
  3144 ;;      Temps:          0       1       0
  3145 ;;      Totals:         0       1       0
  3146 ;;Total ram usage:        1 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    2
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_main
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155  05D7                     _swI2C_Init:	
  3156                           
  3157                           ;SWI2C.C: 10: TRISA &=0xbf;;
  3158                           
  3159                           ; Regs used in _swI2C_Init: [wreg]
  3160  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  3161  05D8  1305               	bcf	5,6	;volatile
  3162                           
  3163                           ;SWI2C.C: 11: TRISA &=0x7f;;
  3164  05D9  1385               	bcf	5,7	;volatile
  3165                           
  3166                           ;SWI2C.C: 12: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3167  05DA  3005               	movlw	5
  3168  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3169  05DC  00A0               	movwf	??_swI2C_Init
  3170  05DD                     u3737:	
  3171  05DD  0BA0               	decfsz	??_swI2C_Init,f
  3172  05DE  2DDD               	goto	u3737
  3173  05DF  3005               	movlw	5
  3174                           
  3175                           ;SWI2C.C: 13: RA7 = 1;
  3176  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  3177  05E1  1785               	bsf	5,7
  3178  05E2  1705               	bsf	5,6
  3179                           
  3180                           ;SWI2C.C: 15: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3181  05E3  00A0               	movwf	??_swI2C_Init
  3182  05E4                     u3747:	
  3183  05E4  0BA0               	decfsz	??_swI2C_Init,f
  3184  05E5  2DE4               	goto	u3747
  3185                           
  3186                           ;SWI2C.C: 16: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3187  05E6  3005               	movlw	5
  3188  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  3189  05E8  00A0               	movwf	??_swI2C_Init
  3190  05E9                     u3757:	
  3191  05E9  0BA0               	decfsz	??_swI2C_Init,f
  3192  05EA  2DE9               	goto	u3757
  3193                           
  3194                           ;SWI2C.C: 17: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3195  05EB  3005               	movlw	5
  3196  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  3197  05ED  00A0               	movwf	??_swI2C_Init
  3198  05EE                     u3767:	
  3199  05EE  0BA0               	decfsz	??_swI2C_Init,f
  3200  05EF  2DEE               	goto	u3767
  3201                           
  3202                           ;SWI2C.C: 18: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3203  05F0  3005               	movlw	5
  3204  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3205  05F2  00A0               	movwf	??_swI2C_Init
  3206  05F3                     u3777:	
  3207  05F3  0BA0               	decfsz	??_swI2C_Init,f
  3208  05F4  2DF3               	goto	u3777
  3209  05F5  0008               	return
  3210  05F6                     __end_of_swI2C_Init:	
  3211                           
  3212                           	psect	text868
  3213  06DB                     __ptext868:	
  3214 ;; =============== function _swI2C_Init ends ============
  3215                           
  3216                           
  3217 ;; *************** function _sys_init *****************
  3218 ;; Defined at:
  3219 ;;		line 3 in file "sysinit.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;		None
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;		None
  3224 ;; Return value:  Size  Location     Type
  3225 ;;		None               void
  3226 ;; Registers used:
  3227 ;;		wreg
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 20/20
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMMON   BANK0   BANK1
  3233 ;;      Params:         0       0       0
  3234 ;;      Locals:         0       0       0
  3235 ;;      Temps:          0       0       0
  3236 ;;      Totals:         0       0       0
  3237 ;;Total ram usage:        0 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    2
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_main
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246  06DB                     _sys_init:	
  3247                           
  3248                           ;sysinit.c: 21: OSCCON = 0B01010001;
  3249                           
  3250                           ; Regs used in _sys_init: [wreg]
  3251  06DB  3051               	movlw	81
  3252  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  3253  06DD  008F               	movwf	15	;volatile
  3254                           
  3255                           ;sysinit.c: 22: _nop();
  3256  06DE  0000               	nop
  3257  06DF                     l1784:	
  3258                           ;sysinit.c: 28: while(HTS==0);
  3259                           
  3260  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  3261  06E0  190F               	btfsc	15,2
  3262  06E1  0008               	return
  3263  06E2  2EDF               	goto	l1784
  3264  06E3                     __end_of_sys_init:	
  3265                           
  3266                           	psect	text869
  3267  0644                     __ptext869:	
  3268 ;; =============== function _sys_init ends ============
  3269                           
  3270                           
  3271 ;; *************** function _beep *****************
  3272 ;; Defined at:
  3273 ;;		line 176 in file "smartkey.C"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  delay           1    wreg     unsigned char 
  3276 ;;  rep             1    4[BANK0 ] unsigned char 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  delay           1    5[BANK0 ] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;		None               void
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0, pclath, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 20/0
  3285 ;;		On exit  : 20/0
  3286 ;;		Unchanged: FFFDF/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1
  3288 ;;      Params:         0       1       0
  3289 ;;      Locals:         0       1       0
  3290 ;;      Temps:          0       0       0
  3291 ;;      Totals:         0       2       0
  3292 ;;Total ram usage:        2 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    3
  3295 ;; This function calls:
  3296 ;;		_delay_x10ms
  3297 ;; This function is called by:
  3298 ;;		_main
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301  0644                     _beep:	
  3302                           
  3303                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  3304                           ;beep@delay stored from wreg
  3305  0644  00A5               	movwf	beep@delay
  3306  0645                     l6518:	
  3307                           ;smartkey.C: 177: {
  3308                           ;smartkey.C: 178: while(rep--){
  3309                           
  3310  0645  03A4               	decf	beep@rep,f
  3311  0646  0824               	movf	beep@rep,w
  3312  0647  3AFF               	xorlw	255
  3313  0648  1903               	btfsc	3,2
  3314  0649  0008               	return
  3315  064A  300C               	movlw	12
  3316                           
  3317                           ;smartkey.C: 179: TMR2ON = 1;
  3318  064B  1512               	bsf	18,2
  3319                           
  3320                           ;smartkey.C: 180: PR2L = 12;
  3321  064C  1683               	bsf	3,5	;RP0=1, select bank1
  3322  064D  0091               	movwf	17	;volatile
  3323                           
  3324                           ;smartkey.C: 181: delay_x10ms(delay);
  3325  064E  1283               	bcf	3,5	;RP0=0, select bank0
  3326  064F  0825               	movf	beep@delay,w
  3327  0650  00A0               	movwf	?_delay_x10ms
  3328  0651  01A1               	clrf	?_delay_x10ms+1
  3329  0652  2683               	fcall	_delay_x10ms
  3330  0653  3014               	movlw	20
  3331                           
  3332                           ;smartkey.C: 183: TMR2ON = 0;RA3 =0;
  3333  0654  1112               	bcf	18,2
  3334  0655  1185               	bcf	5,3
  3335                           
  3336                           ;smartkey.C: 184: delay_x10ms(20);
  3337  0656  00A0               	movwf	?_delay_x10ms
  3338  0657  01A1               	clrf	?_delay_x10ms+1
  3339  0658  2683               	fcall	_delay_x10ms
  3340  0659  2E45               	goto	l6518
  3341  065A                     __end_of_beep:	
  3342                           
  3343                           	psect	text870
  3344  046E                     __ptext870:	
  3345 ;; =============== function _beep ends ============
  3346                           
  3347                           
  3348 ;; *************** function ___awdiv *****************
  3349 ;; Defined at:
  3350 ;;		line 5 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\awdiv.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  divisor         2    0[BANK0 ] int 
  3353 ;;  dividend        2    2[BANK0 ] int 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  quotient        2    6[BANK0 ] int 
  3356 ;;  sign            1    5[BANK0 ] unsigned char 
  3357 ;;  counter         1    4[BANK0 ] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  2    0[BANK0 ] int 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0
  3362 ;; Tracked objects:
  3363 ;;		On entry : 20/0
  3364 ;;		On exit  : 20/0
  3365 ;;		Unchanged: FFFDF/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1
  3367 ;;      Params:         0       4       0
  3368 ;;      Locals:         0       4       0
  3369 ;;      Temps:          0       0       0
  3370 ;;      Totals:         0       8       0
  3371 ;;Total ram usage:        8 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    2
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_main
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380  046E                     ___awdiv:	
  3381                           
  3382                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3383  046E  01A5               	clrf	___awdiv@sign
  3384  046F  1FA1               	btfss	___awdiv@divisor+1,7
  3385  0470  2C78               	goto	l6470
  3386  0471  09A0               	comf	___awdiv@divisor,f
  3387  0472  09A1               	comf	___awdiv@divisor+1,f
  3388  0473  0AA0               	incf	___awdiv@divisor,f
  3389  0474  1903               	skipnz
  3390  0475  0AA1               	incf	___awdiv@divisor+1,f
  3391  0476  01A5               	clrf	___awdiv@sign
  3392  0477  0AA5               	incf	___awdiv@sign,f
  3393  0478                     l6470:	
  3394  0478  1FA3               	btfss	___awdiv@dividend+1,7
  3395  0479  2C81               	goto	l6476
  3396  047A  09A2               	comf	___awdiv@dividend,f
  3397  047B  09A3               	comf	___awdiv@dividend+1,f
  3398  047C  0AA2               	incf	___awdiv@dividend,f
  3399  047D  1903               	skipnz
  3400  047E  0AA3               	incf	___awdiv@dividend+1,f
  3401  047F  3001               	movlw	1
  3402  0480  06A5               	xorwf	___awdiv@sign,f
  3403  0481                     l6476:	
  3404  0481  01A6               	clrf	___awdiv@quotient
  3405  0482  01A7               	clrf	___awdiv@quotient+1
  3406  0483  0821               	movf	___awdiv@divisor+1,w
  3407  0484  0420               	iorwf	___awdiv@divisor,w
  3408  0485  1903               	skipnz
  3409  0486  2CA6               	goto	l6498
  3410  0487  01A4               	clrf	___awdiv@counter
  3411  0488                     L15:	
  3412  0488  0AA4               	incf	___awdiv@counter,f
  3413  0489  1BA1               	btfsc	___awdiv@divisor+1,7
  3414  048A  2C8F               	goto	l6486
  3415  048B  1003               	clrc
  3416  048C  0DA0               	rlf	___awdiv@divisor,f
  3417  048D  0DA1               	rlf	___awdiv@divisor+1,f
  3418  048E  2C88               	goto	L15
  3419  048F                     l6486:	
  3420  048F  1003               	clrc
  3421  0490  0DA6               	rlf	___awdiv@quotient,f
  3422  0491  0DA7               	rlf	___awdiv@quotient+1,f
  3423  0492  0821               	movf	___awdiv@divisor+1,w
  3424  0493  0223               	subwf	___awdiv@dividend+1,w
  3425  0494  1D03               	skipz
  3426  0495  2C98               	goto	u2655
  3427  0496  0820               	movf	___awdiv@divisor,w
  3428  0497  0222               	subwf	___awdiv@dividend,w
  3429  0498                     u2655:	
  3430  0498  1C03               	skipc
  3431  0499  2CA2               	goto	L16
  3432  049A  0820               	movf	___awdiv@divisor,w
  3433  049B  02A2               	subwf	___awdiv@dividend,f
  3434  049C  0821               	movf	___awdiv@divisor+1,w
  3435  049D  1C03               	skipc
  3436  049E  03A3               	decf	___awdiv@dividend+1,f
  3437  049F  02A3               	subwf	___awdiv@dividend+1,f
  3438  04A0  1426               	bsf	___awdiv@quotient,0
  3439  04A1  1003               	clrc
  3440  04A2                     L16:	
  3441  04A2  0CA1               	rrf	___awdiv@divisor+1,f
  3442  04A3  0CA0               	rrf	___awdiv@divisor,f
  3443  04A4  0BA4               	decfsz	___awdiv@counter,f
  3444  04A5  2C8F               	goto	l6486
  3445  04A6                     l6498:	
  3446  04A6  0825               	movf	___awdiv@sign,w
  3447  04A7  1903               	btfsc	3,2
  3448  04A8  2CAE               	goto	l6502
  3449  04A9  09A6               	comf	___awdiv@quotient,f
  3450  04AA  09A7               	comf	___awdiv@quotient+1,f
  3451  04AB  0AA6               	incf	___awdiv@quotient,f
  3452  04AC  1903               	skipnz
  3453  04AD  0AA7               	incf	___awdiv@quotient+1,f
  3454  04AE                     l6502:	
  3455  04AE  0827               	movf	___awdiv@quotient+1,w
  3456  04AF  00A1               	movwf	?___awdiv+1
  3457  04B0  0826               	movf	___awdiv@quotient,w
  3458  04B1  00A0               	movwf	?___awdiv
  3459  04B2  0008               	return
  3460  04B3                     __end_of___awdiv:	
  3461                           
  3462                           	psect	text871
  3463  05F6                     __ptext871:	
  3464 ;; =============== function ___awdiv ends ============
  3465                           
  3466                           
  3467 ;; *************** function _int_init *****************
  3468 ;; Defined at:
  3469 ;;		line 83 in file "sysinit.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  tmp             1    0        unsigned char 
  3474 ;; Return value:  Size  Location     Type
  3475 ;;		None               void
  3476 ;; Registers used:
  3477 ;;		wreg, status,2
  3478 ;; Tracked objects:
  3479 ;;		On entry : 20/0
  3480 ;;		On exit  : 20/0
  3481 ;;		Unchanged: FFFDF/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1
  3483 ;;      Params:         0       0       0
  3484 ;;      Locals:         0       0       0
  3485 ;;      Temps:          0       0       0
  3486 ;;      Totals:         0       0       0
  3487 ;;Total ram usage:        0 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    2
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496  05F6                     _int_init:	
  3497                           
  3498                           ;sysinit.c: 88: INTCON = 0B00000000;
  3499                           
  3500                           ; Regs used in _int_init: [wreg+status,2]
  3501  05F6  018B               	clrf	11	;volatile
  3502                           
  3503                           ;sysinit.c: 89: PIE1 = 0B00000000;
  3504  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  3505  05F8  018C               	clrf	12	;volatile
  3506                           
  3507                           ;sysinit.c: 90: PIR1 = 0B00000000;
  3508  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  3509  05FA  018C               	clrf	12	;volatile
  3510                           
  3511                           ;sysinit.c: 92: IOCA5 = 1;
  3512  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  3513  05FC  1696               	bsf	22,5
  3514                           
  3515                           ;sysinit.c: 93: tmp = PORTA;
  3516  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3517  05FE  0805               	movf	5,w	;volatile
  3518                           
  3519                           ;sysinit.c: 94: PAIF = 0;
  3520  05FF  100B               	bcf	11,0
  3521                           
  3522                           ;sysinit.c: 95: PAIE = 0;
  3523  0600  118B               	bcf	11,3
  3524                           
  3525                           ;sysinit.c: 98: INTEDG = 0;
  3526  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3527  0602  1301               	bcf	1,6
  3528                           
  3529                           ;sysinit.c: 99: INTF = 0;
  3530  0603  108B               	bcf	11,1
  3531                           
  3532                           ;sysinit.c: 100: INTE = 1;
  3533  0604  160B               	bsf	11,4
  3534                           
  3535                           ;sysinit.c: 102: TMR2IF = 0;
  3536  0605  1283               	bcf	3,5	;RP0=0, select bank0
  3537  0606  108C               	bcf	12,1
  3538                           
  3539                           ;sysinit.c: 103: TMR2IE = 1;
  3540  0607  1683               	bsf	3,5	;RP0=1, select bank1
  3541  0608  148C               	bsf	12,1
  3542                           
  3543                           ;sysinit.c: 104: TMR2ON = 0;
  3544  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3545  060A  1112               	bcf	18,2
  3546                           
  3547                           ;sysinit.c: 110: T0IF = 0;
  3548  060B  110B               	bcf	11,2
  3549                           
  3550                           ;sysinit.c: 111: T0IE = 1;
  3551  060C  168B               	bsf	11,5
  3552                           
  3553                           ;sysinit.c: 112: T0ON = 1;
  3554  060D  159F               	bsf	31,3
  3555                           
  3556                           ;sysinit.c: 114: PEIE = 1;
  3557  060E  170B               	bsf	11,6
  3558                           
  3559                           ;sysinit.c: 116: GIE = 1;
  3560  060F  178B               	bsf	11,7
  3561  0610  0008               	return
  3562  0611                     __end_of_int_init:	
  3563                           
  3564                           	psect	text872
  3565  0696                     __ptext872:	
  3566 ;; =============== function _int_init ends ============
  3567                           
  3568                           
  3569 ;; *************** function _timer_init *****************
  3570 ;; Defined at:
  3571 ;;		line 51 in file "sysinit.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;		None
  3576 ;; Return value:  Size  Location     Type
  3577 ;;		None               void
  3578 ;; Registers used:
  3579 ;;		wreg, status,2
  3580 ;; Tracked objects:
  3581 ;;		On entry : 20/0
  3582 ;;		On exit  : 20/0
  3583 ;;		Unchanged: FFFDF/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1
  3585 ;;      Params:         0       0       0
  3586 ;;      Locals:         0       0       0
  3587 ;;      Temps:          0       0       0
  3588 ;;      Totals:         0       0       0
  3589 ;;Total ram usage:        0 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    2
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_main
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598  0696                     _timer_init:	
  3599                           
  3600                           ;sysinit.c: 60: T0CON0 = 0B00000000;
  3601                           
  3602                           ; Regs used in _timer_init: [wreg+status,2]
  3603  0696  019F               	clrf	31	;volatile
  3604                           
  3605                           ;sysinit.c: 61: OPTION = 0B00000111;
  3606  0697  3007               	movlw	7
  3607  0698  1683               	bsf	3,5	;RP0=1, select bank1
  3608  0699  0081               	movwf	1	;volatile
  3609                           
  3610                           ;sysinit.c: 62: TMR0 = 179;
  3611  069A  30B3               	movlw	179
  3612  069B  1283               	bcf	3,5	;RP0=0, select bank0
  3613  069C  0081               	movwf	1	;volatile
  3614                           
  3615                           ;sysinit.c: 64: TMR2H = 0;
  3616  069D  0193               	clrf	19	;volatile
  3617                           
  3618                           ;sysinit.c: 65: TMR2L = 0;
  3619  069E  0191               	clrf	17	;volatile
  3620                           
  3621                           ;sysinit.c: 66: PR2H = 0;
  3622  069F  1683               	bsf	3,5	;RP0=1, select bank1
  3623  06A0  0192               	clrf	18	;volatile
  3624                           
  3625                           ;sysinit.c: 67: PR2L =0;
  3626  06A1  0191               	clrf	17	;volatile
  3627                           
  3628                           ;sysinit.c: 68: T2CON0 = 0B00101001;
  3629  06A2  3029               	movlw	41
  3630  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  3631  06A4  0092               	movwf	18	;volatile
  3632  06A5  0008               	return
  3633  06A6                     __end_of_timer_init:	
  3634                           
  3635                           	psect	text873
  3636  065A                     __ptext873:	
  3637 ;; =============== function _timer_init ends ============
  3638                           
  3639                           
  3640 ;; *************** function _gpio_init *****************
  3641 ;; Defined at:
  3642 ;;		line 32 in file "sysinit.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;		None               void
  3649 ;; Registers used:
  3650 ;;		wreg, status,2
  3651 ;; Tracked objects:
  3652 ;;		On entry : 20/20
  3653 ;;		On exit  : 20/0
  3654 ;;		Unchanged: FFFDF/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1
  3656 ;;      Params:         0       0       0
  3657 ;;      Locals:         0       0       0
  3658 ;;      Temps:          0       0       0
  3659 ;;      Totals:         0       0       0
  3660 ;;Total ram usage:        0 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    2
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669  065A                     _gpio_init:	
  3670                           
  3671                           ;sysinit.c: 34: PORTA = 0B00000000;
  3672                           
  3673                           ; Regs used in _gpio_init: [wreg+status,2]
  3674  065A  1283               	bcf	3,5	;RP0=0, select bank0
  3675  065B  0185               	clrf	5	;volatile
  3676                           
  3677                           ;sysinit.c: 35: TRISA = 0B00110111;
  3678  065C  3037               	movlw	55
  3679  065D  1683               	bsf	3,5	;RP0=1, select bank1
  3680  065E  0085               	movwf	5	;volatile
  3681                           
  3682                           ;sysinit.c: 36: WPUA = 0B11000000;
  3683  065F  30C0               	movlw	192
  3684  0660  0095               	movwf	21	;volatile
  3685                           
  3686                           ;sysinit.c: 38: PORTC = 0B00000000;
  3687  0661  1283               	bcf	3,5	;RP0=0, select bank0
  3688  0662  0187               	clrf	7	;volatile
  3689                           
  3690                           ;sysinit.c: 39: TRISC = 0B11111100;
  3691  0663  30FC               	movlw	252
  3692  0664  1683               	bsf	3,5	;RP0=1, select bank1
  3693  0665  0087               	movwf	7	;volatile
  3694                           
  3695                           ;sysinit.c: 40: WPUC = 0B00000000;
  3696  0666  0193               	clrf	19	;volatile
  3697                           
  3698                           ;sysinit.c: 42: PSRCA = 0B11111111;
  3699  0667  30FF               	movlw	255
  3700  0668  0088               	movwf	8	;volatile
  3701                           
  3702                           ;sysinit.c: 43: PSRCC = 0B11111111;
  3703  0669  0094               	movwf	20	;volatile
  3704                           
  3705                           ;sysinit.c: 44: PSINKA = 0B11111111;
  3706  066A  0097               	movwf	23	;volatile
  3707                           
  3708                           ;sysinit.c: 45: PSINKC = 0B11111111;
  3709  066B  009F               	movwf	31	;volatile
  3710                           
  3711                           ;sysinit.c: 47: MSCON = 0B00110000;
  3712  066C  3030               	movlw	48
  3713  066D  1283               	bcf	3,5	;RP0=0, select bank0
  3714  066E  009B               	movwf	27	;volatile
  3715  066F  0008               	return
  3716  0670                     __end_of_gpio_init:	
  3717                           
  3718                           	psect	text874
  3719  04B3                     __ptext874:	
  3720 ;; =============== function _gpio_init ends ============
  3721                           
  3722                           
  3723 ;; *************** function _compe *****************
  3724 ;; Defined at:
  3725 ;;		line 226 in file "smartkey.C"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  a               1    wreg     char 
  3728 ;;  b               1    0[BANK0 ] char 
  3729 ;;  dt              1    1[BANK0 ] char 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  a               1    7[BANK0 ] char 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      unsigned char 
  3734 ;; Registers used:
  3735 ;;		wreg
  3736 ;; Tracked objects:
  3737 ;;		On entry : 20/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: FFE00/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1
  3741 ;;      Params:         0       2       0
  3742 ;;      Locals:         0       1       0
  3743 ;;      Temps:          0       5       0
  3744 ;;      Totals:         0       8       0
  3745 ;;Total ram usage:        8 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    2
  3748 ;; This function calls:
  3749 ;;		Nothing
  3750 ;; This function is called by:
  3751 ;;		_main
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754  04B3                     _compe:	
  3755                           
  3756                           ; Regs used in _compe: [wreg]
  3757                           ;compe@a stored from wreg
  3758  04B3  00A7               	movwf	compe@a
  3759                           
  3760                           ;smartkey.C: 228: if(a>b){
  3761  04B4  0820               	movf	compe@b,w
  3762  04B5  3A80               	xorlw	128
  3763  04B6  00A2               	movwf	??_compe
  3764  04B7  0827               	movf	compe@a,w
  3765  04B8  3A80               	xorlw	128
  3766  04B9  02A2               	subwf	??_compe,f
  3767  04BA  1803               	skipnc
  3768  04BB  2CDF               	goto	l6388
  3769                           
  3770                           ;smartkey.C: 229: if((a-b)<=dt) return 1;
  3771  04BC  0820               	movf	compe@b,w
  3772  04BD  0227               	subwf	compe@a,w
  3773  04BE  00A2               	movwf	??_compe
  3774  04BF  01A3               	clrf	??_compe+1
  3775  04C0  1C03               	skipc
  3776  04C1  03A3               	decf	??_compe+1,f
  3777  04C2  1BA7               	btfsc	compe@a,7
  3778  04C3  03A3               	decf	??_compe+1,f
  3779  04C4  1BA0               	btfsc	compe@b,7
  3780  04C5  0AA3               	incf	??_compe+1,f
  3781  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  3782  04C7  24EC               	fcall	PL3	;call to abstracted procedure
  3783  04C8  1D03               	skipz
  3784  04C9  2CCC               	goto	u2565
  3785  04CA  0822               	movf	??_compe,w
  3786  04CB  0224               	subwf	??_compe+2,w
  3787  04CC                     u2565:	
  3788  04CC  1C03               	skipc
  3789  04CD  3400               	retlw	0
  3790  04CE  3401               	retlw	1
  3791  04CF                     L17:	
  3792                           ;smartkey.C: 233: if((b-a)<=dt) return 1;
  3793                           
  3794  04CF  0220               	subwf	compe@b,w
  3795  04D0  00A2               	movwf	??_compe
  3796  04D1  01A3               	clrf	??_compe+1
  3797  04D2  1C03               	skipc
  3798  04D3  03A3               	decf	??_compe+1,f
  3799  04D4  1BA0               	btfsc	compe@b,7
  3800  04D5  03A3               	decf	??_compe+1,f
  3801  04D6  1BA7               	btfsc	compe@a,7
  3802  04D7  0AA3               	incf	??_compe+1,f
  3803  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  3804  04D9  24EC               	fcall	PL3	;call to abstracted procedure
  3805  04DA  1D03               	skipz
  3806  04DB  2CCC               	goto	u2565
  3807  04DC  0822               	movf	??_compe,w
  3808  04DD  0224               	subwf	??_compe+2,w
  3809  04DE  2CCC               	goto	u2565
  3810  04DF                     l6388:	
  3811                           ;smartkey.C: 230: else return 0;
  3812                           
  3813                           
  3814                           ;smartkey.C: 232: else if(a<b){
  3815  04DF  0827               	movf	compe@a,w
  3816  04E0  3A80               	xorlw	128
  3817  04E1  00A2               	movwf	??_compe
  3818  04E2  0820               	movf	compe@b,w
  3819  04E3  3A80               	xorlw	128
  3820  04E4  02A2               	subwf	??_compe,f
  3821                           
  3822                           ;smartkey.C: 236: else if(a==b){
  3823  04E5  0827               	movf	compe@a,w
  3824  04E6  1C03               	btfss	3,0
  3825  04E7  2CCF               	goto	L17
  3826  04E8  0620               	xorwf	compe@b,w
  3827  04E9  1903               	btfsc	3,2
  3828  04EA  3401               	retlw	1
  3829  04EB  3400               	retlw	0
  3830  04EC                     __end_of_compe:	
  3831  04EC                     PL3:	
  3832  04EC  0821               	movf	compe@dt,w
  3833  04ED  00A4               	movwf	??_compe+2
  3834  04EE  01A5               	clrf	??_compe+3
  3835  04EF  1BA4               	btfsc	??_compe+2,7
  3836  04F0  03A5               	decf	??_compe+3,f
  3837  04F1  0825               	movf	??_compe+3,w
  3838  04F2  3A80               	xorlw	128
  3839  04F3  00A6               	movwf	??_compe+4
  3840  04F4  0823               	movf	??_compe+1,w
  3841  04F5  3A80               	xorlw	128
  3842  04F6  0226               	subwf	??_compe+4,w
  3843  04F7  0008               	return
  3844                           
  3845                           	psect	text875
  3846  06CF                     __ptext875:	
  3847 ;; =============== function _compe ends ============
  3848                           
  3849                           
  3850 ;; *************** function _setState *****************
  3851 ;; Defined at:
  3852 ;;		line 220 in file "smartkey.C"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  stt             1    wreg     unsigned char 
  3855 ;;  _tOut           2    0[BANK0 ] unsigned int 
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  stt             1    2[BANK0 ] unsigned char 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;		None               void
  3860 ;; Registers used:
  3861 ;;		wreg, status,2
  3862 ;; Tracked objects:
  3863 ;;		On entry : 20/0
  3864 ;;		On exit  : 20/0
  3865 ;;		Unchanged: FFFDF/0
  3866 ;; Data sizes:     COMMON   BANK0   BANK1
  3867 ;;      Params:         0       2       0
  3868 ;;      Locals:         0       1       0
  3869 ;;      Temps:          0       0       0
  3870 ;;      Totals:         0       3       0
  3871 ;;Total ram usage:        3 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:    2
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_main
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880  06CF                     _setState:	
  3881                           
  3882                           ; Regs used in _setState: [wreg+status,2]
  3883                           ;setState@stt stored from wreg
  3884  06CF  00A2               	movwf	setState@stt
  3885                           
  3886                           ;smartkey.C: 221: mtOldState = mtState;
  3887  06D0  0874               	movf	_mtState,w
  3888  06D1  00CC               	movwf	_mtOldState
  3889                           
  3890                           ;smartkey.C: 222: mtState = stt;
  3891  06D2  0822               	movf	setState@stt,w
  3892  06D3  00F4               	movwf	_mtState
  3893                           
  3894                           ;smartkey.C: 223: timeTick =0;
  3895  06D4  01F0               	clrf	_timeTick
  3896  06D5  01F1               	clrf	_timeTick+1
  3897                           
  3898                           ;smartkey.C: 224: timeOut = _tOut;
  3899  06D6  0821               	movf	setState@_tOut+1,w
  3900  06D7  00C8               	movwf	_timeOut+1
  3901  06D8  0820               	movf	setState@_tOut,w
  3902  06D9  00C7               	movwf	_timeOut
  3903  06DA  0008               	return
  3904  06DB                     __end_of_setState:	
  3905                           
  3906                           	psect	text876
  3907  06F0                     __ptext876:	
  3908 ;; =============== function _setState ends ============
  3909                           
  3910                           
  3911 ;; *************** function _beepOn *****************
  3912 ;; Defined at:
  3913 ;;		line 172 in file "smartkey.C"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;		None
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;		None               void
  3920 ;; Registers used:
  3921 ;;		None
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/20
  3924 ;;		On exit  : 20/20
  3925 ;;		Unchanged: FFFDF/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1
  3927 ;;      Params:         0       0       0
  3928 ;;      Locals:         0       0       0
  3929 ;;      Temps:          0       0       0
  3930 ;;      Totals:         0       0       0
  3931 ;;Total ram usage:        0 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    2
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_main
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940  06F0                     _beepOn:	
  3941                           
  3942                           ;smartkey.C: 173: TMR2ON = 1;
  3943                           
  3944                           ; Regs used in _beepOn: []
  3945  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  3946  06F1  1512               	bsf	18,2
  3947                           
  3948                           ;smartkey.C: 174: TRISA &= 0xf7;
  3949  06F2  1683               	bsf	3,5	;RP0=1, select bank1
  3950  06F3  1185               	bcf	5,3	;volatile
  3951  06F4  0008               	return
  3952  06F5                     __end_of_beepOn:	
  3953                           
  3954                           	psect	text877
  3955  06F5                     __ptext877:	
  3956 ;; =============== function _beepOn ends ============
  3957                           
  3958                           
  3959 ;; *************** function _beepOff *****************
  3960 ;; Defined at:
  3961 ;;		line 169 in file "smartkey.C"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;		None               void
  3968 ;; Registers used:
  3969 ;;		None
  3970 ;; Tracked objects:
  3971 ;;		On entry : 20/0
  3972 ;;		On exit  : 20/20
  3973 ;;		Unchanged: FFFDF/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1
  3975 ;;      Params:         0       0       0
  3976 ;;      Locals:         0       0       0
  3977 ;;      Temps:          0       0       0
  3978 ;;      Totals:         0       0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    2
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_main
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988  06F5                     _beepOff:	
  3989                           
  3990                           ;smartkey.C: 170: TMR2ON = 0;RA3 =0;TRISA |= 0x08;
  3991                           
  3992                           ; Regs used in _beepOff: []
  3993  06F5  1112               	bcf	18,2
  3994  06F6  1185               	bcf	5,3
  3995  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  3996  06F8  1585               	bsf	5,3	;volatile
  3997  06F9  0008               	return
  3998  06FA                     __end_of_beepOff:	
  3999                           
  4000                           	psect	text878
  4001  0683                     __ptext878:	
  4002 ;; =============== function _beepOff ends ============
  4003                           
  4004                           
  4005 ;; *************** function _delay_x10ms *****************
  4006 ;; Defined at:
  4007 ;;		line 164 in file "smartkey.C"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  t               2    0[BANK0 ] unsigned int 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  set             2    2[BANK0 ] unsigned int 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;		None               void
  4014 ;; Registers used:
  4015 ;;		wreg
  4016 ;; Tracked objects:
  4017 ;;		On entry : 20/0
  4018 ;;		On exit  : 20/0
  4019 ;;		Unchanged: FFFDF/0
  4020 ;; Data sizes:     COMMON   BANK0   BANK1
  4021 ;;      Params:         0       2       0
  4022 ;;      Locals:         0       2       0
  4023 ;;      Temps:          0       0       0
  4024 ;;      Totals:         0       4       0
  4025 ;;Total ram usage:        4 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:    2
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		_beep
  4032 ;;		_main
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035  0683                     _delay_x10ms:	
  4036                           
  4037                           ;smartkey.C: 165: unsigned int set = t + timeTick;
  4038                           
  4039                           ; Regs used in _delay_x10ms: [wreg]
  4040  0683  0821               	movf	delay_x10ms@t+1,w
  4041  0684  00A3               	movwf	delay_x10ms@set+1
  4042  0685  0820               	movf	delay_x10ms@t,w
  4043  0686  00A2               	movwf	delay_x10ms@set
  4044  0687  0870               	movf	_timeTick,w
  4045  0688  07A2               	addwf	delay_x10ms@set,f
  4046  0689  1803               	skipnc
  4047  068A  0AA3               	incf	delay_x10ms@set+1,f
  4048  068B  0871               	movf	_timeTick+1,w
  4049  068C  07A3               	addwf	delay_x10ms@set+1,f
  4050  068D                     l6362:	
  4051                           ;smartkey.C: 166: while(timeTick < set);
  4052                           
  4053  068D  0823               	movf	delay_x10ms@set+1,w
  4054  068E  0271               	subwf	_timeTick+1,w
  4055  068F  1D03               	skipz
  4056  0690  2E93               	goto	u2535
  4057  0691  0822               	movf	delay_x10ms@set,w
  4058  0692  0270               	subwf	_timeTick,w
  4059  0693                     u2535:	
  4060  0693  1803               	btfsc	3,0
  4061  0694  0008               	return
  4062  0695  2E8D               	goto	l6362
  4063  0696                     __end_of_delay_x10ms:	
  4064                           
  4065                           	psect	text879
  4066  0611                     __ptext879:	
  4067 ;; =============== function _delay_x10ms ends ============
  4068                           
  4069                           
  4070 ;; *************** function _WRITE_EEPROM *****************
  4071 ;; Defined at:
  4072 ;;		line 205 in file "smartkey.C"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  EEAddr          1    wreg     unsigned char 
  4075 ;;  EEData          1    0[BANK0 ] unsigned char 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  EEAddr          1    1[BANK0 ] unsigned char 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;		None               void
  4080 ;; Registers used:
  4081 ;;		wreg
  4082 ;; Tracked objects:
  4083 ;;		On entry : 20/0
  4084 ;;		On exit  : 20/20
  4085 ;;		Unchanged: FFE00/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1
  4087 ;;      Params:         0       1       0
  4088 ;;      Locals:         0       1       0
  4089 ;;      Temps:          0       0       0
  4090 ;;      Totals:         0       2       0
  4091 ;;Total ram usage:        2 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    2
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_main
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100  0611                     _WRITE_EEPROM:	
  4101                           
  4102                           ; Regs used in _WRITE_EEPROM: [wreg]
  4103                           ;WRITE_EEPROM@EEAddr stored from wreg
  4104  0611  00A1               	movwf	WRITE_EEPROM@EEAddr
  4105                           
  4106                           ;smartkey.C: 206: GIE = 0;
  4107  0612  138B               	bcf	11,7
  4108  0613                     l874:	
  4109                           ;smartkey.C: 207: while(GIE) asm("clrwdt");
  4110                           
  4111  0613  1F8B               	btfss	11,7
  4112  0614  2E17               	goto	l6354
  4113  0615  0064               	clrwdt	;#
  4114  0616  2E13               	goto	l874
  4115  0617                     l6354:	
  4116                           
  4117                           ;smartkey.C: 208: EEADR = EEAddr;
  4118  0617  1283               	bcf	3,5	;RP0=0, select bank0
  4119  0618  0821               	movf	WRITE_EEPROM@EEAddr,w
  4120  0619  1683               	bsf	3,5	;RP0=1, select bank1
  4121  061A  009B               	movwf	27	;volatile
  4122                           
  4123                           ;smartkey.C: 209: EEDAT = EEData;
  4124  061B  1283               	bcf	3,5	;RP0=0, select bank0
  4125  061C  0820               	movf	WRITE_EEPROM@EEData,w
  4126  061D  1683               	bsf	3,5	;RP0=1, select bank1
  4127  061E  009A               	movwf	26	;volatile
  4128  061F  3034               	movlw	52
  4129                           
  4130                           ;smartkey.C: 210: EEIF = 0;
  4131  0620  1283               	bcf	3,5	;RP0=0, select bank0
  4132  0621  138C               	bcf	12,7
  4133                           
  4134                           ;smartkey.C: 211: EECON1 = 0x34;
  4135  0622  1683               	bsf	3,5	;RP0=1, select bank1
  4136  0623  009C               	movwf	28	;volatile
  4137                           
  4138                           ;smartkey.C: 212: WR = 1;
  4139  0624  141D               	bsf	29,0
  4140  0625                     l877:	
  4141                           ;smartkey.C: 213: while(WR) asm("clrwdt");
  4142                           
  4143  0625  1683               	bsf	3,5	;RP0=1, select bank1
  4144  0626  1C1D               	btfss	29,0
  4145  0627  2E2A               	goto	l879
  4146  0628  0064               	clrwdt	;#
  4147  0629  2E25               	goto	l877
  4148  062A                     l879:	
  4149                           
  4150                           ;smartkey.C: 215: GIE = 1;
  4151  062A  178B               	bsf	11,7
  4152  062B  0008               	return
  4153  062C                     __end_of_WRITE_EEPROM:	
  4154                           
  4155                           	psect	text880
  4156  06C2                     __ptext880:	
  4157 ;; =============== function _WRITE_EEPROM ends ============
  4158                           
  4159                           
  4160 ;; *************** function _READ_EEPROM *****************
  4161 ;; Defined at:
  4162 ;;		line 194 in file "smartkey.C"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  EEAddr          1    wreg     unsigned char 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  EEAddr          1    0[BANK0 ] unsigned char 
  4167 ;;  ReEepromData    1    1[BANK0 ] unsigned char 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      unsigned char 
  4170 ;; Registers used:
  4171 ;;		wreg
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/20
  4174 ;;		On exit  : 20/0
  4175 ;;		Unchanged: FFFDF/0
  4176 ;; Data sizes:     COMMON   BANK0   BANK1
  4177 ;;      Params:         0       0       0
  4178 ;;      Locals:         0       2       0
  4179 ;;      Temps:          0       0       0
  4180 ;;      Totals:         0       2       0
  4181 ;;Total ram usage:        2 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:    2
  4184 ;; This function calls:
  4185 ;;		Nothing
  4186 ;; This function is called by:
  4187 ;;		_main
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190  06C2                     _READ_EEPROM:	
  4191                           
  4192                           ; Regs used in _READ_EEPROM: [wreg]
  4193                           ;READ_EEPROM@EEAddr stored from wreg
  4194  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  4195  06C3  00A0               	movwf	READ_EEPROM@EEAddr
  4196                           
  4197                           ;smartkey.C: 195: unsigned char ReEepromData;
  4198                           ;smartkey.C: 197: EEADR = EEAddr;
  4199  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  4200  06C5  009B               	movwf	27	;volatile
  4201                           
  4202                           ;smartkey.C: 198: RD = 1;
  4203  06C6  141C               	bsf	28,0
  4204                           
  4205                           ;smartkey.C: 199: ReEepromData = EEDAT;
  4206  06C7  081A               	movf	26,w	;volatile
  4207  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  4208  06C9  00A1               	movwf	READ_EEPROM@ReEepromData
  4209                           
  4210                           ;smartkey.C: 200: RD = 0;
  4211  06CA  1683               	bsf	3,5	;RP0=1, select bank1
  4212  06CB  101C               	bcf	28,0
  4213                           
  4214                           ;smartkey.C: 201: return ReEepromData;
  4215  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  4216  06CD  0821               	movf	READ_EEPROM@ReEepromData,w
  4217  06CE  0008               	return
  4218  06CF                     __end_of_READ_EEPROM:	
  4219                           
  4220                           	psect	text881
  4221  03E8                     __ptext881:	
  4222 ;; =============== function _READ_EEPROM ends ============
  4223                           
  4224                           
  4225 ;; *************** function _ISR *****************
  4226 ;; Defined at:
  4227 ;;		line 38 in file "smartkey.C"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  tmp             1    4[COMMON] unsigned char 
  4232 ;;  tmp             1    0        unsigned char 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;		None               void
  4235 ;; Registers used:
  4236 ;;		wreg, status,2, status,0, pclath, cstack
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: FFE00/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1
  4242 ;;      Params:         0       0       0
  4243 ;;      Locals:         1       0       0
  4244 ;;      Temps:          2       0       0
  4245 ;;      Totals:         3       0       0
  4246 ;;Total ram usage:        3 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    1
  4249 ;; This function calls:
  4250 ;;		i1_READ_EEPROM
  4251 ;;		i1_WRITE_EEPROM
  4252 ;; This function is called by:
  4253 ;;		Interrupt level 1
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256  03E8                     _ISR:	
  4257                           
  4258                           ;smartkey.C: 42: if(PAIE&&PAIF){
  4259  03E8  198B               	btfsc	11,3
  4260  03E9  1C0B               	btfss	11,0
  4261  03EA  2BF9               	goto	i1l5444
  4262                           
  4263                           ;smartkey.C: 44: tmp = PORTA;
  4264  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  4265  03EC  0805               	movf	5,w	;volatile
  4266                           
  4267                           ;smartkey.C: 45: PAIF = 0;
  4268  03ED  100B               	bcf	11,0
  4269                           
  4270                           ;smartkey.C: 47: if(RA5){
  4271  03EE  1E85               	btfss	5,5
  4272  03EF  2BF8               	goto	i1l5442
  4273                           
  4274                           ;smartkey.C: 49: if(mode_chek == 0){
  4275  03F0  08F3               	movf	_mode_chek,f
  4276  03F1  1D03               	skipz
  4277  03F2  2BF9               	goto	i1l5444
  4278                           
  4279                           ;smartkey.C: 50: cntCyc = 0;
  4280  03F3  01F2               	clrf	_cntCyc
  4281                           
  4282                           ;smartkey.C: 51: cntOff = 0;
  4283  03F4  01CA               	clrf	_cntOff
  4284                           
  4285                           ;smartkey.C: 53: mode_chek = 1;
  4286  03F5  01F3               	clrf	_mode_chek
  4287  03F6  0AF3               	incf	_mode_chek,f
  4288  03F7  2BF9               	goto	i1l5444
  4289  03F8                     i1l5442:	
  4290                           
  4291                           ;smartkey.C: 58: else{
  4292                           ;smartkey.C: 59: cntOff = 0;
  4293  03F8  01CA               	clrf	_cntOff
  4294  03F9                     i1l5444:	
  4295                           
  4296                           ;smartkey.C: 61: }
  4297                           ;smartkey.C: 63: }
  4298                           ;smartkey.C: 66: if(INTE&&INTF){
  4299  03F9  1A0B               	btfsc	11,4
  4300  03FA  1C8B               	btfss	11,1
  4301  03FB  2C0F               	goto	i1l829
  4302                           
  4303                           ;smartkey.C: 67: unsigned char tmp;
  4304                           ;smartkey.C: 68: INTF = 0;
  4305  03FC  108B               	bcf	11,1
  4306                           
  4307                           ;smartkey.C: 70: if( RA2==0){
  4308  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  4309  03FE  1905               	btfsc	5,2
  4310  03FF  2C0F               	goto	i1l829
  4311                           
  4312                           ;smartkey.C: 72: if(timeTick <0x20){
  4313  0400  3000               	movlw	0
  4314  0401  0271               	subwf	_timeTick+1,w
  4315  0402  3020               	movlw	32
  4316  0403  1903               	skipnz
  4317  0404  0270               	subwf	_timeTick,w
  4318  0405  1803               	skipnc
  4319  0406  2C0E               	goto	i1l831
  4320                           
  4321                           ;smartkey.C: 73: tmp = READ_EEPROM(0x40);
  4322  0407  3040               	movlw	64
  4323  0408  26E3               	fcall	i1_READ_EEPROM
  4324  0409  00F9               	movwf	ISR@tmp_1138
  4325                           
  4326                           ;smartkey.C: 74: WRITE_EEPROM(0x40,tmp+1);
  4327  040A  0A79               	incf	ISR@tmp_1138,w
  4328  040B  00F5               	movwf	?i1_WRITE_EEPROM
  4329  040C  3040               	movlw	64
  4330  040D  262C               	fcall	i1_WRITE_EEPROM
  4331  040E                     i1l831:	
  4332  040E  2C0E               	goto	i1l831
  4333  040F                     i1l829:	
  4334                           
  4335                           ;smartkey.C: 83: }
  4336                           ;smartkey.C: 85: }
  4337                           ;smartkey.C: 88: if (T0IE && T0IF) {
  4338  040F  1A8B               	btfsc	11,5
  4339  0410  1D0B               	btfss	11,2
  4340  0411  2C5E               	goto	i1l5502
  4341  0412  30B3               	movlw	179
  4342                           
  4343                           ;smartkey.C: 89: T0IF = 0;
  4344  0413  110B               	bcf	11,2
  4345                           
  4346                           ;smartkey.C: 90: TMR0 = 179;
  4347  0414  1283               	bcf	3,5	;RP0=0, select bank0
  4348  0415  0081               	movwf	1	;volatile
  4349                           
  4350                           ;smartkey.C: 96: if( mode_chek == 1){
  4351  0416  0B73               	decfsz	_mode_chek,w
  4352  0417  2C30               	goto	i1l5482
  4353                           
  4354                           ;smartkey.C: 98: cntCyc++;
  4355  0418  0AF2               	incf	_cntCyc,f
  4356                           
  4357                           ;smartkey.C: 100: if(RA5==0){
  4358  0419  1A85               	btfsc	5,5
  4359  041A  2C30               	goto	i1l5482
  4360  041B  3010               	movlw	16
  4361                           
  4362                           ;smartkey.C: 102: cntOff++;
  4363  041C  0ACA               	incf	_cntOff,f
  4364                           
  4365                           ;smartkey.C: 105: if(cntOff > 15){
  4366  041D  024A               	subwf	_cntOff,w
  4367  041E  1C03               	skipc
  4368  041F  2C30               	goto	i1l5482
  4369  0420  3010               	movlw	16
  4370                           
  4371                           ;smartkey.C: 107: mode_chek = 0;
  4372  0421  01F3               	clrf	_mode_chek
  4373                           
  4374                           ;smartkey.C: 109: if((cntCyc>15) &&(cntCyc<50)) {
  4375  0422  0272               	subwf	_cntCyc,w
  4376  0423  3032               	movlw	50
  4377  0424  1C03               	skipc
  4378  0425  2C2C               	goto	L19
  4379  0426  0272               	subwf	_cntCyc,w
  4380  0427  1803               	skipnc
  4381  0428  2C2B               	goto	i1l5478
  4382                           
  4383                           ;smartkey.C: 110: RegStatus |= (0x40);
  4384  0429  1749               	bsf	_RegStatus,6
  4385                           
  4386                           ;smartkey.C: 111: } else if (cntCyc>=50){
  4387  042A  2C2F               	goto	i1l840
  4388  042B                     i1l5478:	
  4389  042B  3032               	movlw	50
  4390  042C                     L19:	
  4391  042C  0272               	subwf	_cntCyc,w
  4392  042D  1803               	btfsc	3,0
  4393                           
  4394                           ;smartkey.C: 112: RegStatus &= ~(0x40);
  4395  042E  1349               	bcf	_RegStatus,6
  4396  042F                     i1l840:	
  4397                           
  4398                           ;smartkey.C: 113: }
  4399                           ;smartkey.C: 116: RegStatus |= 0x80;
  4400  042F  17C9               	bsf	_RegStatus,7
  4401  0430                     i1l5482:	
  4402                           
  4403                           ;smartkey.C: 117: }
  4404                           ;smartkey.C: 119: }
  4405                           ;smartkey.C: 129: }
  4406                           ;smartkey.C: 132: timeTick++;
  4407  0430  0AF0               	incf	_timeTick,f
  4408  0431  1903               	skipnz
  4409  0432  0AF1               	incf	_timeTick+1,f
  4410                           
  4411                           ;smartkey.C: 134: if((mtState == 4)||(mtState == 3)){
  4412  0433  0874               	movf	_mtState,w
  4413  0434  3A04               	xorlw	4
  4414  0435  1903               	skipnz
  4415  0436  2C3B               	goto	i1l5488
  4416  0437  0874               	movf	_mtState,w
  4417  0438  3A03               	xorlw	3
  4418  0439  1D03               	skipz
  4419  043A  2C5E               	goto	i1l5502
  4420  043B                     i1l5488:	
  4421                           
  4422                           ;smartkey.C: 136: if(timeTick > cntTmp){
  4423  043B  0871               	movf	_timeTick+1,w
  4424  043C  0246               	subwf	_cntTmp+1,w
  4425  043D  1D03               	skipz
  4426  043E  2C41               	goto	u145_25
  4427  043F  0870               	movf	_timeTick,w
  4428  0440  0245               	subwf	_cntTmp,w
  4429  0441                     u145_25:	
  4430  0441  1803               	skipnc
  4431  0442  2C5E               	goto	i1l5502
  4432                           
  4433                           ;smartkey.C: 137: cntTmp = timeTick+45;
  4434  0443  0871               	movf	_timeTick+1,w
  4435  0444  00C6               	movwf	_cntTmp+1
  4436  0445  0870               	movf	_timeTick,w
  4437  0446  00C5               	movwf	_cntTmp
  4438  0447  302D               	movlw	45
  4439  0448  07C5               	addwf	_cntTmp,f
  4440  0449  1803               	skipnc
  4441  044A  0AC6               	incf	_cntTmp+1,f
  4442                           
  4443                           ;smartkey.C: 138: if(cntTmp<=timeOut)
  4444  044B  0846               	movf	_cntTmp+1,w
  4445  044C  0248               	subwf	_timeOut+1,w
  4446  044D  1D03               	skipz
  4447  044E  2C51               	goto	u146_25
  4448  044F  0845               	movf	_cntTmp,w
  4449  0450  0247               	subwf	_timeOut,w
  4450  0451                     u146_25:	
  4451                           
  4452                           ;smartkey.C: 139: {
  4453                           ;smartkey.C: 140: TMR2IE = 0;
  4454  0451  1683               	bsf	3,5	;RP0=1, select bank1
  4455  0452  1C03               	skipc
  4456  0453  2C5F               	goto	L20
  4457  0454  108C               	bcf	12,1
  4458                           
  4459                           ;smartkey.C: 142: if (PR2L == 20)
  4460  0455  0811               	movf	17,w	;volatile
  4461  0456  3A14               	xorlw	20
  4462  0457  1D03               	skipz
  4463  0458  2C5B               	goto	i1l5498
  4464                           
  4465                           ;smartkey.C: 143: PR2L = 25;
  4466  0459  3019               	movlw	25
  4467  045A  2C5C               	goto	L18
  4468  045B                     i1l5498:	
  4469                           
  4470                           ;smartkey.C: 144: else
  4471                           ;smartkey.C: 145: PR2L = 20;
  4472  045B  3014               	movlw	20
  4473  045C                     L18:	
  4474  045C  0091               	movwf	17	;volatile
  4475                           
  4476                           ;smartkey.C: 146: TMR2IE = 1;
  4477  045D  148C               	bsf	12,1
  4478  045E                     i1l5502:	
  4479                           
  4480                           ;smartkey.C: 147: }
  4481                           ;smartkey.C: 148: }
  4482                           ;smartkey.C: 149: }
  4483                           ;smartkey.C: 152: }
  4484                           ;smartkey.C: 155: if(TMR2IE&&TMR2IF)
  4485  045E  1683               	bsf	3,5	;RP0=1, select bank1
  4486  045F                     L20:	
  4487  045F  1C8C               	btfss	12,1
  4488  0460  2C67               	goto	i1l850
  4489  0461  1283               	bcf	3,5	;RP0=0, select bank0
  4490  0462  1C8C               	btfss	12,1
  4491  0463  2C67               	goto	i1l850
  4492  0464  3008               	movlw	8
  4493                           
  4494                           ;smartkey.C: 156: {
  4495                           ;smartkey.C: 157: TMR2IF = 0;
  4496  0465  108C               	bcf	12,1
  4497                           
  4498                           ;smartkey.C: 158: RA3 =~ RA3;
  4499  0466  0685               	xorwf	5,f
  4500  0467                     i1l850:	
  4501  0467  0878               	movf	??_ISR+1,w
  4502  0468  008A               	movwf	10
  4503  0469  0E77               	swapf	??_ISR^(0+-128),w
  4504  046A  0083               	movwf	3
  4505  046B  0EFE               	swapf	126,f
  4506  046C  0E7E               	swapf	126,w
  4507  046D  0009               	retfie
  4508  046E                     __end_of_ISR:	
  4509                           
  4510                           	psect	intentry
  4511  0004                     __pintentry:	
  4512                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4513                           
  4514  0004                     interrupt_function:	
  4515  007E                     saved_w	set	btemp
  4516  0004  00FE               	movwf	btemp
  4517  0005  0E03               	swapf	3,w
  4518  0006  00F7               	movwf	??_ISR
  4519  0007  080A               	movf	10,w
  4520  0008  00F8               	movwf	??_ISR+1
  4521  0009  2BE8               	ljmp	_ISR
  4522                           
  4523                           	psect	text882
  4524  062C                     __ptext882:	
  4525 ;; =============== function _ISR ends ============
  4526                           
  4527                           
  4528 ;; *************** function i1_WRITE_EEPROM *****************
  4529 ;; Defined at:
  4530 ;;		line 205 in file "smartkey.C"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  WRITE_EEPROM    1    wreg     unsigned char 
  4533 ;;  WRITE_EEPROM    1    0[COMMON] unsigned char 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;  WRITE_EEPROM    1    1[COMMON] unsigned char 
  4536 ;; Return value:  Size  Location     Type
  4537 ;;		None               void
  4538 ;; Registers used:
  4539 ;;		wreg
  4540 ;; Tracked objects:
  4541 ;;		On entry : 20/20
  4542 ;;		On exit  : 20/20
  4543 ;;		Unchanged: FFE00/0
  4544 ;; Data sizes:     COMMON   BANK0   BANK1
  4545 ;;      Params:         1       0       0
  4546 ;;      Locals:         1       0       0
  4547 ;;      Temps:          0       0       0
  4548 ;;      Totals:         2       0       0
  4549 ;;Total ram usage:        2 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_ISR
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557  062C                     i1_WRITE_EEPROM:	
  4558                           
  4559                           ; Regs used in i1_WRITE_EEPROM: [wreg]
  4560                           ;i1WRITE_EEPROM@EEAddr stored from wreg
  4561  062C  00F6               	movwf	i1WRITE_EEPROM@EEAddr
  4562                           
  4563                           ;smartkey.C: 206: GIE = 0;
  4564  062D  138B               	bcf	11,7
  4565  062E                     i1l874:	
  4566                           ;smartkey.C: 207: while(GIE) asm("clrwdt");
  4567                           
  4568  062E  1F8B               	btfss	11,7
  4569  062F  2E32               	goto	i1l5682
  4570  0630  0064               	clrwdt	;#
  4571  0631  2E2E               	goto	i1l874
  4572  0632                     i1l5682:	
  4573                           
  4574                           ;smartkey.C: 208: EEADR = EEAddr;
  4575  0632  0876               	movf	i1WRITE_EEPROM@EEAddr,w
  4576  0633  1683               	bsf	3,5	;RP0=1, select bank1
  4577  0634  009B               	movwf	27	;volatile
  4578                           
  4579                           ;smartkey.C: 209: EEDAT = EEData;
  4580  0635  0875               	movf	i1WRITE_EEPROM@EEData,w
  4581  0636  009A               	movwf	26	;volatile
  4582  0637  3034               	movlw	52
  4583                           
  4584                           ;smartkey.C: 210: EEIF = 0;
  4585  0638  1283               	bcf	3,5	;RP0=0, select bank0
  4586  0639  138C               	bcf	12,7
  4587                           
  4588                           ;smartkey.C: 211: EECON1 = 0x34;
  4589  063A  1683               	bsf	3,5	;RP0=1, select bank1
  4590  063B  009C               	movwf	28	;volatile
  4591                           
  4592                           ;smartkey.C: 212: WR = 1;
  4593  063C  141D               	bsf	29,0
  4594  063D                     i1l877:	
  4595                           ;smartkey.C: 213: while(WR) asm("clrwdt");
  4596                           
  4597  063D  1683               	bsf	3,5	;RP0=1, select bank1
  4598  063E  1C1D               	btfss	29,0
  4599  063F  2E42               	goto	i1l879
  4600  0640  0064               	clrwdt	;#
  4601  0641  2E3D               	goto	i1l877
  4602  0642                     i1l879:	
  4603                           
  4604                           ;smartkey.C: 215: GIE = 1;
  4605  0642  178B               	bsf	11,7
  4606  0643  0008               	return
  4607  0644                     __end_ofi1_WRITE_EEPROM:	
  4608                           
  4609                           	psect	text883
  4610  06E3                     __ptext883:	
  4611 ;; =============== function i1_WRITE_EEPROM ends ============
  4612                           
  4613                           
  4614 ;; *************** function i1_READ_EEPROM *****************
  4615 ;; Defined at:
  4616 ;;		line 194 in file "smartkey.C"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  READ_EEPROM     1    wreg     unsigned char 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  READ_EEPROM     1    0[COMMON] unsigned char 
  4621 ;;  READ_EEPROM     1    1[COMMON] unsigned char 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      unsigned char 
  4624 ;; Registers used:
  4625 ;;		wreg
  4626 ;; Tracked objects:
  4627 ;;		On entry : 20/0
  4628 ;;		On exit  : 20/20
  4629 ;;		Unchanged: FFFDF/0
  4630 ;; Data sizes:     COMMON   BANK0   BANK1
  4631 ;;      Params:         0       0       0
  4632 ;;      Locals:         2       0       0
  4633 ;;      Temps:          0       0       0
  4634 ;;      Totals:         2       0       0
  4635 ;;Total ram usage:        2 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_ISR
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643  06E3                     i1_READ_EEPROM:	
  4644                           
  4645                           ; Regs used in i1_READ_EEPROM: [wreg]
  4646                           ;i1READ_EEPROM@EEAddr stored from wreg
  4647  06E3  00F5               	movwf	i1READ_EEPROM@EEAddr
  4648                           
  4649                           ;smartkey.C: 195: unsigned char ReEepromData;
  4650                           ;smartkey.C: 197: EEADR = EEAddr;
  4651  06E4  1683               	bsf	3,5	;RP0=1, select bank1
  4652  06E5  009B               	movwf	27	;volatile
  4653                           
  4654                           ;smartkey.C: 198: RD = 1;
  4655  06E6  141C               	bsf	28,0
  4656                           
  4657                           ;smartkey.C: 199: ReEepromData = EEDAT;
  4658  06E7  081A               	movf	26,w	;volatile
  4659  06E8  00F6               	movwf	i1READ_EEPROM@ReEepromData
  4660                           
  4661                           ;smartkey.C: 200: RD = 0;
  4662  06E9  101C               	bcf	28,0
  4663                           
  4664                           ;smartkey.C: 201: return ReEepromData;
  4665  06EA  0008               	return
  4666  06EB                     __end_ofi1_READ_EEPROM:	
  4667                           
  4668                           	psect	text884
  4669  0000                     __ptext884:	
  4670 ;; =============== function i1_READ_EEPROM ends ============
  4671                           
  4672  007E                     btemp	set	126	;btemp
  4673  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Mar 19 13:22:22 2020

                        pc 0002                         _RD 04E0                         _WR 04E8  
             ___awdiv@sign 0025      __size_of_WRITE_EEPROM 001B                         fsr 0004  
                      _C1R 08CA                        _C2R 08D2                        l862 0000  
                      l942 01EE                        l926 01A3                        l871 0000  
                      l880 0000                        l856 0000                        l952 0285  
                      l874 0613                        l859 0000                        l883 0000  
                      l955 026A                        l868 0000                        l972 02E7  
                      l956 0255                        l877 0625                        l879 062A  
                      l993 03E5                        _GIE 005F                        _RA2 002A  
                      _RA3 002B                        _RC0 0038                        _RC1 0039  
                      _RA5 002D                        _RA6 002E                        _RA7 002F  
             ?_swI2C_Start 0075                        _HTS 047A                        _ISR 03E8  
                      _SR0 0CF6                        _SR1 0CF7                        _VR0 08C0  
                      _VR1 08C1                        _VR2 08C2                        _VR3 08C3  
                      _VRR 08C5                        fsr0 0004                        indf 0000  
           _swI2C_ReadByte 04F8                       S7156 06EB                       ?_ISR 0075  
                     _C1OE 08CD                       _C2OE 08D5                       l2600 0505  
                     _C1ON 08CF                       l2602 0000                       _C2ON 08D7  
                     l4234 0000                       l1790 0000                       l2583 0000  
                     l1784 06DF                       l7000 02EE                       l1793 0000  
                     l2586 0000                       l7010 0000                       l7002 02FC  
                     l1787 0000                       l2595 0542                       l1796 0000  
                     l2589 0000                       l2597 0000                       l7110 0000  
                     l7102 0000                       l7030 0000                       l7022 0000  
                     l7006 0000                       l7112 0000                       l7040 0000  
                     l7024 0000                       l7032 0338                       l7008 0000  
                     l7114 0000                       l7050 0000                       l7026 0000  
                     l7018 0000                       l6420 0000                       l6412 0000  
                     l6500 0000                       l7116 03DF                       l7044 0000  
                     l7028 0000                       l6414 0000                       l6422 0000  
                     l6430 0000                       l6502 04AE                       l6510 0000  
                     l7054 0000                       l7038 0000                       l7062 0372  
                     l6344 0000                       l6352 0000                       l6360 0000  
                     l6416 0000                       l6424 0000                       l6440 0000  
                     l6432 0000                       l6512 0000                       l6520 0000  
                     l7072 0000                       l7080 0390                       l7056 0000  
                     l6346 0000                       l6354 0617                       l6362 068D  
                     l6370 0000                       l6418 0000                       l6426 0000  
                     l6450 0000                       l6442 0000                       l6434 0000  
                     l6514 0000                       l6506 0000                       l6522 0000  
                     l6530 0000                       l6602 0000                       l7090 0000  
                     l7082 0000                       l7074 0000                       l7058 0000  
                     l6348 0000                       l6356 0000                       l6364 0000  
                     l6372 0000                       l6428 0000                       l6460 0000  
                     l6452 0000                       l6444 0000                       l6436 0000  
                     l6516 0000                       l6508 0000                       l6524 0000  
                     l6532 0000                       l6540 0000                       l6620 05D5  
                     l6612 0000                       l7076 0000                       l7068 0000  
                     l7084 0394                       l6700 0000                       l6358 0000  
                     l6366 0000                       l6374 0000                       l6454 0000  
                     l6446 0000                       l6438 0000                       l6470 0478  
                     l6462 0000                       l6518 0645                       l6526 0000  
                     l6534 0000                       l6542 0000                       l6550 0000  
                     l6622 0000                       l7094 03AB                       l7078 038F  
                     l6710 0000                       l6368 0000                       l6456 0000  
                     l6448 0000                       l6464 0000                       l6528 0000  
                     l6536 0000                       l6544 0000                       l6560 0000  
                     l6552 0000                       l6616 05D3                       l7096 0000  
                     l6712 0000                       l6720 0073                       l6704 0000  
                     l6458 0000                       l6474 0000                       l6538 0000  
                     l6570 0000                       l6562 0000                       l6546 0000  
                     l6618 05BC                       l7098 0000                       l6810 0000  
                     l6730 0000                       l6722 0000                       l6714 0000  
                     l6706 0058                       l6388 04DF                       l6492 0000  
                     l6476 0481                       l6468 0000                       l6564 0000  
                     l6556 0000                       l6548 0000                       l6580 0000  
                     l6652 0000                       l6636 0000                       l6900 0000  
                     l6804 0186                       l6812 01A7                       l6740 0000  
                     l6732 0000                       l6724 007A                       l6716 0000  
                     l6486 048F                       l6478 0000                       l6566 0000  
                     l6558 0000                       l6590 0000                       l6582 0000  
                     l6574 0000                       l6654 0000                       l6646 0000  
                     l6910 026D                       l6902 0000                       l6830 01C5  
                     l6814 0000                       l6806 0000                       l6750 0000  
                     l6742 0000                       l6726 0000                       l6718 0000  
                     l6496 0000                       l6488 0000                       l6568 0000  
                     l6592 0000                       l6576 0000                       l6648 0587  
                     l6912 0000                       l6904 0000                       l6816 0000  
                     l6808 019F                       l6760 0000                       l6736 008E  
                     l6744 00A4                       l6680 0000                       l6672 0000  
                     l6498 04A6                       l6594 0000                       l6586 0000  
                     l6578 0000                       l6914 0000                       l6850 0000  
                     l6842 0000                       l6834 0000                       l6826 01BE  
                     l6818 01B5                       l6754 00B3                       l6738 0091  
                     l6690 0000                       l6682 0000                       l6674 0000  
                     l6596 0000                       l6588 0000                       l6940 0000  
                     l6932 0293                       l6916 0000                       l6860 0000  
                     l6852 0000                       l6844 0000                       l6924 027D  
                     l6780 0000                       l6772 00F4                       l6748 00AB  
                     l6692 0000                       l6684 0000                       l6676 0000  
                     l6598 0000                       l6950 0000                       l6942 0000  
                     l6934 0000                       l6918 0000                       l6854 0000  
                     l6862 020B                       l6838 01D6                       l6926 0286  
                     l6782 0102                       l6790 013D                       l6774 0000  
                     l6766 00E3                       l6758 00CD                       l6694 0000  
                     l6686 0000                       l6678 0000                       l6960 02C0  
                     l6944 0000                       l6936 0000                       l6880 0000  
                     l6872 0000                       l6864 0000                       l6848 01E7  
                     l6768 0000                       l6696 0000                       l6688 0000  
                     l6962 0000                       l6970 02D7                       l6954 0000  
                     l6946 0000                       l6938 029D                       l6890 0243  
                     l6882 022F                       l6858 01FD                       l6794 0144  
                     l6786 0000                       l6778 0000                       l6698 0000  
                     l6964 0000                       l6956 02B8                       l6948 0000  
                     l6892 0000                       l6884 0000                       l6876 021E  
                     l6868 020E                       l6788 012F                       l6990 0000  
                     l6974 0000                       l6966 0000                       l6878 0000  
                     l6798 0000                       l6992 0000                       l6976 0000  
                     l6968 0000                       l6888 0238                       l6986 0000  
                     l6898 0000                       l6988 0000                       _EEIF 0067  
                     _ANS0 08F0                       _ANS1 08F1                       _ANS2 08F2  
                     _ANS3 08F3                       _ANS4 08F4                       _ANS5 08F5  
                     _ANS6 08F6                       _ANS7 08F7                       _ANS8 08F8  
                     _ANS9 08F9                       _T0IE 005D                       _T0IF 005A  
                     _T0ON 00FB                       _IOCB 0116                       u3005 0175  
                     u3015 0181                       u3215 0290                       _PAIE 005B  
                     u2700 0547                       _PAIF 0058                       u2535 0693  
                     u3415 039B                       _PIE1 008C                       u3265 0303  
                     u2714 0549                       u3507 0020                       u2565 04CC  
                     u3517 003E                       u2655 0498                       u3607 0517  
                     u3527 0053                       u3617 052C                       u3537 009E  
                     u2754 0529                       u3707 0674                       u3627 0532  
                     u2835 0594                       u3547 00BA                       _PEIE 005E  
                     u3717 067A                       u3637 053E                       u3557 00E7  
                     _INTE 005C                       _INTF 0059                       u3727 0680  
                     u3647 054E                       u3567 0136                       u3737 05DD  
                     u3657 0554                       u3577 0199                       u3747 05E4  
                     u3667 0561                       u3587 0501                       _PR2H 0092  
                     u3757 05E9                       u3677 0567                       u3597 0508  
                     u3767 05EE                       u3687 06B9                       _PR2L 0091  
                     u3777 05F3                       u3697 06BF                       _PIR1 000C  
                     _TMR0 0001                       _STRA 0CE8                       _STRB 0CE9  
                     _STRC 0CEA                       _STRD 0CEB                       _WREN 0C62  
                     _WPUA 0095                       _WPUB 0115                       _WPUC 0093  
             ?_READ_EEPROM 0075                       _beep 0644            __end_of_AccRead 059F  
                     _main 000B                       btemp 007E                       start 000A  
             _WRITE_EEPROM 0611                      ??_ISR 0077                      _C1CH0 08C8  
                    _C1CH1 08C9                      _C2CH0 08D0                      _C2CH1 08D1  
                    ?_beep 0024                      _C1SEN 0CF5                      _C2REN 0CF4  
                    _C1POL 08CC                      _C2POL 08D4                      _C1OUT 08CE  
                    _C2OUT 08D6                      ?_main 0075            __end_of___awdiv 04B3  
                    _EEADR 009B                      _EEDAT 009A                      _ANS10 08FA  
                    _ANS11 08FB                      _EEPGD 0C67     __end_of_swI2C_ReadByte 0537  
                    _ANSEL 011E               AccWrite@rAdd 0028            ___awdiv@divisor 0020  
                    _IOCA5 04B5                      _IOCB4 08B4                      _IOCB5 08B5  
                    _IOCB6 08B6                      _IOCB7 08B7                      _T1GSS 08D9  
                    i1l831 040E                      i1l840 042F                      i1l850 0467  
                    i1l829 040F                      i1l871 0000                      i1l880 0000  
                    i1l874 062E                      i1l877 063D                      i1l879 0642  
          ___awdiv@counter 0024                      _MSCON 001B            __end_of_beepOff 06FA  
                    _VP6EN 08C4                      _TMR2H 0013                      _TMR2L 0011  
                    _PSRCA 0088                      _PSRCC 0094                      _PORTA 0005  
                    _PORTC 0007                      _SRCON 019E                      _PULSR 0CF2  
                    _PULSS 0CF3                      _TRISA 0085                      _TRISC 0087  
                    _VRCON 0118                      _WPUB4 08AC                      _WPUB5 08AD  
                    _WPUB6 08AE                      _WPUB7 08AF                      _compe 04B3  
         __end_of_AccWrite 05D7                      pclath 000A                      status 0003  
                    wtemp0 007E            _swI2C_WriteByte 0537       __size_of_delay_x10ms 0013  
           i1_WRITE_EEPROM 062C               __end_of_beep 065A               __end_of_main 03E8  
                   ??_beep 0025                     ??_main 002C            ?_swI2C_ReadByte 0075  
            main@reAlertOn 003F                     _C1VREN 08C7                     _C2VREN 08C6  
                   _C2SYNC 08D8                     ?_compe 0020                  ??_AccRead 0027  
                   _EEADRH 010F                     _EEDATH 010E                     _EECON1 009C  
         ___awdiv@dividend 0022                     _ANSELH 011F                     _MC1OUT 08DF  
                   _MC2OUT 08DE                     _T0CON0 001F                     _T2CON0 0012  
                   i1l5502 045E                     i1l5440 0000                     i1l5432 0000  
                   i1l5442 03F8                     i1l5434 0000                     i1l5426 0000  
                   i1l5508 0000                     i1l5460 0000                     i1l5444 03F9  
                   i1l5462 0000                     i1l5454 0000                     i1l5472 0000  
                   i1l5464 0000                     i1l5482 0430                     i1l5484 0000  
                   i1l5468 0000                     i1l5494 0000                     i1l5478 042B  
                   i1l5672 0000                     i1l5680 0000                     i1l5488 043B  
                   i1l5674 0000                     i1l5682 0632                     i1l5498 045B  
                   _INTEDG 040E                     i1l5676 0000                     i1l5684 0000  
                   i1l5686 0000                     _INTCON 000B                     u145_25 0441  
                   u146_25 0451                     _OSCCON 008F                     _TMR2IE 0461  
                   _TMR2IF 0061                     _PSINKA 0097                     _PSINKC 009F  
                   _OPTION 0081                     _TMR2ON 0092     __end_ofi1_WRITE_EEPROM 0644  
          swI2C_ReadByte@i 0023                     _beepOn 06F0                  ??___awdiv 0024  
                   _cntCyc 0072                     _cntOff 004A                     _cntTmp 0045  
                ??_beepOff 0020           ___awdiv@quotient 0026           __end_of_int_init 0611  
                   compe@a 0027                     compe@b 0020     __size_ofi1_READ_EEPROM 0008  
         __end_of_setState 06DB              main@vibrateOn 0031                     saved_w 007E  
     __size_of_swI2C_Start 0013    __end_of_swI2C_WriteByte 0574           __end_of_sys_init 06E3  
     i1WRITE_EEPROM@EEAddr 0076       i1WRITE_EEPROM@EEData 0075       __size_of_READ_EEPROM 000D  
          ?i1_WRITE_EEPROM 0075             __pcstackCOMMON 0075              __end_of_compe 04EC  
                ?_AccWrite 0023                ISR@tmp_1138 0079                    ??_compe 0022  
               __pbssBANK0 0045         __size_of_gpio_init 0016    READ_EEPROM@ReEepromData 0021  
            i1_READ_EEPROM 06E3                 __pmaintext 000B                    ?_beepOn 0075  
               __pintentry 0004  i1READ_EEPROM@ReEepromData 0076                    _CM1CON0 0119  
                  _CM2CON0 011A                    _CM2CON1 011B                 ??_AccWrite 0026  
                  _AccRead 0574                    _PSTRCON 019D                 _swI2C_Init 05D7  
                  _STRSYNC 0CEC                 _swI2C_Stop 06B5           ?_swI2C_WriteByte 0075  
           ?i1_READ_EEPROM 0075                  AccWrite@i 0029                  ?_int_init 0075  
              setState@stt 0022                  ?_setState 0020                 _mtOldState 004C  
                  ___awdiv 046E           ??_swI2C_ReadByte 0020            __size_of_beepOn 0005  
                  _beepOff 06F5                    beep@rep 0024          __end_of_gpio_init 0670  
                ?_sys_init 0075               __size_of_ISR 0086                    _mtState 0074  
                  _timeOut 0047                    compe@dt 0021                    main@buf 0035  
     end_of_initialization 06B3                 _lostDetect 004B              ??_delay_x10ms 0022  
               ??_int_init 0020                 ??_setState 0022                AccRead@rAdd 002A  
               _timer_init 0696                 ??_sys_init 0020                ?_swI2C_Init 0075  
          ??i1_READ_EEPROM 0075                ?_swI2C_Stop 0075                 main@acXOld 0034  
               main@acYOld 0033           ??i1_WRITE_EEPROM 0076                 main@acXsum 003D  
               main@acYsum 003B                 main@isFall 0032         WRITE_EEPROM@EEAddr 0021  
       WRITE_EEPROM@EEData 0020                 main@isWait 002F        __end_of_delay_x10ms 0696  
              AccWrite@dat 0023                AccWrite@len 0025             __end_of_beepOn 06F5  
            ??_swI2C_Start 0020          __size_of_AccWrite 0028        start_initialization 06A6  
              __end_of_ISR 046E              setState@_tOut 0020                  _RegStatus 0049  
            ??_READ_EEPROM 0020              ?_WRITE_EEPROM 0020                   ??_beepOn 0020  
        READ_EEPROM@EEAddr 0020        __size_of_swI2C_Init 001F        __size_of_swI2C_Stop 000D  
              ?_timer_init 0075                __pbssCOMMON 0070              __pcstackBANK0 0020  
                 ?_AccRead 0024        __end_of_swI2C_Start 0683                _delay_x10ms 0683  
           ??_WRITE_EEPROM 0021          __size_of_int_init 001B        __end_of_READ_EEPROM 06CF  
         swI2C_WriteByte@i 0022                   ?___awdiv 0020          __size_of_setState 000C  
                __ptext860 0000                  __ptext861 0574                  __ptext870 046E  
                __ptext862 05AF                  __ptext871 05F6                  __ptext863 04F8  
                __ptext880 06C2                  __ptext872 0696                  __ptext864 0537  
                __ptext881 03E8                  __ptext873 065A                  __ptext865 06B5  
                __ptext882 062C                  __ptext874 04B3                  __ptext866 0670  
                __ptext883 06E3                  __ptext875 06CF                  __ptext867 05D7  
                __ptext884 0000                  __ptext876 06F0                  __ptext868 06DB  
                __ptext877 06F5                  __ptext869 0644                  __ptext878 0683  
                __ptext879 0611                  beep@delay 0025                   ?_beepOff 0075  
                 AccRead@i 002B         swI2C_WriteByte@dat 0021                  __pswtext1 06EB  
        __size_of_sys_init 0008                  _gpio_init 065A             __size_of_compe 0039  
                _mode_chek 0073          interrupt_function 0004        __size_of_timer_init 0010  
 __size_of_swI2C_WriteByte 003D                 AccRead@dat 0024                 AccRead@len 0026  
             delay_x10ms@t 0020                   _AccWrite 05AF                _swI2C_Start 0670  
                main@tmp16 0042                  main@mpuOk 0041                 ?_gpio_init 0075  
             ??_swI2C_Init 0020           __size_of_AccRead 002B               ??_swI2C_Stop 0020  
              _READ_EEPROM 06C2          swI2C_ReadByte@Ack 0021          swI2C_ReadByte@dat 0022  
         __size_of___awdiv 0045           __size_of_beepOff 0005         __end_of_swI2C_Init 05F6  
       __end_of_swI2C_Stop 06C2       __end_of_WRITE_EEPROM 062C    __size_of_swI2C_ReadByte 003F  
    __end_ofi1_READ_EEPROM 06EB              __size_of_beep 0016              __size_of_main 03DD  
                 _int_init 05F6                   _setState 06CF                   _timeTick 0070  
                 main@isSw 0040                   main@tmp8 0044          ??_swI2C_WriteByte 0020  
             ??_timer_init 0020                   _sys_init 06DB                ??_gpio_init 0020  
                 intlevel1 0000               ?_delay_x10ms 0020         __end_of_timer_init 06A6  
  __size_ofi1_WRITE_EEPROM 0018        i1READ_EEPROM@EEAddr 0075             delay_x10ms@set 0022  
