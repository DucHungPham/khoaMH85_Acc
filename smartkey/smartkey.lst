

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Apr 17 14:41:16 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text859,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	text860,local,class=CODE,delta=2
    13                           	psect	text861,local,class=CODE,delta=2
    14                           	psect	text862,local,class=CODE,delta=2
    15                           	psect	text863,local,class=CODE,delta=2
    16                           	psect	text864,local,class=CODE,delta=2
    17                           	psect	text865,local,class=CODE,delta=2
    18                           	psect	text866,local,class=CODE,delta=2
    19                           	psect	text867,local,class=CODE,delta=2
    20                           	psect	text868,local,class=CODE,delta=2
    21                           	psect	text869,local,class=CODE,delta=2
    22                           	psect	text870,local,class=CODE,delta=2
    23                           	psect	text871,local,class=CODE,delta=2
    24                           	psect	text872,local,class=CODE,delta=2
    25                           	psect	text873,local,class=CODE,delta=2
    26                           	psect	text874,local,class=CODE,delta=2
    27                           	psect	text875,local,class=CODE,delta=2
    28                           	psect	text876,local,class=CODE,delta=2
    29                           	psect	text877,local,class=CODE,delta=2
    30                           	psect	text878,local,class=CODE,delta=2
    31                           	psect	text879,local,class=CODE,delta=2
    32                           	psect	text880,local,class=CODE,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text881,local,class=CODE,delta=2
    35                           	psect	text882,local,class=CODE,delta=2
    36                           	psect	text883,local,class=CODE,delta=2
    37                           	psect	pa_nodes,global,class=CODE,delta=2
    38                           	dabs	1,0x11E,1
    39                           	dabs	1,0x11F,1
    40                           	dabs	1,0x119,1
    41                           	dabs	1,0x11A,1
    42                           	dabs	1,0x11B,1
    43                           	dabs	1,0x10F,1
    44                           	dabs	1,0x10E,1
    45                           	dabs	1,0x116,1
    46                           	dabs	1,0x19D,1
    47                           	dabs	1,0x19E,1
    48                           	dabs	1,0x118,1
    49                           	dabs	1,0x115,1
    50                           	dabs	1,0x11E,1
    51                           	dabs	1,0x11E,1
    52                           	dabs	1,0x11F,1
    53                           	dabs	1,0x11F,1
    54                           	dabs	1,0x11E,1
    55                           	dabs	1,0x11E,1
    56                           	dabs	1,0x11E,1
    57                           	dabs	1,0x11E,1
    58                           	dabs	1,0x11E,1
    59                           	dabs	1,0x11E,1
    60                           	dabs	1,0x11F,1
    61                           	dabs	1,0x11F,1
    62                           	dabs	1,0x119,1
    63                           	dabs	1,0x119,1
    64                           	dabs	1,0x119,1
    65                           	dabs	1,0x119,1
    66                           	dabs	1,0x119,1
    67                           	dabs	1,0x119,1
    68                           	dabs	1,0x119,1
    69                           	dabs	1,0x19E,1
    70                           	dabs	1,0x118,1
    71                           	dabs	1,0x11A,1
    72                           	dabs	1,0x11A,1
    73                           	dabs	1,0x11A,1
    74                           	dabs	1,0x11A,1
    75                           	dabs	1,0x11A,1
    76                           	dabs	1,0x11A,1
    77                           	dabs	1,0x11A,1
    78                           	dabs	1,0x19E,1
    79                           	dabs	1,0x11B,1
    80                           	dabs	1,0x118,1
    81                           	dabs	1,0x18C,1
    82                           	dabs	1,0x116,1
    83                           	dabs	1,0x116,1
    84                           	dabs	1,0x116,1
    85                           	dabs	1,0x116,1
    86                           	dabs	1,0x11B,1
    87                           	dabs	1,0x11B,1
    88                           	dabs	1,0x19E,1
    89                           	dabs	1,0x19E,1
    90                           	dabs	1,0x19E,1
    91                           	dabs	1,0x19E,1
    92                           	dabs	1,0x19D,1
    93                           	dabs	1,0x19D,1
    94                           	dabs	1,0x19D,1
    95                           	dabs	1,0x19D,1
    96                           	dabs	1,0x19D,1
    97                           	dabs	1,0x11B,1
    98                           	dabs	1,0x118,1
    99                           	dabs	1,0x118,1
   100                           	dabs	1,0x118,1
   101                           	dabs	1,0x118,1
   102                           	dabs	1,0x118,1
   103                           	dabs	1,0x118,1
   104                           	dabs	1,0x115,1
   105                           	dabs	1,0x115,1
   106                           	dabs	1,0x115,1
   107                           	dabs	1,0x115,1
   108                           	dabs	1,0x18C,1
   109                           	dabs	1,0x7E,2
   110  000A                     
   111                           	psect	text859
   112  0000                     __ptext859:	
   113  011E                     _ANSEL	set	286	;_ANSEL
   114  011F                     _ANSELH	set	287	;_ANSELH
   115  0119                     _CM1CON0	set	281	;_CM1CON0
   116  011A                     _CM2CON0	set	282	;_CM2CON0
   117  011B                     _CM2CON1	set	283	;_CM2CON1
   118  010F                     _EEADRH	set	271	;_EEADRH
   119  010E                     _EEDATH	set	270	;_EEDATH
   120  0116                     _IOCB	set	278	;_IOCB
   121  019D                     _PSTRCON	set	413	;_PSTRCON
   122  019E                     _SRCON	set	414	;_SRCON
   123  0118                     _VRCON	set	280	;_VRCON
   124  0115                     _WPUB	set	277	;_WPUB
   125  08F0                     _ANS0	set	2288	;_ANS0
   126  08F1                     _ANS1	set	2289	;_ANS1
   127  08FA                     _ANS10	set	2298	;_ANS10
   128  08FB                     _ANS11	set	2299	;_ANS11
   129  08F2                     _ANS2	set	2290	;_ANS2
   130  08F3                     _ANS3	set	2291	;_ANS3
   131  08F4                     _ANS4	set	2292	;_ANS4
   132  08F5                     _ANS5	set	2293	;_ANS5
   133  08F6                     _ANS6	set	2294	;_ANS6
   134  08F7                     _ANS7	set	2295	;_ANS7
   135  08F8                     _ANS8	set	2296	;_ANS8
   136  08F9                     _ANS9	set	2297	;_ANS9
   137  08C8                     _C1CH0	set	2248	;_C1CH0
   138  08C9                     _C1CH1	set	2249	;_C1CH1
   139  08CD                     _C1OE	set	2253	;_C1OE
   140  08CF                     _C1ON	set	2255	;_C1ON
   141  08CE                     _C1OUT	set	2254	;_C1OUT
   142  08CC                     _C1POL	set	2252	;_C1POL
   143  08CA                     _C1R	set	2250	;_C1R
   144  0CF5                     _C1SEN	set	3317	;_C1SEN
   145  08C7                     _C1VREN	set	2247	;_C1VREN
   146  08D0                     _C2CH0	set	2256	;_C2CH0
   147  08D1                     _C2CH1	set	2257	;_C2CH1
   148  08D5                     _C2OE	set	2261	;_C2OE
   149  08D7                     _C2ON	set	2263	;_C2ON
   150  08D6                     _C2OUT	set	2262	;_C2OUT
   151  08D4                     _C2POL	set	2260	;_C2POL
   152  08D2                     _C2R	set	2258	;_C2R
   153  0CF4                     _C2REN	set	3316	;_C2REN
   154  08D8                     _C2SYNC	set	2264	;_C2SYNC
   155  08C6                     _C2VREN	set	2246	;_C2VREN
   156  0C67                     _EEPGD	set	3175	;_EEPGD
   157  08B4                     _IOCB4	set	2228	;_IOCB4
   158  08B5                     _IOCB5	set	2229	;_IOCB5
   159  08B6                     _IOCB6	set	2230	;_IOCB6
   160  08B7                     _IOCB7	set	2231	;_IOCB7
   161  08DF                     _MC1OUT	set	2271	;_MC1OUT
   162  08DE                     _MC2OUT	set	2270	;_MC2OUT
   163  0CF2                     _PULSR	set	3314	;_PULSR
   164  0CF3                     _PULSS	set	3315	;_PULSS
   165  0CF6                     _SR0	set	3318	;_SR0
   166  0CF7                     _SR1	set	3319	;_SR1
   167  0CE8                     _STRA	set	3304	;_STRA
   168  0CE9                     _STRB	set	3305	;_STRB
   169  0CEA                     _STRC	set	3306	;_STRC
   170  0CEB                     _STRD	set	3307	;_STRD
   171  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   172  08D9                     _T1GSS	set	2265	;_T1GSS
   173  08C4                     _VP6EN	set	2244	;_VP6EN
   174  08C0                     _VR0	set	2240	;_VR0
   175  08C1                     _VR1	set	2241	;_VR1
   176  08C2                     _VR2	set	2242	;_VR2
   177  08C3                     _VR3	set	2243	;_VR3
   178  08C5                     _VRR	set	2245	;_VRR
   179  08AC                     _WPUB4	set	2220	;_WPUB4
   180  08AD                     _WPUB5	set	2221	;_WPUB5
   181  08AE                     _WPUB6	set	2222	;_WPUB6
   182  08AF                     _WPUB7	set	2223	;_WPUB7
   183  0C62                     _WREN	set	3170	;_WREN
   184  000B                     _INTCON	set	11
   185  001B                     _MSCON	set	27
   186  000C                     _PIR1	set	12
   187  0005                     _PORTA	set	5
   188  0007                     _PORTC	set	7
   189  001F                     _T0CON0	set	31
   190  0012                     _T2CON0	set	18
   191  0001                     _TMR0	set	1
   192  0013                     _TMR2H	set	19
   193  0011                     _TMR2L	set	17
   194  0067                     _EEIF	set	103
   195  005F                     _GIE	set	95
   196  005C                     _INTE	set	92
   197  0059                     _INTF	set	89
   198  005B                     _PAIE	set	91
   199  0058                     _PAIF	set	88
   200  005E                     _PEIE	set	94
   201  002A                     _RA2	set	42
   202  002B                     _RA3	set	43
   203  002D                     _RA5	set	45
   204  002E                     _RA6	set	46
   205  002F                     _RA7	set	47
   206  0038                     _RC0	set	56
   207  0039                     _RC1	set	57
   208  005D                     _T0IE	set	93
   209  005A                     _T0IF	set	90
   210  00FB                     _T0ON	set	251
   211  0061                     _TMR2IF	set	97
   212  0092                     _TMR2ON	set	146
   213  009B                     _EEADR	set	155
   214  009C                     _EECON1	set	156
   215  009A                     _EEDAT	set	154
   216  0081                     _OPTION	set	129
   217  008F                     _OSCCON	set	143
   218  008C                     _PIE1	set	140
   219  0092                     _PR2H	set	146
   220  0091                     _PR2L	set	145
   221  0097                     _PSINKA	set	151
   222  009F                     _PSINKC	set	159
   223  0088                     _PSRCA	set	136
   224  0094                     _PSRCC	set	148
   225  0085                     _TRISA	set	133
   226  0087                     _TRISC	set	135
   227  0095                     _WPUA	set	149
   228  0093                     _WPUC	set	147
   229  047A                     _HTS	set	1146
   230  040E                     _INTEDG	set	1038
   231  04B5                     _IOCA5	set	1205
   232  04E0                     _RD	set	1248
   233  0461                     _TMR2IE	set	1121
   234  04E8                     _WR	set	1256
   235                           
   236                           	psect	cinit
   237  073C                     start_initialization:	
   238                           
   239                           ; Clear objects allocated to COMMON
   240  073C  01F0               	clrf	__pbssCOMMON& (0+127)
   241  073D  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   242  073E  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   243  073F  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   244  0740  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   245                           
   246                           ; Clear objects allocated to BANK0
   247  0741  01C6               	clrf	__pbssBANK0& (0+127)
   248  0742  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   249  0743  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   250  0744  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   251  0745  01CA               	clrf	(__pbssBANK0+4)& (0+127)
   252  0746  01CB               	clrf	(__pbssBANK0+5)& (0+127)
   253  0747  01CC               	clrf	(__pbssBANK0+6)& (0+127)
   254  0748  01CD               	clrf	(__pbssBANK0+7)& (0+127)
   255  0749                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  0749  0183               	clrf	3
   259  074A  280B               	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMMON
   262  0070                     __pbssCOMMON:	
   263  0070                     _timeTick:	
   264  0070                     	ds	2
   265  0072                     _cntCyc:	
   266  0072                     	ds	1
   267  0073                     _mode_chek:	
   268  0073                     	ds	1
   269  0074                     _mtState:	
   270  0074                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273  0046                     __pbssBANK0:	
   274  0046                     _cntTmp:	
   275  0046                     	ds	2
   276  0048                     _timeOut:	
   277  0048                     	ds	2
   278  004A                     _RegStatus:	
   279  004A                     	ds	1
   280  004B                     _cntOff:	
   281  004B                     	ds	1
   282  004C                     _lostDetect:	
   283  004C                     	ds	1
   284  004D                     _mtOldState:	
   285  004D                     	ds	1
   286                           
   287                           	psect	cstackCOMMON
   288  0075                     __pcstackCOMMON:	
   289  0075                     ?_sys_init:	
   290  0075                     ?_gpio_init:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0075                     ?_timer_init:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0075                     ?_int_init:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0075                     ?_swI2C_Init:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0075                     ?_ISR:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0075                     ?_beepOff:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0075                     ?_beepOn:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0075                     ?_main:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0075                     ?_swI2C_Start:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0075                     ?_swI2C_Stop:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0075                     ??i1_READ_EEPROM:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0075                     ?i1_WRITE_EEPROM:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0075                     ?_READ_EEPROM:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0075                     ?_swI2C_WriteByte:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0075                     ?_swI2C_ReadByte:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0075                     ?i1_READ_EEPROM:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0075                     i1READ_EEPROM@EEAddr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0075                     i1WRITE_EEPROM@EEData:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346  0075                     	ds	1
   347  0076                     ??i1_WRITE_EEPROM:	
   348  0076                     i1READ_EEPROM@ReEepromData:	
   349                           ; 0 bytes @ 0x1
   350                           
   351  0076                     i1WRITE_EEPROM@EEAddr:	
   352                           ; 1 bytes @ 0x1
   353                           
   354                           
   355                           ; 1 bytes @ 0x1
   356  0076                     	ds	1
   357  0077                     ??_ISR:	
   358                           
   359                           ; 0 bytes @ 0x2
   360  0077                     	ds	2
   361  0079                     ISR@tmp_1138:	
   362                           
   363                           ; 1 bytes @ 0x4
   364  0079                     	ds	1
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:	
   368  0020                     ??_READ_EEPROM:	
   369  0020                     ?_WRITE_EEPROM:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0020                     ??_sys_init:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0020                     ??_gpio_init:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0020                     ??_timer_init:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0020                     ??_int_init:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_swI2C_Init:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ?_delay_x10ms:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ??_beepOff:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_beepOn:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ?_setState:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_swI2C_Start:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ??_swI2C_Stop:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ??_swI2C_WriteByte:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ??_swI2C_ReadByte:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0020                     ?_compe:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0020                     ?___awdiv:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0020                     READ_EEPROM@EEAddr:	
   418                           ; 2 bytes @ 0x0
   419                           
   420  0020                     WRITE_EEPROM@EEData:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0020                     compe@b:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0020                     delay_x10ms@t:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0020                     setState@_tOut:	
   430                           ; 2 bytes @ 0x0
   431                           
   432  0020                     ___awdiv@divisor:	
   433                           ; 2 bytes @ 0x0
   434                           
   435                           
   436                           ; 2 bytes @ 0x0
   437  0020                     	ds	1
   438  0021                     ??_WRITE_EEPROM:	
   439  0021                     READ_EEPROM@ReEepromData:	
   440                           ; 0 bytes @ 0x1
   441                           
   442  0021                     WRITE_EEPROM@EEAddr:	
   443                           ; 1 bytes @ 0x1
   444                           
   445  0021                     compe@dt:	
   446                           ; 1 bytes @ 0x1
   447                           
   448  0021                     swI2C_WriteByte@dat:	
   449                           ; 1 bytes @ 0x1
   450                           
   451  0021                     swI2C_ReadByte@Ack:	
   452                           ; 1 bytes @ 0x1
   453                           
   454                           
   455                           ; 1 bytes @ 0x1
   456  0021                     	ds	1
   457  0022                     ??_delay_x10ms:	
   458  0022                     ??_setState:	
   459                           ; 0 bytes @ 0x2
   460                           
   461  0022                     ??_compe:	
   462                           ; 0 bytes @ 0x2
   463                           
   464  0022                     setState@stt:	
   465                           ; 0 bytes @ 0x2
   466                           
   467  0022                     swI2C_WriteByte@i:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0022                     swI2C_ReadByte@dat:	
   471                           ; 1 bytes @ 0x2
   472                           
   473  0022                     delay_x10ms@set:	
   474                           ; 1 bytes @ 0x2
   475                           
   476  0022                     ___awdiv@dividend:	
   477                           ; 2 bytes @ 0x2
   478                           
   479                           
   480                           ; 2 bytes @ 0x2
   481  0022                     	ds	1
   482  0023                     ?_AccWrite:	
   483  0023                     swI2C_ReadByte@i:	
   484                           ; 1 bytes @ 0x3
   485                           
   486  0023                     AccWrite@dat:	
   487                           ; 1 bytes @ 0x3
   488                           
   489                           
   490                           ; 2 bytes @ 0x3
   491  0023                     	ds	1
   492  0024                     ?_beep:	
   493  0024                     ??___awdiv:	
   494                           ; 0 bytes @ 0x4
   495                           
   496  0024                     ?_AccRead:	
   497                           ; 0 bytes @ 0x4
   498                           
   499  0024                     beep@rep:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  0024                     ___awdiv@counter:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0024                     AccRead@dat:	
   506                           ; 1 bytes @ 0x4
   507                           
   508                           
   509                           ; 2 bytes @ 0x4
   510  0024                     	ds	1
   511  0025                     ??_beep:	
   512  0025                     beep@delay:	
   513                           ; 0 bytes @ 0x5
   514                           
   515  0025                     AccWrite@len:	
   516                           ; 1 bytes @ 0x5
   517                           
   518  0025                     ___awdiv@sign:	
   519                           ; 1 bytes @ 0x5
   520                           
   521                           
   522                           ; 1 bytes @ 0x5
   523  0025                     	ds	1
   524  0026                     ??_AccWrite:	
   525  0026                     AccRead@len:	
   526                           ; 0 bytes @ 0x6
   527                           
   528  0026                     ___awdiv@quotient:	
   529                           ; 1 bytes @ 0x6
   530                           
   531                           
   532                           ; 2 bytes @ 0x6
   533  0026                     	ds	1
   534  0027                     ??_AccRead:	
   535  0027                     compe@a:	
   536                           ; 0 bytes @ 0x7
   537                           
   538                           
   539                           ; 1 bytes @ 0x7
   540  0027                     	ds	1
   541  0028                     AccWrite@rAdd:	
   542                           
   543                           ; 1 bytes @ 0x8
   544  0028                     	ds	1
   545  0029                     AccWrite@i:	
   546                           
   547                           ; 1 bytes @ 0x9
   548  0029                     	ds	1
   549  002A                     AccRead@rAdd:	
   550                           
   551                           ; 1 bytes @ 0xA
   552  002A                     	ds	1
   553  002B                     AccRead@i:	
   554                           
   555                           ; 1 bytes @ 0xB
   556  002B                     	ds	1
   557  002C                     ??_main:	
   558                           
   559                           ; 0 bytes @ 0xC
   560  002C                     	ds	3
   561  002F                     main@accEna:	
   562                           
   563                           ; 1 bytes @ 0xF
   564  002F                     	ds	1
   565  0030                     main@isWait:	
   566                           
   567                           ; 2 bytes @ 0x10
   568  0030                     	ds	2
   569  0032                     main@isFall:	
   570                           
   571                           ; 1 bytes @ 0x12
   572  0032                     	ds	1
   573  0033                     main@vibrateOn:	
   574                           
   575                           ; 1 bytes @ 0x13
   576  0033                     	ds	1
   577  0034                     main@acYOld:	
   578                           
   579                           ; 1 bytes @ 0x14
   580  0034                     	ds	1
   581  0035                     main@acXOld:	
   582                           
   583                           ; 1 bytes @ 0x15
   584  0035                     	ds	1
   585  0036                     main@antenSkip:	
   586                           
   587                           ; 1 bytes @ 0x16
   588  0036                     	ds	1
   589  0037                     main@acYsum:	
   590                           
   591                           ; 2 bytes @ 0x17
   592  0037                     	ds	2
   593  0039                     main@acXsum:	
   594                           
   595                           ; 2 bytes @ 0x19
   596  0039                     	ds	2
   597  003B                     main@buf:	
   598                           
   599                           ; 6 bytes @ 0x1B
   600  003B                     	ds	6
   601  0041                     main@reAlertOn:	
   602                           
   603                           ; 1 bytes @ 0x21
   604  0041                     	ds	1
   605  0042                     main@isSw:	
   606                           
   607                           ; 1 bytes @ 0x22
   608  0042                     	ds	1
   609  0043                     main@tmp16:	
   610                           
   611                           ; 2 bytes @ 0x23
   612  0043                     	ds	2
   613  0045                     main@tmp8:	
   614                           
   615                           ; 1 bytes @ 0x25
   616  0045                     	ds	1
   617                           
   618                           	psect	maintext
   619  000B                     __pmaintext:	
   620 ;;Data sizes: Strings 0, constant 0, data 0, bss 13, persistent 0 stack 0
   621 ;;Auto spaces:   Size  Autos    Used
   622 ;; COMMON          14      5      10
   623 ;; BANK0           80     38      46
   624 ;; BANK1           32      0       0
   625 ;;
   626 ;; Pointer list with targets:
   627 ;; ?___awdiv	int  size(1) Largest target is 0
   628 ;;
   629 ;; AccRead@dat	PTR unsigned char  size(2) Largest target is 256
   630 ;;		 -> RAM(DATA[256]), main@buf(BANK0[6]), 
   631 ;;
   632 ;; AccWrite@dat	PTR unsigned char  size(2) Largest target is 256
   633 ;;		 -> RAM(DATA[256]), 
   634 ;;
   635 ;;
   636 ;; Critical Paths under _main in COMMON
   637 ;;
   638 ;;   None.
   639 ;;
   640 ;; Critical Paths under _ISR in COMMON
   641 ;;
   642 ;;   _ISR->i1_READ_EEPROM
   643 ;;   _ISR->i1_WRITE_EEPROM
   644 ;;
   645 ;; Critical Paths under _main in BANK0
   646 ;;
   647 ;;   _main->_AccRead
   648 ;;   _AccRead->_swI2C_ReadByte
   649 ;;   _AccWrite->_swI2C_WriteByte
   650 ;;   _beep->_delay_x10ms
   651 ;;
   652 ;; Critical Paths under _ISR in BANK0
   653 ;;
   654 ;;   None.
   655 ;;
   656 ;; Critical Paths under _main in BANK1
   657 ;;
   658 ;;   None.
   659 ;;
   660 ;; Critical Paths under _ISR in BANK1
   661 ;;
   662 ;;   None.
   663 ;;
   664 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   665 ;;
   666 ;;
   667 ;;Call Graph Tables:
   668 ;;
   669 ;; ---------------------------------------------------------------------------------
   670 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   671 ;; ---------------------------------------------------------------------------------
   672 ;; (0) _main                                                26    26      0    4290
   673 ;;                                             12 BANK0     26    26      0
   674 ;;                           _sys_init
   675 ;;                          _gpio_init
   676 ;;                         _timer_init
   677 ;;                           _int_init
   678 ;;                         _swI2C_Init
   679 ;;                           _setState
   680 ;;                       _WRITE_EEPROM
   681 ;;                           _AccWrite
   682 ;;                               _beep
   683 ;;                        _READ_EEPROM
   684 ;;                             _beepOn
   685 ;;                            _AccRead
   686 ;;                            ___awdiv
   687 ;;                            _beepOff
   688 ;;                        _delay_x10ms
   689 ;;                              _compe
   690 ;; ---------------------------------------------------------------------------------
   691 ;; (1) _AccRead                                              8     5      3     532
   692 ;;                                              4 BANK0      8     5      3
   693 ;;                        _swI2C_Start
   694 ;;                    _swI2C_WriteByte
   695 ;;                     _swI2C_ReadByte
   696 ;;                         _swI2C_Stop
   697 ;; ---------------------------------------------------------------------------------
   698 ;; (1) _AccWrite                                             7     4      3     300
   699 ;;                                              3 BANK0      7     4      3
   700 ;;                        _swI2C_Start
   701 ;;                    _swI2C_WriteByte
   702 ;;                         _swI2C_Stop
   703 ;; ---------------------------------------------------------------------------------
   704 ;; (2) _swI2C_ReadByte                                       4     4      0     170
   705 ;;                                              0 BANK0      4     4      0
   706 ;; ---------------------------------------------------------------------------------
   707 ;; (2) _swI2C_WriteByte                                      3     3      0     139
   708 ;;                                              0 BANK0      3     3      0
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (2) _swI2C_Stop                                           1     1      0       0
   711 ;;                                              0 BANK0      1     1      0
   712 ;; ---------------------------------------------------------------------------------
   713 ;; (2) _swI2C_Start                                          1     1      0       0
   714 ;;                                              0 BANK0      1     1      0
   715 ;; ---------------------------------------------------------------------------------
   716 ;; (1) _swI2C_Init                                           1     1      0       0
   717 ;;                                              0 BANK0      1     1      0
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (1) _sys_init                                             0     0      0       0
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (1) _beep                                                 2     1      1     130
   722 ;;                                              4 BANK0      2     1      1
   723 ;;                        _delay_x10ms
   724 ;; ---------------------------------------------------------------------------------
   725 ;; (1) ___awdiv                                              8     4      4     445
   726 ;;                                              0 BANK0      8     4      4
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (1) _int_init                                             1     1      0       0
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (1) _timer_init                                           0     0      0       0
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (1) _gpio_init                                            0     0      0       0
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (1) _compe                                                8     6      2     372
   735 ;;                                              0 BANK0      8     6      2
   736 ;; ---------------------------------------------------------------------------------
   737 ;; (1) _setState                                             3     1      2      62
   738 ;;                                              0 BANK0      3     1      2
   739 ;; ---------------------------------------------------------------------------------
   740 ;; (1) _beepOn                                               0     0      0       0
   741 ;; ---------------------------------------------------------------------------------
   742 ;; (1) _beepOff                                              0     0      0       0
   743 ;; ---------------------------------------------------------------------------------
   744 ;; (1) _delay_x10ms                                          4     2      2      68
   745 ;;                                              0 BANK0      4     2      2
   746 ;; ---------------------------------------------------------------------------------
   747 ;; (1) _WRITE_EEPROM                                         2     1      1      62
   748 ;;                                              0 BANK0      2     1      1
   749 ;; ---------------------------------------------------------------------------------
   750 ;; (1) _READ_EEPROM                                          2     2      0      65
   751 ;;                                              0 BANK0      2     2      0
   752 ;; ---------------------------------------------------------------------------------
   753 ;; Estimated maximum stack depth 2
   754 ;; ---------------------------------------------------------------------------------
   755 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (3) _ISR                                                  4     4      0     317
   758 ;;                                              2 COMMON     3     3      0
   759 ;;                      i1_READ_EEPROM
   760 ;;                     i1_WRITE_EEPROM
   761 ;; ---------------------------------------------------------------------------------
   762 ;; (4) i1_WRITE_EEPROM                                       2     1      1     146
   763 ;;                                              0 COMMON     2     1      1
   764 ;; ---------------------------------------------------------------------------------
   765 ;; (4) i1_READ_EEPROM                                        2     2      0     148
   766 ;;                                              0 COMMON     2     2      0
   767 ;; ---------------------------------------------------------------------------------
   768 ;; Estimated maximum stack depth 4
   769 ;; ---------------------------------------------------------------------------------
   770 ;; Call Graph Graphs:
   771 ;; _main (ROOT)
   772 ;;   _sys_init
   773 ;;   _gpio_init
   774 ;;   _timer_init
   775 ;;   _int_init
   776 ;;   _swI2C_Init
   777 ;;   _setState
   778 ;;   _WRITE_EEPROM
   779 ;;   _AccWrite
   780 ;;     _swI2C_Start
   781 ;;     _swI2C_WriteByte
   782 ;;     _swI2C_Stop
   783 ;;   _beep
   784 ;;     _delay_x10ms
   785 ;;   _READ_EEPROM
   786 ;;   _beepOn
   787 ;;   _AccRead
   788 ;;     _swI2C_Start
   789 ;;     _swI2C_WriteByte
   790 ;;     _swI2C_ReadByte
   791 ;;     _swI2C_Stop
   792 ;;   ___awdiv
   793 ;;   _beepOff
   794 ;;   _delay_x10ms
   795 ;;   _compe
   796 ;;
   797 ;; _ISR (ROOT)
   798 ;;   i1_READ_EEPROM
   799 ;;   i1_WRITE_EEPROM
   800 ;;
   801 ;; Address spaces:
   802 ;;Name               Size   Autos  Total    Cost      Usage
   803 ;;BITCOMMON            E      0       0       0        0.0%
   804 ;;EEDATA             100      0       0       0        0.0%
   805 ;;NULL                 0      0       0       0        0.0%
   806 ;;CODE                 0      0       0       0        0.0%
   807 ;;COMMON               E      5       A       1       71.4%
   808 ;;BITSFR0              0      0       0       1        0.0%
   809 ;;SFR0                 0      0       0       1        0.0%
   810 ;;BITSFR1              0      0       0       2        0.0%
   811 ;;SFR1                 0      0       0       2        0.0%
   812 ;;STACK                0      0       6       2        0.0%
   813 ;;BITBANK0            50      0       0       3        0.0%
   814 ;;BANK0               50     26      2E       4       57.5%
   815 ;;BANK1               20      0       0       5        0.0%
   816 ;;ABS                  0      0      38       6        0.0%
   817 ;;BITBANK1            20      0       0       7        0.0%
   818 ;;DATA                 0      0      3E       8        0.0%
   819                           
   820                           
   821 ;; *************** function _main *****************
   822 ;; Defined at:
   823 ;;		line 224 in file "smartkey.C"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  buf             6   27[BANK0 ] char [6]
   828 ;;  tmp16           2   35[BANK0 ] unsigned int 
   829 ;;  acXsum          2   25[BANK0 ] int 
   830 ;;  acYsum          2   23[BANK0 ] int 
   831 ;;  isWait          2   16[BANK0 ] unsigned int 
   832 ;;  tmp8            1   37[BANK0 ] unsigned char 
   833 ;;  isSw            1   34[BANK0 ] unsigned char 
   834 ;;  reAlertOn       1   33[BANK0 ] unsigned char 
   835 ;;  antenSkip       1   22[BANK0 ] unsigned char 
   836 ;;  acXOld          1   21[BANK0 ] char 
   837 ;;  acYOld          1   20[BANK0 ] char 
   838 ;;  vibrateOn       1   19[BANK0 ] unsigned char 
   839 ;;  isFall          1   18[BANK0 ] unsigned char 
   840 ;;  accEna          1   15[BANK0 ] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;		None               void
   843 ;; Registers used:
   844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 17F/0
   847 ;;		On exit  : 20/20
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1
   850 ;;      Params:         0       0       0
   851 ;;      Locals:         0      23       0
   852 ;;      Temps:          0       3       0
   853 ;;      Totals:         0      26       0
   854 ;;Total ram usage:       26 bytes
   855 ;; Hardware stack levels required when called:    4
   856 ;; This function calls:
   857 ;;		_sys_init
   858 ;;		_gpio_init
   859 ;;		_timer_init
   860 ;;		_int_init
   861 ;;		_swI2C_Init
   862 ;;		_setState
   863 ;;		_WRITE_EEPROM
   864 ;;		_AccWrite
   865 ;;		_beep
   866 ;;		_READ_EEPROM
   867 ;;		_beepOn
   868 ;;		_AccRead
   869 ;;		___awdiv
   870 ;;		_beepOff
   871 ;;		_delay_x10ms
   872 ;;		_compe
   873 ;; This function is called by:
   874 ;;		Startup code after reset
   875 ;; This function uses a non-reentrant model
   876 ;;
   877  000B                     _main:	
   878                           
   879                           ;smartkey.C: 232: unsigned char reAlertOn=0,tmp8,isSw=0,isFall=0,accEna=1,vibrateOn=0,an
      +                          tenSkip=0;
   880                           
   881                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   882  000B  01C1               	clrf	main@reAlertOn
   883  000C  01C2               	clrf	main@isSw
   884  000D  01B2               	clrf	main@isFall
   885  000E  01AF               	clrf	main@accEna
   886  000F  0AAF               	incf	main@accEna,f
   887  0010  01B3               	clrf	main@vibrateOn
   888  0011  01B6               	clrf	main@antenSkip
   889                           
   890                           ;smartkey.C: 233: unsigned int isWait =0;
   891  0012  01B0               	clrf	main@isWait
   892  0013  01B1               	clrf	main@isWait+1
   893  0014  01B9               	clrf	main@acXsum
   894  0015  01BA               	clrf	main@acXsum+1
   895                           
   896                           ;smartkey.C: 235: unsigned int tmp16=0;
   897  0016  01C3               	clrf	main@tmp16
   898  0017  01C4               	clrf	main@tmp16+1
   899  0018  0064               	clrwdt	;#
   900                           
   901                           ;smartkey.C: 241: sys_init();
   902  0019  2771               	fcall	_sys_init
   903                           
   904                           ;smartkey.C: 242: gpio_init();
   905  001A  26F0               	fcall	_gpio_init
   906                           
   907                           ;smartkey.C: 243: timer_init();
   908  001B  272C               	fcall	_timer_init
   909                           
   910                           ;smartkey.C: 244: int_init();
   911  001C  268C               	fcall	_int_init
   912                           
   913                           ;smartkey.C: 247: _delay((unsigned long)((100)*(4000000/4000.0)));
   914  001D  3082               	movlw	130
   915  001E  00AD               	movwf	??_main+1
   916  001F  30DD               	movlw	221
   917  0020  00AC               	movwf	??_main
   918  0021                     u3777:	
   919  0021  0BAC               	decfsz	??_main,f
   920  0022  2821               	goto	u3777
   921  0023  0BAD               	decfsz	??_main+1,f
   922  0024  2821               	goto	u3777
   923  0025  2826               	nop2
   924                           
   925                           ;smartkey.C: 249: PAIE = 1;
   926  0026  158B               	bsf	11,3
   927                           
   928                           ;smartkey.C: 251: RegStatus = 0;
   929  0027  1283               	bcf	3,5	;RP0=0, select bank0
   930  0028  01CA               	clrf	_RegStatus
   931                           
   932                           ;smartkey.C: 253: swI2C_Init();
   933  0029  266D               	fcall	_swI2C_Init
   934  002A  3000               	movlw	0
   935                           
   936                           ;smartkey.C: 256: setState(0,0);
   937  002B  1283               	bcf	3,5	;RP0=0, select bank0
   938  002C  01A0               	clrf	?_setState
   939  002D  01A1               	clrf	?_setState+1
   940  002E  2765               	fcall	_setState
   941                           
   942                           ;smartkey.C: 258: WRITE_EEPROM(0xFF,0xAA);
   943  002F  30AA               	movlw	170
   944  0030  00A0               	movwf	?_WRITE_EEPROM
   945  0031  30FF               	movlw	255
   946  0032  26A7               	fcall	_WRITE_EEPROM
   947                           
   948                           ;smartkey.C: 259: WRITE_EEPROM(0xFF,0xAA);
   949  0033  30AA               	movlw	170
   950  0034  1283               	bcf	3,5	;RP0=0, select bank0
   951  0035  00A0               	movwf	?_WRITE_EEPROM
   952  0036  30FF               	movlw	255
   953  0037  26A7               	fcall	_WRITE_EEPROM
   954                           
   955                           ;smartkey.C: 261: _delay((unsigned long)((100)*(4000000/4000.0)));
   956  0038  3082               	movlw	130
   957  0039  1283               	bcf	3,5	;RP0=0, select bank0
   958  003A  00AD               	movwf	??_main+1
   959  003B  30DD               	movlw	221
   960  003C  00AC               	movwf	??_main
   961  003D                     u3787:	
   962  003D  0BAC               	decfsz	??_main,f
   963  003E  283D               	goto	u3787
   964  003F  0BAD               	decfsz	??_main+1,f
   965  0040  283D               	goto	u3787
   966  0041  2842               	nop2
   967                           
   968                           ;smartkey.C: 263: buf[0] = 0x08;
   969  0042  3008               	movlw	8
   970  0043  1283               	bcf	3,5	;RP0=0, select bank0
   971  0044  00BB               	movwf	main@buf
   972                           
   973                           ;smartkey.C: 264: buf[1] = 0x4d;
   974  0045  304D               	movlw	77
   975  0046  00BC               	movwf	main@buf+1
   976                           
   977                           ;smartkey.C: 265: if((AccWrite(0x10,(unsigned char)buf,2)==0)) {
   978  0047  303B               	movlw	main@buf& (0+255)
   979  0048  00AC               	movwf	??_main
   980  0049  01AD               	clrf	??_main+1
   981  004A  00A3               	movwf	?_AccWrite
   982  004B  082D               	movf	??_main+1,w
   983  004C  00A4               	movwf	?_AccWrite+1
   984  004D  3002               	movlw	2
   985  004E  00A5               	movwf	?_AccWrite+2
   986  004F  3010               	movlw	16
   987  0050  2645               	fcall	_AccWrite
   988  0051  3800               	iorlw	0
   989  0052  1903               	btfsc	3,2
   990  0053  2859               	goto	l899
   991                           
   992                           ;smartkey.C: 268: else {
   993                           ;smartkey.C: 270: beep(10,2);
   994  0054  3002               	movlw	2
   995  0055  1283               	bcf	3,5	;RP0=0, select bank0
   996  0056  00A4               	movwf	?_beep
   997  0057  300A               	movlw	10
   998  0058  26DA               	fcall	_beep
   999  0059                     l899:	
  1000                           
  1001                           ;smartkey.C: 271: }
  1002                           ;smartkey.C: 274: acXsum = (signed char)READ_EEPROM(0x10);
  1003  0059  3010               	movlw	16
  1004  005A  2758               	fcall	_READ_EEPROM
  1005  005B  00B9               	movwf	main@acXsum
  1006  005C  01BA               	clrf	main@acXsum+1
  1007  005D  1BB9               	btfsc	main@acXsum,7
  1008  005E  03BA               	decf	main@acXsum+1,f
  1009                           
  1010                           ;smartkey.C: 275: acYsum = (signed char)READ_EEPROM(0x11);
  1011  005F  3011               	movlw	17
  1012  0060  2758               	fcall	_READ_EEPROM
  1013  0061  00B7               	movwf	main@acYsum
  1014  0062  01B8               	clrf	main@acYsum+1
  1015  0063  1BB7               	btfsc	main@acYsum,7
  1016  0064  03B8               	decf	main@acYsum+1,f
  1017                           
  1018                           ;smartkey.C: 277: tmp8= READ_EEPROM(0x42);
  1019  0065  3042               	movlw	66
  1020  0066  2758               	fcall	_READ_EEPROM
  1021  0067  00C5               	movwf	main@tmp8
  1022                           
  1023                           ;smartkey.C: 278: if(tmp8>1) {WRITE_EEPROM(0x42,0);_delay((unsigned long)((2)*(4000000/4
      +                          000.0)));}
  1024  0068  3002               	movlw	2
  1025  0069  0245               	subwf	main@tmp8,w
  1026  006A  1C03               	skipc
  1027  006B  2879               	goto	l6835
  1028  006C  3042               	movlw	66
  1029  006D  01A0               	clrf	?_WRITE_EEPROM
  1030  006E  26A7               	fcall	_WRITE_EEPROM
  1031  006F  3003               	movlw	3
  1032  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0071  00AD               	movwf	??_main+1
  1034  0072  3097               	movlw	151
  1035  0073  00AC               	movwf	??_main
  1036  0074                     u3797:	
  1037  0074  0BAC               	decfsz	??_main,f
  1038  0075  2874               	goto	u3797
  1039  0076  0BAD               	decfsz	??_main+1,f
  1040  0077  2874               	goto	u3797
  1041  0078  2879               	nop2
  1042  0079                     l6835:	
  1043                           
  1044                           ;smartkey.C: 279: tmp8= READ_EEPROM(0x41);
  1045  0079  3041               	movlw	65
  1046  007A  2758               	fcall	_READ_EEPROM
  1047  007B  00C5               	movwf	main@tmp8
  1048                           
  1049                           ;smartkey.C: 280: if(tmp8>1) {WRITE_EEPROM(0x41,0);_delay((unsigned long)((2)*(4000000/4
      +                          000.0)));}
  1050  007C  3002               	movlw	2
  1051  007D  0245               	subwf	main@tmp8,w
  1052  007E  1C03               	skipc
  1053  007F  288D               	goto	l6843
  1054  0080  3041               	movlw	65
  1055  0081  01A0               	clrf	?_WRITE_EEPROM
  1056  0082  26A7               	fcall	_WRITE_EEPROM
  1057  0083  3003               	movlw	3
  1058  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1059  0085  00AD               	movwf	??_main+1
  1060  0086  3097               	movlw	151
  1061  0087  00AC               	movwf	??_main
  1062  0088                     u3807:	
  1063  0088  0BAC               	decfsz	??_main,f
  1064  0089  2888               	goto	u3807
  1065  008A  0BAD               	decfsz	??_main+1,f
  1066  008B  2888               	goto	u3807
  1067  008C  288D               	nop2
  1068  008D                     l6843:	
  1069                           
  1070                           ;smartkey.C: 284: tmp8 = READ_EEPROM(0x08);
  1071  008D  3008               	movlw	8
  1072  008E  2758               	fcall	_READ_EEPROM
  1073  008F  00C5               	movwf	main@tmp8
  1074                           
  1075                           ;smartkey.C: 285: if(tmp8==0xff) {WRITE_EEPROM(0x08,0);_delay((unsigned long)((2)*(40000
      +                          00/4000.0)));}
  1076  0090  3AFF               	xorlw	255
  1077  0091  1D03               	skipz
  1078  0092  28A0               	goto	l6851
  1079  0093  3008               	movlw	8
  1080  0094  01A0               	clrf	?_WRITE_EEPROM
  1081  0095  26A7               	fcall	_WRITE_EEPROM
  1082  0096  3003               	movlw	3
  1083  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1084  0098  00AD               	movwf	??_main+1
  1085  0099  3097               	movlw	151
  1086  009A  00AC               	movwf	??_main
  1087  009B                     u3817:	
  1088  009B  0BAC               	decfsz	??_main,f
  1089  009C  289B               	goto	u3817
  1090  009D  0BAD               	decfsz	??_main+1,f
  1091  009E  289B               	goto	u3817
  1092  009F  28A0               	nop2
  1093  00A0                     l6851:	
  1094                           
  1095                           ;smartkey.C: 286: if(tmp8==0xcc){
  1096  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1097  00A1  0845               	movf	main@tmp8,w
  1098  00A2  3ACC               	xorlw	204
  1099  00A3  1D03               	skipz
  1100  00A4  28BB               	goto	l6865
  1101  00A5  3008               	movlw	8
  1102                           
  1103                           ;smartkey.C: 287: RegStatus &=~(0x20);
  1104  00A6  12CA               	bcf	_RegStatus,5
  1105                           
  1106                           ;smartkey.C: 288: setState(3,1800);
  1107  00A7  00A0               	movwf	?_setState
  1108  00A8  3007               	movlw	7
  1109  00A9  00A1               	movwf	?_setState+1
  1110  00AA  3003               	movlw	3
  1111  00AB  2765               	fcall	_setState
  1112                           
  1113                           ;smartkey.C: 289: mtOldState = 1;
  1114  00AC  01CD               	clrf	_mtOldState
  1115  00AD  0ACD               	incf	_mtOldState,f
  1116                           
  1117                           ;smartkey.C: 290: cntTmp = timeTick+50;
  1118  00AE  0871               	movf	_timeTick+1,w
  1119  00AF  00C7               	movwf	_cntTmp+1
  1120  00B0  0870               	movf	_timeTick,w
  1121  00B1  00C6               	movwf	_cntTmp
  1122  00B2  3032               	movlw	50
  1123  00B3  07C6               	addwf	_cntTmp,f
  1124  00B4  1803               	skipnc
  1125  00B5  0AC7               	incf	_cntTmp+1,f
  1126                           
  1127                           ;smartkey.C: 291: PR2L =12;
  1128  00B6  300C               	movlw	12
  1129  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  1130  00B8  0091               	movwf	17	;volatile
  1131                           
  1132                           ;smartkey.C: 292: beepOn();
  1133  00B9  2786               	fcall	_beepOn
  1134                           
  1135                           ;smartkey.C: 293: } else {
  1136  00BA  28C2               	goto	l6869
  1137  00BB                     l6865:	
  1138                           
  1139                           ;smartkey.C: 294: setState(2,400);
  1140  00BB  3090               	movlw	144
  1141  00BC  00A0               	movwf	?_setState
  1142  00BD  3001               	movlw	1
  1143  00BE  00A1               	movwf	?_setState+1
  1144  00BF  3002               	movlw	2
  1145  00C0  2765               	fcall	_setState
  1146                           
  1147                           ;smartkey.C: 295: mtOldState = 0;
  1148  00C1  01CD               	clrf	_mtOldState
  1149  00C2                     l6869:	
  1150                           
  1151                           ;smartkey.C: 296: }
  1152                           ;smartkey.C: 298: tmp8 = READ_EEPROM(0x3F);
  1153  00C2  303F               	movlw	63
  1154  00C3  2758               	fcall	_READ_EEPROM
  1155  00C4  00C5               	movwf	main@tmp8
  1156                           
  1157                           ;smartkey.C: 299: if(tmp8==5){
  1158  00C5  3A05               	xorlw	5
  1159  00C6  1D03               	skipz
  1160  00C7  28FF               	goto	l6891
  1161  00C8  303F               	movlw	63
  1162                           
  1163                           ;smartkey.C: 300: tmp8 = 0;
  1164  00C9  01C5               	clrf	main@tmp8
  1165  00CA                     L6:	
  1166                           
  1167                           ;smartkey.C: 301: WRITE_EEPROM(0x3F,0);
  1168  00CA  01A0               	clrf	?_WRITE_EEPROM
  1169  00CB  26A7               	fcall	_WRITE_EEPROM
  1170  00CC                     l6889:	
  1171                           ;smartkey.C: 302: while( RA2){
  1172                           
  1173  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1174  00CD  1D05               	btfss	5,2
  1175  00CE  28FD               	goto	l912
  1176                           
  1177                           ;smartkey.C: 303: _delay((unsigned long)((1500)*(4000000/4000.0)));
  1178  00CF  3008               	movlw	8
  1179  00D0  00AE               	movwf	??_main+2
  1180  00D1  309D               	movlw	157
  1181  00D2  00AD               	movwf	??_main+1
  1182  00D3  300B               	movlw	11
  1183  00D4  00AC               	movwf	??_main
  1184  00D5                     u3827:	
  1185  00D5  0BAC               	decfsz	??_main,f
  1186  00D6  28D5               	goto	u3827
  1187  00D7  0BAD               	decfsz	??_main+1,f
  1188  00D8  28D5               	goto	u3827
  1189  00D9  0BAE               	decfsz	??_main+2,f
  1190  00DA  28D5               	goto	u3827
  1191  00DB  28DC               	nop2
  1192  00DC  3015               	movlw	21
  1193                           
  1194                           ;smartkey.C: 304: tmp8++;
  1195  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1196  00DE  0AC5               	incf	main@tmp8,f
  1197                           
  1198                           ;smartkey.C: 305: if(tmp8 >20){
  1199  00DF  0245               	subwf	main@tmp8,w
  1200  00E0  1C03               	skipc
  1201  00E1  28F1               	goto	l908
  1202                           
  1203                           ;smartkey.C: 306: _delay((unsigned long)((10000)*(4000000/4000.0)));
  1204  00E2  3033               	movlw	51
  1205  00E3  00AE               	movwf	??_main+2
  1206  00E4  30BC               	movlw	188
  1207  00E5  00AD               	movwf	??_main+1
  1208  00E6  3010               	movlw	16
  1209  00E7  00AC               	movwf	??_main
  1210  00E8                     u3837:	
  1211  00E8  0BAC               	decfsz	??_main,f
  1212  00E9  28E8               	goto	u3837
  1213  00EA  0BAD               	decfsz	??_main+1,f
  1214  00EB  28E8               	goto	u3837
  1215  00EC  0BAE               	decfsz	??_main+2,f
  1216  00ED  28E8               	goto	u3837
  1217  00EE  3040               	movlw	64
  1218                           
  1219                           ;smartkey.C: 307: WRITE_EEPROM(0x40,0);
  1220  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1221  00F0  28CA               	goto	L6
  1222  00F1                     l908:	
  1223                           ;smartkey.C: 308: }
  1224                           
  1225                           
  1226                           ;smartkey.C: 309: else if( RA2){
  1227  00F1  1D05               	btfss	5,2
  1228  00F2  28CC               	goto	l6889
  1229                           
  1230                           ;smartkey.C: 310: WRITE_EEPROM(0x40,tmp8);
  1231  00F3  0845               	movf	main@tmp8,w
  1232  00F4  00A0               	movwf	?_WRITE_EEPROM
  1233  00F5  3040               	movlw	64
  1234  00F6  26A7               	fcall	_WRITE_EEPROM
  1235  00F7  300A               	movlw	10
  1236                           
  1237                           ;smartkey.C: 311: beep(10,1);
  1238  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1239  00F9  01A4               	clrf	?_beep
  1240  00FA  0AA4               	incf	?_beep,f
  1241  00FB  26DA               	fcall	_beep
  1242  00FC  28CC               	goto	l6889
  1243  00FD                     l912:	
  1244  00FD  1D05               	btfss	5,2
  1245  00FE  28FD               	goto	l912
  1246  00FF                     l6891:	
  1247                           
  1248                           ;smartkey.C: 316: }
  1249                           ;smartkey.C: 319: tmp8 = READ_EEPROM(0x40);
  1250  00FF  3040               	movlw	64
  1251  0100  2758               	fcall	_READ_EEPROM
  1252  0101  00C5               	movwf	main@tmp8
  1253                           
  1254                           ;smartkey.C: 320: switch(tmp8){
  1255  0102  29CC               	goto	l6939
  1256  0103                     l6893:	
  1257  0103  3003               	movlw	3
  1258                           
  1259                           ;smartkey.C: 323: tmp8=0; beep(10,3);
  1260  0104  01C5               	clrf	main@tmp8
  1261  0105  00A4               	movwf	?_beep
  1262  0106  300A               	movlw	10
  1263  0107  26DA               	fcall	_beep
  1264                           
  1265                           ;smartkey.C: 324: while((tmp8<11)){
  1266  0108  2936               	goto	l917
  1267  0109                     l6899:	
  1268                           
  1269                           ;smartkey.C: 326: acXsum += buf[1];
  1270  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1271  010A  083C               	movf	main@buf+1,w
  1272  010B  00AC               	movwf	??_main
  1273  010C  01AD               	clrf	??_main+1
  1274  010D  1BAC               	btfsc	??_main,7
  1275  010E  03AD               	decf	??_main+1,f
  1276  010F  07B9               	addwf	main@acXsum,f
  1277  0110  1803               	skipnc
  1278  0111  0ABA               	incf	main@acXsum+1,f
  1279  0112  082D               	movf	??_main+1,w
  1280  0113  07BA               	addwf	main@acXsum+1,f
  1281                           
  1282                           ;smartkey.C: 327: acYsum += buf[3];
  1283  0114  083E               	movf	main@buf+3,w
  1284  0115  00AC               	movwf	??_main
  1285  0116  01AD               	clrf	??_main+1
  1286  0117  1BAC               	btfsc	??_main,7
  1287  0118  03AD               	decf	??_main+1,f
  1288  0119  07B7               	addwf	main@acYsum,f
  1289  011A  1803               	skipnc
  1290  011B  0AB8               	incf	main@acYsum+1,f
  1291  011C  082D               	movf	??_main+1,w
  1292  011D  07B8               	addwf	main@acYsum+1,f
  1293                           
  1294                           ;smartkey.C: 328: tmp16 = (signed int)tmp16 + buf[5];
  1295  011E  0840               	movf	main@buf+5,w
  1296  011F  00AC               	movwf	??_main
  1297  0120  01AD               	clrf	??_main+1
  1298  0121  1BAC               	btfsc	??_main,7
  1299  0122  03AD               	decf	??_main+1,f
  1300  0123  07C3               	addwf	main@tmp16,f
  1301  0124  1803               	skipnc
  1302  0125  0AC4               	incf	main@tmp16+1,f
  1303  0126  082D               	movf	??_main+1,w
  1304  0127  07C4               	addwf	main@tmp16+1,f
  1305  0128  3003               	movlw	3
  1306                           
  1307                           ;smartkey.C: 329: tmp8++;
  1308  0129  0AC5               	incf	main@tmp8,f
  1309                           
  1310                           ;smartkey.C: 332: _delay((unsigned long)((500)*(4000000/4000.0)));
  1311                           
  1312                           ;smartkey.C: 330: } else
  1313  012A  00AE               	movwf	??_main+2
  1314  012B  308A               	movlw	138
  1315  012C  00AD               	movwf	??_main+1
  1316  012D  3056               	movlw	86
  1317  012E  00AC               	movwf	??_main
  1318  012F                     u3847:	
  1319  012F  0BAC               	decfsz	??_main,f
  1320  0130  292F               	goto	u3847
  1321  0131  0BAD               	decfsz	??_main+1,f
  1322  0132  292F               	goto	u3847
  1323  0133  0BAE               	decfsz	??_main+2,f
  1324  0134  292F               	goto	u3847
  1325  0135  2936               	nop2
  1326  0136                     l917:	
  1327  0136  300B               	movlw	11
  1328  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1329  0138  0245               	subwf	main@tmp8,w
  1330  0139  1803               	btfsc	3,0
  1331  013A  2948               	goto	l6905
  1332                           
  1333                           ;smartkey.C: 325: if(AccRead(0x02,(unsigned char)buf,6)==0){
  1334  013B  303B               	movlw	main@buf& (0+255)
  1335  013C  00AC               	movwf	??_main
  1336  013D  01AD               	clrf	??_main+1
  1337  013E  00A4               	movwf	?_AccRead
  1338  013F  082D               	movf	??_main+1,w
  1339  0140  00A5               	movwf	?_AccRead+1
  1340  0141  3006               	movlw	6
  1341  0142  00A6               	movwf	?_AccRead+2
  1342  0143  3002               	movlw	2
  1343  0144  260A               	fcall	_AccRead
  1344  0145  3800               	iorlw	0
  1345  0146  1903               	btfsc	3,2
  1346  0147  2909               	goto	l6899
  1347  0148                     l6905:	
  1348                           
  1349                           ;smartkey.C: 333: }
  1350                           ;smartkey.C: 335: if(tmp8==11){
  1351  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1352  0149  0845               	movf	main@tmp8,w
  1353  014A  3A0B               	xorlw	11
  1354  014B  1D03               	skipz
  1355  014C  299E               	goto	l6917
  1356                           
  1357                           ;smartkey.C: 336: acXsum =acXsum/10;
  1358  014D  300A               	movlw	10
  1359  014E  00A0               	movwf	?___awdiv
  1360  014F  01A1               	clrf	?___awdiv+1
  1361  0150  083A               	movf	main@acXsum+1,w
  1362  0151  00A3               	movwf	?___awdiv+3
  1363  0152  0839               	movf	main@acXsum,w
  1364  0153  00A2               	movwf	?___awdiv+2
  1365  0154  2504               	fcall	___awdiv
  1366  0155  0821               	movf	?___awdiv+1,w
  1367  0156  00BA               	movwf	main@acXsum+1
  1368  0157  0820               	movf	?___awdiv,w
  1369  0158  00B9               	movwf	main@acXsum
  1370                           
  1371                           ;smartkey.C: 337: acYsum = acYsum/10;
  1372  0159  300A               	movlw	10
  1373  015A  00A0               	movwf	?___awdiv
  1374  015B  01A1               	clrf	?___awdiv+1
  1375  015C  0838               	movf	main@acYsum+1,w
  1376  015D  00A3               	movwf	?___awdiv+3
  1377  015E  0837               	movf	main@acYsum,w
  1378  015F  00A2               	movwf	?___awdiv+2
  1379  0160  2504               	fcall	___awdiv
  1380  0161  0821               	movf	?___awdiv+1,w
  1381  0162  00B8               	movwf	main@acYsum+1
  1382  0163  0820               	movf	?___awdiv,w
  1383  0164  00B7               	movwf	main@acYsum
  1384                           
  1385                           ;smartkey.C: 338: tmp16 = (signed int)tmp16/10;
  1386  0165  300A               	movlw	10
  1387  0166  00A0               	movwf	?___awdiv
  1388  0167  01A1               	clrf	?___awdiv+1
  1389  0168  0844               	movf	main@tmp16+1,w
  1390  0169  00A3               	movwf	?___awdiv+3
  1391  016A  0843               	movf	main@tmp16,w
  1392  016B  00A2               	movwf	?___awdiv+2
  1393  016C  2504               	fcall	___awdiv
  1394  016D  0821               	movf	?___awdiv+1,w
  1395  016E  00C4               	movwf	main@tmp16+1
  1396  016F  0820               	movf	?___awdiv,w
  1397  0170  00C3               	movwf	main@tmp16
  1398                           
  1399                           ;smartkey.C: 340: if(((signed int)tmp16 > (-31)) && ((signed int)tmp16 < 31)){
  1400  0171  0844               	movf	main@tmp16+1,w
  1401  0172  3A80               	xorlw	128
  1402  0173  00FF               	movwf	127
  1403  0174  307F               	movlw	127
  1404  0175  027F               	subwf	127,w
  1405  0176  1D03               	skipz
  1406  0177  297A               	goto	u3155
  1407  0178  30E2               	movlw	226
  1408  0179  0243               	subwf	main@tmp16,w
  1409  017A                     u3155:	
  1410  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1411  017B  1C03               	skipc
  1412  017C  298F               	goto	L7
  1413  017D  0844               	movf	main@tmp16+1,w
  1414  017E  3A80               	xorlw	128
  1415  017F  00FF               	movwf	127
  1416  0180  3080               	movlw	128
  1417  0181  027F               	subwf	127,w
  1418  0182  1D03               	skipz
  1419  0183  2986               	goto	u3165
  1420  0184  301F               	movlw	31
  1421  0185  0243               	subwf	main@tmp16,w
  1422  0186                     u3165:	
  1423  0186  1803               	skipnc
  1424  0187  298E               	goto	l6915
  1425                           
  1426                           ;smartkey.C: 341: beep(10,4);
  1427  0188  3004               	movlw	4
  1428  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1429  018A  00A4               	movwf	?_beep
  1430  018B  300A               	movlw	10
  1431  018C  26DA               	fcall	_beep
  1432                           
  1433                           ;smartkey.C: 342: }else{
  1434  018D  29D7               	goto	l6941
  1435  018E                     l6915:	
  1436                           
  1437                           ;smartkey.C: 344: WRITE_EEPROM(0x10,(unsigned char)acXsum);
  1438  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1439  018F                     L7:	
  1440  018F  0839               	movf	main@acXsum,w
  1441  0190  00A0               	movwf	?_WRITE_EEPROM
  1442  0191  3010               	movlw	16
  1443  0192  26A7               	fcall	_WRITE_EEPROM
  1444                           
  1445                           ;smartkey.C: 345: WRITE_EEPROM(0x11,(unsigned char)acYsum);
  1446  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0194  0837               	movf	main@acYsum,w
  1448  0195  00A0               	movwf	?_WRITE_EEPROM
  1449  0196  3011               	movlw	17
  1450  0197  26A7               	fcall	_WRITE_EEPROM
  1451                           
  1452                           ;smartkey.C: 346: beep(10,3);
  1453  0198  3003               	movlw	3
  1454  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1455  019A  00A4               	movwf	?_beep
  1456  019B  300A               	movlw	10
  1457  019C  26DA               	fcall	_beep
  1458  019D  29D7               	goto	l6941
  1459  019E                     l6917:	
  1460                           
  1461                           ;smartkey.C: 349: beep(10,2);
  1462  019E  3002               	movlw	2
  1463  019F  00A4               	movwf	?_beep
  1464  01A0  300A               	movlw	10
  1465  01A1  26DA               	fcall	_beep
  1466  01A2  29D7               	goto	l6941
  1467  01A3                     l6919:	
  1468                           
  1469                           ;smartkey.C: 356: tmp8= READ_EEPROM(0x42);
  1470  01A3  3042               	movlw	66
  1471  01A4  2758               	fcall	_READ_EEPROM
  1472  01A5  00C5               	movwf	main@tmp8
  1473                           
  1474                           ;smartkey.C: 357: if((tmp8==1)||(tmp8==0xff)){
  1475  01A6  0345               	decf	main@tmp8,w
  1476  01A7  1903               	skipnz
  1477  01A8  29AD               	goto	l6925
  1478  01A9  0845               	movf	main@tmp8,w
  1479  01AA  3AFF               	xorlw	255
  1480  01AB  1D03               	skipz
  1481  01AC  29B0               	goto	l6927
  1482  01AD                     l6925:	
  1483  01AD  3042               	movlw	66
  1484                           
  1485                           ;smartkey.C: 358: WRITE_EEPROM(0x42,0);
  1486  01AE  01A0               	clrf	?_WRITE_EEPROM
  1487  01AF  29B3               	goto	L1
  1488  01B0                     l6927:	
  1489                           ;smartkey.C: 359: }
  1490                           
  1491  01B0  3042               	movlw	66
  1492                           
  1493                           ;smartkey.C: 360: else{
  1494                           ;smartkey.C: 361: WRITE_EEPROM(0x42,0x1);
  1495  01B1  01A0               	clrf	?_WRITE_EEPROM
  1496  01B2  0AA0               	incf	?_WRITE_EEPROM,f
  1497  01B3                     L1:	
  1498  01B3  26A7               	fcall	_WRITE_EEPROM
  1499  01B4  300A               	movlw	10
  1500                           
  1501                           ;smartkey.C: 362: }
  1502                           ;smartkey.C: 363: beep(10,1);
  1503  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1504  01B6  01A4               	clrf	?_beep
  1505  01B7  0AA4               	incf	?_beep,f
  1506  01B8  26DA               	fcall	_beep
  1507                           
  1508                           ;smartkey.C: 364: break;
  1509  01B9  29D7               	goto	l6941
  1510  01BA                     l6929:	
  1511                           
  1512                           ;smartkey.C: 368: tmp8= READ_EEPROM(0x41);
  1513  01BA  3041               	movlw	65
  1514  01BB  2758               	fcall	_READ_EEPROM
  1515  01BC  00C5               	movwf	main@tmp8
  1516                           
  1517                           ;smartkey.C: 369: if(tmp8){
  1518  01BD  0845               	movf	main@tmp8,w
  1519  01BE  3041               	movlw	65
  1520  01BF  1903               	btfsc	3,2
  1521  01C0  29C3               	goto	L8
  1522                           
  1523                           ;smartkey.C: 370: WRITE_EEPROM(0x41,0);
  1524  01C1  01A0               	clrf	?_WRITE_EEPROM
  1525  01C2  29C5               	goto	L2
  1526  01C3                     L8:	
  1527                           ;smartkey.C: 371: }
  1528                           
  1529                           
  1530                           ;smartkey.C: 372: else {
  1531                           ;smartkey.C: 373: WRITE_EEPROM(0x41,0x1);
  1532  01C3  01A0               	clrf	?_WRITE_EEPROM
  1533  01C4  0AA0               	incf	?_WRITE_EEPROM,f
  1534  01C5                     L2:	
  1535  01C5  26A7               	fcall	_WRITE_EEPROM
  1536  01C6  3032               	movlw	50
  1537                           
  1538                           ;smartkey.C: 374: }
  1539                           ;smartkey.C: 375: beep(50,1);
  1540  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1541  01C8  01A4               	clrf	?_beep
  1542  01C9  0AA4               	incf	?_beep,f
  1543  01CA  26DA               	fcall	_beep
  1544                           
  1545                           ;smartkey.C: 376: break;
  1546  01CB  29D7               	goto	l6941
  1547  01CC                     l6939:	
  1548  01CC  0845               	movf	main@tmp8,w
  1549                           
  1550                           ; Switch size 1, requested type "space"
  1551                           ; Number of cases is 3, Range of values is 3 to 20
  1552                           ; switch strategies available:
  1553                           ; Name         Instructions Cycles
  1554                           ; simple_byte           10     6 (average)
  1555                           ; direct_byte           27     9 (fixed)
  1556                           ; jumptable            263     9 (fixed)
  1557                           ;	Chosen strategy is simple_byte
  1558  01CD  3A03               	xorlw	3	; case 3
  1559  01CE  1903               	skipnz
  1560  01CF  2903               	goto	l6893
  1561  01D0  3A09               	xorlw	9	; case 10
  1562  01D1  1903               	skipnz
  1563  01D2  29A3               	goto	l6919
  1564  01D3  3A1E               	xorlw	30	; case 20
  1565  01D4  1903               	skipnz
  1566  01D5  29BA               	goto	l6929
  1567  01D6  29D7               	goto	l6941
  1568  01D7                     l6941:	
  1569                           
  1570                           ;smartkey.C: 380: tmp8 = READ_EEPROM(0x41);
  1571  01D7  3041               	movlw	65
  1572  01D8  2758               	fcall	_READ_EEPROM
  1573  01D9  00C5               	movwf	main@tmp8
  1574                           
  1575                           ;smartkey.C: 381: if(tmp8==1){
  1576  01DA  0B45               	decfsz	main@tmp8,w
  1577  01DB  29E6               	goto	l6953
  1578  01DC  30AC               	movlw	172
  1579                           
  1580                           ;smartkey.C: 382: RegStatus |=(0x20);
  1581  01DD  16CA               	bsf	_RegStatus,5
  1582                           
  1583                           ;smartkey.C: 383: setState(1,3500);
  1584  01DE  00A0               	movwf	?_setState
  1585  01DF  300D               	movlw	13
  1586  01E0  00A1               	movwf	?_setState+1
  1587  01E1  3001               	movlw	1
  1588  01E2  2765               	fcall	_setState
  1589                           
  1590                           ;smartkey.C: 385: antenSkip =1;
  1591  01E3  01B6               	clrf	main@antenSkip
  1592  01E4  0AB6               	incf	main@antenSkip,f
  1593                           
  1594                           ;smartkey.C: 386: accEna =0;
  1595  01E5  01AF               	clrf	main@accEna
  1596  01E6                     l6953:	
  1597                           
  1598                           ;smartkey.C: 387: }
  1599                           ;smartkey.C: 390: tmp8 = READ_EEPROM(0x42);
  1600  01E6  3042               	movlw	66
  1601  01E7  2758               	fcall	_READ_EEPROM
  1602  01E8  00C5               	movwf	main@tmp8
  1603                           
  1604                           ;smartkey.C: 391: if((tmp8==1)&&(antenSkip ==0)){
  1605  01E9  0B45               	decfsz	main@tmp8,w
  1606  01EA  2A03               	goto	l6969
  1607  01EB  08B6               	movf	main@antenSkip,f
  1608  01EC  1D03               	skipz
  1609  01ED  2A03               	goto	l6969
  1610  01EE  30AC               	movlw	172
  1611                           
  1612                           ;smartkey.C: 392: RegStatus |=(0x20);
  1613  01EF  16CA               	bsf	_RegStatus,5
  1614                           
  1615                           ;smartkey.C: 393: setState(1,3500);
  1616  01F0  00A0               	movwf	?_setState
  1617  01F1  300D               	movlw	13
  1618  01F2  00A1               	movwf	?_setState+1
  1619  01F3  3001               	movlw	1
  1620  01F4  2765               	fcall	_setState
  1621                           
  1622                           ;smartkey.C: 395: antenSkip =1;
  1623  01F5  01B6               	clrf	main@antenSkip
  1624  01F6  0AB6               	incf	main@antenSkip,f
  1625                           
  1626                           ;smartkey.C: 396: tmp16 = timeTick+40;
  1627  01F7  0871               	movf	_timeTick+1,w
  1628  01F8  00C4               	movwf	main@tmp16+1
  1629  01F9  0870               	movf	_timeTick,w
  1630  01FA  00C3               	movwf	main@tmp16
  1631  01FB  3028               	movlw	40
  1632  01FC  07C3               	addwf	main@tmp16,f
  1633  01FD  1803               	skipnc
  1634  01FE  0AC4               	incf	main@tmp16+1,f
  1635  01FF  300A               	movlw	10
  1636                           
  1637                           ;smartkey.C: 397: beep(10,1);
  1638  0200  01A4               	clrf	?_beep
  1639  0201  0AA4               	incf	?_beep,f
  1640  0202  26DA               	fcall	_beep
  1641  0203                     l6969:	
  1642                           
  1643                           ;smartkey.C: 398: }
  1644                           ;smartkey.C: 400: timeTick = 0;
  1645  0203  01F0               	clrf	_timeTick
  1646  0204  01F1               	clrf	_timeTick+1
  1647  0205                     l6971:	
  1648                           
  1649                           ;smartkey.C: 406: if( antenSkip ==0){
  1650  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1651  0206  08B6               	movf	main@antenSkip,f
  1652  0207  1D03               	skipz
  1653  0208  2AE4               	goto	l7085
  1654                           
  1655                           ;smartkey.C: 407: if((mode_chek == 0) && (antenSkip ==0)){
  1656  0209  08F3               	movf	_mode_chek,f
  1657  020A  1D03               	skipz
  1658  020B  2AE4               	goto	l7085
  1659  020C  08B6               	movf	main@antenSkip,f
  1660  020D  1903               	btfsc	3,2
  1661                           
  1662                           ;smartkey.C: 408: if(RegStatus & 0x80){
  1663  020E  1FCA               	btfss	_RegStatus,7
  1664  020F  2AE4               	goto	l7085
  1665                           
  1666                           ;smartkey.C: 410: PAIE = 0;
  1667  0210  118B               	bcf	11,3
  1668                           
  1669                           ;smartkey.C: 412: RegStatus &= (~0x80);
  1670  0211  13CA               	bcf	_RegStatus,7
  1671                           
  1672                           ;smartkey.C: 416: if ((RegStatus & 0x40) !=0){
  1673  0212  1B4A               	btfsc	_RegStatus,6
  1674  0213  2A8F               	goto	l7045
  1675  0214  2ADB               	goto	l7083
  1676  0215                     l6983:	
  1677                           
  1678                           ;smartkey.C: 420: lostDetect =0;
  1679  0215  01CC               	clrf	_lostDetect
  1680  0216                     L4:	
  1681  0216  3028               	movlw	40
  1682                           
  1683                           ;smartkey.C: 421: timeTick =0;
  1684  0217  01F0               	clrf	_timeTick
  1685  0218  01F1               	clrf	_timeTick+1
  1686                           
  1687                           ;smartkey.C: 422: tmp16 = 40;
  1688  0219  00C3               	movwf	main@tmp16
  1689  021A  01C4               	clrf	main@tmp16+1
  1690                           
  1691                           ;smartkey.C: 423: break;
  1692  021B  2AE3               	goto	l963
  1693  021C                     l6987:	
  1694                           
  1695                           ;smartkey.C: 426: if(timeTick >30){
  1696  021C  3000               	movlw	0
  1697  021D  0271               	subwf	_timeTick+1,w
  1698  021E  301F               	movlw	31
  1699  021F  1903               	skipnz
  1700  0220  0270               	subwf	_timeTick,w
  1701  0221  1C03               	skipc
  1702  0222  2AE3               	goto	l963
  1703  0223  3008               	movlw	8
  1704                           
  1705                           ;smartkey.C: 427: timeTick =0;
  1706  0224  01F0               	clrf	_timeTick
  1707  0225  01F1               	clrf	_timeTick+1
  1708                           
  1709                           ;smartkey.C: 429: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1710  0226  2758               	fcall	_READ_EEPROM
  1711  0227  3ACC               	xorlw	204
  1712  0228  1D03               	skipz
  1713  0229  2A2D               	goto	l6995
  1714  022A  3008               	movlw	8
  1715  022B  01A0               	clrf	?_WRITE_EEPROM
  1716  022C  26A7               	fcall	_WRITE_EEPROM
  1717  022D                     l6995:	
  1718                           
  1719                           ;smartkey.C: 431: if((mtOldState == 3)){
  1720  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1721  022E  084D               	movf	_mtOldState,w
  1722  022F  3A03               	xorlw	3
  1723  0230  1D03               	skipz
  1724  0231  2A3E               	goto	l7005
  1725                           
  1726                           ;smartkey.C: 432: beepOn();TMR2ON = 0; beep(10,1);
  1727  0232  2786               	fcall	_beepOn
  1728  0233  300A               	movlw	10
  1729  0234  1283               	bcf	3,5	;RP0=0, select bank0
  1730  0235  1112               	bcf	18,2
  1731  0236  01A4               	clrf	?_beep
  1732  0237  0AA4               	incf	?_beep,f
  1733  0238  26DA               	fcall	_beep
  1734  0239                     L3:	
  1735                           
  1736                           ;smartkey.C: 433: if(reAlertOn)reAlertOn =0;
  1737  0239  0841               	movf	main@reAlertOn,w
  1738  023A  1903               	btfsc	3,2
  1739  023B  2AE3               	goto	l963
  1740  023C  01C1               	clrf	main@reAlertOn
  1741  023D  2AE3               	goto	l963
  1742  023E                     l7005:	
  1743                           
  1744                           ;smartkey.C: 435: else if((mtOldState == 0)||(mtOldState == 4)){
  1745  023E  084D               	movf	_mtOldState,w
  1746  023F  1903               	btfsc	3,2
  1747  0240  2A45               	goto	l953
  1748  0241  084D               	movf	_mtOldState,w
  1749  0242  3A04               	xorlw	4
  1750  0243  1D03               	skipz
  1751  0244  2A62               	goto	l7019
  1752  0245                     l953:	
  1753  0245  30AC               	movlw	172
  1754                           
  1755                           ;smartkey.C: 436: RegStatus |=(0x20);
  1756  0246  16CA               	bsf	_RegStatus,5
  1757                           
  1758                           ;smartkey.C: 437: setState(1,3500);
  1759  0247  00A0               	movwf	?_setState
  1760  0248  300D               	movlw	13
  1761  0249  00A1               	movwf	?_setState+1
  1762  024A  3001               	movlw	1
  1763  024B  2765               	fcall	_setState
  1764                           
  1765                           ;smartkey.C: 438: if(READ_EEPROM(0x40))WRITE_EEPROM(0x40,0);
  1766  024C  3040               	movlw	64
  1767  024D  2758               	fcall	_READ_EEPROM
  1768  024E  3A00               	xorlw	0
  1769  024F  1903               	skipnz
  1770  0250  2A54               	goto	l7015
  1771  0251  3040               	movlw	64
  1772  0252  01A0               	clrf	?_WRITE_EEPROM
  1773  0253  26A7               	fcall	_WRITE_EEPROM
  1774  0254                     l7015:	
  1775                           
  1776                           ;smartkey.C: 439: tmp16 = timeTick+40;
  1777  0254  0871               	movf	_timeTick+1,w
  1778  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1779  0256  00C4               	movwf	main@tmp16+1
  1780  0257  0870               	movf	_timeTick,w
  1781  0258  00C3               	movwf	main@tmp16
  1782  0259  3028               	movlw	40
  1783  025A  07C3               	addwf	main@tmp16,f
  1784  025B  1803               	skipnc
  1785  025C  0AC4               	incf	main@tmp16+1,f
  1786  025D  300A               	movlw	10
  1787                           
  1788                           ;smartkey.C: 440: beep(10,1);
  1789  025E  01A4               	clrf	?_beep
  1790  025F  0AA4               	incf	?_beep,f
  1791  0260  26DA               	fcall	_beep
  1792                           
  1793                           ;smartkey.C: 441: }
  1794  0261  2AE3               	goto	l963
  1795  0262                     l7019:	
  1796                           
  1797                           ;smartkey.C: 442: else if((mtOldState == 1)){
  1798  0262  0B4D               	decfsz	_mtOldState,w
  1799  0263  2AE3               	goto	l963
  1800  0264  2A39               	goto	L3
  1801  0265                     l7025:	
  1802                           ;smartkey.C: 445: }
  1803                           ;smartkey.C: 446: }
  1804                           ;smartkey.C: 447: break;
  1805                           
  1806                           ;smartkey.C: 444: if(reAlertOn)reAlertOn =0;
  1807                           
  1808                           
  1809                           ;smartkey.C: 450: if(timeTick > 200){
  1810  0265  3000               	movlw	0
  1811  0266  0271               	subwf	_timeTick+1,w
  1812  0267  30C9               	movlw	201
  1813  0268  1903               	skipnz
  1814  0269  0270               	subwf	_timeTick,w
  1815  026A  1C03               	skipc
  1816  026B  2AE3               	goto	l963
  1817                           
  1818                           ;smartkey.C: 452: beepOff();
  1819  026C  278B               	fcall	_beepOff
  1820                           
  1821                           ;smartkey.C: 453: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  1822  026D  3008               	movlw	8
  1823  026E  2758               	fcall	_READ_EEPROM
  1824  026F  3ACC               	xorlw	204
  1825  0270  1D03               	skipz
  1826  0271  2A75               	goto	l7033
  1827  0272  3008               	movlw	8
  1828  0273  01A0               	clrf	?_WRITE_EEPROM
  1829  0274  26A7               	fcall	_WRITE_EEPROM
  1830  0275                     l7033:	
  1831  0275  30AC               	movlw	172
  1832                           
  1833                           ;smartkey.C: 454: RegStatus |=(0x20);
  1834  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1835  0277  16CA               	bsf	_RegStatus,5
  1836                           
  1837                           ;smartkey.C: 455: setState(1,3500);
  1838  0278  00A0               	movwf	?_setState
  1839  0279  300D               	movlw	13
  1840  027A  00A1               	movwf	?_setState+1
  1841  027B  3001               	movlw	1
  1842  027C  2765               	fcall	_setState
  1843                           
  1844                           ;smartkey.C: 457: tmp16 = timeTick+40;
  1845  027D  0871               	movf	_timeTick+1,w
  1846  027E  00C4               	movwf	main@tmp16+1
  1847  027F  0870               	movf	_timeTick,w
  1848  0280  00C3               	movwf	main@tmp16
  1849  0281  3028               	movlw	40
  1850  0282  07C3               	addwf	main@tmp16,f
  1851  0283  1803               	skipnc
  1852  0284  0AC4               	incf	main@tmp16+1,f
  1853  0285  2AE3               	goto	l963
  1854  0286                     l7039:	
  1855                           
  1856                           ;smartkey.C: 463: beepOff();
  1857  0286  278B               	fcall	_beepOff
  1858                           
  1859                           ;smartkey.C: 464: setState(2,300);
  1860  0287  302C               	movlw	44
  1861  0288  1283               	bcf	3,5	;RP0=0, select bank0
  1862  0289  00A0               	movwf	?_setState
  1863  028A  3001               	movlw	1
  1864  028B  00A1               	movwf	?_setState+1
  1865  028C  3002               	movlw	2
  1866  028D  2765               	fcall	_setState
  1867                           
  1868                           ;smartkey.C: 465: break;
  1869  028E  2AE3               	goto	l963
  1870  028F                     l7045:	
  1871  028F  0874               	movf	_mtState,w
  1872                           
  1873                           ; Switch size 1, requested type "space"
  1874                           ; Number of cases is 5, Range of values is 0 to 4
  1875                           ; switch strategies available:
  1876                           ; Name         Instructions Cycles
  1877                           ; direct_byte           11     6 (fixed)
  1878                           ; simple_byte           16     9 (average)
  1879                           ; jumptable            260     6 (fixed)
  1880                           ; rangetable             9     6 (fixed)
  1881                           ; spacedrange           16     9 (fixed)
  1882                           ; locatedrange           5     3 (fixed)
  1883                           ;	Chosen strategy is direct_byte
  1884  0290  0084               	movwf	4
  1885  0291  3005               	movlw	5
  1886  0292  0204               	subwf	4,w
  1887  0293  1803               	skipnc
  1888  0294  2AE3               	goto	l963
  1889  0295  3007               	movlw	high S7331
  1890  0296  008A               	movwf	10
  1891  0297  3081               	movlw	low S7331
  1892  0298  0704               	addwf	4,w
  1893  0299  0082               	movwf	2
  1894  029A                     l7047:	
  1895                           
  1896                           ;smartkey.C: 480: if((lostDetect==1) && (timeTick< 1500) &&(timeTick >700))
  1897  029A  0B4C               	decfsz	_lostDetect,w
  1898  029B  2AC8               	goto	l966
  1899  029C  3005               	movlw	5
  1900  029D  0271               	subwf	_timeTick+1,w
  1901  029E  30DC               	movlw	220
  1902  029F  1903               	skipnz
  1903  02A0  0270               	subwf	_timeTick,w
  1904  02A1  1803               	skipnc
  1905  02A2  2AC8               	goto	l966
  1906  02A3  3002               	movlw	2
  1907  02A4  0271               	subwf	_timeTick+1,w
  1908  02A5  30BD               	movlw	189
  1909  02A6  1903               	skipnz
  1910  02A7  0270               	subwf	_timeTick,w
  1911  02A8  1C03               	skipc
  1912  02A9  2AC8               	goto	l966
  1913                           
  1914                           ;smartkey.C: 481: {
  1915                           ;smartkey.C: 482: if(READ_EEPROM(0x08)==0x00) WRITE_EEPROM(0x08,0xcc);
  1916  02AA  3008               	movlw	8
  1917  02AB  2758               	fcall	_READ_EEPROM
  1918  02AC  3800               	iorlw	0
  1919  02AD  1D03               	skipz
  1920  02AE  2AB3               	goto	l967
  1921  02AF  30CC               	movlw	204
  1922  02B0  00A0               	movwf	?_WRITE_EEPROM
  1923  02B1  3008               	movlw	8
  1924  02B2  26A7               	fcall	_WRITE_EEPROM
  1925  02B3                     l967:	
  1926                           
  1927                           ;smartkey.C: 484: setState(3,1800);
  1928  02B3  3008               	movlw	8
  1929  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1930  02B5  00A0               	movwf	?_setState
  1931  02B6  3007               	movlw	7
  1932  02B7  00A1               	movwf	?_setState+1
  1933  02B8  3003               	movlw	3
  1934  02B9  2765               	fcall	_setState
  1935                           
  1936                           ;smartkey.C: 485: cntTmp = timeTick+40;
  1937  02BA  0871               	movf	_timeTick+1,w
  1938  02BB  00C7               	movwf	_cntTmp+1
  1939  02BC  0870               	movf	_timeTick,w
  1940  02BD  00C6               	movwf	_cntTmp
  1941  02BE  3028               	movlw	40
  1942  02BF  07C6               	addwf	_cntTmp,f
  1943  02C0  1803               	skipnc
  1944  02C1  0AC7               	incf	_cntTmp+1,f
  1945                           
  1946                           ;smartkey.C: 486: PR2L =20;
  1947  02C2  3014               	movlw	20
  1948  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  1949  02C4  0091               	movwf	17	;volatile
  1950                           
  1951                           ;smartkey.C: 487: beepOn();
  1952  02C5  2786               	fcall	_beepOn
  1953                           
  1954                           ;smartkey.C: 488: lostDetect =0;
  1955  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1956  02C7  2A15               	goto	l6983
  1957  02C8                     l966:	
  1958                           ;smartkey.C: 489: }
  1959                           
  1960                           
  1961                           ;smartkey.C: 490: else {
  1962                           ;smartkey.C: 491: lostDetect =1;
  1963  02C8  01CC               	clrf	_lostDetect
  1964  02C9  0ACC               	incf	_lostDetect,f
  1965  02CA  2A16               	goto	L4
  1966  02CB                     l7069:	
  1967                           ;smartkey.C: 494: }
  1968                           ;smartkey.C: 495: timeTick =0;
  1969                           
  1970                           
  1971                           ;smartkey.C: 500: timeTick =0;
  1972  02CB  01F0               	clrf	_timeTick
  1973  02CC  01F1               	clrf	_timeTick+1
  1974                           
  1975                           ;smartkey.C: 501: beepOn();TMR2ON = 0;
  1976  02CD  2786               	fcall	_beepOn
  1977  02CE  3002               	movlw	2
  1978  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1979  02D0  1112               	bcf	18,2
  1980                           
  1981                           ;smartkey.C: 502: beep(10,2);
  1982  02D1  00A4               	movwf	?_beep
  1983  02D2  300A               	movlw	10
  1984  02D3  26DA               	fcall	_beep
  1985                           
  1986                           ;smartkey.C: 503: if(mtOldState == 3){reAlertOn =1;}
  1987  02D4  084D               	movf	_mtOldState,w
  1988  02D5  3A03               	xorlw	3
  1989  02D6  1D03               	skipz
  1990  02D7  2AE3               	goto	l963
  1991  02D8  01C1               	clrf	main@reAlertOn
  1992  02D9  0AC1               	incf	main@reAlertOn,f
  1993  02DA  2AE3               	goto	l963
  1994  02DB                     l7083:	
  1995  02DB  0874               	movf	_mtState,w
  1996                           
  1997                           ; Switch size 1, requested type "space"
  1998                           ; Number of cases is 2, Range of values is 1 to 2
  1999                           ; switch strategies available:
  2000                           ; Name         Instructions Cycles
  2001                           ; simple_byte            7     4 (average)
  2002                           ; direct_byte           11     9 (fixed)
  2003                           ; jumptable            263     9 (fixed)
  2004                           ;	Chosen strategy is simple_byte
  2005  02DC  3A01               	xorlw	1	; case 1
  2006  02DD  1903               	skipnz
  2007  02DE  2A9A               	goto	l7047
  2008  02DF  3A03               	xorlw	3	; case 2
  2009  02E0  1903               	skipnz
  2010  02E1  2ACB               	goto	l7069
  2011  02E2  2AE3               	goto	l963
  2012  02E3                     l963:	
  2013                           
  2014                           ;smartkey.C: 506: }
  2015                           ;smartkey.C: 507: PAIE = 1;
  2016  02E3  158B               	bsf	11,3
  2017  02E4                     l7085:	
  2018                           
  2019                           ;smartkey.C: 508: }
  2020                           ;smartkey.C: 510: }
  2021                           ;smartkey.C: 511: }
  2022                           ;smartkey.C: 514: if((timeOut!=0)&&( timeTick >timeOut)){
  2023  02E4  0849               	movf	_timeOut+1,w
  2024  02E5  0448               	iorwf	_timeOut,w
  2025  02E6  1903               	skipnz
  2026  02E7  2B6B               	goto	l7165
  2027  02E8  0871               	movf	_timeTick+1,w
  2028  02E9  0249               	subwf	_timeOut+1,w
  2029  02EA  1D03               	skipz
  2030  02EB  2AEE               	goto	u3455
  2031  02EC  0870               	movf	_timeTick,w
  2032  02ED  0248               	subwf	_timeOut,w
  2033  02EE                     u3455:	
  2034  02EE  1C03               	btfss	3,0
  2035  02EF  2B5D               	goto	l7163
  2036  02F0  2B6B               	goto	l7165
  2037  02F1                     l7091:	
  2038                           
  2039                           ;smartkey.C: 525: beepOff();
  2040  02F1  278B               	fcall	_beepOff
  2041  02F2  302C               	movlw	44
  2042                           
  2043                           ;smartkey.C: 526: RegStatus &=(~0x20);
  2044  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2045  02F4  12CA               	bcf	_RegStatus,5
  2046                           
  2047                           ;smartkey.C: 527: setState(2,300);
  2048  02F5  00A0               	movwf	?_setState
  2049  02F6  3001               	movlw	1
  2050  02F7  00A1               	movwf	?_setState+1
  2051  02F8  3002               	movlw	2
  2052  02F9  2765               	fcall	_setState
  2053                           
  2054                           ;smartkey.C: 528: break;
  2055  02FA  2B6B               	goto	l7165
  2056  02FB                     l7097:	
  2057                           
  2058                           ;smartkey.C: 530: beepOff();
  2059  02FB  278B               	fcall	_beepOff
  2060                           
  2061                           ;smartkey.C: 531: delay_x10ms(20);
  2062  02FC  3014               	movlw	20
  2063  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2064  02FE  00A0               	movwf	?_delay_x10ms
  2065  02FF  01A1               	clrf	?_delay_x10ms+1
  2066  0300  2719               	fcall	_delay_x10ms
  2067                           
  2068                           ;smartkey.C: 532: beepOn();TMR2ON = 0;reAlertOn =0;
  2069  0301  2786               	fcall	_beepOn
  2070  0302  301E               	movlw	30
  2071  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0304  1112               	bcf	18,2
  2073  0305  01C1               	clrf	main@reAlertOn
  2074  0306  01A4               	clrf	?_beep
  2075  0307  0AA4               	incf	?_beep,f
  2076  0308  26DA               	fcall	_beep
  2077  0309  3000               	movlw	0
  2078                           
  2079                           ;smartkey.C: 534: vibrateOn=1;
  2080  030A  01B3               	clrf	main@vibrateOn
  2081  030B  0AB3               	incf	main@vibrateOn,f
  2082  030C  01A0               	clrf	?_setState
  2083  030D  01A1               	clrf	?_setState+1
  2084  030E                     L5:	
  2085  030E  2765               	fcall	_setState
  2086  030F                     l7113:	
  2087                           
  2088                           ;smartkey.C: 537: tmp16 = timeTick+40;
  2089  030F  0871               	movf	_timeTick+1,w
  2090  0310  00C4               	movwf	main@tmp16+1
  2091  0311  0870               	movf	_timeTick,w
  2092  0312  00C3               	movwf	main@tmp16
  2093  0313  3028               	movlw	40
  2094  0314  07C3               	addwf	main@tmp16,f
  2095  0315  1803               	skipnc
  2096  0316  0AC4               	incf	main@tmp16+1,f
  2097                           
  2098                           ;smartkey.C: 538: break;
  2099  0317  2B6B               	goto	l7165
  2100  0318                     l7117:	
  2101                           
  2102                           ;smartkey.C: 541: if(READ_EEPROM(0x08)==0xcc) WRITE_EEPROM(0x08,0);
  2103  0318  3008               	movlw	8
  2104  0319  2758               	fcall	_READ_EEPROM
  2105  031A  3ACC               	xorlw	204
  2106  031B  1D03               	skipz
  2107  031C  2B20               	goto	l7121
  2108  031D  3008               	movlw	8
  2109  031E  01A0               	clrf	?_WRITE_EEPROM
  2110  031F  26A7               	fcall	_WRITE_EEPROM
  2111  0320                     l7121:	
  2112                           
  2113                           ;smartkey.C: 543: if(reAlertOn){
  2114  0320  1283               	bcf	3,5	;RP0=0, select bank0
  2115  0321  0841               	movf	main@reAlertOn,w
  2116  0322  1903               	btfsc	3,2
  2117  0323  2B37               	goto	l7131
  2118                           
  2119                           ;smartkey.C: 544: setState(4,6000);
  2120  0324  3070               	movlw	112
  2121  0325  00A0               	movwf	?_setState
  2122  0326  3017               	movlw	23
  2123  0327  00A1               	movwf	?_setState+1
  2124  0328  3004               	movlw	4
  2125  0329  2765               	fcall	_setState
  2126                           
  2127                           ;smartkey.C: 545: cntTmp = timeTick+40;
  2128  032A  0871               	movf	_timeTick+1,w
  2129  032B  00C7               	movwf	_cntTmp+1
  2130  032C  0870               	movf	_timeTick,w
  2131  032D  00C6               	movwf	_cntTmp
  2132  032E  3028               	movlw	40
  2133  032F  07C6               	addwf	_cntTmp,f
  2134  0330  1803               	skipnc
  2135  0331  0AC7               	incf	_cntTmp+1,f
  2136                           
  2137                           ;smartkey.C: 546: PR2L =20;
  2138  0332  3014               	movlw	20
  2139  0333  1683               	bsf	3,5	;RP0=1, select bank1
  2140  0334  0091               	movwf	17	;volatile
  2141                           
  2142                           ;smartkey.C: 547: beepOn();
  2143  0335  2786               	fcall	_beepOn
  2144                           
  2145                           ;smartkey.C: 549: }else if(mtOldState == 0){
  2146  0336  2B6B               	goto	l7165
  2147  0337                     l7131:	
  2148  0337  08CD               	movf	_mtOldState,f
  2149  0338  1D03               	skipz
  2150  0339  2B4E               	goto	l7145
  2151                           
  2152                           ;smartkey.C: 551: beep(10,5);
  2153  033A  3005               	movlw	5
  2154  033B  00A4               	movwf	?_beep
  2155  033C  300A               	movlw	10
  2156  033D  26DA               	fcall	_beep
  2157  033E  3040               	movlw	64
  2158                           
  2159                           ;smartkey.C: 552: RegStatus |=(0x20);
  2160  033F  16CA               	bsf	_RegStatus,5
  2161                           
  2162                           ;smartkey.C: 555: if(READ_EEPROM(0x40))WRITE_EEPROM(0x40,0);
  2163  0340  2758               	fcall	_READ_EEPROM
  2164  0341  3A00               	xorlw	0
  2165  0342  1903               	skipnz
  2166  0343  2B47               	goto	l983
  2167  0344  3040               	movlw	64
  2168  0345  01A0               	clrf	?_WRITE_EEPROM
  2169  0346  26A7               	fcall	_WRITE_EEPROM
  2170  0347                     l983:	
  2171                           
  2172                           ;smartkey.C: 557: setState(1,3500);
  2173  0347  30AC               	movlw	172
  2174  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0349  00A0               	movwf	?_setState
  2176  034A  300D               	movlw	13
  2177  034B  00A1               	movwf	?_setState+1
  2178  034C  3001               	movlw	1
  2179  034D  2B0E               	goto	L5
  2180  034E                     l7145:	
  2181                           
  2182                           ;smartkey.C: 561: beepOn();TMR2ON = 0;
  2183  034E  2786               	fcall	_beepOn
  2184  034F  301E               	movlw	30
  2185  0350  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0351  1112               	bcf	18,2
  2187                           
  2188                           ;smartkey.C: 562: reAlertOn =0;
  2189  0352  01C1               	clrf	main@reAlertOn
  2190  0353  01A4               	clrf	?_beep
  2191  0354  0AA4               	incf	?_beep,f
  2192  0355  26DA               	fcall	_beep
  2193  0356  3000               	movlw	0
  2194                           
  2195                           ;smartkey.C: 564: setState(0,0);
  2196  0357  01A0               	clrf	?_setState
  2197  0358  01A1               	clrf	?_setState+1
  2198  0359  2765               	fcall	_setState
  2199                           
  2200                           ;smartkey.C: 566: vibrateOn=1;
  2201  035A  01B3               	clrf	main@vibrateOn
  2202  035B  0AB3               	incf	main@vibrateOn,f
  2203  035C  2B0F               	goto	l7113
  2204  035D                     l7163:	
  2205  035D  0874               	movf	_mtState,w
  2206                           
  2207                           ; Switch size 1, requested type "space"
  2208                           ; Number of cases is 4, Range of values is 1 to 4
  2209                           ; switch strategies available:
  2210                           ; Name         Instructions Cycles
  2211                           ; simple_byte           13     7 (average)
  2212                           ; direct_byte           13     9 (fixed)
  2213                           ; jumptable            263     9 (fixed)
  2214                           ;	Chosen strategy is simple_byte
  2215  035E  3A01               	xorlw	1	; case 1
  2216  035F  1903               	skipnz
  2217  0360  2B6B               	goto	l7165
  2218  0361  3A03               	xorlw	3	; case 2
  2219  0362  1903               	skipnz
  2220  0363  2B18               	goto	l7117
  2221  0364  3A01               	xorlw	1	; case 3
  2222  0365  1903               	skipnz
  2223  0366  2AF1               	goto	l7091
  2224  0367  3A07               	xorlw	7	; case 4
  2225  0368  1903               	skipnz
  2226  0369  2AFB               	goto	l7097
  2227  036A  2B6B               	goto	l7165
  2228  036B                     l7165:	
  2229                           
  2230                           ;smartkey.C: 571: }
  2231                           ;smartkey.C: 573: if(accEna ==1){
  2232  036B  1283               	bcf	3,5	;RP0=0, select bank0
  2233  036C  0B2F               	decfsz	main@accEna,w
  2234  036D  2C57               	goto	l7279
  2235                           
  2236                           ;smartkey.C: 574: if((timeTick>tmp16) && (mtState == 1) ){
  2237  036E  0871               	movf	_timeTick+1,w
  2238  036F  0244               	subwf	main@tmp16+1,w
  2239  0370  1D03               	skipz
  2240  0371  2B74               	goto	u3515
  2241  0372  0870               	movf	_timeTick,w
  2242  0373  0243               	subwf	main@tmp16,w
  2243  0374                     u3515:	
  2244  0374  1803               	skipnc
  2245  0375  2C0E               	goto	l7249
  2246  0376  0B74               	decfsz	_mtState,w
  2247  0377  2C0E               	goto	l7249
  2248                           
  2249                           ;smartkey.C: 575: tmp16 = timeTick+40;
  2250  0378  0871               	movf	_timeTick+1,w
  2251  0379  00C4               	movwf	main@tmp16+1
  2252  037A  0870               	movf	_timeTick,w
  2253  037B  00C3               	movwf	main@tmp16
  2254  037C  3028               	movlw	40
  2255  037D  07C3               	addwf	main@tmp16,f
  2256  037E  1803               	skipnc
  2257  037F  0AC4               	incf	main@tmp16+1,f
  2258                           
  2259                           ;smartkey.C: 576: if(AccRead(0x02,buf,6)==0){
  2260  0380  303B               	movlw	main@buf& (0+255)
  2261  0381  00A4               	movwf	?_AccRead
  2262  0382  3000               	movlw	0
  2263  0383  00A5               	movwf	?_AccRead+1
  2264  0384  3006               	movlw	6
  2265  0385  00A6               	movwf	?_AccRead+2
  2266  0386  3002               	movlw	2
  2267  0387  260A               	fcall	_AccRead
  2268  0388  3800               	iorlw	0
  2269  0389  1D03               	skipz
  2270  038A  2C0E               	goto	l7249
  2271                           
  2272                           ;smartkey.C: 578: if(compe(buf[1], (signed char)acXsum,5) && compe(buf[3], (signed char)
      +                          acYsum,5)){
  2273  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2274  038C  0839               	movf	main@acXsum,w
  2275  038D  00A0               	movwf	?_compe
  2276  038E  3005               	movlw	5
  2277  038F  00A1               	movwf	?_compe+1
  2278  0390  083C               	movf	main@buf+1,w
  2279  0391  2549               	fcall	_compe
  2280  0392  3A00               	xorlw	0
  2281  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0394  1903               	skipnz
  2283  0395  2BBD               	goto	L9
  2284  0396  0837               	movf	main@acYsum,w
  2285  0397  00A0               	movwf	?_compe
  2286  0398  3005               	movlw	5
  2287  0399  00A1               	movwf	?_compe+1
  2288  039A  083E               	movf	main@buf+3,w
  2289  039B  2549               	fcall	_compe
  2290  039C  3A00               	xorlw	0
  2291                           
  2292                           ;smartkey.C: 580: isSw++;
  2293  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2294  039E  1903               	skipnz
  2295  039F  2BBD               	goto	L9
  2296  03A0  302D               	movlw	45
  2297  03A1  0AC2               	incf	main@isSw,f
  2298                           
  2299                           ;smartkey.C: 581: if(isSw >44){
  2300  03A2  0242               	subwf	main@isSw,w
  2301  03A3  1C03               	skipc
  2302  03A4  2BB0               	goto	l7195
  2303  03A5  302C               	movlw	44
  2304                           
  2305                           ;smartkey.C: 582: isSw =0;
  2306  03A6  01C2               	clrf	main@isSw
  2307                           
  2308                           ;smartkey.C: 583: vibrateOn=1;
  2309  03A7  01B3               	clrf	main@vibrateOn
  2310  03A8  0AB3               	incf	main@vibrateOn,f
  2311                           
  2312                           ;smartkey.C: 586: RegStatus &=(~0x20);
  2313  03A9  12CA               	bcf	_RegStatus,5
  2314                           
  2315                           ;smartkey.C: 587: setState(2,300);
  2316  03AA  00A0               	movwf	?_setState
  2317  03AB  3001               	movlw	1
  2318  03AC  00A1               	movwf	?_setState+1
  2319  03AD  3002               	movlw	2
  2320  03AE  2765               	fcall	_setState
  2321                           
  2322                           ;smartkey.C: 589: }
  2323  03AF  2BED               	goto	l7227
  2324  03B0                     l7195:	
  2325                           
  2326                           ;smartkey.C: 590: else if(isSw > 25){
  2327  03B0  301A               	movlw	26
  2328  03B1  0242               	subwf	main@isSw,w
  2329  03B2  1803               	btfsc	3,0
  2330                           
  2331                           ;smartkey.C: 591: if(isSw%2==0){
  2332  03B3  1842               	btfsc	main@isSw,0
  2333  03B4  2BED               	goto	l7227
  2334                           
  2335                           ;smartkey.C: 592: beepOn();TMR2ON = 0; beep(7,1);
  2336  03B5  2786               	fcall	_beepOn
  2337  03B6  3007               	movlw	7
  2338  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2339  03B8  1112               	bcf	18,2
  2340  03B9  01A4               	clrf	?_beep
  2341  03BA  0AA4               	incf	?_beep,f
  2342  03BB  26DA               	fcall	_beep
  2343  03BC  2BED               	goto	l7227
  2344  03BD                     L9:	
  2345                           ;smartkey.C: 598: else{
  2346                           ;smartkey.C: 599: isSw =0;
  2347                           
  2348                           ;smartkey.C: 593: }
  2349                           ;smartkey.C: 594: }
  2350                           ;smartkey.C: 596: }
  2351                           
  2352  03BD  01C2               	clrf	main@isSw
  2353                           
  2354                           ;smartkey.C: 602: if(compe(buf[1], acXOld,1) && compe(buf[3], acYOld,1)){
  2355  03BE  0835               	movf	main@acXOld,w
  2356  03BF  00A0               	movwf	?_compe
  2357  03C0  01A1               	clrf	?_compe+1
  2358  03C1  0AA1               	incf	?_compe+1,f
  2359  03C2  083C               	movf	main@buf+1,w
  2360  03C3  2549               	fcall	_compe
  2361  03C4  3A00               	xorlw	0
  2362  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2363  03C6  1903               	skipnz
  2364  03C7  2BEB               	goto	L10
  2365  03C8  0834               	movf	main@acYOld,w
  2366  03C9  00A0               	movwf	?_compe
  2367  03CA  01A1               	clrf	?_compe+1
  2368  03CB  0AA1               	incf	?_compe+1,f
  2369  03CC  083E               	movf	main@buf+3,w
  2370  03CD  2549               	fcall	_compe
  2371  03CE  3A00               	xorlw	0
  2372                           
  2373                           ;smartkey.C: 603: isWait++;
  2374  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2375  03D0  1903               	skipnz
  2376  03D1  2BEB               	goto	L10
  2377  03D2  0AB0               	incf	main@isWait,f
  2378  03D3  1903               	skipnz
  2379  03D4  0AB1               	incf	main@isWait+1,f
  2380                           
  2381                           ;smartkey.C: 604: if(isWait==450){
  2382  03D5  0331               	decf	main@isWait+1,w
  2383  03D6  30C2               	movlw	194
  2384  03D7  1903               	skipnz
  2385  03D8  0630               	xorwf	main@isWait,w
  2386  03D9  1D03               	skipz
  2387  03DA  2BED               	goto	l7227
  2388  03DB  3002               	movlw	2
  2389                           
  2390                           ;smartkey.C: 605: isWait = 0;
  2391  03DC  01B0               	clrf	main@isWait
  2392  03DD  01B1               	clrf	main@isWait+1
  2393                           
  2394                           ;smartkey.C: 606: beep(7,2);
  2395  03DE  00A4               	movwf	?_beep
  2396  03DF  3007               	movlw	7
  2397  03E0  26DA               	fcall	_beep
  2398  03E1  302C               	movlw	44
  2399                           
  2400                           ;smartkey.C: 607: vibrateOn=1;
  2401  03E2  01B3               	clrf	main@vibrateOn
  2402  03E3  0AB3               	incf	main@vibrateOn,f
  2403                           
  2404                           ;smartkey.C: 608: RegStatus &=(~0x20);
  2405  03E4  12CA               	bcf	_RegStatus,5
  2406                           
  2407                           ;smartkey.C: 609: setState(2,300);
  2408  03E5  00A0               	movwf	?_setState
  2409  03E6  3001               	movlw	1
  2410  03E7  00A1               	movwf	?_setState+1
  2411  03E8  3002               	movlw	2
  2412  03E9  2765               	fcall	_setState
  2413  03EA  2BED               	goto	l7227
  2414  03EB                     L10:	
  2415                           ;smartkey.C: 612: else
  2416                           ;smartkey.C: 613: isWait=0;
  2417                           
  2418  03EB  01B0               	clrf	main@isWait
  2419  03EC  01B1               	clrf	main@isWait+1
  2420  03ED                     l7227:	
  2421                           
  2422                           ;smartkey.C: 614: }
  2423                           ;smartkey.C: 616: if( (buf[5] > -31) && (buf[5] < 31)) {
  2424  03ED  0840               	movf	main@buf+5,w
  2425  03EE  3A80               	xorlw	128
  2426  03EF  3E9E               	addlw	158
  2427  03F0  1C03               	skipc
  2428  03F1  2C09               	goto	l7243
  2429  03F2  0840               	movf	main@buf+5,w
  2430  03F3  3A80               	xorlw	128
  2431  03F4  3E61               	addlw	-159
  2432  03F5  1803               	skipnc
  2433  03F6  2C09               	goto	l7243
  2434  03F7  3005               	movlw	5
  2435                           
  2436                           ;smartkey.C: 617: isFall++;
  2437  03F8  0AB2               	incf	main@isFall,f
  2438                           
  2439                           ;smartkey.C: 618: if(isFall >4){
  2440  03F9  0232               	subwf	main@isFall,w
  2441  03FA  1C03               	skipc
  2442  03FB  2C0A               	goto	l7245
  2443  03FC  3002               	movlw	2
  2444                           
  2445                           ;smartkey.C: 619: isFall =0;
  2446  03FD  01B2               	clrf	main@isFall
  2447                           
  2448                           ;smartkey.C: 620: beep(7,2);
  2449  03FE  00A4               	movwf	?_beep
  2450  03FF  3007               	movlw	7
  2451  0400  26DA               	fcall	_beep
  2452  0401  302C               	movlw	44
  2453                           
  2454                           ;smartkey.C: 621: RegStatus &=(~0x20);
  2455  0402  12CA               	bcf	_RegStatus,5
  2456                           
  2457                           ;smartkey.C: 622: setState(2,300);
  2458  0403  00A0               	movwf	?_setState
  2459  0404  3001               	movlw	1
  2460  0405  00A1               	movwf	?_setState+1
  2461  0406  3002               	movlw	2
  2462  0407  2765               	fcall	_setState
  2463  0408  2C0A               	goto	l7245
  2464  0409                     l7243:	
  2465                           
  2466                           ;smartkey.C: 625: else{
  2467                           ;smartkey.C: 626: isFall=0;
  2468  0409  01B2               	clrf	main@isFall
  2469  040A                     l7245:	
  2470                           
  2471                           ;smartkey.C: 627: }
  2472                           ;smartkey.C: 629: acYOld = buf[3];acXOld = buf[1];
  2473  040A  083E               	movf	main@buf+3,w
  2474  040B  00B4               	movwf	main@acYOld
  2475  040C  083C               	movf	main@buf+1,w
  2476  040D  00B5               	movwf	main@acXOld
  2477  040E                     l7249:	
  2478                           
  2479                           ;smartkey.C: 630: }
  2480                           ;smartkey.C: 631: }
  2481                           ;smartkey.C: 634: if((timeTick>tmp16) && (mtState == 0 ) ){
  2482  040E  0871               	movf	_timeTick+1,w
  2483  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2484  0410  0244               	subwf	main@tmp16+1,w
  2485  0411  1D03               	skipz
  2486  0412  2C15               	goto	u3655
  2487  0413  0870               	movf	_timeTick,w
  2488  0414  0243               	subwf	main@tmp16,w
  2489  0415                     u3655:	
  2490  0415  1803               	skipnc
  2491  0416  2C57               	goto	l7279
  2492  0417  08F4               	movf	_mtState,f
  2493  0418  1D03               	skipz
  2494  0419  2C57               	goto	l7279
  2495                           
  2496                           ;smartkey.C: 636: if(timeTick >65000) timeTick =0;
  2497  041A  30FD               	movlw	253
  2498  041B  0271               	subwf	_timeTick+1,w
  2499  041C  30E9               	movlw	233
  2500  041D  1903               	skipnz
  2501  041E  0270               	subwf	_timeTick,w
  2502  041F  1C03               	skipc
  2503  0420  2C23               	goto	l7257
  2504  0421  01F0               	clrf	_timeTick
  2505  0422  01F1               	clrf	_timeTick+1
  2506  0423                     l7257:	
  2507                           
  2508                           ;smartkey.C: 637: tmp16 = timeTick+40;
  2509  0423  0871               	movf	_timeTick+1,w
  2510  0424  00C4               	movwf	main@tmp16+1
  2511  0425  0870               	movf	_timeTick,w
  2512  0426  00C3               	movwf	main@tmp16
  2513  0427  3028               	movlw	40
  2514  0428  07C3               	addwf	main@tmp16,f
  2515  0429  1803               	skipnc
  2516  042A  0AC4               	incf	main@tmp16+1,f
  2517                           
  2518                           ;smartkey.C: 639: if(AccRead(0x02,buf,6)==0){
  2519  042B  303B               	movlw	main@buf& (0+255)
  2520  042C  00A4               	movwf	?_AccRead
  2521  042D  3000               	movlw	0
  2522  042E  00A5               	movwf	?_AccRead+1
  2523  042F  3006               	movlw	6
  2524  0430  00A6               	movwf	?_AccRead+2
  2525  0431  3002               	movlw	2
  2526  0432  260A               	fcall	_AccRead
  2527  0433  3800               	iorlw	0
  2528                           
  2529                           ;smartkey.C: 641: if(vibrateOn==1){
  2530  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0435  1D03               	skipz
  2532  0436  2C58               	goto	L11
  2533  0437  0B33               	decfsz	main@vibrateOn,w
  2534  0438  2C57               	goto	l7279
  2535                           
  2536                           ;smartkey.C: 642: if(compe(buf[1],acXOld ,3) && compe(buf[3],acYOld ,3)){
  2537  0439  0835               	movf	main@acXOld,w
  2538  043A  00A0               	movwf	?_compe
  2539  043B  3003               	movlw	3
  2540  043C  00A1               	movwf	?_compe+1
  2541  043D  083C               	movf	main@buf+1,w
  2542  043E  2549               	fcall	_compe
  2543  043F  3A00               	xorlw	0
  2544  0440  1283               	bcf	3,5	;RP0=0, select bank0
  2545  0441  1903               	skipnz
  2546  0442  2C4F               	goto	L12
  2547  0443  0834               	movf	main@acYOld,w
  2548  0444  00A0               	movwf	?_compe
  2549  0445  3003               	movlw	3
  2550  0446  00A1               	movwf	?_compe+1
  2551  0447  083E               	movf	main@buf+3,w
  2552  0448  2549               	fcall	_compe
  2553  0449  3A00               	xorlw	0
  2554                           
  2555                           ;smartkey.C: 644: isSw=0;
  2556  044A  1283               	bcf	3,5	;RP0=0, select bank0
  2557  044B  1903               	skipnz
  2558  044C  2C4F               	goto	L12
  2559  044D  01C2               	clrf	main@isSw
  2560                           
  2561                           ;smartkey.C: 645: }
  2562  044E  2C57               	goto	l7279
  2563  044F                     L12:	
  2564                           ;smartkey.C: 646: else{
  2565                           ;smartkey.C: 647: isSw++;
  2566                           
  2567  044F  0AC2               	incf	main@isSw,f
  2568                           
  2569                           ;smartkey.C: 649: {
  2570                           ;smartkey.C: 650: beepOn();TMR2ON = 0; beep(7,3);
  2571  0450  2786               	fcall	_beepOn
  2572  0451  3003               	movlw	3
  2573  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0453  1112               	bcf	18,2
  2575  0454  00A4               	movwf	?_beep
  2576  0455  3007               	movlw	7
  2577  0456  26DA               	fcall	_beep
  2578  0457                     l7279:	
  2579                           
  2580                           ;smartkey.C: 651: }
  2581                           ;smartkey.C: 652: }
  2582                           ;smartkey.C: 653: }
  2583                           ;smartkey.C: 654: }
  2584                           ;smartkey.C: 655: }
  2585                           ;smartkey.C: 657: }
  2586                           ;smartkey.C: 659: if(RegStatus & 0x20) {RC0 =1;RC1 =1;}
  2587  0457  1283               	bcf	3,5	;RP0=0, select bank0
  2588  0458                     L11:	
  2589  0458  1ECA               	btfss	_RegStatus,5
  2590  0459  2C5D               	goto	l1006
  2591  045A  1407               	bsf	7,0
  2592  045B  1487               	bsf	7,1
  2593  045C  2C5F               	goto	l7283
  2594  045D                     l1006:	
  2595                           
  2596                           ;smartkey.C: 660: else {RC0 =0;RC1 =0;}
  2597  045D  1007               	bcf	7,0
  2598  045E  1087               	bcf	7,1
  2599  045F                     l7283:	
  2600                           
  2601                           ;smartkey.C: 663: if((timeTick >500)&&(READ_EEPROM(0x3F))) WRITE_EEPROM(0x3F,0);
  2602  045F  3001               	movlw	1
  2603  0460  0271               	subwf	_timeTick+1,w
  2604  0461  30F5               	movlw	245
  2605  0462  1903               	skipnz
  2606  0463  0270               	subwf	_timeTick,w
  2607  0464  1C03               	skipc
  2608  0465  2C6E               	goto	l7289
  2609  0466  303F               	movlw	63
  2610  0467  2758               	fcall	_READ_EEPROM
  2611  0468  3A00               	xorlw	0
  2612  0469  1903               	skipnz
  2613  046A  2C6E               	goto	l7289
  2614  046B  303F               	movlw	63
  2615  046C  01A0               	clrf	?_WRITE_EEPROM
  2616  046D  26A7               	fcall	_WRITE_EEPROM
  2617  046E                     l7289:	
  2618                           
  2619                           ;smartkey.C: 664: if((timeTick >500)&&(READ_EEPROM(0x40))) WRITE_EEPROM(0x40,0);
  2620  046E  3001               	movlw	1
  2621  046F  0271               	subwf	_timeTick+1,w
  2622  0470  30F5               	movlw	245
  2623  0471  1903               	skipnz
  2624  0472  0270               	subwf	_timeTick,w
  2625  0473  1C03               	skipc
  2626  0474  2A05               	goto	l6971
  2627  0475  3040               	movlw	64
  2628  0476  2758               	fcall	_READ_EEPROM
  2629  0477  3A00               	xorlw	0
  2630  0478  1903               	skipnz
  2631  0479  2A05               	goto	l6971
  2632  047A  3040               	movlw	64
  2633  047B  01A0               	clrf	?_WRITE_EEPROM
  2634  047C  26A7               	fcall	_WRITE_EEPROM
  2635  047D  2A05               	goto	l6971
  2636  047E                     __end_of_main:	
  2637                           
  2638                           	psect	swtext1
  2639  0781                     __pswtext1:	
  2640  0781                     S7331:	
  2641  0781  2AE3               	ljmp	l963
  2642  0782  2A15               	ljmp	l6983
  2643  0783  2A1C               	ljmp	l6987
  2644  0784  2A65               	ljmp	l7025
  2645  0785  2A86               	ljmp	l7039
  2646                           
  2647                           	psect	text860
  2648  060A                     __ptext860:	
  2649 ;; =============== function _main ends ============
  2650                           
  2651                           
  2652 ;; *************** function _AccRead *****************
  2653 ;; Defined at:
  2654 ;;		line 31 in file "mpu6x.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  rAdd            1    wreg     unsigned char 
  2657 ;;  dat             2    4[BANK0 ] PTR unsigned char 
  2658 ;;		 -> RAM(256), main@buf(6), 
  2659 ;;  len             1    6[BANK0 ] unsigned char 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  rAdd            1   10[BANK0 ] unsigned char 
  2662 ;;  i               1   11[BANK0 ] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      unsigned char 
  2665 ;; Registers used:
  2666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 20/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1
  2672 ;;      Params:         0       3       0
  2673 ;;      Locals:         0       2       0
  2674 ;;      Temps:          0       3       0
  2675 ;;      Totals:         0       8       0
  2676 ;;Total ram usage:        8 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    3
  2679 ;; This function calls:
  2680 ;;		_swI2C_Start
  2681 ;;		_swI2C_WriteByte
  2682 ;;		_swI2C_ReadByte
  2683 ;;		_swI2C_Stop
  2684 ;; This function is called by:
  2685 ;;		_main
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688  060A                     _AccRead:	
  2689                           
  2690                           ; Regs used in _AccRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2691                           ;AccRead@rAdd stored from wreg
  2692  060A  00AA               	movwf	AccRead@rAdd
  2693                           
  2694                           ;mpu6x.c: 32: unsigned char i;
  2695                           ;mpu6x.c: 34: swI2C_Start();
  2696  060B  2706               	fcall	_swI2C_Start
  2697                           
  2698                           ;mpu6x.c: 36: if(swI2C_WriteByte(0x18<<1)== 0 )
  2699  060C  3030               	movlw	48
  2700  060D  25CD               	fcall	_swI2C_WriteByte
  2701  060E  3800               	iorlw	0
  2702  060F  1D03               	skipz
  2703  0610  3401               	retlw	1
  2704                           
  2705                           ;mpu6x.c: 37: {
  2706                           ;mpu6x.c: 38: if(swI2C_WriteByte(rAdd)==0 )
  2707  0611  082A               	movf	AccRead@rAdd,w
  2708  0612  25CD               	fcall	_swI2C_WriteByte
  2709  0613  3800               	iorlw	0
  2710  0614  1D03               	skipz
  2711  0615  3402               	retlw	2
  2712                           
  2713                           ;mpu6x.c: 39: {
  2714                           ;mpu6x.c: 40: swI2C_Start();
  2715  0616  2706               	fcall	_swI2C_Start
  2716                           
  2717                           ;mpu6x.c: 41: if(swI2C_WriteByte((0x18<<1)|1)== 0 ){
  2718  0617  3031               	movlw	49
  2719  0618  25CD               	fcall	_swI2C_WriteByte
  2720  0619  3800               	iorlw	0
  2721  061A  1D03               	skipz
  2722  061B  3401               	retlw	1
  2723                           
  2724                           ;mpu6x.c: 43: for(i=0; i<(len-1);i++){
  2725  061C  01AB               	clrf	AccRead@i
  2726  061D                     l6769:	
  2727  061D  0826               	movf	AccRead@len,w
  2728  061E  3EFF               	addlw	255
  2729  061F  00A7               	movwf	??_AccRead
  2730  0620  30FF               	movlw	255
  2731  0621  1803               	skipnc
  2732  0622  3000               	movlw	0
  2733  0623  00A8               	movwf	??_AccRead+1
  2734  0624  3A80               	xorlw	128
  2735  0625  3C80               	sublw	128
  2736  0626  1D03               	skipz
  2737  0627  2E2A               	goto	u3015
  2738  0628  0827               	movf	??_AccRead,w
  2739  0629  022B               	subwf	AccRead@i,w
  2740  062A                     u3015:	
  2741                           
  2742                           ;mpu6x.c: 44: dat[i]=swI2C_ReadByte(1);
  2743  062A  3001               	movlw	1
  2744  062B  1803               	btfsc	3,0
  2745  062C  2E31               	goto	L13
  2746  062D  258E               	fcall	_swI2C_ReadByte
  2747  062E  2635               	fcall	PL2	;call to abstracted procedure
  2748  062F  0AAB               	incf	AccRead@i,f
  2749  0630  2E1D               	goto	l6769
  2750  0631                     L13:	
  2751                           ;mpu6x.c: 45: }
  2752                           ;mpu6x.c: 46: dat[i]=swI2C_ReadByte(1);
  2753                           
  2754  0631  258E               	fcall	_swI2C_ReadByte
  2755  0632  2635               	fcall	PL2	;call to abstracted procedure
  2756                           
  2757                           ;mpu6x.c: 47: swI2C_Stop();
  2758  0633  274B               	fcall	_swI2C_Stop
  2759                           
  2760                           ;mpu6x.c: 48: return 0;
  2761  0634  3400               	retlw	0
  2762  0635                     __end_of_AccRead:	
  2763                           ;mpu6x.c: 54: else
  2764                           ;mpu6x.c: 55: return 2;
  2765                           
  2766                           ;mpu6x.c: 51: else
  2767                           ;mpu6x.c: 52: return 1;
  2768                           
  2769  0635                     PL2:	
  2770  0635  00A7               	movwf	??_AccRead
  2771  0636  082B               	movf	AccRead@i,w
  2772  0637  0724               	addwf	AccRead@dat,w
  2773  0638  00A8               	movwf	??_AccRead+1
  2774  0639  0825               	movf	AccRead@dat+1,w
  2775  063A  1803               	skipnc
  2776  063B  3E01               	addlw	1
  2777  063C  00A9               	movwf	??_AccRead+2
  2778  063D  0828               	movf	??_AccRead+1,w
  2779  063E  0084               	movwf	4
  2780  063F  1383               	bcf	3,7
  2781  0640  1829               	btfsc	??_AccRead+2,0
  2782  0641  1783               	bsf	3,7
  2783  0642  0827               	movf	??_AccRead,w
  2784  0643  0080               	movwf	0
  2785  0644  0008               	return
  2786                           
  2787                           	psect	text861
  2788  0645                     __ptext861:	
  2789 ;; =============== function _AccRead ends ============
  2790                           
  2791                           
  2792 ;; *************** function _AccWrite *****************
  2793 ;; Defined at:
  2794 ;;		line 4 in file "mpu6x.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  rAdd            1    wreg     unsigned char 
  2797 ;;  dat             2    3[BANK0 ] PTR unsigned char 
  2798 ;;		 -> RAM(256), 
  2799 ;;  len             1    5[BANK0 ] unsigned char 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;  rAdd            1    8[BANK0 ] unsigned char 
  2802 ;;  i               1    9[BANK0 ] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      unsigned char 
  2805 ;; Registers used:
  2806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 20/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1
  2812 ;;      Params:         0       3       0
  2813 ;;      Locals:         0       2       0
  2814 ;;      Temps:          0       2       0
  2815 ;;      Totals:         0       7       0
  2816 ;;Total ram usage:        7 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    3
  2819 ;; This function calls:
  2820 ;;		_swI2C_Start
  2821 ;;		_swI2C_WriteByte
  2822 ;;		_swI2C_Stop
  2823 ;; This function is called by:
  2824 ;;		_main
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827  0645                     _AccWrite:	
  2828                           
  2829                           ; Regs used in _AccWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2830                           ;AccWrite@rAdd stored from wreg
  2831  0645  00A8               	movwf	AccWrite@rAdd
  2832                           
  2833                           ;mpu6x.c: 5: unsigned char i;
  2834                           ;mpu6x.c: 6: swI2C_Start();
  2835  0646  2706               	fcall	_swI2C_Start
  2836                           
  2837                           ;mpu6x.c: 8: if(swI2C_WriteByte(0x18<<1)== 0 )
  2838  0647  3030               	movlw	48
  2839  0648  25CD               	fcall	_swI2C_WriteByte
  2840  0649  3800               	iorlw	0
  2841  064A  1D03               	skipz
  2842  064B  3401               	retlw	1
  2843                           
  2844                           ;mpu6x.c: 9: {
  2845                           ;mpu6x.c: 10: if(swI2C_WriteByte(rAdd)==0 )
  2846  064C  0828               	movf	AccWrite@rAdd,w
  2847  064D  25CD               	fcall	_swI2C_WriteByte
  2848  064E  3800               	iorlw	0
  2849  064F  1D03               	skipz
  2850  0650  3402               	retlw	2
  2851                           
  2852                           ;mpu6x.c: 11: {
  2853                           ;mpu6x.c: 12: for(i=0; i<len;i++){
  2854  0651  01A9               	clrf	AccWrite@i
  2855  0652                     l6739:	
  2856  0652  0825               	movf	AccWrite@len,w
  2857  0653  0229               	subwf	AccWrite@i,w
  2858  0654  1803               	btfsc	3,0
  2859  0655  2E6B               	goto	l6741
  2860                           
  2861                           ;mpu6x.c: 13: if(swI2C_WriteByte(dat[i])==1 ){
  2862  0656  0829               	movf	AccWrite@i,w
  2863  0657  0723               	addwf	AccWrite@dat,w
  2864  0658  00A6               	movwf	??_AccWrite
  2865  0659  0824               	movf	AccWrite@dat+1,w
  2866  065A  1803               	skipnc
  2867  065B  3E01               	addlw	1
  2868  065C  00A7               	movwf	??_AccWrite+1
  2869  065D  0826               	movf	??_AccWrite,w
  2870  065E  0084               	movwf	4
  2871  065F  1783               	bsf	3,7
  2872  0660  1C27               	btfss	??_AccWrite+1,0
  2873  0661  1383               	bcf	3,7
  2874  0662  0800               	movf	0,w
  2875  0663  25CD               	fcall	_swI2C_WriteByte
  2876  0664  3A01               	xorlw	1
  2877  0665  1D03               	skipz
  2878  0666  2E69               	goto	l6737
  2879                           
  2880                           ;mpu6x.c: 14: swI2C_Stop();
  2881  0667  274B               	fcall	_swI2C_Stop
  2882                           
  2883                           ;mpu6x.c: 15: return 3;
  2884  0668  3403               	retlw	3
  2885  0669                     l6737:	
  2886  0669  0AA9               	incf	AccWrite@i,f
  2887  066A  2E52               	goto	l6739
  2888  066B                     l6741:	
  2889                           
  2890                           ;mpu6x.c: 16: }
  2891                           ;mpu6x.c: 17: }
  2892                           ;mpu6x.c: 18: swI2C_Stop();
  2893  066B  274B               	fcall	_swI2C_Stop
  2894                           
  2895                           ;mpu6x.c: 19: return 0;
  2896  066C  3400               	retlw	0
  2897  066D                     __end_of_AccWrite:	
  2898                           ;mpu6x.c: 24: else
  2899                           ;mpu6x.c: 25: return 1;
  2900                           
  2901                           ;mpu6x.c: 21: else
  2902                           ;mpu6x.c: 22: return 2;
  2903                           
  2904                           
  2905                           	psect	text862
  2906  058E                     __ptext862:	
  2907 ;; =============== function _AccWrite ends ============
  2908                           
  2909                           
  2910 ;; *************** function _swI2C_ReadByte *****************
  2911 ;; Defined at:
  2912 ;;		line 112 in file "SWI2C.C"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  Ack             1    wreg     unsigned char 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  Ack             1    1[BANK0 ] unsigned char 
  2917 ;;  i               1    3[BANK0 ] unsigned char 
  2918 ;;  dat             1    2[BANK0 ] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      unsigned char 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 20/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1
  2928 ;;      Params:         0       0       0
  2929 ;;      Locals:         0       3       0
  2930 ;;      Temps:          0       1       0
  2931 ;;      Totals:         0       4       0
  2932 ;;Total ram usage:        4 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    2
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_AccRead
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941  058E                     _swI2C_ReadByte:	
  2942                           
  2943                           ; Regs used in _swI2C_ReadByte: [wreg+status,2+status,0]
  2944                           ;swI2C_ReadByte@Ack stored from wreg
  2945  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2946  058F  00A1               	movwf	swI2C_ReadByte@Ack
  2947  0590  01A2               	clrf	swI2C_ReadByte@dat
  2948                           
  2949                           ;SWI2C.C: 115: RA7 = 0;
  2950  0591  1385               	bcf	5,7
  2951                           
  2952                           ;SWI2C.C: 116: TRISA |=0x40;;
  2953  0592  1683               	bsf	3,5	;RP0=1, select bank1
  2954  0593  1705               	bsf	5,6	;volatile
  2955                           
  2956                           ;SWI2C.C: 117: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2957  0594  3005               	movlw	5
  2958  0595  1283               	bcf	3,5	;RP0=0, select bank0
  2959  0596  00A0               	movwf	??_swI2C_ReadByte
  2960  0597                     u3857:	
  2961  0597  0BA0               	decfsz	??_swI2C_ReadByte,f
  2962  0598  2D97               	goto	u3857
  2963                           
  2964                           ;SWI2C.C: 118: for(i=0;i<8;i++)
  2965  0599  1283               	bcf	3,5	;RP0=0, select bank0
  2966  059A  01A3               	clrf	swI2C_ReadByte@i
  2967  059B                     l2615:	
  2968  059B  3005               	movlw	5
  2969                           
  2970                           ;SWI2C.C: 119: {
  2971                           ;SWI2C.C: 120: RA7 = 1;
  2972  059C  1785               	bsf	5,7
  2973                           
  2974                           ;SWI2C.C: 121: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2975  059D  00A0               	movwf	??_swI2C_ReadByte
  2976  059E                     u3867:	
  2977  059E  0BA0               	decfsz	??_swI2C_ReadByte,f
  2978  059F  2D9E               	goto	u3867
  2979                           
  2980                           ;SWI2C.C: 122: dat = dat<<1 |(RA6 & 1 );
  2981  05A0  3000               	movlw	0
  2982  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2983  05A2  1B05               	btfsc	5,6
  2984  05A3  3001               	movlw	1
  2985  05A4  3901               	andlw	1
  2986  05A5  00A0               	movwf	??_swI2C_ReadByte
  2987  05A6  1003               	clrc
  2988  05A7  0D22               	rlf	swI2C_ReadByte@dat,w
  2989  05A8  0420               	iorwf	??_swI2C_ReadByte,w
  2990  05A9  00A2               	movwf	swI2C_ReadByte@dat
  2991  05AA  3005               	movlw	5
  2992                           
  2993                           ;SWI2C.C: 125: RA7 = 0;
  2994  05AB  1385               	bcf	5,7
  2995                           
  2996                           ;SWI2C.C: 126: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  2997  05AC  00A0               	movwf	??_swI2C_ReadByte
  2998  05AD                     u3877:	
  2999  05AD  0BA0               	decfsz	??_swI2C_ReadByte,f
  3000  05AE  2DAD               	goto	u3877
  3001  05AF  3008               	movlw	8
  3002  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  3003  05B1  0AA3               	incf	swI2C_ReadByte@i,f
  3004  05B2  0223               	subwf	swI2C_ReadByte@i,w
  3005  05B3  1C03               	skipc
  3006  05B4  2D9B               	goto	l2615
  3007                           
  3008                           ;SWI2C.C: 127: }
  3009                           ;SWI2C.C: 129: TRISA &=0xbf;;
  3010  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  3011  05B6  1305               	bcf	5,6	;volatile
  3012                           
  3013                           ;SWI2C.C: 131: RA6 = (Ack) ? 0 : 1;
  3014  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  3015  05B8  08A1               	movf	swI2C_ReadByte@Ack,f
  3016  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3017  05BA  1D03               	btfss	3,2
  3018  05BB  2DBE               	goto	L14
  3019  05BC  1705               	bsf	5,6
  3020  05BD  2DBF               	goto	u2934
  3021  05BE                     L14:	
  3022  05BE  1305               	bcf	5,6
  3023  05BF                     u2934:	
  3024  05BF  3005               	movlw	5
  3025                           
  3026                           ;SWI2C.C: 132: RA7 = 1;
  3027  05C0  1785               	bsf	5,7
  3028                           
  3029                           ;SWI2C.C: 133: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3030  05C1  00A0               	movwf	??_swI2C_ReadByte
  3031  05C2                     u3887:	
  3032  05C2  0BA0               	decfsz	??_swI2C_ReadByte,f
  3033  05C3  2DC2               	goto	u3887
  3034  05C4  3005               	movlw	5
  3035                           
  3036                           ;SWI2C.C: 134: RA7 = 0;
  3037  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  3038  05C6  1385               	bcf	5,7
  3039                           
  3040                           ;SWI2C.C: 135: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3041  05C7  00A0               	movwf	??_swI2C_ReadByte
  3042  05C8                     u3897:	
  3043  05C8  0BA0               	decfsz	??_swI2C_ReadByte,f
  3044  05C9  2DC8               	goto	u3897
  3045                           
  3046                           ;SWI2C.C: 136: return dat;
  3047  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  3048  05CB  0822               	movf	swI2C_ReadByte@dat,w
  3049  05CC  0008               	return
  3050  05CD                     __end_of_swI2C_ReadByte:	
  3051                           
  3052                           	psect	text863
  3053  05CD                     __ptext863:	
  3054 ;; =============== function _swI2C_ReadByte ends ============
  3055                           
  3056                           
  3057 ;; *************** function _swI2C_WriteByte *****************
  3058 ;; Defined at:
  3059 ;;		line 86 in file "SWI2C.C"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  dat             1    wreg     unsigned char 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;  dat             1    1[BANK0 ] unsigned char 
  3064 ;;  i               1    2[BANK0 ] unsigned char 
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  1    wreg      unsigned char 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 20/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMMON   BANK0   BANK1
  3074 ;;      Params:         0       0       0
  3075 ;;      Locals:         0       2       0
  3076 ;;      Temps:          0       1       0
  3077 ;;      Totals:         0       3       0
  3078 ;;Total ram usage:        3 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    2
  3081 ;; This function calls:
  3082 ;;		Nothing
  3083 ;; This function is called by:
  3084 ;;		_AccWrite
  3085 ;;		_AccRead
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088  05CD                     _swI2C_WriteByte:	
  3089                           
  3090                           ; Regs used in _swI2C_WriteByte: [wreg+status,2+status,0]
  3091                           ;swI2C_WriteByte@dat stored from wreg
  3092  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3093  05CE  00A1               	movwf	swI2C_WriteByte@dat
  3094                           
  3095                           ;SWI2C.C: 89: TRISA &=0xbf;;
  3096  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  3097  05D0  1305               	bcf	5,6	;volatile
  3098                           
  3099                           ;SWI2C.C: 90: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3100  05D1  3005               	movlw	5
  3101  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  3102  05D3  00A0               	movwf	??_swI2C_WriteByte
  3103  05D4                     u3907:	
  3104  05D4  0BA0               	decfsz	??_swI2C_WriteByte,f
  3105  05D5  2DD4               	goto	u3907
  3106                           
  3107                           ;SWI2C.C: 91: for(i=0;i<8;i++)
  3108  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3109  05D7  01A2               	clrf	swI2C_WriteByte@i
  3110  05D8                     l2610:	
  3111                           
  3112                           ;SWI2C.C: 92: {
  3113                           ;SWI2C.C: 93: RA6 = (dat&0x80) ? 1:0;
  3114  05D8  1FA1               	btfss	swI2C_WriteByte@dat,7
  3115  05D9  2DDD               	goto	u2880
  3116  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3117  05DB  1705               	bsf	5,6
  3118  05DC  2DDF               	goto	u2894
  3119  05DD                     u2880:	
  3120  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3121  05DE  1305               	bcf	5,6
  3122  05DF                     u2894:	
  3123  05DF  3005               	movlw	5
  3124                           
  3125                           ;SWI2C.C: 94: dat<<=1;
  3126  05E0  1003               	clrc
  3127  05E1  0DA1               	rlf	swI2C_WriteByte@dat,f
  3128                           
  3129                           ;SWI2C.C: 95: RA7 = 1;
  3130  05E2  1785               	bsf	5,7
  3131                           
  3132                           ;SWI2C.C: 96: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3133  05E3  00A0               	movwf	??_swI2C_WriteByte
  3134  05E4                     u3917:	
  3135  05E4  0BA0               	decfsz	??_swI2C_WriteByte,f
  3136  05E5  2DE4               	goto	u3917
  3137  05E6  3005               	movlw	5
  3138                           
  3139                           ;SWI2C.C: 97: RA7 = 0;
  3140  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  3141  05E8  1385               	bcf	5,7
  3142                           
  3143                           ;SWI2C.C: 98: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3144  05E9  00A0               	movwf	??_swI2C_WriteByte
  3145  05EA                     u3927:	
  3146  05EA  0BA0               	decfsz	??_swI2C_WriteByte,f
  3147  05EB  2DEA               	goto	u3927
  3148  05EC  3008               	movlw	8
  3149  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  3150  05EE  0AA2               	incf	swI2C_WriteByte@i,f
  3151  05EF  0222               	subwf	swI2C_WriteByte@i,w
  3152  05F0  1C03               	skipc
  3153  05F1  2DD8               	goto	l2610
  3154                           
  3155                           ;SWI2C.C: 99: }
  3156                           ;SWI2C.C: 101: TRISA |=0x40;;
  3157  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  3158  05F3  1705               	bsf	5,6	;volatile
  3159                           
  3160                           ;SWI2C.C: 102: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3161  05F4  3005               	movlw	5
  3162  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3163  05F6  00A0               	movwf	??_swI2C_WriteByte
  3164  05F7                     u3937:	
  3165  05F7  0BA0               	decfsz	??_swI2C_WriteByte,f
  3166  05F8  2DF7               	goto	u3937
  3167  05F9  3005               	movlw	5
  3168                           
  3169                           ;SWI2C.C: 103: RA7 = 1;
  3170  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3171  05FB  1785               	bsf	5,7
  3172                           
  3173                           ;SWI2C.C: 104: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3174  05FC  00A0               	movwf	??_swI2C_WriteByte
  3175  05FD                     u3947:	
  3176  05FD  0BA0               	decfsz	??_swI2C_WriteByte,f
  3177  05FE  2DFD               	goto	u3947
  3178                           
  3179                           ;SWI2C.C: 105: i= RA6;
  3180  05FF  3000               	movlw	0
  3181  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0601  1B05               	btfsc	5,6
  3183  0602  3001               	movlw	1
  3184  0603  00A2               	movwf	swI2C_WriteByte@i
  3185                           
  3186                           ;SWI2C.C: 106: RA7 = 0;
  3187  0604  1385               	bcf	5,7
  3188                           
  3189                           ;SWI2C.C: 107: TRISA &=0xbf;;
  3190  0605  1683               	bsf	3,5	;RP0=1, select bank1
  3191  0606  1305               	bcf	5,6	;volatile
  3192                           
  3193                           ;SWI2C.C: 108: return i;
  3194  0607  1283               	bcf	3,5	;RP0=0, select bank0
  3195  0608  0822               	movf	swI2C_WriteByte@i,w
  3196  0609  0008               	return
  3197  060A                     __end_of_swI2C_WriteByte:	
  3198                           
  3199                           	psect	text864
  3200  074B                     __ptext864:	
  3201 ;; =============== function _swI2C_WriteByte ends ============
  3202                           
  3203                           
  3204 ;; *************** function _swI2C_Stop *****************
  3205 ;; Defined at:
  3206 ;;		line 35 in file "SWI2C.C"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;		None               void
  3213 ;; Registers used:
  3214 ;;		wreg
  3215 ;; Tracked objects:
  3216 ;;		On entry : 20/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1
  3220 ;;      Params:         0       0       0
  3221 ;;      Locals:         0       0       0
  3222 ;;      Temps:          0       1       0
  3223 ;;      Totals:         0       1       0
  3224 ;;Total ram usage:        1 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    2
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_AccWrite
  3231 ;;		_AccRead
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234  074B                     _swI2C_Stop:	
  3235  074B  3005               	movlw	5
  3236                           
  3237                           ;SWI2C.C: 37: RA6 = 0;
  3238                           
  3239                           ; Regs used in _swI2C_Stop: [wreg]
  3240  074C  1305               	bcf	5,6
  3241                           
  3242                           ;SWI2C.C: 38: RA7 = 1;
  3243  074D  1785               	bsf	5,7
  3244                           
  3245                           ;SWI2C.C: 39: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3246  074E  00A0               	movwf	??_swI2C_Stop
  3247  074F                     u3957:	
  3248  074F  0BA0               	decfsz	??_swI2C_Stop,f
  3249  0750  2F4F               	goto	u3957
  3250  0751  3005               	movlw	5
  3251                           
  3252                           ;SWI2C.C: 40: RA6 = 1;
  3253  0752  1283               	bcf	3,5	;RP0=0, select bank0
  3254  0753  1705               	bsf	5,6
  3255                           
  3256                           ;SWI2C.C: 41: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3257  0754  00A0               	movwf	??_swI2C_Stop
  3258  0755                     u3967:	
  3259  0755  0BA0               	decfsz	??_swI2C_Stop,f
  3260  0756  2F55               	goto	u3967
  3261  0757  0008               	return
  3262  0758                     __end_of_swI2C_Stop:	
  3263                           
  3264                           	psect	text865
  3265  0706                     __ptext865:	
  3266 ;; =============== function _swI2C_Stop ends ============
  3267                           
  3268                           
  3269 ;; *************** function _swI2C_Start *****************
  3270 ;; Defined at:
  3271 ;;		line 22 in file "SWI2C.C"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;		None
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;		None               void
  3278 ;; Registers used:
  3279 ;;		wreg
  3280 ;; Tracked objects:
  3281 ;;		On entry : 20/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1
  3285 ;;      Params:         0       0       0
  3286 ;;      Locals:         0       0       0
  3287 ;;      Temps:          0       1       0
  3288 ;;      Totals:         0       1       0
  3289 ;;Total ram usage:        1 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    2
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_AccWrite
  3296 ;;		_AccRead
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299  0706                     _swI2C_Start:	
  3300  0706  3005               	movlw	5
  3301                           
  3302                           ;SWI2C.C: 24: RA7 = 1;
  3303                           
  3304                           ; Regs used in _swI2C_Start: [wreg]
  3305  0707  1785               	bsf	5,7
  3306                           
  3307                           ;SWI2C.C: 26: RA6 = 1;
  3308  0708  1705               	bsf	5,6
  3309                           
  3310                           ;SWI2C.C: 27: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3311  0709  00A0               	movwf	??_swI2C_Start
  3312  070A                     u3977:	
  3313  070A  0BA0               	decfsz	??_swI2C_Start,f
  3314  070B  2F0A               	goto	u3977
  3315  070C  3005               	movlw	5
  3316                           
  3317                           ;SWI2C.C: 28: RA6 = 0;
  3318  070D  1283               	bcf	3,5	;RP0=0, select bank0
  3319  070E  1305               	bcf	5,6
  3320                           
  3321                           ;SWI2C.C: 29: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3322  070F  00A0               	movwf	??_swI2C_Start
  3323  0710                     u3987:	
  3324  0710  0BA0               	decfsz	??_swI2C_Start,f
  3325  0711  2F10               	goto	u3987
  3326  0712  3005               	movlw	5
  3327                           
  3328                           ;SWI2C.C: 30: RA7 = 0;
  3329  0713  1283               	bcf	3,5	;RP0=0, select bank0
  3330  0714  1385               	bcf	5,7
  3331                           
  3332                           ;SWI2C.C: 31: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3333  0715  00A0               	movwf	??_swI2C_Start
  3334  0716                     u3997:	
  3335  0716  0BA0               	decfsz	??_swI2C_Start,f
  3336  0717  2F16               	goto	u3997
  3337  0718  0008               	return
  3338  0719                     __end_of_swI2C_Start:	
  3339                           
  3340                           	psect	text866
  3341  066D                     __ptext866:	
  3342 ;; =============== function _swI2C_Start ends ============
  3343                           
  3344                           
  3345 ;; *************** function _swI2C_Init *****************
  3346 ;; Defined at:
  3347 ;;		line 8 in file "SWI2C.C"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;		None               void
  3354 ;; Registers used:
  3355 ;;		wreg
  3356 ;; Tracked objects:
  3357 ;;		On entry : 20/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1
  3361 ;;      Params:         0       0       0
  3362 ;;      Locals:         0       0       0
  3363 ;;      Temps:          0       1       0
  3364 ;;      Totals:         0       1       0
  3365 ;;Total ram usage:        1 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    2
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374  066D                     _swI2C_Init:	
  3375                           
  3376                           ;SWI2C.C: 10: TRISA &=0xbf;;
  3377                           
  3378                           ; Regs used in _swI2C_Init: [wreg]
  3379  066D  1683               	bsf	3,5	;RP0=1, select bank1
  3380  066E  1305               	bcf	5,6	;volatile
  3381                           
  3382                           ;SWI2C.C: 11: TRISA &=0x7f;;
  3383  066F  1385               	bcf	5,7	;volatile
  3384                           
  3385                           ;SWI2C.C: 12: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3386  0670  3005               	movlw	5
  3387  0671  1283               	bcf	3,5	;RP0=0, select bank0
  3388  0672  00A0               	movwf	??_swI2C_Init
  3389  0673                     u4007:	
  3390  0673  0BA0               	decfsz	??_swI2C_Init,f
  3391  0674  2E73               	goto	u4007
  3392  0675  3005               	movlw	5
  3393                           
  3394                           ;SWI2C.C: 13: RA7 = 1;
  3395  0676  1283               	bcf	3,5	;RP0=0, select bank0
  3396  0677  1785               	bsf	5,7
  3397  0678  1705               	bsf	5,6
  3398                           
  3399                           ;SWI2C.C: 15: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3400  0679  00A0               	movwf	??_swI2C_Init
  3401  067A                     u4017:	
  3402  067A  0BA0               	decfsz	??_swI2C_Init,f
  3403  067B  2E7A               	goto	u4017
  3404                           
  3405                           ;SWI2C.C: 16: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3406  067C  3005               	movlw	5
  3407  067D  1283               	bcf	3,5	;RP0=0, select bank0
  3408  067E  00A0               	movwf	??_swI2C_Init
  3409  067F                     u4027:	
  3410  067F  0BA0               	decfsz	??_swI2C_Init,f
  3411  0680  2E7F               	goto	u4027
  3412                           
  3413                           ;SWI2C.C: 17: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3414  0681  3005               	movlw	5
  3415  0682  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0683  00A0               	movwf	??_swI2C_Init
  3417  0684                     u4037:	
  3418  0684  0BA0               	decfsz	??_swI2C_Init,f
  3419  0685  2E84               	goto	u4037
  3420                           
  3421                           ;SWI2C.C: 18: _delay((unsigned long)((16)*(4000000/4000000.0)));;
  3422  0686  3005               	movlw	5
  3423  0687  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0688  00A0               	movwf	??_swI2C_Init
  3425  0689                     u4047:	
  3426  0689  0BA0               	decfsz	??_swI2C_Init,f
  3427  068A  2E89               	goto	u4047
  3428  068B  0008               	return
  3429  068C                     __end_of_swI2C_Init:	
  3430                           
  3431                           	psect	text867
  3432  0771                     __ptext867:	
  3433 ;; =============== function _swI2C_Init ends ============
  3434                           
  3435                           
  3436 ;; *************** function _sys_init *****************
  3437 ;; Defined at:
  3438 ;;		line 3 in file "sysinit.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;		None               void
  3445 ;; Registers used:
  3446 ;;		wreg
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 20/20
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1
  3452 ;;      Params:         0       0       0
  3453 ;;      Locals:         0       0       0
  3454 ;;      Temps:          0       0       0
  3455 ;;      Totals:         0       0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    2
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_main
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465  0771                     _sys_init:	
  3466                           
  3467                           ;sysinit.c: 21: OSCCON = 0B01010001;
  3468                           
  3469                           ; Regs used in _sys_init: [wreg]
  3470  0771  3051               	movlw	81
  3471  0772  1683               	bsf	3,5	;RP0=1, select bank1
  3472  0773  008F               	movwf	15	;volatile
  3473                           
  3474                           ;sysinit.c: 22: _nop();
  3475  0774  0000               	nop
  3476  0775                     l1799:	
  3477                           ;sysinit.c: 28: while(HTS==0);
  3478                           
  3479  0775  1683               	bsf	3,5	;RP0=1, select bank1
  3480  0776  190F               	btfsc	15,2
  3481  0777  0008               	return
  3482  0778  2F75               	goto	l1799
  3483  0779                     __end_of_sys_init:	
  3484                           
  3485                           	psect	text868
  3486  06DA                     __ptext868:	
  3487 ;; =============== function _sys_init ends ============
  3488                           
  3489                           
  3490 ;; *************** function _beep *****************
  3491 ;; Defined at:
  3492 ;;		line 162 in file "smartkey.C"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  delay           1    wreg     unsigned char 
  3495 ;;  rep             1    4[BANK0 ] unsigned char 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  delay           1    5[BANK0 ] unsigned char 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;		None               void
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0, pclath, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : 20/0
  3504 ;;		On exit  : 20/0
  3505 ;;		Unchanged: FFFDF/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1
  3507 ;;      Params:         0       1       0
  3508 ;;      Locals:         0       1       0
  3509 ;;      Temps:          0       0       0
  3510 ;;      Totals:         0       2       0
  3511 ;;Total ram usage:        2 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    3
  3514 ;; This function calls:
  3515 ;;		_delay_x10ms
  3516 ;; This function is called by:
  3517 ;;		_main
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520  06DA                     _beep:	
  3521                           
  3522                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  3523                           ;beep@delay stored from wreg
  3524  06DA  00A5               	movwf	beep@delay
  3525  06DB                     l6639:	
  3526                           ;smartkey.C: 163: {
  3527                           ;smartkey.C: 164: while(rep--){
  3528                           
  3529  06DB  03A4               	decf	beep@rep,f
  3530  06DC  0824               	movf	beep@rep,w
  3531  06DD  3AFF               	xorlw	255
  3532  06DE  1903               	btfsc	3,2
  3533  06DF  0008               	return
  3534  06E0  300C               	movlw	12
  3535                           
  3536                           ;smartkey.C: 165: TMR2ON = 1;
  3537  06E1  1512               	bsf	18,2
  3538                           
  3539                           ;smartkey.C: 166: PR2L = 12;
  3540  06E2  1683               	bsf	3,5	;RP0=1, select bank1
  3541  06E3  0091               	movwf	17	;volatile
  3542                           
  3543                           ;smartkey.C: 167: delay_x10ms(delay);
  3544  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  3545  06E5  0825               	movf	beep@delay,w
  3546  06E6  00A0               	movwf	?_delay_x10ms
  3547  06E7  01A1               	clrf	?_delay_x10ms+1
  3548  06E8  2719               	fcall	_delay_x10ms
  3549  06E9  3014               	movlw	20
  3550                           
  3551                           ;smartkey.C: 169: TMR2ON = 0;RA3 =0;
  3552  06EA  1112               	bcf	18,2
  3553  06EB  1185               	bcf	5,3
  3554                           
  3555                           ;smartkey.C: 170: delay_x10ms(20);
  3556  06EC  00A0               	movwf	?_delay_x10ms
  3557  06ED  01A1               	clrf	?_delay_x10ms+1
  3558  06EE  2719               	fcall	_delay_x10ms
  3559  06EF  2EDB               	goto	l6639
  3560  06F0                     __end_of_beep:	
  3561                           
  3562                           	psect	text869
  3563  0504                     __ptext869:	
  3564 ;; =============== function _beep ends ============
  3565                           
  3566                           
  3567 ;; *************** function ___awdiv *****************
  3568 ;; Defined at:
  3569 ;;		line 5 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\awdiv.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  divisor         2    0[BANK0 ] int 
  3572 ;;  dividend        2    2[BANK0 ] int 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;  quotient        2    6[BANK0 ] int 
  3575 ;;  sign            1    5[BANK0 ] unsigned char 
  3576 ;;  counter         1    4[BANK0 ] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  2    0[BANK0 ] int 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0
  3581 ;; Tracked objects:
  3582 ;;		On entry : 20/0
  3583 ;;		On exit  : 20/0
  3584 ;;		Unchanged: FFFDF/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1
  3586 ;;      Params:         0       4       0
  3587 ;;      Locals:         0       4       0
  3588 ;;      Temps:          0       0       0
  3589 ;;      Totals:         0       8       0
  3590 ;;Total ram usage:        8 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    2
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_main
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599  0504                     ___awdiv:	
  3600                           
  3601                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3602  0504  01A5               	clrf	___awdiv@sign
  3603  0505  1FA1               	btfss	___awdiv@divisor+1,7
  3604  0506  2D0E               	goto	l6591
  3605  0507  09A0               	comf	___awdiv@divisor,f
  3606  0508  09A1               	comf	___awdiv@divisor+1,f
  3607  0509  0AA0               	incf	___awdiv@divisor,f
  3608  050A  1903               	skipnz
  3609  050B  0AA1               	incf	___awdiv@divisor+1,f
  3610  050C  01A5               	clrf	___awdiv@sign
  3611  050D  0AA5               	incf	___awdiv@sign,f
  3612  050E                     l6591:	
  3613  050E  1FA3               	btfss	___awdiv@dividend+1,7
  3614  050F  2D17               	goto	l6597
  3615  0510  09A2               	comf	___awdiv@dividend,f
  3616  0511  09A3               	comf	___awdiv@dividend+1,f
  3617  0512  0AA2               	incf	___awdiv@dividend,f
  3618  0513  1903               	skipnz
  3619  0514  0AA3               	incf	___awdiv@dividend+1,f
  3620  0515  3001               	movlw	1
  3621  0516  06A5               	xorwf	___awdiv@sign,f
  3622  0517                     l6597:	
  3623  0517  01A6               	clrf	___awdiv@quotient
  3624  0518  01A7               	clrf	___awdiv@quotient+1
  3625  0519  0821               	movf	___awdiv@divisor+1,w
  3626  051A  0420               	iorwf	___awdiv@divisor,w
  3627  051B  1903               	skipnz
  3628  051C  2D3C               	goto	l6619
  3629  051D  01A4               	clrf	___awdiv@counter
  3630  051E                     L15:	
  3631  051E  0AA4               	incf	___awdiv@counter,f
  3632  051F  1BA1               	btfsc	___awdiv@divisor+1,7
  3633  0520  2D25               	goto	l6607
  3634  0521  1003               	clrc
  3635  0522  0DA0               	rlf	___awdiv@divisor,f
  3636  0523  0DA1               	rlf	___awdiv@divisor+1,f
  3637  0524  2D1E               	goto	L15
  3638  0525                     l6607:	
  3639  0525  1003               	clrc
  3640  0526  0DA6               	rlf	___awdiv@quotient,f
  3641  0527  0DA7               	rlf	___awdiv@quotient+1,f
  3642  0528  0821               	movf	___awdiv@divisor+1,w
  3643  0529  0223               	subwf	___awdiv@dividend+1,w
  3644  052A  1D03               	skipz
  3645  052B  2D2E               	goto	u2835
  3646  052C  0820               	movf	___awdiv@divisor,w
  3647  052D  0222               	subwf	___awdiv@dividend,w
  3648  052E                     u2835:	
  3649  052E  1C03               	skipc
  3650  052F  2D38               	goto	L16
  3651  0530  0820               	movf	___awdiv@divisor,w
  3652  0531  02A2               	subwf	___awdiv@dividend,f
  3653  0532  0821               	movf	___awdiv@divisor+1,w
  3654  0533  1C03               	skipc
  3655  0534  03A3               	decf	___awdiv@dividend+1,f
  3656  0535  02A3               	subwf	___awdiv@dividend+1,f
  3657  0536  1426               	bsf	___awdiv@quotient,0
  3658  0537  1003               	clrc
  3659  0538                     L16:	
  3660  0538  0CA1               	rrf	___awdiv@divisor+1,f
  3661  0539  0CA0               	rrf	___awdiv@divisor,f
  3662  053A  0BA4               	decfsz	___awdiv@counter,f
  3663  053B  2D25               	goto	l6607
  3664  053C                     l6619:	
  3665  053C  0825               	movf	___awdiv@sign,w
  3666  053D  1903               	btfsc	3,2
  3667  053E  2D44               	goto	l6623
  3668  053F  09A6               	comf	___awdiv@quotient,f
  3669  0540  09A7               	comf	___awdiv@quotient+1,f
  3670  0541  0AA6               	incf	___awdiv@quotient,f
  3671  0542  1903               	skipnz
  3672  0543  0AA7               	incf	___awdiv@quotient+1,f
  3673  0544                     l6623:	
  3674  0544  0827               	movf	___awdiv@quotient+1,w
  3675  0545  00A1               	movwf	?___awdiv+1
  3676  0546  0826               	movf	___awdiv@quotient,w
  3677  0547  00A0               	movwf	?___awdiv
  3678  0548  0008               	return
  3679  0549                     __end_of___awdiv:	
  3680                           
  3681                           	psect	text870
  3682  068C                     __ptext870:	
  3683 ;; =============== function ___awdiv ends ============
  3684                           
  3685                           
  3686 ;; *************** function _int_init *****************
  3687 ;; Defined at:
  3688 ;;		line 83 in file "sysinit.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  tmp             1    0        unsigned char 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;		None               void
  3695 ;; Registers used:
  3696 ;;		wreg, status,2
  3697 ;; Tracked objects:
  3698 ;;		On entry : 20/0
  3699 ;;		On exit  : 20/0
  3700 ;;		Unchanged: FFFDF/0
  3701 ;; Data sizes:     COMMON   BANK0   BANK1
  3702 ;;      Params:         0       0       0
  3703 ;;      Locals:         0       0       0
  3704 ;;      Temps:          0       0       0
  3705 ;;      Totals:         0       0       0
  3706 ;;Total ram usage:        0 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:    2
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_main
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715  068C                     _int_init:	
  3716                           
  3717                           ;sysinit.c: 88: INTCON = 0B00000000;
  3718                           
  3719                           ; Regs used in _int_init: [wreg+status,2]
  3720  068C  018B               	clrf	11	;volatile
  3721                           
  3722                           ;sysinit.c: 89: PIE1 = 0B00000000;
  3723  068D  1683               	bsf	3,5	;RP0=1, select bank1
  3724  068E  018C               	clrf	12	;volatile
  3725                           
  3726                           ;sysinit.c: 90: PIR1 = 0B00000000;
  3727  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3728  0690  018C               	clrf	12	;volatile
  3729                           
  3730                           ;sysinit.c: 92: IOCA5 = 1;
  3731  0691  1683               	bsf	3,5	;RP0=1, select bank1
  3732  0692  1696               	bsf	22,5
  3733                           
  3734                           ;sysinit.c: 93: tmp = PORTA;
  3735  0693  1283               	bcf	3,5	;RP0=0, select bank0
  3736  0694  0805               	movf	5,w	;volatile
  3737                           
  3738                           ;sysinit.c: 94: PAIF = 0;
  3739  0695  100B               	bcf	11,0
  3740                           
  3741                           ;sysinit.c: 95: PAIE = 0;
  3742  0696  118B               	bcf	11,3
  3743                           
  3744                           ;sysinit.c: 98: INTEDG = 0;
  3745  0697  1683               	bsf	3,5	;RP0=1, select bank1
  3746  0698  1301               	bcf	1,6
  3747                           
  3748                           ;sysinit.c: 99: INTF = 0;
  3749  0699  108B               	bcf	11,1
  3750                           
  3751                           ;sysinit.c: 100: INTE = 1;
  3752  069A  160B               	bsf	11,4
  3753                           
  3754                           ;sysinit.c: 102: TMR2IF = 0;
  3755  069B  1283               	bcf	3,5	;RP0=0, select bank0
  3756  069C  108C               	bcf	12,1
  3757                           
  3758                           ;sysinit.c: 103: TMR2IE = 1;
  3759  069D  1683               	bsf	3,5	;RP0=1, select bank1
  3760  069E  148C               	bsf	12,1
  3761                           
  3762                           ;sysinit.c: 104: TMR2ON = 0;
  3763  069F  1283               	bcf	3,5	;RP0=0, select bank0
  3764  06A0  1112               	bcf	18,2
  3765                           
  3766                           ;sysinit.c: 110: T0IF = 0;
  3767  06A1  110B               	bcf	11,2
  3768                           
  3769                           ;sysinit.c: 111: T0IE = 1;
  3770  06A2  168B               	bsf	11,5
  3771                           
  3772                           ;sysinit.c: 112: T0ON = 1;
  3773  06A3  159F               	bsf	31,3
  3774                           
  3775                           ;sysinit.c: 114: PEIE = 1;
  3776  06A4  170B               	bsf	11,6
  3777                           
  3778                           ;sysinit.c: 116: GIE = 1;
  3779  06A5  178B               	bsf	11,7
  3780  06A6  0008               	return
  3781  06A7                     __end_of_int_init:	
  3782                           
  3783                           	psect	text871
  3784  072C                     __ptext871:	
  3785 ;; =============== function _int_init ends ============
  3786                           
  3787                           
  3788 ;; *************** function _timer_init *****************
  3789 ;; Defined at:
  3790 ;;		line 51 in file "sysinit.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;		None               void
  3797 ;; Registers used:
  3798 ;;		wreg, status,2
  3799 ;; Tracked objects:
  3800 ;;		On entry : 20/0
  3801 ;;		On exit  : 20/0
  3802 ;;		Unchanged: FFFDF/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1
  3804 ;;      Params:         0       0       0
  3805 ;;      Locals:         0       0       0
  3806 ;;      Temps:          0       0       0
  3807 ;;      Totals:         0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    2
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_main
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817  072C                     _timer_init:	
  3818                           
  3819                           ;sysinit.c: 60: T0CON0 = 0B00000000;
  3820                           
  3821                           ; Regs used in _timer_init: [wreg+status,2]
  3822  072C  019F               	clrf	31	;volatile
  3823                           
  3824                           ;sysinit.c: 61: OPTION = 0B00000111;
  3825  072D  3007               	movlw	7
  3826  072E  1683               	bsf	3,5	;RP0=1, select bank1
  3827  072F  0081               	movwf	1	;volatile
  3828                           
  3829                           ;sysinit.c: 62: TMR0 = 179;
  3830  0730  30B3               	movlw	179
  3831  0731  1283               	bcf	3,5	;RP0=0, select bank0
  3832  0732  0081               	movwf	1	;volatile
  3833                           
  3834                           ;sysinit.c: 64: TMR2H = 0;
  3835  0733  0193               	clrf	19	;volatile
  3836                           
  3837                           ;sysinit.c: 65: TMR2L = 0;
  3838  0734  0191               	clrf	17	;volatile
  3839                           
  3840                           ;sysinit.c: 66: PR2H = 0;
  3841  0735  1683               	bsf	3,5	;RP0=1, select bank1
  3842  0736  0192               	clrf	18	;volatile
  3843                           
  3844                           ;sysinit.c: 67: PR2L =0;
  3845  0737  0191               	clrf	17	;volatile
  3846                           
  3847                           ;sysinit.c: 68: T2CON0 = 0B00101001;
  3848  0738  3029               	movlw	41
  3849  0739  1283               	bcf	3,5	;RP0=0, select bank0
  3850  073A  0092               	movwf	18	;volatile
  3851  073B  0008               	return
  3852  073C                     __end_of_timer_init:	
  3853                           
  3854                           	psect	text872
  3855  06F0                     __ptext872:	
  3856 ;; =============== function _timer_init ends ============
  3857                           
  3858                           
  3859 ;; *************** function _gpio_init *****************
  3860 ;; Defined at:
  3861 ;;		line 32 in file "sysinit.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;		None
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;		None
  3866 ;; Return value:  Size  Location     Type
  3867 ;;		None               void
  3868 ;; Registers used:
  3869 ;;		wreg, status,2
  3870 ;; Tracked objects:
  3871 ;;		On entry : 20/20
  3872 ;;		On exit  : 20/0
  3873 ;;		Unchanged: FFFDF/0
  3874 ;; Data sizes:     COMMON   BANK0   BANK1
  3875 ;;      Params:         0       0       0
  3876 ;;      Locals:         0       0       0
  3877 ;;      Temps:          0       0       0
  3878 ;;      Totals:         0       0       0
  3879 ;;Total ram usage:        0 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; Hardware stack levels required when called:    2
  3882 ;; This function calls:
  3883 ;;		Nothing
  3884 ;; This function is called by:
  3885 ;;		_main
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888  06F0                     _gpio_init:	
  3889                           
  3890                           ;sysinit.c: 34: PORTA = 0B00000000;
  3891                           
  3892                           ; Regs used in _gpio_init: [wreg+status,2]
  3893  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  3894  06F1  0185               	clrf	5	;volatile
  3895                           
  3896                           ;sysinit.c: 35: TRISA = 0B00110111;
  3897  06F2  3037               	movlw	55
  3898  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  3899  06F4  0085               	movwf	5	;volatile
  3900                           
  3901                           ;sysinit.c: 36: WPUA = 0B11000000;
  3902  06F5  30C0               	movlw	192
  3903  06F6  0095               	movwf	21	;volatile
  3904                           
  3905                           ;sysinit.c: 38: PORTC = 0B00000000;
  3906  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  3907  06F8  0187               	clrf	7	;volatile
  3908                           
  3909                           ;sysinit.c: 39: TRISC = 0B11111100;
  3910  06F9  30FC               	movlw	252
  3911  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  3912  06FB  0087               	movwf	7	;volatile
  3913                           
  3914                           ;sysinit.c: 40: WPUC = 0B00000000;
  3915  06FC  0193               	clrf	19	;volatile
  3916                           
  3917                           ;sysinit.c: 42: PSRCA = 0B11111111;
  3918  06FD  30FF               	movlw	255
  3919  06FE  0088               	movwf	8	;volatile
  3920                           
  3921                           ;sysinit.c: 43: PSRCC = 0B11111111;
  3922  06FF  0094               	movwf	20	;volatile
  3923                           
  3924                           ;sysinit.c: 44: PSINKA = 0B11111111;
  3925  0700  0097               	movwf	23	;volatile
  3926                           
  3927                           ;sysinit.c: 45: PSINKC = 0B11111111;
  3928  0701  009F               	movwf	31	;volatile
  3929                           
  3930                           ;sysinit.c: 47: MSCON = 0B00110000;
  3931  0702  3030               	movlw	48
  3932  0703  1283               	bcf	3,5	;RP0=0, select bank0
  3933  0704  009B               	movwf	27	;volatile
  3934  0705  0008               	return
  3935  0706                     __end_of_gpio_init:	
  3936                           
  3937                           	psect	text873
  3938  0549                     __ptext873:	
  3939 ;; =============== function _gpio_init ends ============
  3940                           
  3941                           
  3942 ;; *************** function _compe *****************
  3943 ;; Defined at:
  3944 ;;		line 208 in file "smartkey.C"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  a               1    wreg     char 
  3947 ;;  b               1    0[BANK0 ] char 
  3948 ;;  dt              1    1[BANK0 ] char 
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;  a               1    7[BANK0 ] char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      unsigned char 
  3953 ;; Registers used:
  3954 ;;		wreg
  3955 ;; Tracked objects:
  3956 ;;		On entry : 20/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: FFE00/0
  3959 ;; Data sizes:     COMMON   BANK0   BANK1
  3960 ;;      Params:         0       2       0
  3961 ;;      Locals:         0       1       0
  3962 ;;      Temps:          0       5       0
  3963 ;;      Totals:         0       8       0
  3964 ;;Total ram usage:        8 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; Hardware stack levels required when called:    2
  3967 ;; This function calls:
  3968 ;;		Nothing
  3969 ;; This function is called by:
  3970 ;;		_main
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973  0549                     _compe:	
  3974                           
  3975                           ; Regs used in _compe: [wreg]
  3976                           ;compe@a stored from wreg
  3977  0549  00A7               	movwf	compe@a
  3978                           
  3979                           ;smartkey.C: 210: if(a>b){
  3980  054A  0820               	movf	compe@b,w
  3981  054B  3A80               	xorlw	128
  3982  054C  00A2               	movwf	??_compe
  3983  054D  0827               	movf	compe@a,w
  3984  054E  3A80               	xorlw	128
  3985  054F  02A2               	subwf	??_compe,f
  3986  0550  1803               	skipnc
  3987  0551  2D75               	goto	l6509
  3988                           
  3989                           ;smartkey.C: 211: if((a-b)<=dt) return 1;
  3990  0552  0820               	movf	compe@b,w
  3991  0553  0227               	subwf	compe@a,w
  3992  0554  00A2               	movwf	??_compe
  3993  0555  01A3               	clrf	??_compe+1
  3994  0556  1C03               	skipc
  3995  0557  03A3               	decf	??_compe+1,f
  3996  0558  1BA7               	btfsc	compe@a,7
  3997  0559  03A3               	decf	??_compe+1,f
  3998  055A  1BA0               	btfsc	compe@b,7
  3999  055B  0AA3               	incf	??_compe+1,f
  4000  055C  1283               	bcf	3,5	;RP0=0, select bank0
  4001  055D  2582               	fcall	PL3	;call to abstracted procedure
  4002  055E  1D03               	skipz
  4003  055F  2D62               	goto	u2745
  4004  0560  0822               	movf	??_compe,w
  4005  0561  0224               	subwf	??_compe+2,w
  4006  0562                     u2745:	
  4007  0562  1C03               	skipc
  4008  0563  3400               	retlw	0
  4009  0564  3401               	retlw	1
  4010  0565                     L17:	
  4011                           ;smartkey.C: 215: if((b-a)<=dt) return 1;
  4012                           
  4013  0565  0220               	subwf	compe@b,w
  4014  0566  00A2               	movwf	??_compe
  4015  0567  01A3               	clrf	??_compe+1
  4016  0568  1C03               	skipc
  4017  0569  03A3               	decf	??_compe+1,f
  4018  056A  1BA0               	btfsc	compe@b,7
  4019  056B  03A3               	decf	??_compe+1,f
  4020  056C  1BA7               	btfsc	compe@a,7
  4021  056D  0AA3               	incf	??_compe+1,f
  4022  056E  1283               	bcf	3,5	;RP0=0, select bank0
  4023  056F  2582               	fcall	PL3	;call to abstracted procedure
  4024  0570  1D03               	skipz
  4025  0571  2D62               	goto	u2745
  4026  0572  0822               	movf	??_compe,w
  4027  0573  0224               	subwf	??_compe+2,w
  4028  0574  2D62               	goto	u2745
  4029  0575                     l6509:	
  4030                           ;smartkey.C: 212: else return 0;
  4031                           
  4032                           
  4033                           ;smartkey.C: 214: else if(a<b){
  4034  0575  0827               	movf	compe@a,w
  4035  0576  3A80               	xorlw	128
  4036  0577  00A2               	movwf	??_compe
  4037  0578  0820               	movf	compe@b,w
  4038  0579  3A80               	xorlw	128
  4039  057A  02A2               	subwf	??_compe,f
  4040                           
  4041                           ;smartkey.C: 218: else if(a==b){
  4042  057B  0827               	movf	compe@a,w
  4043  057C  1C03               	btfss	3,0
  4044  057D  2D65               	goto	L17
  4045  057E  0620               	xorwf	compe@b,w
  4046  057F  1903               	btfsc	3,2
  4047  0580  3401               	retlw	1
  4048  0581  3400               	retlw	0
  4049  0582                     __end_of_compe:	
  4050  0582                     PL3:	
  4051  0582  0821               	movf	compe@dt,w
  4052  0583  00A4               	movwf	??_compe+2
  4053  0584  01A5               	clrf	??_compe+3
  4054  0585  1BA4               	btfsc	??_compe+2,7
  4055  0586  03A5               	decf	??_compe+3,f
  4056  0587  0825               	movf	??_compe+3,w
  4057  0588  3A80               	xorlw	128
  4058  0589  00A6               	movwf	??_compe+4
  4059  058A  0823               	movf	??_compe+1,w
  4060  058B  3A80               	xorlw	128
  4061  058C  0226               	subwf	??_compe+4,w
  4062  058D  0008               	return
  4063                           
  4064                           	psect	text874
  4065  0765                     __ptext874:	
  4066 ;; =============== function _compe ends ============
  4067                           
  4068                           
  4069 ;; *************** function _setState *****************
  4070 ;; Defined at:
  4071 ;;		line 202 in file "smartkey.C"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  stt             1    wreg     unsigned char 
  4074 ;;  _tOut           2    0[BANK0 ] unsigned int 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  stt             1    2[BANK0 ] unsigned char 
  4077 ;; Return value:  Size  Location     Type
  4078 ;;		None               void
  4079 ;; Registers used:
  4080 ;;		wreg, status,2
  4081 ;; Tracked objects:
  4082 ;;		On entry : 20/0
  4083 ;;		On exit  : 20/0
  4084 ;;		Unchanged: FFFDF/0
  4085 ;; Data sizes:     COMMON   BANK0   BANK1
  4086 ;;      Params:         0       2       0
  4087 ;;      Locals:         0       1       0
  4088 ;;      Temps:          0       0       0
  4089 ;;      Totals:         0       3       0
  4090 ;;Total ram usage:        3 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    2
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_main
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099  0765                     _setState:	
  4100                           
  4101                           ; Regs used in _setState: [wreg+status,2]
  4102                           ;setState@stt stored from wreg
  4103  0765  00A2               	movwf	setState@stt
  4104                           
  4105                           ;smartkey.C: 203: mtOldState = mtState;
  4106  0766  0874               	movf	_mtState,w
  4107  0767  00CD               	movwf	_mtOldState
  4108                           
  4109                           ;smartkey.C: 204: mtState = stt;
  4110  0768  0822               	movf	setState@stt,w
  4111  0769  00F4               	movwf	_mtState
  4112                           
  4113                           ;smartkey.C: 205: timeTick =0;
  4114  076A  01F0               	clrf	_timeTick
  4115  076B  01F1               	clrf	_timeTick+1
  4116                           
  4117                           ;smartkey.C: 206: timeOut = _tOut;
  4118  076C  0821               	movf	setState@_tOut+1,w
  4119  076D  00C9               	movwf	_timeOut+1
  4120  076E  0820               	movf	setState@_tOut,w
  4121  076F  00C8               	movwf	_timeOut
  4122  0770  0008               	return
  4123  0771                     __end_of_setState:	
  4124                           
  4125                           	psect	text875
  4126  0786                     __ptext875:	
  4127 ;; =============== function _setState ends ============
  4128                           
  4129                           
  4130 ;; *************** function _beepOn *****************
  4131 ;; Defined at:
  4132 ;;		line 158 in file "smartkey.C"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;		None
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;		None
  4137 ;; Return value:  Size  Location     Type
  4138 ;;		None               void
  4139 ;; Registers used:
  4140 ;;		None
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/20
  4143 ;;		On exit  : 20/20
  4144 ;;		Unchanged: FFFDF/0
  4145 ;; Data sizes:     COMMON   BANK0   BANK1
  4146 ;;      Params:         0       0       0
  4147 ;;      Locals:         0       0       0
  4148 ;;      Temps:          0       0       0
  4149 ;;      Totals:         0       0       0
  4150 ;;Total ram usage:        0 bytes
  4151 ;; Hardware stack levels used:    1
  4152 ;; Hardware stack levels required when called:    2
  4153 ;; This function calls:
  4154 ;;		Nothing
  4155 ;; This function is called by:
  4156 ;;		_main
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159  0786                     _beepOn:	
  4160                           
  4161                           ;smartkey.C: 159: TMR2ON = 1;
  4162                           
  4163                           ; Regs used in _beepOn: []
  4164  0786  1283               	bcf	3,5	;RP0=0, select bank0
  4165  0787  1512               	bsf	18,2
  4166                           
  4167                           ;smartkey.C: 160: TRISA &= 0xf7;
  4168  0788  1683               	bsf	3,5	;RP0=1, select bank1
  4169  0789  1185               	bcf	5,3	;volatile
  4170  078A  0008               	return
  4171  078B                     __end_of_beepOn:	
  4172                           
  4173                           	psect	text876
  4174  078B                     __ptext876:	
  4175 ;; =============== function _beepOn ends ============
  4176                           
  4177                           
  4178 ;; *************** function _beepOff *****************
  4179 ;; Defined at:
  4180 ;;		line 155 in file "smartkey.C"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;		None               void
  4187 ;; Registers used:
  4188 ;;		None
  4189 ;; Tracked objects:
  4190 ;;		On entry : 20/0
  4191 ;;		On exit  : 20/20
  4192 ;;		Unchanged: FFFDF/0
  4193 ;; Data sizes:     COMMON   BANK0   BANK1
  4194 ;;      Params:         0       0       0
  4195 ;;      Locals:         0       0       0
  4196 ;;      Temps:          0       0       0
  4197 ;;      Totals:         0       0       0
  4198 ;;Total ram usage:        0 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    2
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_main
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207  078B                     _beepOff:	
  4208                           
  4209                           ;smartkey.C: 156: TMR2ON = 0;RA3 =0;TRISA |= 0x08;
  4210                           
  4211                           ; Regs used in _beepOff: []
  4212  078B  1112               	bcf	18,2
  4213  078C  1185               	bcf	5,3
  4214  078D  1683               	bsf	3,5	;RP0=1, select bank1
  4215  078E  1585               	bsf	5,3	;volatile
  4216  078F  0008               	return
  4217  0790                     __end_of_beepOff:	
  4218                           
  4219                           	psect	text877
  4220  0719                     __ptext877:	
  4221 ;; =============== function _beepOff ends ============
  4222                           
  4223                           
  4224 ;; *************** function _delay_x10ms *****************
  4225 ;; Defined at:
  4226 ;;		line 150 in file "smartkey.C"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  t               2    0[BANK0 ] unsigned int 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  set             2    2[BANK0 ] unsigned int 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;		None               void
  4233 ;; Registers used:
  4234 ;;		wreg
  4235 ;; Tracked objects:
  4236 ;;		On entry : 20/0
  4237 ;;		On exit  : 20/0
  4238 ;;		Unchanged: FFFDF/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1
  4240 ;;      Params:         0       2       0
  4241 ;;      Locals:         0       2       0
  4242 ;;      Temps:          0       0       0
  4243 ;;      Totals:         0       4       0
  4244 ;;Total ram usage:        4 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    2
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_beep
  4251 ;;		_main
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254  0719                     _delay_x10ms:	
  4255                           
  4256                           ;smartkey.C: 151: unsigned int set = t + timeTick;
  4257                           
  4258                           ; Regs used in _delay_x10ms: [wreg]
  4259  0719  0821               	movf	delay_x10ms@t+1,w
  4260  071A  00A3               	movwf	delay_x10ms@set+1
  4261  071B  0820               	movf	delay_x10ms@t,w
  4262  071C  00A2               	movwf	delay_x10ms@set
  4263  071D  0870               	movf	_timeTick,w
  4264  071E  07A2               	addwf	delay_x10ms@set,f
  4265  071F  1803               	skipnc
  4266  0720  0AA3               	incf	delay_x10ms@set+1,f
  4267  0721  0871               	movf	_timeTick+1,w
  4268  0722  07A3               	addwf	delay_x10ms@set+1,f
  4269  0723                     l6483:	
  4270                           ;smartkey.C: 152: while(timeTick < set);
  4271                           
  4272  0723  0823               	movf	delay_x10ms@set+1,w
  4273  0724  0271               	subwf	_timeTick+1,w
  4274  0725  1D03               	skipz
  4275  0726  2F29               	goto	u2715
  4276  0727  0822               	movf	delay_x10ms@set,w
  4277  0728  0270               	subwf	_timeTick,w
  4278  0729                     u2715:	
  4279  0729  1803               	btfsc	3,0
  4280  072A  0008               	return
  4281  072B  2F23               	goto	l6483
  4282  072C                     __end_of_delay_x10ms:	
  4283                           
  4284                           	psect	text878
  4285  06A7                     __ptext878:	
  4286 ;; =============== function _delay_x10ms ends ============
  4287                           
  4288                           
  4289 ;; *************** function _WRITE_EEPROM *****************
  4290 ;; Defined at:
  4291 ;;		line 189 in file "smartkey.C"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  EEAddr          1    wreg     unsigned char 
  4294 ;;  EEData          1    0[BANK0 ] unsigned char 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  EEAddr          1    1[BANK0 ] unsigned char 
  4297 ;; Return value:  Size  Location     Type
  4298 ;;		None               void
  4299 ;; Registers used:
  4300 ;;		wreg
  4301 ;; Tracked objects:
  4302 ;;		On entry : 20/0
  4303 ;;		On exit  : 20/20
  4304 ;;		Unchanged: FFE00/0
  4305 ;; Data sizes:     COMMON   BANK0   BANK1
  4306 ;;      Params:         0       1       0
  4307 ;;      Locals:         0       1       0
  4308 ;;      Temps:          0       0       0
  4309 ;;      Totals:         0       2       0
  4310 ;;Total ram usage:        2 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    2
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_main
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319  06A7                     _WRITE_EEPROM:	
  4320                           
  4321                           ; Regs used in _WRITE_EEPROM: [wreg]
  4322                           ;WRITE_EEPROM@EEAddr stored from wreg
  4323  06A7  00A1               	movwf	WRITE_EEPROM@EEAddr
  4324                           
  4325                           ;smartkey.C: 190: GIE = 0;
  4326  06A8  138B               	bcf	11,7
  4327  06A9                     l874:	
  4328                           ;smartkey.C: 191: while(GIE) asm("clrwdt");
  4329                           
  4330  06A9  1F8B               	btfss	11,7
  4331  06AA  2EAD               	goto	l6475
  4332  06AB  0064               	clrwdt	;#
  4333  06AC  2EA9               	goto	l874
  4334  06AD                     l6475:	
  4335                           
  4336                           ;smartkey.C: 192: EEADR = EEAddr;
  4337  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  4338  06AE  0821               	movf	WRITE_EEPROM@EEAddr,w
  4339  06AF  1683               	bsf	3,5	;RP0=1, select bank1
  4340  06B0  009B               	movwf	27	;volatile
  4341                           
  4342                           ;smartkey.C: 193: EEDAT = EEData;
  4343  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  4344  06B2  0820               	movf	WRITE_EEPROM@EEData,w
  4345  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  4346  06B4  009A               	movwf	26	;volatile
  4347  06B5  3034               	movlw	52
  4348                           
  4349                           ;smartkey.C: 194: EEIF = 0;
  4350  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  4351  06B7  138C               	bcf	12,7
  4352                           
  4353                           ;smartkey.C: 195: EECON1 = 0x34;
  4354  06B8  1683               	bsf	3,5	;RP0=1, select bank1
  4355  06B9  009C               	movwf	28	;volatile
  4356                           
  4357                           ;smartkey.C: 196: WR = 1;
  4358  06BA  141D               	bsf	29,0
  4359  06BB                     l877:	
  4360                           ;smartkey.C: 197: while(WR) asm("clrwdt");
  4361                           
  4362  06BB  1683               	bsf	3,5	;RP0=1, select bank1
  4363  06BC  1C1D               	btfss	29,0
  4364  06BD  2EC0               	goto	l879
  4365  06BE  0064               	clrwdt	;#
  4366  06BF  2EBB               	goto	l877
  4367  06C0                     l879:	
  4368                           
  4369                           ;smartkey.C: 199: GIE = 1;
  4370  06C0  178B               	bsf	11,7
  4371  06C1  0008               	return
  4372  06C2                     __end_of_WRITE_EEPROM:	
  4373                           
  4374                           	psect	text879
  4375  0758                     __ptext879:	
  4376 ;; =============== function _WRITE_EEPROM ends ============
  4377                           
  4378                           
  4379 ;; *************** function _READ_EEPROM *****************
  4380 ;; Defined at:
  4381 ;;		line 178 in file "smartkey.C"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  EEAddr          1    wreg     unsigned char 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;  EEAddr          1    0[BANK0 ] unsigned char 
  4386 ;;  ReEepromData    1    1[BANK0 ] unsigned char 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      unsigned char 
  4389 ;; Registers used:
  4390 ;;		wreg
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 20/0
  4394 ;;		Unchanged: FFFDF/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1
  4396 ;;      Params:         0       0       0
  4397 ;;      Locals:         0       2       0
  4398 ;;      Temps:          0       0       0
  4399 ;;      Totals:         0       2       0
  4400 ;;Total ram usage:        2 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    2
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_main
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409  0758                     _READ_EEPROM:	
  4410                           
  4411                           ; Regs used in _READ_EEPROM: [wreg]
  4412                           ;READ_EEPROM@EEAddr stored from wreg
  4413  0758  1283               	bcf	3,5	;RP0=0, select bank0
  4414  0759  00A0               	movwf	READ_EEPROM@EEAddr
  4415                           
  4416                           ;smartkey.C: 179: unsigned char ReEepromData;
  4417                           ;smartkey.C: 181: EEADR = EEAddr;
  4418  075A  1683               	bsf	3,5	;RP0=1, select bank1
  4419  075B  009B               	movwf	27	;volatile
  4420                           
  4421                           ;smartkey.C: 182: RD = 1;
  4422  075C  141C               	bsf	28,0
  4423                           
  4424                           ;smartkey.C: 183: ReEepromData = EEDAT;
  4425  075D  081A               	movf	26,w	;volatile
  4426  075E  1283               	bcf	3,5	;RP0=0, select bank0
  4427  075F  00A1               	movwf	READ_EEPROM@ReEepromData
  4428                           
  4429                           ;smartkey.C: 184: RD = 0;
  4430  0760  1683               	bsf	3,5	;RP0=1, select bank1
  4431  0761  101C               	bcf	28,0
  4432                           
  4433                           ;smartkey.C: 185: return ReEepromData;
  4434  0762  1283               	bcf	3,5	;RP0=0, select bank0
  4435  0763  0821               	movf	READ_EEPROM@ReEepromData,w
  4436  0764  0008               	return
  4437  0765                     __end_of_READ_EEPROM:	
  4438                           
  4439                           	psect	text880
  4440  047E                     __ptext880:	
  4441 ;; =============== function _READ_EEPROM ends ============
  4442                           
  4443                           
  4444 ;; *************** function _ISR *****************
  4445 ;; Defined at:
  4446 ;;		line 37 in file "smartkey.C"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  tmp             1    4[COMMON] unsigned char 
  4451 ;;  tmp             1    0        unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;		None               void
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0, pclath, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: FFE00/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1
  4461 ;;      Params:         0       0       0
  4462 ;;      Locals:         1       0       0
  4463 ;;      Temps:          2       0       0
  4464 ;;      Totals:         3       0       0
  4465 ;;Total ram usage:        3 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    1
  4468 ;; This function calls:
  4469 ;;		i1_READ_EEPROM
  4470 ;;		i1_WRITE_EEPROM
  4471 ;; This function is called by:
  4472 ;;		Interrupt level 1
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475  047E                     _ISR:	
  4476                           
  4477                           ;smartkey.C: 41: if(PAIE&&PAIF){
  4478  047E  198B               	btfsc	11,3
  4479  047F  1C0B               	btfss	11,0
  4480  0480  2C8F               	goto	i1l5511
  4481                           
  4482                           ;smartkey.C: 42: tmp = PORTA;
  4483  0481  1283               	bcf	3,5	;RP0=0, select bank0
  4484  0482  0805               	movf	5,w	;volatile
  4485                           
  4486                           ;smartkey.C: 43: PAIF = 0;
  4487  0483  100B               	bcf	11,0
  4488                           
  4489                           ;smartkey.C: 45: if(RA5){
  4490  0484  1E85               	btfss	5,5
  4491  0485  2C8E               	goto	i1l5509
  4492                           
  4493                           ;smartkey.C: 47: if(mode_chek == 0){
  4494  0486  08F3               	movf	_mode_chek,f
  4495  0487  1D03               	skipz
  4496  0488  2C8F               	goto	i1l5511
  4497                           
  4498                           ;smartkey.C: 48: cntCyc = 0;
  4499  0489  01F2               	clrf	_cntCyc
  4500                           
  4501                           ;smartkey.C: 49: cntOff = 0;
  4502  048A  01CB               	clrf	_cntOff
  4503                           
  4504                           ;smartkey.C: 51: mode_chek = 1;
  4505  048B  01F3               	clrf	_mode_chek
  4506  048C  0AF3               	incf	_mode_chek,f
  4507  048D  2C8F               	goto	i1l5511
  4508  048E                     i1l5509:	
  4509                           
  4510                           ;smartkey.C: 56: else{
  4511                           ;smartkey.C: 57: cntOff = 0;
  4512  048E  01CB               	clrf	_cntOff
  4513  048F                     i1l5511:	
  4514                           
  4515                           ;smartkey.C: 59: }
  4516                           ;smartkey.C: 60: }
  4517                           ;smartkey.C: 62: if(INTE&&INTF){
  4518  048F  1A0B               	btfsc	11,4
  4519  0490  1C8B               	btfss	11,1
  4520  0491  2CA5               	goto	i1l829
  4521                           
  4522                           ;smartkey.C: 63: unsigned char tmp;
  4523                           ;smartkey.C: 64: INTF = 0;
  4524  0492  108B               	bcf	11,1
  4525                           
  4526                           ;smartkey.C: 66: if( RA2==0){
  4527  0493  1283               	bcf	3,5	;RP0=0, select bank0
  4528  0494  1905               	btfsc	5,2
  4529  0495  2CA5               	goto	i1l829
  4530                           
  4531                           ;smartkey.C: 68: if(timeTick <0x20){
  4532  0496  3000               	movlw	0
  4533  0497  0271               	subwf	_timeTick+1,w
  4534  0498  3020               	movlw	32
  4535  0499  1903               	skipnz
  4536  049A  0270               	subwf	_timeTick,w
  4537  049B  1803               	skipnc
  4538  049C  2CA4               	goto	i1l831
  4539                           
  4540                           ;smartkey.C: 69: tmp = READ_EEPROM(0x3F);
  4541  049D  303F               	movlw	63
  4542  049E  2779               	fcall	i1_READ_EEPROM
  4543  049F  00F9               	movwf	ISR@tmp_1138
  4544                           
  4545                           ;smartkey.C: 70: WRITE_EEPROM(0x3F,tmp+1);
  4546  04A0  0A79               	incf	ISR@tmp_1138,w
  4547  04A1  00F5               	movwf	?i1_WRITE_EEPROM
  4548  04A2  303F               	movlw	63
  4549  04A3  26C2               	fcall	i1_WRITE_EEPROM
  4550  04A4                     i1l831:	
  4551  04A4  2CA4               	goto	i1l831
  4552  04A5                     i1l829:	
  4553                           
  4554                           ;smartkey.C: 79: }
  4555                           ;smartkey.C: 81: }
  4556                           ;smartkey.C: 84: if (T0IE && T0IF) {
  4557  04A5  1A8B               	btfsc	11,5
  4558  04A6  1D0B               	btfss	11,2
  4559  04A7  2CF4               	goto	i1l5569
  4560  04A8  30B3               	movlw	179
  4561                           
  4562                           ;smartkey.C: 85: T0IF = 0;
  4563  04A9  110B               	bcf	11,2
  4564                           
  4565                           ;smartkey.C: 86: TMR0 = 179;
  4566  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  4567  04AB  0081               	movwf	1	;volatile
  4568                           
  4569                           ;smartkey.C: 92: if( mode_chek == 1){
  4570  04AC  0B73               	decfsz	_mode_chek,w
  4571  04AD  2CC6               	goto	i1l5549
  4572                           
  4573                           ;smartkey.C: 94: cntCyc++;
  4574  04AE  0AF2               	incf	_cntCyc,f
  4575                           
  4576                           ;smartkey.C: 96: if(RA5==0){
  4577  04AF  1A85               	btfsc	5,5
  4578  04B0  2CC6               	goto	i1l5549
  4579  04B1  3010               	movlw	16
  4580                           
  4581                           ;smartkey.C: 98: cntOff++;
  4582  04B2  0ACB               	incf	_cntOff,f
  4583                           
  4584                           ;smartkey.C: 100: if(cntOff > 15){
  4585  04B3  024B               	subwf	_cntOff,w
  4586  04B4  1C03               	skipc
  4587  04B5  2CC6               	goto	i1l5549
  4588  04B6  3010               	movlw	16
  4589                           
  4590                           ;smartkey.C: 102: mode_chek = 0;
  4591  04B7  01F3               	clrf	_mode_chek
  4592                           
  4593                           ;smartkey.C: 104: if((cntCyc>15) &&(cntCyc<50)) {
  4594  04B8  0272               	subwf	_cntCyc,w
  4595  04B9  3032               	movlw	50
  4596  04BA  1C03               	skipc
  4597  04BB  2CC2               	goto	L19
  4598  04BC  0272               	subwf	_cntCyc,w
  4599  04BD  1803               	skipnc
  4600  04BE  2CC1               	goto	i1l5545
  4601                           
  4602                           ;smartkey.C: 105: RegStatus |= (0x40);
  4603  04BF  174A               	bsf	_RegStatus,6
  4604                           
  4605                           ;smartkey.C: 106: } else if (cntCyc>=50){
  4606  04C0  2CC5               	goto	i1l840
  4607  04C1                     i1l5545:	
  4608  04C1  3032               	movlw	50
  4609  04C2                     L19:	
  4610  04C2  0272               	subwf	_cntCyc,w
  4611  04C3  1803               	btfsc	3,0
  4612                           
  4613                           ;smartkey.C: 107: RegStatus &= ~(0x40);
  4614  04C4  134A               	bcf	_RegStatus,6
  4615  04C5                     i1l840:	
  4616                           
  4617                           ;smartkey.C: 108: }
  4618                           ;smartkey.C: 110: RegStatus |= 0x80;
  4619  04C5  17CA               	bsf	_RegStatus,7
  4620  04C6                     i1l5549:	
  4621                           
  4622                           ;smartkey.C: 111: }
  4623                           ;smartkey.C: 112: }
  4624                           ;smartkey.C: 121: }
  4625                           ;smartkey.C: 123: timeTick++;
  4626  04C6  0AF0               	incf	_timeTick,f
  4627  04C7  1903               	skipnz
  4628  04C8  0AF1               	incf	_timeTick+1,f
  4629                           
  4630                           ;smartkey.C: 125: if((mtState == 4)||(mtState == 3)){
  4631  04C9  0874               	movf	_mtState,w
  4632  04CA  3A04               	xorlw	4
  4633  04CB  1903               	skipnz
  4634  04CC  2CD1               	goto	i1l5555
  4635  04CD  0874               	movf	_mtState,w
  4636  04CE  3A03               	xorlw	3
  4637  04CF  1D03               	skipz
  4638  04D0  2CF4               	goto	i1l5569
  4639  04D1                     i1l5555:	
  4640                           
  4641                           ;smartkey.C: 126: if(timeTick > cntTmp){
  4642  04D1  0871               	movf	_timeTick+1,w
  4643  04D2  0247               	subwf	_cntTmp+1,w
  4644  04D3  1D03               	skipz
  4645  04D4  2CD7               	goto	u154_25
  4646  04D5  0870               	movf	_timeTick,w
  4647  04D6  0246               	subwf	_cntTmp,w
  4648  04D7                     u154_25:	
  4649  04D7  1803               	skipnc
  4650  04D8  2CF4               	goto	i1l5569
  4651                           
  4652                           ;smartkey.C: 127: cntTmp = timeTick+38;
  4653  04D9  0871               	movf	_timeTick+1,w
  4654  04DA  00C7               	movwf	_cntTmp+1
  4655  04DB  0870               	movf	_timeTick,w
  4656  04DC  00C6               	movwf	_cntTmp
  4657  04DD  3026               	movlw	38
  4658  04DE  07C6               	addwf	_cntTmp,f
  4659  04DF  1803               	skipnc
  4660  04E0  0AC7               	incf	_cntTmp+1,f
  4661                           
  4662                           ;smartkey.C: 128: if(cntTmp<=timeOut)
  4663  04E1  0847               	movf	_cntTmp+1,w
  4664  04E2  0249               	subwf	_timeOut+1,w
  4665  04E3  1D03               	skipz
  4666  04E4  2CE7               	goto	u155_25
  4667  04E5  0846               	movf	_cntTmp,w
  4668  04E6  0248               	subwf	_timeOut,w
  4669  04E7                     u155_25:	
  4670                           
  4671                           ;smartkey.C: 129: {
  4672                           ;smartkey.C: 130: TMR2IE = 0;
  4673  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  4674  04E8  1C03               	skipc
  4675  04E9  2CF5               	goto	L20
  4676  04EA  108C               	bcf	12,1
  4677                           
  4678                           ;smartkey.C: 132: if (PR2L == 20)
  4679  04EB  0811               	movf	17,w	;volatile
  4680  04EC  3A14               	xorlw	20
  4681  04ED  1D03               	skipz
  4682  04EE  2CF1               	goto	i1l5565
  4683                           
  4684                           ;smartkey.C: 133: PR2L = 25;
  4685  04EF  3019               	movlw	25
  4686  04F0  2CF2               	goto	L18
  4687  04F1                     i1l5565:	
  4688                           
  4689                           ;smartkey.C: 134: else
  4690                           ;smartkey.C: 135: PR2L = 20;
  4691  04F1  3014               	movlw	20
  4692  04F2                     L18:	
  4693  04F2  0091               	movwf	17	;volatile
  4694                           
  4695                           ;smartkey.C: 136: TMR2IE = 1;
  4696  04F3  148C               	bsf	12,1
  4697  04F4                     i1l5569:	
  4698                           
  4699                           ;smartkey.C: 137: }
  4700                           ;smartkey.C: 138: }
  4701                           ;smartkey.C: 139: }
  4702                           ;smartkey.C: 140: }
  4703                           ;smartkey.C: 143: if(TMR2IE&&TMR2IF)
  4704  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  4705  04F5                     L20:	
  4706  04F5  1C8C               	btfss	12,1
  4707  04F6  2CFD               	goto	i1l850
  4708  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  4709  04F8  1C8C               	btfss	12,1
  4710  04F9  2CFD               	goto	i1l850
  4711  04FA  3008               	movlw	8
  4712                           
  4713                           ;smartkey.C: 144: {
  4714                           ;smartkey.C: 145: TMR2IF = 0;
  4715  04FB  108C               	bcf	12,1
  4716                           
  4717                           ;smartkey.C: 146: RA3 =~ RA3;
  4718  04FC  0685               	xorwf	5,f
  4719  04FD                     i1l850:	
  4720  04FD  0878               	movf	??_ISR+1,w
  4721  04FE  008A               	movwf	10
  4722  04FF  0E77               	swapf	??_ISR^(0+-128),w
  4723  0500  0083               	movwf	3
  4724  0501  0EFE               	swapf	126,f
  4725  0502  0E7E               	swapf	126,w
  4726  0503  0009               	retfie
  4727  0504                     __end_of_ISR:	
  4728                           
  4729                           	psect	intentry
  4730  0004                     __pintentry:	
  4731                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4732                           
  4733  0004                     interrupt_function:	
  4734  007E                     saved_w	set	btemp
  4735  0004  00FE               	movwf	btemp
  4736  0005  0E03               	swapf	3,w
  4737  0006  00F7               	movwf	??_ISR
  4738  0007  080A               	movf	10,w
  4739  0008  00F8               	movwf	??_ISR+1
  4740  0009  2C7E               	ljmp	_ISR
  4741                           
  4742                           	psect	text881
  4743  06C2                     __ptext881:	
  4744 ;; =============== function _ISR ends ============
  4745                           
  4746                           
  4747 ;; *************** function i1_WRITE_EEPROM *****************
  4748 ;; Defined at:
  4749 ;;		line 189 in file "smartkey.C"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  WRITE_EEPROM    1    wreg     unsigned char 
  4752 ;;  WRITE_EEPROM    1    0[COMMON] unsigned char 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  WRITE_EEPROM    1    1[COMMON] unsigned char 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;		None               void
  4757 ;; Registers used:
  4758 ;;		wreg
  4759 ;; Tracked objects:
  4760 ;;		On entry : 20/20
  4761 ;;		On exit  : 20/20
  4762 ;;		Unchanged: FFE00/0
  4763 ;; Data sizes:     COMMON   BANK0   BANK1
  4764 ;;      Params:         1       0       0
  4765 ;;      Locals:         1       0       0
  4766 ;;      Temps:          0       0       0
  4767 ;;      Totals:         2       0       0
  4768 ;;Total ram usage:        2 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_ISR
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776  06C2                     i1_WRITE_EEPROM:	
  4777                           
  4778                           ; Regs used in i1_WRITE_EEPROM: [wreg]
  4779                           ;i1WRITE_EEPROM@EEAddr stored from wreg
  4780  06C2  00F6               	movwf	i1WRITE_EEPROM@EEAddr
  4781                           
  4782                           ;smartkey.C: 190: GIE = 0;
  4783  06C3  138B               	bcf	11,7
  4784  06C4                     i1l874:	
  4785                           ;smartkey.C: 191: while(GIE) asm("clrwdt");
  4786                           
  4787  06C4  1F8B               	btfss	11,7
  4788  06C5  2EC8               	goto	i1l5749
  4789  06C6  0064               	clrwdt	;#
  4790  06C7  2EC4               	goto	i1l874
  4791  06C8                     i1l5749:	
  4792                           
  4793                           ;smartkey.C: 192: EEADR = EEAddr;
  4794  06C8  0876               	movf	i1WRITE_EEPROM@EEAddr,w
  4795  06C9  1683               	bsf	3,5	;RP0=1, select bank1
  4796  06CA  009B               	movwf	27	;volatile
  4797                           
  4798                           ;smartkey.C: 193: EEDAT = EEData;
  4799  06CB  0875               	movf	i1WRITE_EEPROM@EEData,w
  4800  06CC  009A               	movwf	26	;volatile
  4801  06CD  3034               	movlw	52
  4802                           
  4803                           ;smartkey.C: 194: EEIF = 0;
  4804  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  4805  06CF  138C               	bcf	12,7
  4806                           
  4807                           ;smartkey.C: 195: EECON1 = 0x34;
  4808  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  4809  06D1  009C               	movwf	28	;volatile
  4810                           
  4811                           ;smartkey.C: 196: WR = 1;
  4812  06D2  141D               	bsf	29,0
  4813  06D3                     i1l877:	
  4814                           ;smartkey.C: 197: while(WR) asm("clrwdt");
  4815                           
  4816  06D3  1683               	bsf	3,5	;RP0=1, select bank1
  4817  06D4  1C1D               	btfss	29,0
  4818  06D5  2ED8               	goto	i1l879
  4819  06D6  0064               	clrwdt	;#
  4820  06D7  2ED3               	goto	i1l877
  4821  06D8                     i1l879:	
  4822                           
  4823                           ;smartkey.C: 199: GIE = 1;
  4824  06D8  178B               	bsf	11,7
  4825  06D9  0008               	return
  4826  06DA                     __end_ofi1_WRITE_EEPROM:	
  4827                           
  4828                           	psect	text882
  4829  0779                     __ptext882:	
  4830 ;; =============== function i1_WRITE_EEPROM ends ============
  4831                           
  4832                           
  4833 ;; *************** function i1_READ_EEPROM *****************
  4834 ;; Defined at:
  4835 ;;		line 178 in file "smartkey.C"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  READ_EEPROM     1    wreg     unsigned char 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  READ_EEPROM     1    0[COMMON] unsigned char 
  4840 ;;  READ_EEPROM     1    1[COMMON] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      unsigned char 
  4843 ;; Registers used:
  4844 ;;		wreg
  4845 ;; Tracked objects:
  4846 ;;		On entry : 20/0
  4847 ;;		On exit  : 20/20
  4848 ;;		Unchanged: FFFDF/0
  4849 ;; Data sizes:     COMMON   BANK0   BANK1
  4850 ;;      Params:         0       0       0
  4851 ;;      Locals:         2       0       0
  4852 ;;      Temps:          0       0       0
  4853 ;;      Totals:         2       0       0
  4854 ;;Total ram usage:        2 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		_ISR
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862  0779                     i1_READ_EEPROM:	
  4863                           
  4864                           ; Regs used in i1_READ_EEPROM: [wreg]
  4865                           ;i1READ_EEPROM@EEAddr stored from wreg
  4866  0779  00F5               	movwf	i1READ_EEPROM@EEAddr
  4867                           
  4868                           ;smartkey.C: 179: unsigned char ReEepromData;
  4869                           ;smartkey.C: 181: EEADR = EEAddr;
  4870  077A  1683               	bsf	3,5	;RP0=1, select bank1
  4871  077B  009B               	movwf	27	;volatile
  4872                           
  4873                           ;smartkey.C: 182: RD = 1;
  4874  077C  141C               	bsf	28,0
  4875                           
  4876                           ;smartkey.C: 183: ReEepromData = EEDAT;
  4877  077D  081A               	movf	26,w	;volatile
  4878  077E  00F6               	movwf	i1READ_EEPROM@ReEepromData
  4879                           
  4880                           ;smartkey.C: 184: RD = 0;
  4881  077F  101C               	bcf	28,0
  4882                           
  4883                           ;smartkey.C: 185: return ReEepromData;
  4884  0780  0008               	return
  4885  0781                     __end_ofi1_READ_EEPROM:	
  4886                           
  4887                           	psect	text883
  4888  0000                     __ptext883:	
  4889 ;; =============== function i1_READ_EEPROM ends ============
  4890                           
  4891  007E                     btemp	set	126	;btemp
  4892  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Apr 17 14:41:16 2020

                        pc 0002                         _RD 04E0                         _WR 04E8  
             ___awdiv@sign 0025      __size_of_WRITE_EEPROM 001B                         fsr 0004  
                      _C1R 08CA                        _C2R 08D2                        l912 00FD  
                      l908 00F1                        l917 0136                        l862 0000  
                      l871 0000                        l880 0000                        l856 0000  
                      l953 0245                        l874 06A9                        l859 0000  
                      l883 0000                        l963 02E3                        l868 0000  
                      l877 06BB                        l966 02C8                        l879 06C0  
                      l983 0347                        l967 02B3                        l899 0059  
                      _GIE 005F                        _RA2 002A                        _RA3 002B  
                      _RC0 0038                        _RC1 0039                        _RA5 002D  
                      _RA6 002E                        _RA7 002F               ?_swI2C_Start 0075  
                      _HTS 047A                        _ISR 047E                        _SR0 0CF6  
                      _SR1 0CF7                        _VR0 08C0                        _VR1 08C1  
                      _VR2 08C2                        _VR3 08C3                        _VRR 08C5  
                      fsr0 0004                        indf 0000             _swI2C_ReadByte 058E  
                     S7331 0781                       ?_ISR 0075                       l1006 045D  
                     _C1OE 08CD                       _C2OE 08D5                       _C1ON 08CF  
                     l2601 0000                       l1802 0000                       l2610 05D8  
                     l1811 0000                       l2604 0000                       l2612 0000  
                     _C2ON 08D7                       l1805 0000                       l2615 059B  
                     l1808 0000                       l2617 0000                       l4249 0000  
                     l7001 0000                       l7011 0000                       l7101 0000  
                     l7021 0000                       l7005 023E                       l2598 0000  
                     l1799 0775                       l7111 0000                       l7103 0000  
                     l7015 0254                       l7007 0000                       l7201 0000  
                     l7121 0320                       l7113 030F                       l7105 0000  
                     l7041 0000                       l7033 0275                       l7025 0265  
                     l7017 0000                       l7009 0000                       l7203 0000  
                     l7123 0000                       l7131 0337                       l7115 0000  
                     l7107 0000                       l7035 0000                       l7019 0262  
                     l7221 0000                       l7213 0000                       l7125 0000  
                     l7117 0318                       l7109 0000                       l7061 0000  
                     l7037 0000                       l7029 0000                       l7045 028F  
                     l7223 0000                       l7207 0000                       l7151 0000  
                     l7135 0000                       l7127 0000                       l7071 0000  
                     l7063 0000                       l7047 029A                       l7039 0286  
                     l7241 0000                       l7233 0000                       l7217 0000  
                     l7153 0000                       l7137 0000                       l7145 034E  
                     l7129 0000                       l7073 0000                       l7057 0000  
                     l7049 0000                       l7243 0409                       l7219 0000  
                     l7227 03ED                       l7171 0000                       l7155 0000  
                     l7147 0000                       l7091 02F1                       l7163 035D  
                     l7075 0000                       l7059 0000                       l7083 02DB  
                     l6509 0575                       l6541 0000                       l6533 0000  
                     l6621 0000                       l6613 0000                       l6701 0000  
                     l7261 0000                       l7237 0000                       l7245 040A  
                     l7181 0000                       l7173 0000                       l7149 0000  
                     l7093 0000                       l7165 036B                       l7077 0000  
                     l7069 02CB                       l7085 02E4                       l6535 0000  
                     l6543 0000                       l6551 0000                       l6623 0544  
                     l6607 0525                       l6631 0000                       l6711 0000  
                     l6703 0000                       l7247 0000                       l7239 0000  
                     l7191 0000                       l7167 0000                       l7095 0000  
                     l6465 0000                       l6473 0000                       l6481 0000  
                     l6537 0000                       l6545 0000                       l6561 0000  
                     l6553 0000                       l6617 0000                       l6609 0000  
                     l6633 0000                       l6641 0000                       l6713 0000  
                     l7273 0000                       l7265 0000                       l7257 0423  
                     l7193 0000                       l7185 0000                       l7249 040E  
                     l7097 02FB                       l6801 0000                       l6467 0000  
                     l6475 06AD                       l6483 0723                       l6491 0000  
                     l6539 0000                       l6547 0000                       l6571 0000  
                     l6563 0000                       l6555 0000                       l6619 053C  
                     l6635 0000                       l6627 0000                       l6643 0000  
                     l6651 0000                       l6715 0000                       l6707 0000  
                     l6723 0000                       l7283 045F                       l7275 0000  
                     l7259 0000                       l7187 0000                       l7195 03B0  
                     l7099 0000                       l6811 0000                       l6803 0000  
                     l6469 0000                       l6477 0000                       l6485 0000  
                     l6493 0000                       l6549 0000                       l6581 0000  
                     l6573 0000                       l6565 0000                       l6557 0000  
                     l6637 0000                       l6629 0000                       l6645 0000  
                     l6653 0000                       l6661 0000                       l6717 0000  
                     l6709 0000                       l6741 066B                       l6733 0000  
                     l7277 0000                       l7189 0000                       l6901 0000  
                     l6821 0000                       l6813 0000                       l6805 0000  
                     l6479 0000                       l6487 0000                       l6495 0000  
                     l6575 0000                       l6567 0000                       l6559 0000  
                     l6591 050E                       l6583 0000                       l6639 06DB  
                     l6647 0000                       l6655 0000                       l6663 0000  
                     l6671 0000                       l6719 0000                       l6743 0000  
                     l7279 0457                       l6903 0000                       l6815 0000  
                     l6807 0000                       l6489 0000                       l6577 0000  
                     l6569 0000                       l6585 0000                       l6649 0000  
                     l6657 0000                       l6665 0000                       l6681 0000  
                     l6673 0000                       l6737 0669                       l7289 046E  
                     l6921 0000                       l6905 0148                       l6841 0000  
                     l6833 0000                       l6817 0000                       l6809 0000  
                     l6579 0000                       l6595 0000                       l6659 0000  
                     l6691 0000                       l6683 0000                       l6667 0000  
                     l6739 0652                       l6931 0000                       l6915 018E  
                     l6851 00A0                       l6843 008D                       l6835 0079  
                     l6827 0000                       l6819 0000                       l6597 0517  
                     l6589 0000                       l6685 0000                       l6677 0000  
                     l6669 0000                       l6773 0000                       l6757 0000  
                     l6933 0000                       l6925 01AD                       l6941 01D7  
                     l6909 0000                       l6917 019E                       l6861 0000  
                     l6845 0000                       l6837 0000                       l6829 0000  
                     l6599 0000                       l6687 0000                       l6679 0000  
                     l6695 0000                       l6775 0000                       l6767 0000  
                     l6951 0000                       l6943 0000                       l6927 01B0  
                     l6919 01A3                       l6871 0000                       l6863 0000  
                     l6855 0000                       l6689 0000                       l6697 0000  
                     l6769 061D                       l6961 0000                       l6945 0000  
                     l6953 01E6                       l6929 01BA                       l6881 0000  
                     l6857 0000                       l6865 00BB                       l6849 0000  
                     l6793 0000                       l6699 0000                       l6971 0205  
                     l6963 0000                       l6955 0000                       l6947 0000  
                     l6939 01CC                       l6875 0000                       l6891 00FF  
                     l6867 0000                       l6859 0000                       l6795 0000  
                     l6965 0000                       l6957 0000                       l6949 0000  
                     l6893 0103                       l6885 0000                       l6869 00C2  
                     l6797 0000                       l6991 0000                       l6983 0215  
                     l6967 0000                       l6895 0000                       l6879 0000  
                     l6799 0000                       l6969 0203                       l6889 00CC  
                     l6995 022D                       l6987 021C                       l6899 0109  
                     l6999 0000                       _EEIF 0067                       _ANS0 08F0  
                     _ANS1 08F1                       _ANS2 08F2                       _ANS3 08F3  
                     _ANS4 08F4                       _ANS5 08F5                       _ANS6 08F6  
                     _ANS7 08F7                       _ANS8 08F8                       _ANS9 08F9  
                     _T0IE 005D                       _T0IF 005A                       _T0ON 00FB  
                     _IOCB 0116                       u3015 062A                       u4007 0673  
                     u4017 067A                       u4027 067F                       u3155 017A  
                     _PAIE 005B                       _PAIF 0058                       u4037 0684  
                     u3165 0186                       u4047 0689                       _PIE1 008C  
                     u2715 0729                       u3515 0374                       u3455 02EE  
                     u2745 0562                       u2835 052E                       _PEIE 005E  
                     _INTE 005C                       u2934 05BF                       _INTF 0059  
                     u3655 0415                       u3807 0088                       u2880 05DD  
                     u3817 009B                       u3907 05D4                       u3827 00D5  
                     _PR2H 0092                       u3917 05E4                       u3837 00E8  
                     u2894 05DF                       u3927 05EA                       u3847 012F  
                     _PR2L 0091                       u3937 05F7                       u3857 0597  
                     u3777 0021                       _PIR1 000C                       u3947 05FD  
                     u3867 059E                       u3787 003D                       u3957 074F  
                     u3877 05AD                       u3797 0074                       u3967 0755  
                     u3887 05C2                       u3977 070A                       u3897 05C8  
                     u3987 0710                       u3997 0716                       _TMR0 0001  
                     _STRA 0CE8                       _STRB 0CE9                       _STRC 0CEA  
                     _STRD 0CEB                       _WREN 0C62                       _WPUA 0095  
                     _WPUB 0115                       _WPUC 0093               ?_READ_EEPROM 0075  
                     _beep 06DA            __end_of_AccRead 0635                       _main 000B  
                     btemp 007E                       start 000A               _WRITE_EEPROM 06A7  
                    ??_ISR 0077                      _C1CH0 08C8                      _C1CH1 08C9  
                    _C2CH0 08D0                      _C2CH1 08D1                      ?_beep 0024  
                    _C1SEN 0CF5                      _C2REN 0CF4                      _C1POL 08CC  
                    _C2POL 08D4                      _C1OUT 08CE                      _C2OUT 08D6  
                    ?_main 0075            __end_of___awdiv 0549                      _EEADR 009B  
                    _EEDAT 009A                      _ANS10 08FA                      _ANS11 08FB  
                    _EEPGD 0C67     __end_of_swI2C_ReadByte 05CD                      _ANSEL 011E  
             AccWrite@rAdd 0028            ___awdiv@divisor 0020                      _IOCA5 04B5  
                    _IOCB4 08B4                      _IOCB5 08B5                      _IOCB6 08B6  
                    _IOCB7 08B7                      _T1GSS 08D9                      i1l831 04A4  
                    i1l840 04C5                      i1l850 04FD                      i1l829 04A5  
                    i1l871 0000                      i1l880 0000                      i1l874 06C4  
                    i1l877 06D3                      i1l879 06D8            ___awdiv@counter 0024  
                    _MSCON 001B            __end_of_beepOff 0790                      _VP6EN 08C4  
                    _TMR2H 0013                      _TMR2L 0011                      _PSRCA 0088  
                    _PSRCC 0094                      _PORTA 0005                      _PORTC 0007  
                    _SRCON 019E                      _PULSR 0CF2                      _PULSS 0CF3  
                    _TRISA 0085                      _TRISC 0087                      _VRCON 0118  
                    _WPUB4 08AC                      _WPUB5 08AD                      _WPUB6 08AE  
                    _WPUB7 08AF                      _compe 0549           __end_of_AccWrite 066D  
                    pclath 000A                      status 0003                      wtemp0 007E  
          _swI2C_WriteByte 05CD       __size_of_delay_x10ms 0013             i1_WRITE_EEPROM 06C2  
             __end_of_beep 06F0               __end_of_main 047E                     ??_beep 0025  
                   ??_main 002C            ?_swI2C_ReadByte 0075              main@antenSkip 0036  
            main@reAlertOn 0041                     _C1VREN 08C7                     _C2VREN 08C6  
                   _C2SYNC 08D8                     ?_compe 0020                  ??_AccRead 0027  
                   _EEADRH 010F                     _EEDATH 010E                     _EECON1 009C  
         ___awdiv@dividend 0022                     _ANSELH 011F                     _MC1OUT 08DF  
                   _MC2OUT 08DE                     _T0CON0 001F                     _T2CON0 0012  
                   i1l5501 0000                     i1l5511 048F                     i1l5521 0000  
                   i1l5531 0000                     i1l5507 0000                     i1l5509 048E  
                   i1l5551 0000                     i1l5535 0000                     i1l5527 0000  
                   i1l5561 0000                     i1l5545 04C1                     i1l5529 0000  
                   i1l5555 04D1                     i1l5539 0000                     i1l5741 0000  
                   i1l5565 04F1                     i1l5549 04C6                     i1l5493 0000  
                   i1l5743 0000                     i1l5751 0000                     i1l5575 0000  
                   i1l5753 0000                     i1l5569 04F4                     i1l5739 0000  
                   i1l5747 0000                     i1l5499 0000                     _INTEDG 040E  
                   i1l5749 06C8                     _INTCON 000B                     u154_25 04D7  
                   u155_25 04E7                     _OSCCON 008F                     _TMR2IE 0461  
                   _TMR2IF 0061                     _PSINKA 0097                     _PSINKC 009F  
                   _OPTION 0081                     _TMR2ON 0092     __end_ofi1_WRITE_EEPROM 06DA  
          swI2C_ReadByte@i 0023                     _beepOn 0786                  ??___awdiv 0024  
                   _cntCyc 0072                     _cntOff 004B                     _cntTmp 0046  
                ??_beepOff 0020           ___awdiv@quotient 0026           __end_of_int_init 06A7  
                   compe@a 0027                     compe@b 0020     __size_ofi1_READ_EEPROM 0008  
         __end_of_setState 0771              main@vibrateOn 0033                     saved_w 007E  
     __size_of_swI2C_Start 0013    __end_of_swI2C_WriteByte 060A           __end_of_sys_init 0779  
     i1WRITE_EEPROM@EEAddr 0076       i1WRITE_EEPROM@EEData 0075       __size_of_READ_EEPROM 000D  
          ?i1_WRITE_EEPROM 0075             __pcstackCOMMON 0075              __end_of_compe 0582  
                ?_AccWrite 0023                ISR@tmp_1138 0079                    ??_compe 0022  
               __pbssBANK0 0046         __size_of_gpio_init 0016    READ_EEPROM@ReEepromData 0021  
            i1_READ_EEPROM 0779                 __pmaintext 000B                    ?_beepOn 0075  
               __pintentry 0004  i1READ_EEPROM@ReEepromData 0076                    _CM1CON0 0119  
                  _CM2CON0 011A                    _CM2CON1 011B                 ??_AccWrite 0026  
                  _AccRead 060A                    _PSTRCON 019D                 _swI2C_Init 066D  
                  _STRSYNC 0CEC                 _swI2C_Stop 074B           ?_swI2C_WriteByte 0075  
           ?i1_READ_EEPROM 0075                  AccWrite@i 0029                  ?_int_init 0075  
              setState@stt 0022                  ?_setState 0020                 _mtOldState 004D  
                  ___awdiv 0504           ??_swI2C_ReadByte 0020            __size_of_beepOn 0005  
                  _beepOff 078B                    beep@rep 0024          __end_of_gpio_init 0706  
                ?_sys_init 0075               __size_of_ISR 0086                    _mtState 0074  
                  _timeOut 0048                    compe@dt 0021                    main@buf 003B  
     end_of_initialization 0749                 _lostDetect 004C              ??_delay_x10ms 0022  
               ??_int_init 0020                 ??_setState 0022                AccRead@rAdd 002A  
               _timer_init 072C                 ??_sys_init 0020                ?_swI2C_Init 0075  
          ??i1_READ_EEPROM 0075                ?_swI2C_Stop 0075                 main@acXOld 0035  
               main@acYOld 0034                 main@accEna 002F           ??i1_WRITE_EEPROM 0076  
               main@acXsum 0039                 main@acYsum 0037                 main@isFall 0032  
       WRITE_EEPROM@EEAddr 0021         WRITE_EEPROM@EEData 0020                 main@isWait 0030  
      __end_of_delay_x10ms 072C                AccWrite@dat 0023                AccWrite@len 0025  
           __end_of_beepOn 078B              ??_swI2C_Start 0020          __size_of_AccWrite 0028  
      start_initialization 073C                __end_of_ISR 0504              setState@_tOut 0020  
                _RegStatus 004A              ??_READ_EEPROM 0020              ?_WRITE_EEPROM 0020  
                 ??_beepOn 0020          READ_EEPROM@EEAddr 0020        __size_of_swI2C_Init 001F  
      __size_of_swI2C_Stop 000D                ?_timer_init 0075                __pbssCOMMON 0070  
            __pcstackBANK0 0020                   ?_AccRead 0024        __end_of_swI2C_Start 0719  
              _delay_x10ms 0719             ??_WRITE_EEPROM 0021          __size_of_int_init 001B  
      __end_of_READ_EEPROM 0765           swI2C_WriteByte@i 0022                   ?___awdiv 0020  
        __size_of_setState 000C                  __ptext860 060A                  __ptext861 0645  
                __ptext870 068C                  __ptext862 058E                  __ptext871 072C  
                __ptext863 05CD                  __ptext880 047E                  __ptext872 06F0  
                __ptext864 074B                  __ptext881 06C2                  __ptext873 0549  
                __ptext865 0706                  __ptext882 0779                  __ptext874 0765  
                __ptext866 066D                  __ptext883 0000                  __ptext875 0786  
                __ptext867 0771                  __ptext859 0000                  __ptext876 078B  
                __ptext868 06DA                  __ptext877 0719                  __ptext869 0504  
                __ptext878 06A7                  __ptext879 0758                  beep@delay 0025  
                 ?_beepOff 0075                   AccRead@i 002B         swI2C_WriteByte@dat 0021  
                __pswtext1 0781          __size_of_sys_init 0008                  _gpio_init 06F0  
           __size_of_compe 0039                  _mode_chek 0073          interrupt_function 0004  
      __size_of_timer_init 0010   __size_of_swI2C_WriteByte 003D                 AccRead@dat 0024  
               AccRead@len 0026               delay_x10ms@t 0020                   _AccWrite 0645  
              _swI2C_Start 0706                  main@tmp16 0043                 ?_gpio_init 0075  
             ??_swI2C_Init 0020           __size_of_AccRead 002B               ??_swI2C_Stop 0020  
              _READ_EEPROM 0758          swI2C_ReadByte@Ack 0021          swI2C_ReadByte@dat 0022  
         __size_of___awdiv 0045           __size_of_beepOff 0005         __end_of_swI2C_Init 068C  
       __end_of_swI2C_Stop 0758       __end_of_WRITE_EEPROM 06C2    __size_of_swI2C_ReadByte 003F  
    __end_ofi1_READ_EEPROM 0781              __size_of_beep 0016              __size_of_main 0473  
                 _int_init 068C                   _setState 0765                   _timeTick 0070  
                 main@isSw 0042                   main@tmp8 0045          ??_swI2C_WriteByte 0020  
             ??_timer_init 0020                   _sys_init 0771                ??_gpio_init 0020  
                 intlevel1 0000               ?_delay_x10ms 0020         __end_of_timer_init 073C  
  __size_ofi1_WRITE_EEPROM 0018        i1READ_EEPROM@EEAddr 0075             delay_x10ms@set 0022  
